{
  ".": {
    "bundles": {
      "/client.js": {
        "modules": {
          "/client.js": {
            "requireId": "/client",
            "memoizeId": "/client.js",
            "descriptor": {
              "filename": "client.js",
              "filepath": "client.js",
              "mtime": 1421188733,
              "code": "\nvar CONSOLE_WIDGET = require(\"widget\");\nvar JQUERY = require(\"widget/jquery\");\n\n\nexports.main = function () {\n\n\ttry {\n\n\t\tvar console1 = new CONSOLE_WIDGET.Widget();\n\n\t\t// TODO: Load jQuery via PINF bundler.\n\t\tconsole1.attach(JQUERY(\"#console1\")).then(function (context) {\n//\t\t\treturn context.callApi(\"tests.load\").then(function () {\n\n//\t\t\t});\n\t\t});\n\n/*\n\t\tvar console2 = new CONSOLE_WIDGET.Widget();\n\n\t\t// TODO: Load jQuery via PINF bundler.\n\t\tconsole2.attach($(\"#console2\")).then(function (context) {\n\n\t\t\treturn context.callApi(\"menu.close\").then(function () {\n\n\t\t\t\treturn context.callApi(\"view.show\", {\n\t\t\t\t\tname: \"graph\"\n\t\t\t\t});\n\t\t\t});\n\t\t});\n*/\n\t} catch (err) {\n\n\t\tconsole.error(err.stack);\n\t}\n}\n",
              "globals": {
                "CONSOLE_WIDGET": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "JQUERY": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                },
                "console": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "widget": {
                    "where": "inline"
                  },
                  "widget/jquery": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '';",
              "code": "function(require, exports, module) {var __dirname = '';\n\nvar CONSOLE_WIDGET = require(\"widget\");\nvar JQUERY = require(\"widget/jquery\");\n\n\nexports.main = function () {\n\n\ttry {\n\n\t\tvar console1 = new CONSOLE_WIDGET.Widget();\n\n\t\t// TODO: Load jQuery via PINF bundler.\n\t\tconsole1.attach(JQUERY(\"#console1\")).then(function (context) {\n//\t\t\treturn context.callApi(\"tests.load\").then(function () {\n\n//\t\t\t});\n\t\t});\n\n/*\n\t\tvar console2 = new CONSOLE_WIDGET.Widget();\n\n\t\t// TODO: Load jQuery via PINF bundler.\n\t\tconsole2.attach($(\"#console2\")).then(function (context) {\n\n\t\t\treturn context.callApi(\"menu.close\").then(function () {\n\n\t\t\t\treturn context.callApi(\"view.show\", {\n\t\t\t\t\tname: \"graph\"\n\t\t\t\t});\n\t\t\t});\n\t\t});\n*/\n\t} catch (err) {\n\n\t\tconsole.error(err.stack);\n\t}\n}\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "widget": {
                  "where": "inline"
                },
                "widget/jquery": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "21722499c6c2ae46d0a8a6f4ec16b0de4041616a-widget/widget.js": {
            "requireId": "21722499c6c2ae46d0a8a6f4ec16b0de4041616a-widget/widget.js",
            "memoizeId": "21722499c6c2ae46d0a8a6f4ec16b0de4041616a-widget/widget.js",
            "descriptor": {
              "filename": "widget.js",
              "filepath": "../widget/widget.js",
              "mtime": 1421188200,
              "code": "\nvar Q = require(\"q\");\nvar RENDERERS = require(\"renderers\");\nvar RECEIVERS = require(\"receivers\");\nvar INSIGHT_ENCODER = require(\"insight/encoder/default\");\nvar WIDGET_CSS = require(\"./widget.css\");\n\nvar JQUERY = require(\"./jquery\");\n// @see http://stackoverflow.com/a/19525797\n(function ($) {\n  $.each(['show', 'hide'], function (i, ev) {\n    var el = $.fn[ev];\n    $.fn[ev] = function () {\n      this.trigger(ev);\n      el.apply(this, arguments);\n    };\n  });\n})(JQUERY);\n\n\n// TODO: Uncomment once bundler supports bundling css files\n//var WIDGET_CSS = require(\"./widget.css\");\n\nvar widgetIndex = 0;\n\nvar Widget = exports.Widget = function () {\n\n\tvar self = this;\n\n\tself.domNode = null;\n\n\n    var insightEncoder = INSIGHT_ENCODER.Encoder();\n\n\n\tself.API = {\n\t\tQ: Q,\n\t\tJQUERY: JQUERY,\n\t\tconsole: {\n\t\t\tlog: function () {\n\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\treturn self.logLine(new Error().stack, {}, args);\n\t\t\t}\n\t\t},\n\t\t// Is set below.\n\t\twildfire: null,\n\t\tfireconsole: {\n\t\t\tcallApi: function (name, args) {\n\t\t\t\treturn self.API.wildfire.fireconsole.send({\n\t\t\t    \tmethod: \"callApi\",\n\t\t\t    \targs: [\n\t\t\t    \t\tname,\n\t\t\t    \t\targs || undefined\n\t\t\t    \t]\n\t\t\t    });\n\t\t    }\n\t\t},\n\t\tinsight: {\n\t\t\tencode: insightEncoder.encode.bind(insightEncoder)\n\t\t}\n    };\n\n\tself.loader = null;\n\n\tself.widgetIndex = (widgetIndex = widgetIndex + 1);\n\tself.widgetId = \"fcwid_\" + self.widgetIndex;\n}\n\nWidget.prototype.logLine = function (source, context, args) {\n\treturn this.loader.callApi(\"console.log\", {\n\t\tsource: source,\n\t\tcontext: context,\n\t\targs: args\n\t});\n}\n\nWidget.prototype.clearAllLines = function () {\n\treturn this.loader.callApi(\"console.clear\");\n}\n\nWidget.prototype.attach = function (domNode) {\n\n\tvar self = this;\n\n\tvar deferred = Q.defer();\n\n\tJQUERY(window).ready(function () {\n\n\t\tvar node = self.domNode = JQUERY('<div id=\"' + self.widgetId + '\" class=\"fc-widget-console\"></div>').appendTo(domNode);\n\n\t\t// TODO: Use generic helper to declare and load css files.\n\t\tif (JQUERY('STYLE[dynid=\"' + self.widgetId + '\"]').length === 0) {\n            var styleNode = JQUERY('<style dynid=\"' + self.widgetId + '\"></style>').appendTo(\"HEAD\");\n            styleNode.html(WIDGET_CSS);\n\t\t}\n\n\t\treturn RENDERERS.bootIntoNode({\n\t\t\tAPI: {\n\t\t\t\tQ: Q,\n\t\t\t\tJQUERY: JQUERY\n\t\t\t},\n\t\t\twidgetIndex: self.widgetIndex,\n\t\t\tdomNode: node\n\t\t}).then(function (loader) {\n\n\t\t\tself.loader = loader;\n\n\t\t\tfunction loadTests() {\n\t\t\t\tvar deferred = Q.defer();\n\n\t\t\t\tconsole.log(\"Loading tests ...\");\n\n\t\t\t\t// TODO: Load from remote URL.\n\t\t\t\trequire.sandbox(\"/tests.js\", function(TESTS_BUNDLE) {\n\n\t\t\t\t\treturn TESTS_BUNDLE.main(self.API, function (err) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tconsole.error(\"Error running tests\", err.stack);\n\t\t\t\t\t\t\treturn deferred.reject(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn deferred.resolve();\n\t\t\t\t\t});\n\n\t\t\t\t}, function (err) {\n\t\t\t\t\tconsole.error(\"Error loading tests\", err.stack);\n\t\t\t\t\tdeferred.reject(err);\n\t\t\t\t});\n\t\t\t\treturn deferred.promise;\n\t\t\t}\n\n\t\t\treturn self.loader.callApi(\"menu.add.button\", {\n\t\t\t\tlid: \"load-tests\",\n\t\t\t\tlabel: \"Load Tests\",\n\t\t\t\tcommand: function () {\n\t\t\t\t\treturn loadTests();\n\t\t\t\t}\n\t\t\t}).then(function () {\n\nconsole.log(\"self.loader\", self.loader);\n\n\n\t\t\t\treturn self.loader.registerApi(\"tests.load\", function (args) {\n\t\t\t\t\treturn loadTests();\n\t\t\t\t});\n\t\t\t});\n\t\t}).then(function () {\n\n\t\t\treturn RECEIVERS.init({\n\t\t\t\tAPI: {\n\t\t\t\t\tQ: Q\n\t\t\t\t},\n\t\t\t\tcallApi: self.loader.callApi.bind(self.loader)\n\t\t\t}).then(function (receiversApi) {\n\n\t\t\t\tself.API.wildfire = receiversApi.wildfire;\n\n\t\t\t});\n\n\t\t}).then(function () {\n\t\t\treturn deferred.resolve(self.loader);\n\t\t}).fail(function (err) {\n\t\t\tconsole.error(err.stack);\n\t\t\treturn deferred.reject(err);\n\t\t});\n\t});\n\n\treturn deferred.promise;\n}\n\n",
              "globals": {
                "Q": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "RENDERERS": {
                  "type": "assign"
                },
                "RECEIVERS": {
                  "type": "assign"
                },
                "INSIGHT_ENCODER": {
                  "type": "assign"
                },
                "WIDGET_CSS": {
                  "type": "assign"
                },
                "JQUERY": {
                  "type": "assign"
                },
                "widgetIndex": {
                  "type": "assign"
                },
                "Widget": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                },
                "Array": {
                  "type": "reference"
                },
                "console": {
                  "type": "reference"
                },
                "window": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "q": {
                    "where": "inline"
                  },
                  "renderers": {
                    "where": "inline"
                  },
                  "receivers": {
                    "where": "inline"
                  },
                  "insight/encoder/default": {
                    "where": "inline"
                  },
                  "./widget.css": {
                    "where": "inline"
                  },
                  "./jquery": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../widget';",
              "code": "function(require, exports, module) {var __dirname = '../widget';\n\nvar Q = require(\"q\");\nvar RENDERERS = require(\"renderers\");\nvar RECEIVERS = require(\"receivers\");\nvar INSIGHT_ENCODER = require(\"insight/encoder/default\");\nvar WIDGET_CSS = require(\"./widget.css\");\n\nvar JQUERY = require(\"./jquery\");\n// @see http://stackoverflow.com/a/19525797\n(function ($) {\n  $.each(['show', 'hide'], function (i, ev) {\n    var el = $.fn[ev];\n    $.fn[ev] = function () {\n      this.trigger(ev);\n      el.apply(this, arguments);\n    };\n  });\n})(JQUERY);\n\n\n// TODO: Uncomment once bundler supports bundling css files\n//var WIDGET_CSS = require(\"./widget.css\");\n\nvar widgetIndex = 0;\n\nvar Widget = exports.Widget = function () {\n\n\tvar self = this;\n\n\tself.domNode = null;\n\n\n    var insightEncoder = INSIGHT_ENCODER.Encoder();\n\n\n\tself.API = {\n\t\tQ: Q,\n\t\tJQUERY: JQUERY,\n\t\tconsole: {\n\t\t\tlog: function () {\n\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\treturn self.logLine(new Error().stack, {}, args);\n\t\t\t}\n\t\t},\n\t\t// Is set below.\n\t\twildfire: null,\n\t\tfireconsole: {\n\t\t\tcallApi: function (name, args) {\n\t\t\t\treturn self.API.wildfire.fireconsole.send({\n\t\t\t    \tmethod: \"callApi\",\n\t\t\t    \targs: [\n\t\t\t    \t\tname,\n\t\t\t    \t\targs || undefined\n\t\t\t    \t]\n\t\t\t    });\n\t\t    }\n\t\t},\n\t\tinsight: {\n\t\t\tencode: insightEncoder.encode.bind(insightEncoder)\n\t\t}\n    };\n\n\tself.loader = null;\n\n\tself.widgetIndex = (widgetIndex = widgetIndex + 1);\n\tself.widgetId = \"fcwid_\" + self.widgetIndex;\n}\n\nWidget.prototype.logLine = function (source, context, args) {\n\treturn this.loader.callApi(\"console.log\", {\n\t\tsource: source,\n\t\tcontext: context,\n\t\targs: args\n\t});\n}\n\nWidget.prototype.clearAllLines = function () {\n\treturn this.loader.callApi(\"console.clear\");\n}\n\nWidget.prototype.attach = function (domNode) {\n\n\tvar self = this;\n\n\tvar deferred = Q.defer();\n\n\tJQUERY(window).ready(function () {\n\n\t\tvar node = self.domNode = JQUERY('<div id=\"' + self.widgetId + '\" class=\"fc-widget-console\"></div>').appendTo(domNode);\n\n\t\t// TODO: Use generic helper to declare and load css files.\n\t\tif (JQUERY('STYLE[dynid=\"' + self.widgetId + '\"]').length === 0) {\n            var styleNode = JQUERY('<style dynid=\"' + self.widgetId + '\"></style>').appendTo(\"HEAD\");\n            styleNode.html(WIDGET_CSS);\n\t\t}\n\n\t\treturn RENDERERS.bootIntoNode({\n\t\t\tAPI: {\n\t\t\t\tQ: Q,\n\t\t\t\tJQUERY: JQUERY\n\t\t\t},\n\t\t\twidgetIndex: self.widgetIndex,\n\t\t\tdomNode: node\n\t\t}).then(function (loader) {\n\n\t\t\tself.loader = loader;\n\n\t\t\tfunction loadTests() {\n\t\t\t\tvar deferred = Q.defer();\n\n\t\t\t\tconsole.log(\"Loading tests ...\");\n\n\t\t\t\t// TODO: Load from remote URL.\n\t\t\t\trequire.sandbox(\"/tests.js\", function(TESTS_BUNDLE) {\n\n\t\t\t\t\treturn TESTS_BUNDLE.main(self.API, function (err) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tconsole.error(\"Error running tests\", err.stack);\n\t\t\t\t\t\t\treturn deferred.reject(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn deferred.resolve();\n\t\t\t\t\t});\n\n\t\t\t\t}, function (err) {\n\t\t\t\t\tconsole.error(\"Error loading tests\", err.stack);\n\t\t\t\t\tdeferred.reject(err);\n\t\t\t\t});\n\t\t\t\treturn deferred.promise;\n\t\t\t}\n\n\t\t\treturn self.loader.callApi(\"menu.add.button\", {\n\t\t\t\tlid: \"load-tests\",\n\t\t\t\tlabel: \"Load Tests\",\n\t\t\t\tcommand: function () {\n\t\t\t\t\treturn loadTests();\n\t\t\t\t}\n\t\t\t}).then(function () {\n\nconsole.log(\"self.loader\", self.loader);\n\n\n\t\t\t\treturn self.loader.registerApi(\"tests.load\", function (args) {\n\t\t\t\t\treturn loadTests();\n\t\t\t\t});\n\t\t\t});\n\t\t}).then(function () {\n\n\t\t\treturn RECEIVERS.init({\n\t\t\t\tAPI: {\n\t\t\t\t\tQ: Q\n\t\t\t\t},\n\t\t\t\tcallApi: self.loader.callApi.bind(self.loader)\n\t\t\t}).then(function (receiversApi) {\n\n\t\t\t\tself.API.wildfire = receiversApi.wildfire;\n\n\t\t\t});\n\n\t\t}).then(function () {\n\t\t\treturn deferred.resolve(self.loader);\n\t\t}).fail(function (err) {\n\t\t\tconsole.error(err.stack);\n\t\t\treturn deferred.reject(err);\n\t\t});\n\t});\n\n\treturn deferred.promise;\n}\n\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "q": {
                  "where": "inline"
                },
                "renderers": {
                  "where": "inline"
                },
                "receivers": {
                  "where": "inline"
                },
                "insight/encoder/default": {
                  "where": "inline"
                },
                "./widget.css": {
                  "where": "inline"
                },
                "./jquery": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "d6e23a53a05b8a38dbc43a0fd68969f2b291c1dd-q/q.js": {
            "requireId": "d6e23a53a05b8a38dbc43a0fd68969f2b291c1dd-q/q.js",
            "memoizeId": "d6e23a53a05b8a38dbc43a0fd68969f2b291c1dd-q/q.js",
            "descriptor": {
              "filename": "q.js",
              "filepath": "../widget/node_modules/q/q.js",
              "mtime": 1415633173,
              "code": "// vim:ts=4:sts=4:sw=4:\n/*!\n *\n * Copyright 2009-2012 Kris Kowal under the terms of the MIT\n * license found at http://github.com/kriskowal/q/raw/master/LICENSE\n *\n * With parts by Tyler Close\n * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\n * at http://www.opensource.org/licenses/mit-license.html\n * Forked at ref_send.js version: 2009-05-11\n *\n * With parts by Mark Miller\n * Copyright (C) 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n(function (definition) {\n    \"use strict\";\n\n    // This file will function properly as a <script> tag, or a module\n    // using CommonJS and NodeJS or RequireJS module formats.  In\n    // Common/Node/RequireJS, the module exports the Q API and when\n    // executed as a simple <script>, it creates a Q global instead.\n\n    // Montage Require\n    if (typeof bootstrap === \"function\") {\n        bootstrap(\"promise\", definition);\n\n    // CommonJS\n    } else if (typeof exports === \"object\" && typeof module === \"object\") {\n        module.exports = definition();\n\n    // RequireJS\n    } else if (typeof define === \"function\" && define.amd) {\n        define(definition);\n\n    // SES (Secure EcmaScript)\n    } else if (typeof ses !== \"undefined\") {\n        if (!ses.ok()) {\n            return;\n        } else {\n            ses.makeQ = definition;\n        }\n\n    // <script>\n    } else if (typeof self !== \"undefined\") {\n        self.Q = definition();\n\n    } else {\n        throw new Error(\"This environment was not anticiapted by Q. Please file a bug.\");\n    }\n\n})(function () {\n\"use strict\";\n\nvar hasStacks = false;\ntry {\n    throw new Error();\n} catch (e) {\n    hasStacks = !!e.stack;\n}\n\n// All code after this point will be filtered from stack traces reported\n// by Q.\nvar qStartingLine = captureLine();\nvar qFileName;\n\n// shims\n\n// used for fallback in \"allResolved\"\nvar noop = function () {};\n\n// Use the fastest possible means to execute a task in a future turn\n// of the event loop.\nvar nextTick =(function () {\n    // linked list of tasks (single, with head node)\n    var head = {task: void 0, next: null};\n    var tail = head;\n    var flushing = false;\n    var requestTick = void 0;\n    var isNodeJS = false;\n\n    function flush() {\n        /* jshint loopfunc: true */\n\n        while (head.next) {\n            head = head.next;\n            var task = head.task;\n            head.task = void 0;\n            var domain = head.domain;\n\n            if (domain) {\n                head.domain = void 0;\n                domain.enter();\n            }\n\n            try {\n                task();\n\n            } catch (e) {\n                if (isNodeJS) {\n                    // In node, uncaught exceptions are considered fatal errors.\n                    // Re-throw them synchronously to interrupt flushing!\n\n                    // Ensure continuation if the uncaught exception is suppressed\n                    // listening \"uncaughtException\" events (as domains does).\n                    // Continue in next event to avoid tick recursion.\n                    if (domain) {\n                        domain.exit();\n                    }\n                    setTimeout(flush, 0);\n                    if (domain) {\n                        domain.enter();\n                    }\n\n                    throw e;\n\n                } else {\n                    // In browsers, uncaught exceptions are not fatal.\n                    // Re-throw them asynchronously to avoid slow-downs.\n                    setTimeout(function() {\n                       throw e;\n                    }, 0);\n                }\n            }\n\n            if (domain) {\n                domain.exit();\n            }\n        }\n\n        flushing = false;\n    }\n\n    nextTick = function (task) {\n        tail = tail.next = {\n            task: task,\n            domain: isNodeJS && process.domain,\n            next: null\n        };\n\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n\n    if (typeof process !== \"undefined\" && process.nextTick) {\n        // Node.js before 0.9. Note that some fake-Node environments, like the\n        // Mocha test runner, introduce a `process` global without a `nextTick`.\n        isNodeJS = true;\n\n        requestTick = function () {\n            process.nextTick(flush);\n        };\n\n    } else if (typeof setImmediate === \"function\") {\n        // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate\n        if (typeof window !== \"undefined\") {\n            requestTick = setImmediate.bind(window, flush);\n        } else {\n            requestTick = function () {\n                setImmediate(flush);\n            };\n        }\n\n    } else if (typeof MessageChannel !== \"undefined\") {\n        // modern browsers\n        // http://www.nonblocking.io/2011/06/windownexttick.html\n        var channel = new MessageChannel();\n        // At least Safari Version 6.0.5 (8536.30.1) intermittently cannot create\n        // working message ports the first time a page loads.\n        channel.port1.onmessage = function () {\n            requestTick = requestPortTick;\n            channel.port1.onmessage = flush;\n            flush();\n        };\n        var requestPortTick = function () {\n            // Opera requires us to provide a message payload, regardless of\n            // whether we use it.\n            channel.port2.postMessage(0);\n        };\n        requestTick = function () {\n            setTimeout(flush, 0);\n            requestPortTick();\n        };\n\n    } else {\n        // old browsers\n        requestTick = function () {\n            setTimeout(flush, 0);\n        };\n    }\n\n    return nextTick;\n})();\n\n// Attempt to make generics safe in the face of downstream\n// modifications.\n// There is no situation where this is necessary.\n// If you need a security guarantee, these primordials need to be\n// deeply frozen anyway, and if you don’t need a security guarantee,\n// this is just plain paranoid.\n// However, this **might** have the nice side-effect of reducing the size of\n// the minified code by reducing x.call() to merely x()\n// See Mark Miller’s explanation of what this does.\n// http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming\nvar call = Function.call;\nfunction uncurryThis(f) {\n    return function () {\n        return call.apply(f, arguments);\n    };\n}\n// This is equivalent, but slower:\n// uncurryThis = Function_bind.bind(Function_bind.call);\n// http://jsperf.com/uncurrythis\n\nvar array_slice = uncurryThis(Array.prototype.slice);\n\nvar array_reduce = uncurryThis(\n    Array.prototype.reduce || function (callback, basis) {\n        var index = 0,\n            length = this.length;\n        // concerning the initial value, if one is not provided\n        if (arguments.length === 1) {\n            // seek to the first value in the array, accounting\n            // for the possibility that is is a sparse array\n            do {\n                if (index in this) {\n                    basis = this[index++];\n                    break;\n                }\n                if (++index >= length) {\n                    throw new TypeError();\n                }\n            } while (1);\n        }\n        // reduce\n        for (; index < length; index++) {\n            // account for the possibility that the array is sparse\n            if (index in this) {\n                basis = callback(basis, this[index], index);\n            }\n        }\n        return basis;\n    }\n);\n\nvar array_indexOf = uncurryThis(\n    Array.prototype.indexOf || function (value) {\n        // not a very good shim, but good enough for our one use of it\n        for (var i = 0; i < this.length; i++) {\n            if (this[i] === value) {\n                return i;\n            }\n        }\n        return -1;\n    }\n);\n\nvar array_map = uncurryThis(\n    Array.prototype.map || function (callback, thisp) {\n        var self = this;\n        var collect = [];\n        array_reduce(self, function (undefined, value, index) {\n            collect.push(callback.call(thisp, value, index, self));\n        }, void 0);\n        return collect;\n    }\n);\n\nvar object_create = Object.create || function (prototype) {\n    function Type() { }\n    Type.prototype = prototype;\n    return new Type();\n};\n\nvar object_hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\n\nvar object_keys = Object.keys || function (object) {\n    var keys = [];\n    for (var key in object) {\n        if (object_hasOwnProperty(object, key)) {\n            keys.push(key);\n        }\n    }\n    return keys;\n};\n\nvar object_toString = uncurryThis(Object.prototype.toString);\n\nfunction isObject(value) {\n    return value === Object(value);\n}\n\n// generator related shims\n\n// FIXME: Remove this function once ES6 generators are in SpiderMonkey.\nfunction isStopIteration(exception) {\n    return (\n        object_toString(exception) === \"[object StopIteration]\" ||\n        exception instanceof QReturnValue\n    );\n}\n\n// FIXME: Remove this helper and Q.return once ES6 generators are in\n// SpiderMonkey.\nvar QReturnValue;\nif (typeof ReturnValue !== \"undefined\") {\n    QReturnValue = ReturnValue;\n} else {\n    QReturnValue = function (value) {\n        this.value = value;\n    };\n}\n\n// long stack traces\n\nvar STACK_JUMP_SEPARATOR = \"From previous event:\";\n\nfunction makeStackTraceLong(error, promise) {\n    // If possible, transform the error stack trace by removing Node and Q\n    // cruft, then concatenating with the stack trace of `promise`. See #57.\n    if (hasStacks &&\n        promise.stack &&\n        typeof error === \"object\" &&\n        error !== null &&\n        error.stack &&\n        error.stack.indexOf(STACK_JUMP_SEPARATOR) === -1\n    ) {\n        var stacks = [];\n        for (var p = promise; !!p; p = p.source) {\n            if (p.stack) {\n                stacks.unshift(p.stack);\n            }\n        }\n        stacks.unshift(error.stack);\n\n        var concatedStacks = stacks.join(\"\\n\" + STACK_JUMP_SEPARATOR + \"\\n\");\n        error.stack = filterStackString(concatedStacks);\n    }\n}\n\nfunction filterStackString(stackString) {\n    var lines = stackString.split(\"\\n\");\n    var desiredLines = [];\n    for (var i = 0; i < lines.length; ++i) {\n        var line = lines[i];\n\n        if (!isInternalFrame(line) && !isNodeFrame(line) && line) {\n            desiredLines.push(line);\n        }\n    }\n    return desiredLines.join(\"\\n\");\n}\n\nfunction isNodeFrame(stackLine) {\n    return stackLine.indexOf(\"(module.js:\") !== -1 ||\n           stackLine.indexOf(\"(node.js:\") !== -1;\n}\n\nfunction getFileNameAndLineNumber(stackLine) {\n    // Named functions: \"at functionName (filename:lineNumber:columnNumber)\"\n    // In IE10 function name can have spaces (\"Anonymous function\") O_o\n    var attempt1 = /at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(stackLine);\n    if (attempt1) {\n        return [attempt1[1], Number(attempt1[2])];\n    }\n\n    // Anonymous functions: \"at filename:lineNumber:columnNumber\"\n    var attempt2 = /at ([^ ]+):(\\d+):(?:\\d+)$/.exec(stackLine);\n    if (attempt2) {\n        return [attempt2[1], Number(attempt2[2])];\n    }\n\n    // Firefox style: \"function@filename:lineNumber or @filename:lineNumber\"\n    var attempt3 = /.*@(.+):(\\d+)$/.exec(stackLine);\n    if (attempt3) {\n        return [attempt3[1], Number(attempt3[2])];\n    }\n}\n\nfunction isInternalFrame(stackLine) {\n    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);\n\n    if (!fileNameAndLineNumber) {\n        return false;\n    }\n\n    var fileName = fileNameAndLineNumber[0];\n    var lineNumber = fileNameAndLineNumber[1];\n\n    return fileName === qFileName &&\n        lineNumber >= qStartingLine &&\n        lineNumber <= qEndingLine;\n}\n\n// discover own file name and line number range for filtering stack\n// traces\nfunction captureLine() {\n    if (!hasStacks) {\n        return;\n    }\n\n    try {\n        throw new Error();\n    } catch (e) {\n        var lines = e.stack.split(\"\\n\");\n        var firstLine = lines[0].indexOf(\"@\") > 0 ? lines[1] : lines[2];\n        var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);\n        if (!fileNameAndLineNumber) {\n            return;\n        }\n\n        qFileName = fileNameAndLineNumber[0];\n        return fileNameAndLineNumber[1];\n    }\n}\n\nfunction deprecate(callback, name, alternative) {\n    return function () {\n        if (typeof console !== \"undefined\" &&\n            typeof console.warn === \"function\") {\n            console.warn(name + \" is deprecated, use \" + alternative +\n                         \" instead.\", new Error(\"\").stack);\n        }\n        return callback.apply(callback, arguments);\n    };\n}\n\n// end of shims\n// beginning of real work\n\n/**\n * Constructs a promise for an immediate reference, passes promises through, or\n * coerces promises from different systems.\n * @param value immediate reference or promise\n */\nfunction Q(value) {\n    // If the object is already a Promise, return it directly.  This enables\n    // the resolve function to both be used to created references from objects,\n    // but to tolerably coerce non-promises to promises.\n    if (value instanceof Promise) {\n        return value;\n    }\n\n    // assimilate thenables\n    if (isPromiseAlike(value)) {\n        return coerce(value);\n    } else {\n        return fulfill(value);\n    }\n}\nQ.resolve = Q;\n\n/**\n * Performs a task in a future turn of the event loop.\n * @param {Function} task\n */\nQ.nextTick = nextTick;\n\n/**\n * Controls whether or not long stack traces will be on\n */\nQ.longStackSupport = false;\n\n// enable long stacks if Q_DEBUG is set\nif (typeof process === \"object\" && process && process.env && process.env.Q_DEBUG) {\n    Q.longStackSupport = true;\n}\n\n/**\n * Constructs a {promise, resolve, reject} object.\n *\n * `resolve` is a callback to invoke with a more resolved value for the\n * promise. To fulfill the promise, invoke `resolve` with any value that is\n * not a thenable. To reject the promise, invoke `resolve` with a rejected\n * thenable, or invoke `reject` with the reason directly. To resolve the\n * promise to another thenable, thus putting it in the same state, invoke\n * `resolve` with that other thenable.\n */\nQ.defer = defer;\nfunction defer() {\n    // if \"messages\" is an \"Array\", that indicates that the promise has not yet\n    // been resolved.  If it is \"undefined\", it has been resolved.  Each\n    // element of the messages array is itself an array of complete arguments to\n    // forward to the resolved promise.  We coerce the resolution value to a\n    // promise using the `resolve` function because it handles both fully\n    // non-thenable values and other thenables gracefully.\n    var messages = [], progressListeners = [], resolvedPromise;\n\n    var deferred = object_create(defer.prototype);\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, operands) {\n        var args = array_slice(arguments);\n        if (messages) {\n            messages.push(args);\n            if (op === \"when\" && operands[1]) { // progress operand\n                progressListeners.push(operands[1]);\n            }\n        } else {\n            Q.nextTick(function () {\n                resolvedPromise.promiseDispatch.apply(resolvedPromise, args);\n            });\n        }\n    };\n\n    // XXX deprecated\n    promise.valueOf = function () {\n        if (messages) {\n            return promise;\n        }\n        var nearerValue = nearer(resolvedPromise);\n        if (isPromise(nearerValue)) {\n            resolvedPromise = nearerValue; // shorten chain\n        }\n        return nearerValue;\n    };\n\n    promise.inspect = function () {\n        if (!resolvedPromise) {\n            return { state: \"pending\" };\n        }\n        return resolvedPromise.inspect();\n    };\n\n    if (Q.longStackSupport && hasStacks) {\n        try {\n            throw new Error();\n        } catch (e) {\n            // NOTE: don't try to use `Error.captureStackTrace` or transfer the\n            // accessor around; that causes memory leaks as per GH-111. Just\n            // reify the stack trace as a string ASAP.\n            //\n            // At the same time, cut off the first line; it's always just\n            // \"[object Promise]\\n\", as per the `toString`.\n            promise.stack = e.stack.substring(e.stack.indexOf(\"\\n\") + 1);\n        }\n    }\n\n    // NOTE: we do the checks for `resolvedPromise` in each method, instead of\n    // consolidating them into `become`, since otherwise we'd create new\n    // promises with the lines `become(whatever(value))`. See e.g. GH-252.\n\n    function become(newPromise) {\n        resolvedPromise = newPromise;\n        promise.source = newPromise;\n\n        array_reduce(messages, function (undefined, message) {\n            Q.nextTick(function () {\n                newPromise.promiseDispatch.apply(newPromise, message);\n            });\n        }, void 0);\n\n        messages = void 0;\n        progressListeners = void 0;\n    }\n\n    deferred.promise = promise;\n    deferred.resolve = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(Q(value));\n    };\n\n    deferred.fulfill = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(fulfill(value));\n    };\n    deferred.reject = function (reason) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(reject(reason));\n    };\n    deferred.notify = function (progress) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        array_reduce(progressListeners, function (undefined, progressListener) {\n            Q.nextTick(function () {\n                progressListener(progress);\n            });\n        }, void 0);\n    };\n\n    return deferred;\n}\n\n/**\n * Creates a Node-style callback that will resolve or reject the deferred\n * promise.\n * @returns a nodeback\n */\ndefer.prototype.makeNodeResolver = function () {\n    var self = this;\n    return function (error, value) {\n        if (error) {\n            self.reject(error);\n        } else if (arguments.length > 2) {\n            self.resolve(array_slice(arguments, 1));\n        } else {\n            self.resolve(value);\n        }\n    };\n};\n\n/**\n * @param resolver {Function} a function that returns nothing and accepts\n * the resolve, reject, and notify functions for a deferred.\n * @returns a promise that may be resolved with the given resolve and reject\n * functions, or rejected by a thrown exception in resolver\n */\nQ.Promise = promise; // ES6\nQ.promise = promise;\nfunction promise(resolver) {\n    if (typeof resolver !== \"function\") {\n        throw new TypeError(\"resolver must be a function.\");\n    }\n    var deferred = defer();\n    try {\n        resolver(deferred.resolve, deferred.reject, deferred.notify);\n    } catch (reason) {\n        deferred.reject(reason);\n    }\n    return deferred.promise;\n}\n\npromise.race = race; // ES6\npromise.all = all; // ES6\npromise.reject = reject; // ES6\npromise.resolve = Q; // ES6\n\n// XXX experimental.  This method is a way to denote that a local value is\n// serializable and should be immediately dispatched to a remote upon request,\n// instead of passing a reference.\nQ.passByCopy = function (object) {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return object;\n};\n\nPromise.prototype.passByCopy = function () {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return this;\n};\n\n/**\n * If two promises eventually fulfill to the same value, promises that value,\n * but otherwise rejects.\n * @param x {Any*}\n * @param y {Any*}\n * @returns {Any*} a promise for x and y if they are the same, but a rejection\n * otherwise.\n *\n */\nQ.join = function (x, y) {\n    return Q(x).join(y);\n};\n\nPromise.prototype.join = function (that) {\n    return Q([this, that]).spread(function (x, y) {\n        if (x === y) {\n            // TODO: \"===\" should be Object.is or equiv\n            return x;\n        } else {\n            throw new Error(\"Can't join: not the same: \" + x + \" \" + y);\n        }\n    });\n};\n\n/**\n * Returns a promise for the first of an array of promises to become settled.\n * @param answers {Array[Any*]} promises to race\n * @returns {Any*} the first promise to be settled\n */\nQ.race = race;\nfunction race(answerPs) {\n    return promise(function(resolve, reject) {\n        // Switch to this once we can assume at least ES5\n        // answerPs.forEach(function(answerP) {\n        //     Q(answerP).then(resolve, reject);\n        // });\n        // Use this in the meantime\n        for (var i = 0, len = answerPs.length; i < len; i++) {\n            Q(answerPs[i]).then(resolve, reject);\n        }\n    });\n}\n\nPromise.prototype.race = function () {\n    return this.then(Q.race);\n};\n\n/**\n * Constructs a Promise with a promise descriptor object and optional fallback\n * function.  The descriptor contains methods like when(rejected), get(name),\n * set(name, value), post(name, args), and delete(name), which all\n * return either a value, a promise for a value, or a rejection.  The fallback\n * accepts the operation name, a resolver, and any further arguments that would\n * have been forwarded to the appropriate method above had a method been\n * provided with the proper name.  The API makes no guarantees about the nature\n * of the returned object, apart from that it is usable whereever promises are\n * bought and sold.\n */\nQ.makePromise = Promise;\nfunction Promise(descriptor, fallback, inspect) {\n    if (fallback === void 0) {\n        fallback = function (op) {\n            return reject(new Error(\n                \"Promise does not support operation: \" + op\n            ));\n        };\n    }\n    if (inspect === void 0) {\n        inspect = function () {\n            return {state: \"unknown\"};\n        };\n    }\n\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, args) {\n        var result;\n        try {\n            if (descriptor[op]) {\n                result = descriptor[op].apply(promise, args);\n            } else {\n                result = fallback.call(promise, op, args);\n            }\n        } catch (exception) {\n            result = reject(exception);\n        }\n        if (resolve) {\n            resolve(result);\n        }\n    };\n\n    promise.inspect = inspect;\n\n    // XXX deprecated `valueOf` and `exception` support\n    if (inspect) {\n        var inspected = inspect();\n        if (inspected.state === \"rejected\") {\n            promise.exception = inspected.reason;\n        }\n\n        promise.valueOf = function () {\n            var inspected = inspect();\n            if (inspected.state === \"pending\" ||\n                inspected.state === \"rejected\") {\n                return promise;\n            }\n            return inspected.value;\n        };\n    }\n\n    return promise;\n}\n\nPromise.prototype.toString = function () {\n    return \"[object Promise]\";\n};\n\nPromise.prototype.then = function (fulfilled, rejected, progressed) {\n    var self = this;\n    var deferred = defer();\n    var done = false;   // ensure the untrusted promise makes at most a\n                        // single call to one of the callbacks\n\n    function _fulfilled(value) {\n        try {\n            return typeof fulfilled === \"function\" ? fulfilled(value) : value;\n        } catch (exception) {\n            return reject(exception);\n        }\n    }\n\n    function _rejected(exception) {\n        if (typeof rejected === \"function\") {\n            makeStackTraceLong(exception, self);\n            try {\n                return rejected(exception);\n            } catch (newException) {\n                return reject(newException);\n            }\n        }\n        return reject(exception);\n    }\n\n    function _progressed(value) {\n        return typeof progressed === \"function\" ? progressed(value) : value;\n    }\n\n    Q.nextTick(function () {\n        self.promiseDispatch(function (value) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_fulfilled(value));\n        }, \"when\", [function (exception) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_rejected(exception));\n        }]);\n    });\n\n    // Progress propagator need to be attached in the current tick.\n    self.promiseDispatch(void 0, \"when\", [void 0, function (value) {\n        var newValue;\n        var threw = false;\n        try {\n            newValue = _progressed(value);\n        } catch (e) {\n            threw = true;\n            if (Q.onerror) {\n                Q.onerror(e);\n            } else {\n                throw e;\n            }\n        }\n\n        if (!threw) {\n            deferred.notify(newValue);\n        }\n    }]);\n\n    return deferred.promise;\n};\n\nQ.tap = function (promise, callback) {\n    return Q(promise).tap(callback);\n};\n\n/**\n * Works almost like \"finally\", but not called for rejections.\n * Original resolution value is passed through callback unaffected.\n * Callback may return a promise that will be awaited for.\n * @param {Function} callback\n * @returns {Q.Promise}\n * @example\n * doSomething()\n *   .then(...)\n *   .tap(console.log)\n *   .then(...);\n */\nPromise.prototype.tap = function (callback) {\n    callback = Q(callback);\n\n    return this.then(function (value) {\n        return callback.fcall(value).thenResolve(value);\n    });\n};\n\n/**\n * Registers an observer on a promise.\n *\n * Guarantees:\n *\n * 1. that fulfilled and rejected will be called only once.\n * 2. that either the fulfilled callback or the rejected callback will be\n *    called, but not both.\n * 3. that fulfilled and rejected will not be called in this turn.\n *\n * @param value      promise or immediate reference to observe\n * @param fulfilled  function to be called with the fulfilled value\n * @param rejected   function to be called with the rejection exception\n * @param progressed function to be called on any progress notifications\n * @return promise for the return value from the invoked callback\n */\nQ.when = when;\nfunction when(value, fulfilled, rejected, progressed) {\n    return Q(value).then(fulfilled, rejected, progressed);\n}\n\nPromise.prototype.thenResolve = function (value) {\n    return this.then(function () { return value; });\n};\n\nQ.thenResolve = function (promise, value) {\n    return Q(promise).thenResolve(value);\n};\n\nPromise.prototype.thenReject = function (reason) {\n    return this.then(function () { throw reason; });\n};\n\nQ.thenReject = function (promise, reason) {\n    return Q(promise).thenReject(reason);\n};\n\n/**\n * If an object is not a promise, it is as \"near\" as possible.\n * If a promise is rejected, it is as \"near\" as possible too.\n * If it’s a fulfilled promise, the fulfillment value is nearer.\n * If it’s a deferred promise and the deferred has been resolved, the\n * resolution is \"nearer\".\n * @param object\n * @returns most resolved (nearest) form of the object\n */\n\n// XXX should we re-do this?\nQ.nearer = nearer;\nfunction nearer(value) {\n    if (isPromise(value)) {\n        var inspected = value.inspect();\n        if (inspected.state === \"fulfilled\") {\n            return inspected.value;\n        }\n    }\n    return value;\n}\n\n/**\n * @returns whether the given object is a promise.\n * Otherwise it is a fulfilled value.\n */\nQ.isPromise = isPromise;\nfunction isPromise(object) {\n    return object instanceof Promise;\n}\n\nQ.isPromiseAlike = isPromiseAlike;\nfunction isPromiseAlike(object) {\n    return isObject(object) && typeof object.then === \"function\";\n}\n\n/**\n * @returns whether the given object is a pending promise, meaning not\n * fulfilled or rejected.\n */\nQ.isPending = isPending;\nfunction isPending(object) {\n    return isPromise(object) && object.inspect().state === \"pending\";\n}\n\nPromise.prototype.isPending = function () {\n    return this.inspect().state === \"pending\";\n};\n\n/**\n * @returns whether the given object is a value or fulfilled\n * promise.\n */\nQ.isFulfilled = isFulfilled;\nfunction isFulfilled(object) {\n    return !isPromise(object) || object.inspect().state === \"fulfilled\";\n}\n\nPromise.prototype.isFulfilled = function () {\n    return this.inspect().state === \"fulfilled\";\n};\n\n/**\n * @returns whether the given object is a rejected promise.\n */\nQ.isRejected = isRejected;\nfunction isRejected(object) {\n    return isPromise(object) && object.inspect().state === \"rejected\";\n}\n\nPromise.prototype.isRejected = function () {\n    return this.inspect().state === \"rejected\";\n};\n\n//// BEGIN UNHANDLED REJECTION TRACKING\n\n// This promise library consumes exceptions thrown in handlers so they can be\n// handled by a subsequent promise.  The exceptions get added to this array when\n// they are created, and removed when they are handled.  Note that in ES6 or\n// shimmed environments, this would naturally be a `Set`.\nvar unhandledReasons = [];\nvar unhandledRejections = [];\nvar trackUnhandledRejections = true;\n\nfunction resetUnhandledRejections() {\n    unhandledReasons.length = 0;\n    unhandledRejections.length = 0;\n\n    if (!trackUnhandledRejections) {\n        trackUnhandledRejections = true;\n    }\n}\n\nfunction trackRejection(promise, reason) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n\n    unhandledRejections.push(promise);\n    if (reason && typeof reason.stack !== \"undefined\") {\n        unhandledReasons.push(reason.stack);\n    } else {\n        unhandledReasons.push(\"(no stack) \" + reason);\n    }\n}\n\nfunction untrackRejection(promise) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n\n    var at = array_indexOf(unhandledRejections, promise);\n    if (at !== -1) {\n        unhandledRejections.splice(at, 1);\n        unhandledReasons.splice(at, 1);\n    }\n}\n\nQ.resetUnhandledRejections = resetUnhandledRejections;\n\nQ.getUnhandledReasons = function () {\n    // Make a copy so that consumers can't interfere with our internal state.\n    return unhandledReasons.slice();\n};\n\nQ.stopUnhandledRejectionTracking = function () {\n    resetUnhandledRejections();\n    trackUnhandledRejections = false;\n};\n\nresetUnhandledRejections();\n\n//// END UNHANDLED REJECTION TRACKING\n\n/**\n * Constructs a rejected promise.\n * @param reason value describing the failure\n */\nQ.reject = reject;\nfunction reject(reason) {\n    var rejection = Promise({\n        \"when\": function (rejected) {\n            // note that the error has been handled\n            if (rejected) {\n                untrackRejection(this);\n            }\n            return rejected ? rejected(reason) : this;\n        }\n    }, function fallback() {\n        return this;\n    }, function inspect() {\n        return { state: \"rejected\", reason: reason };\n    });\n\n    // Note that the reason has not been handled.\n    trackRejection(rejection, reason);\n\n    return rejection;\n}\n\n/**\n * Constructs a fulfilled promise for an immediate reference.\n * @param value immediate reference\n */\nQ.fulfill = fulfill;\nfunction fulfill(value) {\n    return Promise({\n        \"when\": function () {\n            return value;\n        },\n        \"get\": function (name) {\n            return value[name];\n        },\n        \"set\": function (name, rhs) {\n            value[name] = rhs;\n        },\n        \"delete\": function (name) {\n            delete value[name];\n        },\n        \"post\": function (name, args) {\n            // Mark Miller proposes that post with no name should apply a\n            // promised function.\n            if (name === null || name === void 0) {\n                return value.apply(void 0, args);\n            } else {\n                return value[name].apply(value, args);\n            }\n        },\n        \"apply\": function (thisp, args) {\n            return value.apply(thisp, args);\n        },\n        \"keys\": function () {\n            return object_keys(value);\n        }\n    }, void 0, function inspect() {\n        return { state: \"fulfilled\", value: value };\n    });\n}\n\n/**\n * Converts thenables to Q promises.\n * @param promise thenable promise\n * @returns a Q promise\n */\nfunction coerce(promise) {\n    var deferred = defer();\n    Q.nextTick(function () {\n        try {\n            promise.then(deferred.resolve, deferred.reject, deferred.notify);\n        } catch (exception) {\n            deferred.reject(exception);\n        }\n    });\n    return deferred.promise;\n}\n\n/**\n * Annotates an object such that it will never be\n * transferred away from this process over any promise\n * communication channel.\n * @param object\n * @returns promise a wrapping of that object that\n * additionally responds to the \"isDef\" message\n * without a rejection.\n */\nQ.master = master;\nfunction master(object) {\n    return Promise({\n        \"isDef\": function () {}\n    }, function fallback(op, args) {\n        return dispatch(object, op, args);\n    }, function () {\n        return Q(object).inspect();\n    });\n}\n\n/**\n * Spreads the values of a promised array of arguments into the\n * fulfillment callback.\n * @param fulfilled callback that receives variadic arguments from the\n * promised array\n * @param rejected callback that receives the exception if the promise\n * is rejected.\n * @returns a promise for the return value or thrown exception of\n * either callback.\n */\nQ.spread = spread;\nfunction spread(value, fulfilled, rejected) {\n    return Q(value).spread(fulfilled, rejected);\n}\n\nPromise.prototype.spread = function (fulfilled, rejected) {\n    return this.all().then(function (array) {\n        return fulfilled.apply(void 0, array);\n    }, rejected);\n};\n\n/**\n * The async function is a decorator for generator functions, turning\n * them into asynchronous generators.  Although generators are only part\n * of the newest ECMAScript 6 drafts, this code does not cause syntax\n * errors in older engines.  This code should continue to work and will\n * in fact improve over time as the language improves.\n *\n * ES6 generators are currently part of V8 version 3.19 with the\n * --harmony-generators runtime flag enabled.  SpiderMonkey has had them\n * for longer, but under an older Python-inspired form.  This function\n * works on both kinds of generators.\n *\n * Decorates a generator function such that:\n *  - it may yield promises\n *  - execution will continue when that promise is fulfilled\n *  - the value of the yield expression will be the fulfilled value\n *  - it returns a promise for the return value (when the generator\n *    stops iterating)\n *  - the decorated function returns a promise for the return value\n *    of the generator or the first rejected promise among those\n *    yielded.\n *  - if an error is thrown in the generator, it propagates through\n *    every following yield until it is caught, or until it escapes\n *    the generator function altogether, and is translated into a\n *    rejection for the promise returned by the decorated generator.\n */\nQ.async = async;\nfunction async(makeGenerator) {\n    return function () {\n        // when verb is \"send\", arg is a value\n        // when verb is \"throw\", arg is an exception\n        function continuer(verb, arg) {\n            var result;\n\n            // Until V8 3.19 / Chromium 29 is released, SpiderMonkey is the only\n            // engine that has a deployed base of browsers that support generators.\n            // However, SM's generators use the Python-inspired semantics of\n            // outdated ES6 drafts.  We would like to support ES6, but we'd also\n            // like to make it possible to use generators in deployed browsers, so\n            // we also support Python-style generators.  At some point we can remove\n            // this block.\n\n            if (typeof StopIteration === \"undefined\") {\n                // ES6 Generators\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    return reject(exception);\n                }\n                if (result.done) {\n                    return Q(result.value);\n                } else {\n                    return when(result.value, callback, errback);\n                }\n            } else {\n                // SpiderMonkey Generators\n                // FIXME: Remove this case when SM does ES6 generators.\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    if (isStopIteration(exception)) {\n                        return Q(exception.value);\n                    } else {\n                        return reject(exception);\n                    }\n                }\n                return when(result, callback, errback);\n            }\n        }\n        var generator = makeGenerator.apply(this, arguments);\n        var callback = continuer.bind(continuer, \"next\");\n        var errback = continuer.bind(continuer, \"throw\");\n        return callback();\n    };\n}\n\n/**\n * The spawn function is a small wrapper around async that immediately\n * calls the generator and also ends the promise chain, so that any\n * unhandled errors are thrown instead of forwarded to the error\n * handler. This is useful because it's extremely common to run\n * generators at the top-level to work with libraries.\n */\nQ.spawn = spawn;\nfunction spawn(makeGenerator) {\n    Q.done(Q.async(makeGenerator)());\n}\n\n// FIXME: Remove this interface once ES6 generators are in SpiderMonkey.\n/**\n * Throws a ReturnValue exception to stop an asynchronous generator.\n *\n * This interface is a stop-gap measure to support generator return\n * values in older Firefox/SpiderMonkey.  In browsers that support ES6\n * generators like Chromium 29, just use \"return\" in your generator\n * functions.\n *\n * @param value the return value for the surrounding generator\n * @throws ReturnValue exception with the value.\n * @example\n * // ES6 style\n * Q.async(function* () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      return foo + bar;\n * })\n * // Older SpiderMonkey style\n * Q.async(function () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      Q.return(foo + bar);\n * })\n */\nQ[\"return\"] = _return;\nfunction _return(value) {\n    throw new QReturnValue(value);\n}\n\n/**\n * The promised function decorator ensures that any promise arguments\n * are settled and passed as values (`this` is also settled and passed\n * as a value).  It will also ensure that the result of a function is\n * always a promise.\n *\n * @example\n * var add = Q.promised(function (a, b) {\n *     return a + b;\n * });\n * add(Q(a), Q(B));\n *\n * @param {function} callback The function to decorate\n * @returns {function} a function that has been decorated.\n */\nQ.promised = promised;\nfunction promised(callback) {\n    return function () {\n        return spread([this, all(arguments)], function (self, args) {\n            return callback.apply(self, args);\n        });\n    };\n}\n\n/**\n * sends a message to a value in a future turn\n * @param object* the recipient\n * @param op the name of the message operation, e.g., \"when\",\n * @param args further arguments to be forwarded to the operation\n * @returns result {Promise} a promise for the result of the operation\n */\nQ.dispatch = dispatch;\nfunction dispatch(object, op, args) {\n    return Q(object).dispatch(op, args);\n}\n\nPromise.prototype.dispatch = function (op, args) {\n    var self = this;\n    var deferred = defer();\n    Q.nextTick(function () {\n        self.promiseDispatch(deferred.resolve, op, args);\n    });\n    return deferred.promise;\n};\n\n/**\n * Gets the value of a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to get\n * @return promise for the property value\n */\nQ.get = function (object, key) {\n    return Q(object).dispatch(\"get\", [key]);\n};\n\nPromise.prototype.get = function (key) {\n    return this.dispatch(\"get\", [key]);\n};\n\n/**\n * Sets the value of a property in a future turn.\n * @param object    promise or immediate reference for object object\n * @param name      name of property to set\n * @param value     new value of property\n * @return promise for the return value\n */\nQ.set = function (object, key, value) {\n    return Q(object).dispatch(\"set\", [key, value]);\n};\n\nPromise.prototype.set = function (key, value) {\n    return this.dispatch(\"set\", [key, value]);\n};\n\n/**\n * Deletes a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to delete\n * @return promise for the return value\n */\nQ.del = // XXX legacy\nQ[\"delete\"] = function (object, key) {\n    return Q(object).dispatch(\"delete\", [key]);\n};\n\nPromise.prototype.del = // XXX legacy\nPromise.prototype[\"delete\"] = function (key) {\n    return this.dispatch(\"delete\", [key]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param value     a value to post, typically an array of\n *                  invocation arguments for promises that\n *                  are ultimately backed with `resolve` values,\n *                  as opposed to those backed with URLs\n *                  wherein the posted value can be any\n *                  JSON serializable object.\n * @return promise for the return value\n */\n// bound locally because it is used by other methods\nQ.mapply = // XXX As proposed by \"Redsandro\"\nQ.post = function (object, name, args) {\n    return Q(object).dispatch(\"post\", [name, args]);\n};\n\nPromise.prototype.mapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.post = function (name, args) {\n    return this.dispatch(\"post\", [name, args]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param ...args   array of invocation arguments\n * @return promise for the return value\n */\nQ.send = // XXX Mark Miller's proposed parlance\nQ.mcall = // XXX As proposed by \"Redsandro\"\nQ.invoke = function (object, name /*...args*/) {\n    return Q(object).dispatch(\"post\", [name, array_slice(arguments, 2)]);\n};\n\nPromise.prototype.send = // XXX Mark Miller's proposed parlance\nPromise.prototype.mcall = // XXX As proposed by \"Redsandro\"\nPromise.prototype.invoke = function (name /*...args*/) {\n    return this.dispatch(\"post\", [name, array_slice(arguments, 1)]);\n};\n\n/**\n * Applies the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param args      array of application arguments\n */\nQ.fapply = function (object, args) {\n    return Q(object).dispatch(\"apply\", [void 0, args]);\n};\n\nPromise.prototype.fapply = function (args) {\n    return this.dispatch(\"apply\", [void 0, args]);\n};\n\n/**\n * Calls the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ[\"try\"] =\nQ.fcall = function (object /* ...args*/) {\n    return Q(object).dispatch(\"apply\", [void 0, array_slice(arguments, 1)]);\n};\n\nPromise.prototype.fcall = function (/*...args*/) {\n    return this.dispatch(\"apply\", [void 0, array_slice(arguments)]);\n};\n\n/**\n * Binds the promised function, transforming return values into a fulfilled\n * promise and thrown errors into a rejected one.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ.fbind = function (object /*...args*/) {\n    var promise = Q(object);\n    var args = array_slice(arguments, 1);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\nPromise.prototype.fbind = function (/*...args*/) {\n    var promise = this;\n    var args = array_slice(arguments);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\n\n/**\n * Requests the names of the owned properties of a promised\n * object in a future turn.\n * @param object    promise or immediate reference for target object\n * @return promise for the keys of the eventually settled object\n */\nQ.keys = function (object) {\n    return Q(object).dispatch(\"keys\", []);\n};\n\nPromise.prototype.keys = function () {\n    return this.dispatch(\"keys\", []);\n};\n\n/**\n * Turns an array of promises into a promise for an array.  If any of\n * the promises gets rejected, the whole array is rejected immediately.\n * @param {Array*} an array (or promise for an array) of values (or\n * promises for values)\n * @returns a promise for an array of the corresponding values\n */\n// By Mark Miller\n// http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&rev=1308776521#allfulfilled\nQ.all = all;\nfunction all(promises) {\n    return when(promises, function (promises) {\n        var countDown = 0;\n        var deferred = defer();\n        array_reduce(promises, function (undefined, promise, index) {\n            var snapshot;\n            if (\n                isPromise(promise) &&\n                (snapshot = promise.inspect()).state === \"fulfilled\"\n            ) {\n                promises[index] = snapshot.value;\n            } else {\n                ++countDown;\n                when(\n                    promise,\n                    function (value) {\n                        promises[index] = value;\n                        if (--countDown === 0) {\n                            deferred.resolve(promises);\n                        }\n                    },\n                    deferred.reject,\n                    function (progress) {\n                        deferred.notify({ index: index, value: progress });\n                    }\n                );\n            }\n        }, void 0);\n        if (countDown === 0) {\n            deferred.resolve(promises);\n        }\n        return deferred.promise;\n    });\n}\n\nPromise.prototype.all = function () {\n    return all(this);\n};\n\n/**\n * Waits for all promises to be settled, either fulfilled or\n * rejected.  This is distinct from `all` since that would stop\n * waiting at the first rejection.  The promise returned by\n * `allResolved` will never be rejected.\n * @param promises a promise for an array (or an array) of promises\n * (or values)\n * @return a promise for an array of promises\n */\nQ.allResolved = deprecate(allResolved, \"allResolved\", \"allSettled\");\nfunction allResolved(promises) {\n    return when(promises, function (promises) {\n        promises = array_map(promises, Q);\n        return when(all(array_map(promises, function (promise) {\n            return when(promise, noop, noop);\n        })), function () {\n            return promises;\n        });\n    });\n}\n\nPromise.prototype.allResolved = function () {\n    return allResolved(this);\n};\n\n/**\n * @see Promise#allSettled\n */\nQ.allSettled = allSettled;\nfunction allSettled(promises) {\n    return Q(promises).allSettled();\n}\n\n/**\n * Turns an array of promises into a promise for an array of their states (as\n * returned by `inspect`) when they have all settled.\n * @param {Array[Any*]} values an array (or promise for an array) of values (or\n * promises for values)\n * @returns {Array[State]} an array of states for the respective values.\n */\nPromise.prototype.allSettled = function () {\n    return this.then(function (promises) {\n        return all(array_map(promises, function (promise) {\n            promise = Q(promise);\n            function regardless() {\n                return promise.inspect();\n            }\n            return promise.then(regardless, regardless);\n        }));\n    });\n};\n\n/**\n * Captures the failure of a promise, giving an oportunity to recover\n * with a callback.  If the given promise is fulfilled, the returned\n * promise is fulfilled.\n * @param {Any*} promise for something\n * @param {Function} callback to fulfill the returned promise if the\n * given promise is rejected\n * @returns a promise for the return value of the callback\n */\nQ.fail = // XXX legacy\nQ[\"catch\"] = function (object, rejected) {\n    return Q(object).then(void 0, rejected);\n};\n\nPromise.prototype.fail = // XXX legacy\nPromise.prototype[\"catch\"] = function (rejected) {\n    return this.then(void 0, rejected);\n};\n\n/**\n * Attaches a listener that can respond to progress notifications from a\n * promise's originating deferred. This listener receives the exact arguments\n * passed to ``deferred.notify``.\n * @param {Any*} promise for something\n * @param {Function} callback to receive any progress notifications\n * @returns the given promise, unchanged\n */\nQ.progress = progress;\nfunction progress(object, progressed) {\n    return Q(object).then(void 0, void 0, progressed);\n}\n\nPromise.prototype.progress = function (progressed) {\n    return this.then(void 0, void 0, progressed);\n};\n\n/**\n * Provides an opportunity to observe the settling of a promise,\n * regardless of whether the promise is fulfilled or rejected.  Forwards\n * the resolution to the returned promise when the callback is done.\n * The callback can return a promise to defer completion.\n * @param {Any*} promise\n * @param {Function} callback to observe the resolution of the given\n * promise, takes no arguments.\n * @returns a promise for the resolution of the given promise when\n * ``fin`` is done.\n */\nQ.fin = // XXX legacy\nQ[\"finally\"] = function (object, callback) {\n    return Q(object)[\"finally\"](callback);\n};\n\nPromise.prototype.fin = // XXX legacy\nPromise.prototype[\"finally\"] = function (callback) {\n    callback = Q(callback);\n    return this.then(function (value) {\n        return callback.fcall().then(function () {\n            return value;\n        });\n    }, function (reason) {\n        // TODO attempt to recycle the rejection with \"this\".\n        return callback.fcall().then(function () {\n            throw reason;\n        });\n    });\n};\n\n/**\n * Terminates a chain of promises, forcing rejections to be\n * thrown as exceptions.\n * @param {Any*} promise at the end of a chain of promises\n * @returns nothing\n */\nQ.done = function (object, fulfilled, rejected, progress) {\n    return Q(object).done(fulfilled, rejected, progress);\n};\n\nPromise.prototype.done = function (fulfilled, rejected, progress) {\n    var onUnhandledError = function (error) {\n        // forward to a future turn so that ``when``\n        // does not catch it and turn it into a rejection.\n        Q.nextTick(function () {\n            makeStackTraceLong(error, promise);\n            if (Q.onerror) {\n                Q.onerror(error);\n            } else {\n                throw error;\n            }\n        });\n    };\n\n    // Avoid unnecessary `nextTick`ing via an unnecessary `when`.\n    var promise = fulfilled || rejected || progress ?\n        this.then(fulfilled, rejected, progress) :\n        this;\n\n    if (typeof process === \"object\" && process && process.domain) {\n        onUnhandledError = process.domain.bind(onUnhandledError);\n    }\n\n    promise.then(void 0, onUnhandledError);\n};\n\n/**\n * Causes a promise to be rejected if it does not get fulfilled before\n * some milliseconds time out.\n * @param {Any*} promise\n * @param {Number} milliseconds timeout\n * @param {Any*} custom error message or Error object (optional)\n * @returns a promise for the resolution of the given promise if it is\n * fulfilled before the timeout, otherwise rejected.\n */\nQ.timeout = function (object, ms, error) {\n    return Q(object).timeout(ms, error);\n};\n\nPromise.prototype.timeout = function (ms, error) {\n    var deferred = defer();\n    var timeoutId = setTimeout(function () {\n        if (!error || \"string\" === typeof error) {\n            error = new Error(error || \"Timed out after \" + ms + \" ms\");\n            error.code = \"ETIMEDOUT\";\n        }\n        deferred.reject(error);\n    }, ms);\n\n    this.then(function (value) {\n        clearTimeout(timeoutId);\n        deferred.resolve(value);\n    }, function (exception) {\n        clearTimeout(timeoutId);\n        deferred.reject(exception);\n    }, deferred.notify);\n\n    return deferred.promise;\n};\n\n/**\n * Returns a promise for the given value (or promised value), some\n * milliseconds after it resolved. Passes rejections immediately.\n * @param {Any*} promise\n * @param {Number} milliseconds\n * @returns a promise for the resolution of the given promise after milliseconds\n * time has elapsed since the resolution of the given promise.\n * If the given promise rejects, that is passed immediately.\n */\nQ.delay = function (object, timeout) {\n    if (timeout === void 0) {\n        timeout = object;\n        object = void 0;\n    }\n    return Q(object).delay(timeout);\n};\n\nPromise.prototype.delay = function (timeout) {\n    return this.then(function (value) {\n        var deferred = defer();\n        setTimeout(function () {\n            deferred.resolve(value);\n        }, timeout);\n        return deferred.promise;\n    });\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided as an array, and returns a promise.\n *\n *      Q.nfapply(FS.readFile, [__filename])\n *      .then(function (content) {\n *      })\n *\n */\nQ.nfapply = function (callback, args) {\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfapply = function (args) {\n    var deferred = defer();\n    var nodeArgs = array_slice(args);\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided individually, and returns a promise.\n * @example\n * Q.nfcall(FS.readFile, __filename)\n * .then(function (content) {\n * })\n *\n */\nQ.nfcall = function (callback /*...args*/) {\n    var args = array_slice(arguments, 1);\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfcall = function (/*...args*/) {\n    var nodeArgs = array_slice(arguments);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Wraps a NodeJS continuation passing function and returns an equivalent\n * version that returns a promise.\n * @example\n * Q.nfbind(FS.readFile, __filename)(\"utf-8\")\n * .then(console.log)\n * .done()\n */\nQ.nfbind =\nQ.denodeify = function (callback /*...args*/) {\n    var baseArgs = array_slice(arguments, 1);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        Q(callback).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nfbind =\nPromise.prototype.denodeify = function (/*...args*/) {\n    var args = array_slice(arguments);\n    args.unshift(this);\n    return Q.denodeify.apply(void 0, args);\n};\n\nQ.nbind = function (callback, thisp /*...args*/) {\n    var baseArgs = array_slice(arguments, 2);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        function bound() {\n            return callback.apply(thisp, arguments);\n        }\n        Q(bound).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nbind = function (/*thisp, ...args*/) {\n    var args = array_slice(arguments, 0);\n    args.unshift(this);\n    return Q.nbind.apply(void 0, args);\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback with a given array of arguments, plus a provided callback.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param {Array} args arguments to pass to the method; the callback\n * will be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nmapply = // XXX As proposed by \"Redsandro\"\nQ.npost = function (object, name, args) {\n    return Q(object).npost(name, args);\n};\n\nPromise.prototype.nmapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.npost = function (name, args) {\n    var nodeArgs = array_slice(args || []);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback, forwarding the given variadic arguments, plus a provided\n * callback argument.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param ...args arguments to pass to the method; the callback will\n * be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nsend = // XXX Based on Mark Miller's proposed \"send\"\nQ.nmcall = // XXX Based on \"Redsandro's\" proposal\nQ.ninvoke = function (object, name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 2);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    Q(object).dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\nPromise.prototype.nsend = // XXX Based on Mark Miller's proposed \"send\"\nPromise.prototype.nmcall = // XXX Based on \"Redsandro's\" proposal\nPromise.prototype.ninvoke = function (name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 1);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * If a function would like to support both Node continuation-passing-style and\n * promise-returning-style, it can end its internal promise chain with\n * `nodeify(nodeback)`, forwarding the optional nodeback argument.  If the user\n * elects to use a nodeback, the result will be sent there.  If they do not\n * pass a nodeback, they will receive the result promise.\n * @param object a result (or a promise for a result)\n * @param {Function} nodeback a Node.js-style callback\n * @returns either the promise or nothing\n */\nQ.nodeify = nodeify;\nfunction nodeify(object, nodeback) {\n    return Q(object).nodeify(nodeback);\n}\n\nPromise.prototype.nodeify = function (nodeback) {\n    if (nodeback) {\n        this.then(function (value) {\n            Q.nextTick(function () {\n                nodeback(null, value);\n            });\n        }, function (error) {\n            Q.nextTick(function () {\n                nodeback(error);\n            });\n        });\n    } else {\n        return this;\n    }\n};\n\n// All code before this point will be filtered from stack traces.\nvar qEndingLine = captureLine();\n\nreturn Q;\n\n});\n",
              "globals": {
                "setTimeout": {
                  "type": "call"
                },
                "process": {
                  "type": "reference"
                },
                "setImmediate": {
                  "type": "typeof"
                },
                "window": {
                  "type": "typeof"
                },
                "MessageChannel": {
                  "type": "typeof"
                },
                "Function": {
                  "type": "reference"
                },
                "Array": {
                  "type": "reference"
                },
                "Object": {
                  "type": "reference"
                },
                "ReturnValue": {
                  "type": "typeof"
                },
                "p": {
                  "type": "reference"
                },
                "Number": {
                  "type": "call"
                },
                "console": {
                  "type": "typeof"
                },
                "StopIteration": {
                  "type": "typeof"
                },
                "clearTimeout": {
                  "type": "call"
                },
                "bootstrap": {
                  "type": "typeof"
                },
                "exports": {
                  "type": "typeof"
                },
                "module": {
                  "type": "typeof"
                },
                "define": {
                  "type": "typeof"
                },
                "ses": {
                  "type": "typeof"
                },
                "self": {
                  "type": "typeof"
                }
              },
              "syntax": "javascript",
              "format": "amd-ish",
              "undefine": [
                "exports",
                "module",
                "bootstrap",
                "ses"
              ],
              "uses": {},
              "dependencies": {
                "static": {},
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "amd-ish",
              "top": "wrapAMD(function(require, define) {",
              "code": "wrapAMD(function(require, define) {\n// vim:ts=4:sts=4:sw=4:\n/*!\n *\n * Copyright 2009-2012 Kris Kowal under the terms of the MIT\n * license found at http://github.com/kriskowal/q/raw/master/LICENSE\n *\n * With parts by Tyler Close\n * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\n * at http://www.opensource.org/licenses/mit-license.html\n * Forked at ref_send.js version: 2009-05-11\n *\n * With parts by Mark Miller\n * Copyright (C) 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n(function (definition) {\n    \"use strict\";\n\n    // This file will function properly as a <script> tag, or a module\n    // using CommonJS and NodeJS or RequireJS module formats.  In\n    // Common/Node/RequireJS, the module exports the Q API and when\n    // executed as a simple <script>, it creates a Q global instead.\n\n    // Montage Require\n    if (typeof bootstrap === \"function\") {\n        bootstrap(\"promise\", definition);\n\n    // CommonJS\n    } else if (typeof exports === \"object\" && typeof module === \"object\") {\n        module.exports = definition();\n\n    // RequireJS\n    } else if (typeof define === \"function\" && define.amd) {\n        define(definition);\n\n    // SES (Secure EcmaScript)\n    } else if (typeof ses !== \"undefined\") {\n        if (!ses.ok()) {\n            return;\n        } else {\n            ses.makeQ = definition;\n        }\n\n    // <script>\n    } else if (typeof self !== \"undefined\") {\n        self.Q = definition();\n\n    } else {\n        throw new Error(\"This environment was not anticiapted by Q. Please file a bug.\");\n    }\n\n})(function () {\n\"use strict\";\n\nvar hasStacks = false;\ntry {\n    throw new Error();\n} catch (e) {\n    hasStacks = !!e.stack;\n}\n\n// All code after this point will be filtered from stack traces reported\n// by Q.\nvar qStartingLine = captureLine();\nvar qFileName;\n\n// shims\n\n// used for fallback in \"allResolved\"\nvar noop = function () {};\n\n// Use the fastest possible means to execute a task in a future turn\n// of the event loop.\nvar nextTick =(function () {\n    // linked list of tasks (single, with head node)\n    var head = {task: void 0, next: null};\n    var tail = head;\n    var flushing = false;\n    var requestTick = void 0;\n    var isNodeJS = false;\n\n    function flush() {\n        /* jshint loopfunc: true */\n\n        while (head.next) {\n            head = head.next;\n            var task = head.task;\n            head.task = void 0;\n            var domain = head.domain;\n\n            if (domain) {\n                head.domain = void 0;\n                domain.enter();\n            }\n\n            try {\n                task();\n\n            } catch (e) {\n                if (isNodeJS) {\n                    // In node, uncaught exceptions are considered fatal errors.\n                    // Re-throw them synchronously to interrupt flushing!\n\n                    // Ensure continuation if the uncaught exception is suppressed\n                    // listening \"uncaughtException\" events (as domains does).\n                    // Continue in next event to avoid tick recursion.\n                    if (domain) {\n                        domain.exit();\n                    }\n                    setTimeout(flush, 0);\n                    if (domain) {\n                        domain.enter();\n                    }\n\n                    throw e;\n\n                } else {\n                    // In browsers, uncaught exceptions are not fatal.\n                    // Re-throw them asynchronously to avoid slow-downs.\n                    setTimeout(function() {\n                       throw e;\n                    }, 0);\n                }\n            }\n\n            if (domain) {\n                domain.exit();\n            }\n        }\n\n        flushing = false;\n    }\n\n    nextTick = function (task) {\n        tail = tail.next = {\n            task: task,\n            domain: isNodeJS && process.domain,\n            next: null\n        };\n\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n\n    if (typeof process !== \"undefined\" && process.nextTick) {\n        // Node.js before 0.9. Note that some fake-Node environments, like the\n        // Mocha test runner, introduce a `process` global without a `nextTick`.\n        isNodeJS = true;\n\n        requestTick = function () {\n            process.nextTick(flush);\n        };\n\n    } else if (typeof setImmediate === \"function\") {\n        // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate\n        if (typeof window !== \"undefined\") {\n            requestTick = setImmediate.bind(window, flush);\n        } else {\n            requestTick = function () {\n                setImmediate(flush);\n            };\n        }\n\n    } else if (typeof MessageChannel !== \"undefined\") {\n        // modern browsers\n        // http://www.nonblocking.io/2011/06/windownexttick.html\n        var channel = new MessageChannel();\n        // At least Safari Version 6.0.5 (8536.30.1) intermittently cannot create\n        // working message ports the first time a page loads.\n        channel.port1.onmessage = function () {\n            requestTick = requestPortTick;\n            channel.port1.onmessage = flush;\n            flush();\n        };\n        var requestPortTick = function () {\n            // Opera requires us to provide a message payload, regardless of\n            // whether we use it.\n            channel.port2.postMessage(0);\n        };\n        requestTick = function () {\n            setTimeout(flush, 0);\n            requestPortTick();\n        };\n\n    } else {\n        // old browsers\n        requestTick = function () {\n            setTimeout(flush, 0);\n        };\n    }\n\n    return nextTick;\n})();\n\n// Attempt to make generics safe in the face of downstream\n// modifications.\n// There is no situation where this is necessary.\n// If you need a security guarantee, these primordials need to be\n// deeply frozen anyway, and if you don’t need a security guarantee,\n// this is just plain paranoid.\n// However, this **might** have the nice side-effect of reducing the size of\n// the minified code by reducing x.call() to merely x()\n// See Mark Miller’s explanation of what this does.\n// http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming\nvar call = Function.call;\nfunction uncurryThis(f) {\n    return function () {\n        return call.apply(f, arguments);\n    };\n}\n// This is equivalent, but slower:\n// uncurryThis = Function_bind.bind(Function_bind.call);\n// http://jsperf.com/uncurrythis\n\nvar array_slice = uncurryThis(Array.prototype.slice);\n\nvar array_reduce = uncurryThis(\n    Array.prototype.reduce || function (callback, basis) {\n        var index = 0,\n            length = this.length;\n        // concerning the initial value, if one is not provided\n        if (arguments.length === 1) {\n            // seek to the first value in the array, accounting\n            // for the possibility that is is a sparse array\n            do {\n                if (index in this) {\n                    basis = this[index++];\n                    break;\n                }\n                if (++index >= length) {\n                    throw new TypeError();\n                }\n            } while (1);\n        }\n        // reduce\n        for (; index < length; index++) {\n            // account for the possibility that the array is sparse\n            if (index in this) {\n                basis = callback(basis, this[index], index);\n            }\n        }\n        return basis;\n    }\n);\n\nvar array_indexOf = uncurryThis(\n    Array.prototype.indexOf || function (value) {\n        // not a very good shim, but good enough for our one use of it\n        for (var i = 0; i < this.length; i++) {\n            if (this[i] === value) {\n                return i;\n            }\n        }\n        return -1;\n    }\n);\n\nvar array_map = uncurryThis(\n    Array.prototype.map || function (callback, thisp) {\n        var self = this;\n        var collect = [];\n        array_reduce(self, function (undefined, value, index) {\n            collect.push(callback.call(thisp, value, index, self));\n        }, void 0);\n        return collect;\n    }\n);\n\nvar object_create = Object.create || function (prototype) {\n    function Type() { }\n    Type.prototype = prototype;\n    return new Type();\n};\n\nvar object_hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\n\nvar object_keys = Object.keys || function (object) {\n    var keys = [];\n    for (var key in object) {\n        if (object_hasOwnProperty(object, key)) {\n            keys.push(key);\n        }\n    }\n    return keys;\n};\n\nvar object_toString = uncurryThis(Object.prototype.toString);\n\nfunction isObject(value) {\n    return value === Object(value);\n}\n\n// generator related shims\n\n// FIXME: Remove this function once ES6 generators are in SpiderMonkey.\nfunction isStopIteration(exception) {\n    return (\n        object_toString(exception) === \"[object StopIteration]\" ||\n        exception instanceof QReturnValue\n    );\n}\n\n// FIXME: Remove this helper and Q.return once ES6 generators are in\n// SpiderMonkey.\nvar QReturnValue;\nif (typeof ReturnValue !== \"undefined\") {\n    QReturnValue = ReturnValue;\n} else {\n    QReturnValue = function (value) {\n        this.value = value;\n    };\n}\n\n// long stack traces\n\nvar STACK_JUMP_SEPARATOR = \"From previous event:\";\n\nfunction makeStackTraceLong(error, promise) {\n    // If possible, transform the error stack trace by removing Node and Q\n    // cruft, then concatenating with the stack trace of `promise`. See #57.\n    if (hasStacks &&\n        promise.stack &&\n        typeof error === \"object\" &&\n        error !== null &&\n        error.stack &&\n        error.stack.indexOf(STACK_JUMP_SEPARATOR) === -1\n    ) {\n        var stacks = [];\n        for (var p = promise; !!p; p = p.source) {\n            if (p.stack) {\n                stacks.unshift(p.stack);\n            }\n        }\n        stacks.unshift(error.stack);\n\n        var concatedStacks = stacks.join(\"\\n\" + STACK_JUMP_SEPARATOR + \"\\n\");\n        error.stack = filterStackString(concatedStacks);\n    }\n}\n\nfunction filterStackString(stackString) {\n    var lines = stackString.split(\"\\n\");\n    var desiredLines = [];\n    for (var i = 0; i < lines.length; ++i) {\n        var line = lines[i];\n\n        if (!isInternalFrame(line) && !isNodeFrame(line) && line) {\n            desiredLines.push(line);\n        }\n    }\n    return desiredLines.join(\"\\n\");\n}\n\nfunction isNodeFrame(stackLine) {\n    return stackLine.indexOf(\"(module.js:\") !== -1 ||\n           stackLine.indexOf(\"(node.js:\") !== -1;\n}\n\nfunction getFileNameAndLineNumber(stackLine) {\n    // Named functions: \"at functionName (filename:lineNumber:columnNumber)\"\n    // In IE10 function name can have spaces (\"Anonymous function\") O_o\n    var attempt1 = /at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(stackLine);\n    if (attempt1) {\n        return [attempt1[1], Number(attempt1[2])];\n    }\n\n    // Anonymous functions: \"at filename:lineNumber:columnNumber\"\n    var attempt2 = /at ([^ ]+):(\\d+):(?:\\d+)$/.exec(stackLine);\n    if (attempt2) {\n        return [attempt2[1], Number(attempt2[2])];\n    }\n\n    // Firefox style: \"function@filename:lineNumber or @filename:lineNumber\"\n    var attempt3 = /.*@(.+):(\\d+)$/.exec(stackLine);\n    if (attempt3) {\n        return [attempt3[1], Number(attempt3[2])];\n    }\n}\n\nfunction isInternalFrame(stackLine) {\n    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);\n\n    if (!fileNameAndLineNumber) {\n        return false;\n    }\n\n    var fileName = fileNameAndLineNumber[0];\n    var lineNumber = fileNameAndLineNumber[1];\n\n    return fileName === qFileName &&\n        lineNumber >= qStartingLine &&\n        lineNumber <= qEndingLine;\n}\n\n// discover own file name and line number range for filtering stack\n// traces\nfunction captureLine() {\n    if (!hasStacks) {\n        return;\n    }\n\n    try {\n        throw new Error();\n    } catch (e) {\n        var lines = e.stack.split(\"\\n\");\n        var firstLine = lines[0].indexOf(\"@\") > 0 ? lines[1] : lines[2];\n        var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);\n        if (!fileNameAndLineNumber) {\n            return;\n        }\n\n        qFileName = fileNameAndLineNumber[0];\n        return fileNameAndLineNumber[1];\n    }\n}\n\nfunction deprecate(callback, name, alternative) {\n    return function () {\n        if (typeof console !== \"undefined\" &&\n            typeof console.warn === \"function\") {\n            console.warn(name + \" is deprecated, use \" + alternative +\n                         \" instead.\", new Error(\"\").stack);\n        }\n        return callback.apply(callback, arguments);\n    };\n}\n\n// end of shims\n// beginning of real work\n\n/**\n * Constructs a promise for an immediate reference, passes promises through, or\n * coerces promises from different systems.\n * @param value immediate reference or promise\n */\nfunction Q(value) {\n    // If the object is already a Promise, return it directly.  This enables\n    // the resolve function to both be used to created references from objects,\n    // but to tolerably coerce non-promises to promises.\n    if (value instanceof Promise) {\n        return value;\n    }\n\n    // assimilate thenables\n    if (isPromiseAlike(value)) {\n        return coerce(value);\n    } else {\n        return fulfill(value);\n    }\n}\nQ.resolve = Q;\n\n/**\n * Performs a task in a future turn of the event loop.\n * @param {Function} task\n */\nQ.nextTick = nextTick;\n\n/**\n * Controls whether or not long stack traces will be on\n */\nQ.longStackSupport = false;\n\n// enable long stacks if Q_DEBUG is set\nif (typeof process === \"object\" && process && process.env && process.env.Q_DEBUG) {\n    Q.longStackSupport = true;\n}\n\n/**\n * Constructs a {promise, resolve, reject} object.\n *\n * `resolve` is a callback to invoke with a more resolved value for the\n * promise. To fulfill the promise, invoke `resolve` with any value that is\n * not a thenable. To reject the promise, invoke `resolve` with a rejected\n * thenable, or invoke `reject` with the reason directly. To resolve the\n * promise to another thenable, thus putting it in the same state, invoke\n * `resolve` with that other thenable.\n */\nQ.defer = defer;\nfunction defer() {\n    // if \"messages\" is an \"Array\", that indicates that the promise has not yet\n    // been resolved.  If it is \"undefined\", it has been resolved.  Each\n    // element of the messages array is itself an array of complete arguments to\n    // forward to the resolved promise.  We coerce the resolution value to a\n    // promise using the `resolve` function because it handles both fully\n    // non-thenable values and other thenables gracefully.\n    var messages = [], progressListeners = [], resolvedPromise;\n\n    var deferred = object_create(defer.prototype);\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, operands) {\n        var args = array_slice(arguments);\n        if (messages) {\n            messages.push(args);\n            if (op === \"when\" && operands[1]) { // progress operand\n                progressListeners.push(operands[1]);\n            }\n        } else {\n            Q.nextTick(function () {\n                resolvedPromise.promiseDispatch.apply(resolvedPromise, args);\n            });\n        }\n    };\n\n    // XXX deprecated\n    promise.valueOf = function () {\n        if (messages) {\n            return promise;\n        }\n        var nearerValue = nearer(resolvedPromise);\n        if (isPromise(nearerValue)) {\n            resolvedPromise = nearerValue; // shorten chain\n        }\n        return nearerValue;\n    };\n\n    promise.inspect = function () {\n        if (!resolvedPromise) {\n            return { state: \"pending\" };\n        }\n        return resolvedPromise.inspect();\n    };\n\n    if (Q.longStackSupport && hasStacks) {\n        try {\n            throw new Error();\n        } catch (e) {\n            // NOTE: don't try to use `Error.captureStackTrace` or transfer the\n            // accessor around; that causes memory leaks as per GH-111. Just\n            // reify the stack trace as a string ASAP.\n            //\n            // At the same time, cut off the first line; it's always just\n            // \"[object Promise]\\n\", as per the `toString`.\n            promise.stack = e.stack.substring(e.stack.indexOf(\"\\n\") + 1);\n        }\n    }\n\n    // NOTE: we do the checks for `resolvedPromise` in each method, instead of\n    // consolidating them into `become`, since otherwise we'd create new\n    // promises with the lines `become(whatever(value))`. See e.g. GH-252.\n\n    function become(newPromise) {\n        resolvedPromise = newPromise;\n        promise.source = newPromise;\n\n        array_reduce(messages, function (undefined, message) {\n            Q.nextTick(function () {\n                newPromise.promiseDispatch.apply(newPromise, message);\n            });\n        }, void 0);\n\n        messages = void 0;\n        progressListeners = void 0;\n    }\n\n    deferred.promise = promise;\n    deferred.resolve = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(Q(value));\n    };\n\n    deferred.fulfill = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(fulfill(value));\n    };\n    deferred.reject = function (reason) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(reject(reason));\n    };\n    deferred.notify = function (progress) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        array_reduce(progressListeners, function (undefined, progressListener) {\n            Q.nextTick(function () {\n                progressListener(progress);\n            });\n        }, void 0);\n    };\n\n    return deferred;\n}\n\n/**\n * Creates a Node-style callback that will resolve or reject the deferred\n * promise.\n * @returns a nodeback\n */\ndefer.prototype.makeNodeResolver = function () {\n    var self = this;\n    return function (error, value) {\n        if (error) {\n            self.reject(error);\n        } else if (arguments.length > 2) {\n            self.resolve(array_slice(arguments, 1));\n        } else {\n            self.resolve(value);\n        }\n    };\n};\n\n/**\n * @param resolver {Function} a function that returns nothing and accepts\n * the resolve, reject, and notify functions for a deferred.\n * @returns a promise that may be resolved with the given resolve and reject\n * functions, or rejected by a thrown exception in resolver\n */\nQ.Promise = promise; // ES6\nQ.promise = promise;\nfunction promise(resolver) {\n    if (typeof resolver !== \"function\") {\n        throw new TypeError(\"resolver must be a function.\");\n    }\n    var deferred = defer();\n    try {\n        resolver(deferred.resolve, deferred.reject, deferred.notify);\n    } catch (reason) {\n        deferred.reject(reason);\n    }\n    return deferred.promise;\n}\n\npromise.race = race; // ES6\npromise.all = all; // ES6\npromise.reject = reject; // ES6\npromise.resolve = Q; // ES6\n\n// XXX experimental.  This method is a way to denote that a local value is\n// serializable and should be immediately dispatched to a remote upon request,\n// instead of passing a reference.\nQ.passByCopy = function (object) {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return object;\n};\n\nPromise.prototype.passByCopy = function () {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return this;\n};\n\n/**\n * If two promises eventually fulfill to the same value, promises that value,\n * but otherwise rejects.\n * @param x {Any*}\n * @param y {Any*}\n * @returns {Any*} a promise for x and y if they are the same, but a rejection\n * otherwise.\n *\n */\nQ.join = function (x, y) {\n    return Q(x).join(y);\n};\n\nPromise.prototype.join = function (that) {\n    return Q([this, that]).spread(function (x, y) {\n        if (x === y) {\n            // TODO: \"===\" should be Object.is or equiv\n            return x;\n        } else {\n            throw new Error(\"Can't join: not the same: \" + x + \" \" + y);\n        }\n    });\n};\n\n/**\n * Returns a promise for the first of an array of promises to become settled.\n * @param answers {Array[Any*]} promises to race\n * @returns {Any*} the first promise to be settled\n */\nQ.race = race;\nfunction race(answerPs) {\n    return promise(function(resolve, reject) {\n        // Switch to this once we can assume at least ES5\n        // answerPs.forEach(function(answerP) {\n        //     Q(answerP).then(resolve, reject);\n        // });\n        // Use this in the meantime\n        for (var i = 0, len = answerPs.length; i < len; i++) {\n            Q(answerPs[i]).then(resolve, reject);\n        }\n    });\n}\n\nPromise.prototype.race = function () {\n    return this.then(Q.race);\n};\n\n/**\n * Constructs a Promise with a promise descriptor object and optional fallback\n * function.  The descriptor contains methods like when(rejected), get(name),\n * set(name, value), post(name, args), and delete(name), which all\n * return either a value, a promise for a value, or a rejection.  The fallback\n * accepts the operation name, a resolver, and any further arguments that would\n * have been forwarded to the appropriate method above had a method been\n * provided with the proper name.  The API makes no guarantees about the nature\n * of the returned object, apart from that it is usable whereever promises are\n * bought and sold.\n */\nQ.makePromise = Promise;\nfunction Promise(descriptor, fallback, inspect) {\n    if (fallback === void 0) {\n        fallback = function (op) {\n            return reject(new Error(\n                \"Promise does not support operation: \" + op\n            ));\n        };\n    }\n    if (inspect === void 0) {\n        inspect = function () {\n            return {state: \"unknown\"};\n        };\n    }\n\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, args) {\n        var result;\n        try {\n            if (descriptor[op]) {\n                result = descriptor[op].apply(promise, args);\n            } else {\n                result = fallback.call(promise, op, args);\n            }\n        } catch (exception) {\n            result = reject(exception);\n        }\n        if (resolve) {\n            resolve(result);\n        }\n    };\n\n    promise.inspect = inspect;\n\n    // XXX deprecated `valueOf` and `exception` support\n    if (inspect) {\n        var inspected = inspect();\n        if (inspected.state === \"rejected\") {\n            promise.exception = inspected.reason;\n        }\n\n        promise.valueOf = function () {\n            var inspected = inspect();\n            if (inspected.state === \"pending\" ||\n                inspected.state === \"rejected\") {\n                return promise;\n            }\n            return inspected.value;\n        };\n    }\n\n    return promise;\n}\n\nPromise.prototype.toString = function () {\n    return \"[object Promise]\";\n};\n\nPromise.prototype.then = function (fulfilled, rejected, progressed) {\n    var self = this;\n    var deferred = defer();\n    var done = false;   // ensure the untrusted promise makes at most a\n                        // single call to one of the callbacks\n\n    function _fulfilled(value) {\n        try {\n            return typeof fulfilled === \"function\" ? fulfilled(value) : value;\n        } catch (exception) {\n            return reject(exception);\n        }\n    }\n\n    function _rejected(exception) {\n        if (typeof rejected === \"function\") {\n            makeStackTraceLong(exception, self);\n            try {\n                return rejected(exception);\n            } catch (newException) {\n                return reject(newException);\n            }\n        }\n        return reject(exception);\n    }\n\n    function _progressed(value) {\n        return typeof progressed === \"function\" ? progressed(value) : value;\n    }\n\n    Q.nextTick(function () {\n        self.promiseDispatch(function (value) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_fulfilled(value));\n        }, \"when\", [function (exception) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_rejected(exception));\n        }]);\n    });\n\n    // Progress propagator need to be attached in the current tick.\n    self.promiseDispatch(void 0, \"when\", [void 0, function (value) {\n        var newValue;\n        var threw = false;\n        try {\n            newValue = _progressed(value);\n        } catch (e) {\n            threw = true;\n            if (Q.onerror) {\n                Q.onerror(e);\n            } else {\n                throw e;\n            }\n        }\n\n        if (!threw) {\n            deferred.notify(newValue);\n        }\n    }]);\n\n    return deferred.promise;\n};\n\nQ.tap = function (promise, callback) {\n    return Q(promise).tap(callback);\n};\n\n/**\n * Works almost like \"finally\", but not called for rejections.\n * Original resolution value is passed through callback unaffected.\n * Callback may return a promise that will be awaited for.\n * @param {Function} callback\n * @returns {Q.Promise}\n * @example\n * doSomething()\n *   .then(...)\n *   .tap(console.log)\n *   .then(...);\n */\nPromise.prototype.tap = function (callback) {\n    callback = Q(callback);\n\n    return this.then(function (value) {\n        return callback.fcall(value).thenResolve(value);\n    });\n};\n\n/**\n * Registers an observer on a promise.\n *\n * Guarantees:\n *\n * 1. that fulfilled and rejected will be called only once.\n * 2. that either the fulfilled callback or the rejected callback will be\n *    called, but not both.\n * 3. that fulfilled and rejected will not be called in this turn.\n *\n * @param value      promise or immediate reference to observe\n * @param fulfilled  function to be called with the fulfilled value\n * @param rejected   function to be called with the rejection exception\n * @param progressed function to be called on any progress notifications\n * @return promise for the return value from the invoked callback\n */\nQ.when = when;\nfunction when(value, fulfilled, rejected, progressed) {\n    return Q(value).then(fulfilled, rejected, progressed);\n}\n\nPromise.prototype.thenResolve = function (value) {\n    return this.then(function () { return value; });\n};\n\nQ.thenResolve = function (promise, value) {\n    return Q(promise).thenResolve(value);\n};\n\nPromise.prototype.thenReject = function (reason) {\n    return this.then(function () { throw reason; });\n};\n\nQ.thenReject = function (promise, reason) {\n    return Q(promise).thenReject(reason);\n};\n\n/**\n * If an object is not a promise, it is as \"near\" as possible.\n * If a promise is rejected, it is as \"near\" as possible too.\n * If it’s a fulfilled promise, the fulfillment value is nearer.\n * If it’s a deferred promise and the deferred has been resolved, the\n * resolution is \"nearer\".\n * @param object\n * @returns most resolved (nearest) form of the object\n */\n\n// XXX should we re-do this?\nQ.nearer = nearer;\nfunction nearer(value) {\n    if (isPromise(value)) {\n        var inspected = value.inspect();\n        if (inspected.state === \"fulfilled\") {\n            return inspected.value;\n        }\n    }\n    return value;\n}\n\n/**\n * @returns whether the given object is a promise.\n * Otherwise it is a fulfilled value.\n */\nQ.isPromise = isPromise;\nfunction isPromise(object) {\n    return object instanceof Promise;\n}\n\nQ.isPromiseAlike = isPromiseAlike;\nfunction isPromiseAlike(object) {\n    return isObject(object) && typeof object.then === \"function\";\n}\n\n/**\n * @returns whether the given object is a pending promise, meaning not\n * fulfilled or rejected.\n */\nQ.isPending = isPending;\nfunction isPending(object) {\n    return isPromise(object) && object.inspect().state === \"pending\";\n}\n\nPromise.prototype.isPending = function () {\n    return this.inspect().state === \"pending\";\n};\n\n/**\n * @returns whether the given object is a value or fulfilled\n * promise.\n */\nQ.isFulfilled = isFulfilled;\nfunction isFulfilled(object) {\n    return !isPromise(object) || object.inspect().state === \"fulfilled\";\n}\n\nPromise.prototype.isFulfilled = function () {\n    return this.inspect().state === \"fulfilled\";\n};\n\n/**\n * @returns whether the given object is a rejected promise.\n */\nQ.isRejected = isRejected;\nfunction isRejected(object) {\n    return isPromise(object) && object.inspect().state === \"rejected\";\n}\n\nPromise.prototype.isRejected = function () {\n    return this.inspect().state === \"rejected\";\n};\n\n//// BEGIN UNHANDLED REJECTION TRACKING\n\n// This promise library consumes exceptions thrown in handlers so they can be\n// handled by a subsequent promise.  The exceptions get added to this array when\n// they are created, and removed when they are handled.  Note that in ES6 or\n// shimmed environments, this would naturally be a `Set`.\nvar unhandledReasons = [];\nvar unhandledRejections = [];\nvar trackUnhandledRejections = true;\n\nfunction resetUnhandledRejections() {\n    unhandledReasons.length = 0;\n    unhandledRejections.length = 0;\n\n    if (!trackUnhandledRejections) {\n        trackUnhandledRejections = true;\n    }\n}\n\nfunction trackRejection(promise, reason) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n\n    unhandledRejections.push(promise);\n    if (reason && typeof reason.stack !== \"undefined\") {\n        unhandledReasons.push(reason.stack);\n    } else {\n        unhandledReasons.push(\"(no stack) \" + reason);\n    }\n}\n\nfunction untrackRejection(promise) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n\n    var at = array_indexOf(unhandledRejections, promise);\n    if (at !== -1) {\n        unhandledRejections.splice(at, 1);\n        unhandledReasons.splice(at, 1);\n    }\n}\n\nQ.resetUnhandledRejections = resetUnhandledRejections;\n\nQ.getUnhandledReasons = function () {\n    // Make a copy so that consumers can't interfere with our internal state.\n    return unhandledReasons.slice();\n};\n\nQ.stopUnhandledRejectionTracking = function () {\n    resetUnhandledRejections();\n    trackUnhandledRejections = false;\n};\n\nresetUnhandledRejections();\n\n//// END UNHANDLED REJECTION TRACKING\n\n/**\n * Constructs a rejected promise.\n * @param reason value describing the failure\n */\nQ.reject = reject;\nfunction reject(reason) {\n    var rejection = Promise({\n        \"when\": function (rejected) {\n            // note that the error has been handled\n            if (rejected) {\n                untrackRejection(this);\n            }\n            return rejected ? rejected(reason) : this;\n        }\n    }, function fallback() {\n        return this;\n    }, function inspect() {\n        return { state: \"rejected\", reason: reason };\n    });\n\n    // Note that the reason has not been handled.\n    trackRejection(rejection, reason);\n\n    return rejection;\n}\n\n/**\n * Constructs a fulfilled promise for an immediate reference.\n * @param value immediate reference\n */\nQ.fulfill = fulfill;\nfunction fulfill(value) {\n    return Promise({\n        \"when\": function () {\n            return value;\n        },\n        \"get\": function (name) {\n            return value[name];\n        },\n        \"set\": function (name, rhs) {\n            value[name] = rhs;\n        },\n        \"delete\": function (name) {\n            delete value[name];\n        },\n        \"post\": function (name, args) {\n            // Mark Miller proposes that post with no name should apply a\n            // promised function.\n            if (name === null || name === void 0) {\n                return value.apply(void 0, args);\n            } else {\n                return value[name].apply(value, args);\n            }\n        },\n        \"apply\": function (thisp, args) {\n            return value.apply(thisp, args);\n        },\n        \"keys\": function () {\n            return object_keys(value);\n        }\n    }, void 0, function inspect() {\n        return { state: \"fulfilled\", value: value };\n    });\n}\n\n/**\n * Converts thenables to Q promises.\n * @param promise thenable promise\n * @returns a Q promise\n */\nfunction coerce(promise) {\n    var deferred = defer();\n    Q.nextTick(function () {\n        try {\n            promise.then(deferred.resolve, deferred.reject, deferred.notify);\n        } catch (exception) {\n            deferred.reject(exception);\n        }\n    });\n    return deferred.promise;\n}\n\n/**\n * Annotates an object such that it will never be\n * transferred away from this process over any promise\n * communication channel.\n * @param object\n * @returns promise a wrapping of that object that\n * additionally responds to the \"isDef\" message\n * without a rejection.\n */\nQ.master = master;\nfunction master(object) {\n    return Promise({\n        \"isDef\": function () {}\n    }, function fallback(op, args) {\n        return dispatch(object, op, args);\n    }, function () {\n        return Q(object).inspect();\n    });\n}\n\n/**\n * Spreads the values of a promised array of arguments into the\n * fulfillment callback.\n * @param fulfilled callback that receives variadic arguments from the\n * promised array\n * @param rejected callback that receives the exception if the promise\n * is rejected.\n * @returns a promise for the return value or thrown exception of\n * either callback.\n */\nQ.spread = spread;\nfunction spread(value, fulfilled, rejected) {\n    return Q(value).spread(fulfilled, rejected);\n}\n\nPromise.prototype.spread = function (fulfilled, rejected) {\n    return this.all().then(function (array) {\n        return fulfilled.apply(void 0, array);\n    }, rejected);\n};\n\n/**\n * The async function is a decorator for generator functions, turning\n * them into asynchronous generators.  Although generators are only part\n * of the newest ECMAScript 6 drafts, this code does not cause syntax\n * errors in older engines.  This code should continue to work and will\n * in fact improve over time as the language improves.\n *\n * ES6 generators are currently part of V8 version 3.19 with the\n * --harmony-generators runtime flag enabled.  SpiderMonkey has had them\n * for longer, but under an older Python-inspired form.  This function\n * works on both kinds of generators.\n *\n * Decorates a generator function such that:\n *  - it may yield promises\n *  - execution will continue when that promise is fulfilled\n *  - the value of the yield expression will be the fulfilled value\n *  - it returns a promise for the return value (when the generator\n *    stops iterating)\n *  - the decorated function returns a promise for the return value\n *    of the generator or the first rejected promise among those\n *    yielded.\n *  - if an error is thrown in the generator, it propagates through\n *    every following yield until it is caught, or until it escapes\n *    the generator function altogether, and is translated into a\n *    rejection for the promise returned by the decorated generator.\n */\nQ.async = async;\nfunction async(makeGenerator) {\n    return function () {\n        // when verb is \"send\", arg is a value\n        // when verb is \"throw\", arg is an exception\n        function continuer(verb, arg) {\n            var result;\n\n            // Until V8 3.19 / Chromium 29 is released, SpiderMonkey is the only\n            // engine that has a deployed base of browsers that support generators.\n            // However, SM's generators use the Python-inspired semantics of\n            // outdated ES6 drafts.  We would like to support ES6, but we'd also\n            // like to make it possible to use generators in deployed browsers, so\n            // we also support Python-style generators.  At some point we can remove\n            // this block.\n\n            if (typeof StopIteration === \"undefined\") {\n                // ES6 Generators\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    return reject(exception);\n                }\n                if (result.done) {\n                    return Q(result.value);\n                } else {\n                    return when(result.value, callback, errback);\n                }\n            } else {\n                // SpiderMonkey Generators\n                // FIXME: Remove this case when SM does ES6 generators.\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    if (isStopIteration(exception)) {\n                        return Q(exception.value);\n                    } else {\n                        return reject(exception);\n                    }\n                }\n                return when(result, callback, errback);\n            }\n        }\n        var generator = makeGenerator.apply(this, arguments);\n        var callback = continuer.bind(continuer, \"next\");\n        var errback = continuer.bind(continuer, \"throw\");\n        return callback();\n    };\n}\n\n/**\n * The spawn function is a small wrapper around async that immediately\n * calls the generator and also ends the promise chain, so that any\n * unhandled errors are thrown instead of forwarded to the error\n * handler. This is useful because it's extremely common to run\n * generators at the top-level to work with libraries.\n */\nQ.spawn = spawn;\nfunction spawn(makeGenerator) {\n    Q.done(Q.async(makeGenerator)());\n}\n\n// FIXME: Remove this interface once ES6 generators are in SpiderMonkey.\n/**\n * Throws a ReturnValue exception to stop an asynchronous generator.\n *\n * This interface is a stop-gap measure to support generator return\n * values in older Firefox/SpiderMonkey.  In browsers that support ES6\n * generators like Chromium 29, just use \"return\" in your generator\n * functions.\n *\n * @param value the return value for the surrounding generator\n * @throws ReturnValue exception with the value.\n * @example\n * // ES6 style\n * Q.async(function* () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      return foo + bar;\n * })\n * // Older SpiderMonkey style\n * Q.async(function () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      Q.return(foo + bar);\n * })\n */\nQ[\"return\"] = _return;\nfunction _return(value) {\n    throw new QReturnValue(value);\n}\n\n/**\n * The promised function decorator ensures that any promise arguments\n * are settled and passed as values (`this` is also settled and passed\n * as a value).  It will also ensure that the result of a function is\n * always a promise.\n *\n * @example\n * var add = Q.promised(function (a, b) {\n *     return a + b;\n * });\n * add(Q(a), Q(B));\n *\n * @param {function} callback The function to decorate\n * @returns {function} a function that has been decorated.\n */\nQ.promised = promised;\nfunction promised(callback) {\n    return function () {\n        return spread([this, all(arguments)], function (self, args) {\n            return callback.apply(self, args);\n        });\n    };\n}\n\n/**\n * sends a message to a value in a future turn\n * @param object* the recipient\n * @param op the name of the message operation, e.g., \"when\",\n * @param args further arguments to be forwarded to the operation\n * @returns result {Promise} a promise for the result of the operation\n */\nQ.dispatch = dispatch;\nfunction dispatch(object, op, args) {\n    return Q(object).dispatch(op, args);\n}\n\nPromise.prototype.dispatch = function (op, args) {\n    var self = this;\n    var deferred = defer();\n    Q.nextTick(function () {\n        self.promiseDispatch(deferred.resolve, op, args);\n    });\n    return deferred.promise;\n};\n\n/**\n * Gets the value of a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to get\n * @return promise for the property value\n */\nQ.get = function (object, key) {\n    return Q(object).dispatch(\"get\", [key]);\n};\n\nPromise.prototype.get = function (key) {\n    return this.dispatch(\"get\", [key]);\n};\n\n/**\n * Sets the value of a property in a future turn.\n * @param object    promise or immediate reference for object object\n * @param name      name of property to set\n * @param value     new value of property\n * @return promise for the return value\n */\nQ.set = function (object, key, value) {\n    return Q(object).dispatch(\"set\", [key, value]);\n};\n\nPromise.prototype.set = function (key, value) {\n    return this.dispatch(\"set\", [key, value]);\n};\n\n/**\n * Deletes a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to delete\n * @return promise for the return value\n */\nQ.del = // XXX legacy\nQ[\"delete\"] = function (object, key) {\n    return Q(object).dispatch(\"delete\", [key]);\n};\n\nPromise.prototype.del = // XXX legacy\nPromise.prototype[\"delete\"] = function (key) {\n    return this.dispatch(\"delete\", [key]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param value     a value to post, typically an array of\n *                  invocation arguments for promises that\n *                  are ultimately backed with `resolve` values,\n *                  as opposed to those backed with URLs\n *                  wherein the posted value can be any\n *                  JSON serializable object.\n * @return promise for the return value\n */\n// bound locally because it is used by other methods\nQ.mapply = // XXX As proposed by \"Redsandro\"\nQ.post = function (object, name, args) {\n    return Q(object).dispatch(\"post\", [name, args]);\n};\n\nPromise.prototype.mapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.post = function (name, args) {\n    return this.dispatch(\"post\", [name, args]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param ...args   array of invocation arguments\n * @return promise for the return value\n */\nQ.send = // XXX Mark Miller's proposed parlance\nQ.mcall = // XXX As proposed by \"Redsandro\"\nQ.invoke = function (object, name /*...args*/) {\n    return Q(object).dispatch(\"post\", [name, array_slice(arguments, 2)]);\n};\n\nPromise.prototype.send = // XXX Mark Miller's proposed parlance\nPromise.prototype.mcall = // XXX As proposed by \"Redsandro\"\nPromise.prototype.invoke = function (name /*...args*/) {\n    return this.dispatch(\"post\", [name, array_slice(arguments, 1)]);\n};\n\n/**\n * Applies the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param args      array of application arguments\n */\nQ.fapply = function (object, args) {\n    return Q(object).dispatch(\"apply\", [void 0, args]);\n};\n\nPromise.prototype.fapply = function (args) {\n    return this.dispatch(\"apply\", [void 0, args]);\n};\n\n/**\n * Calls the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ[\"try\"] =\nQ.fcall = function (object /* ...args*/) {\n    return Q(object).dispatch(\"apply\", [void 0, array_slice(arguments, 1)]);\n};\n\nPromise.prototype.fcall = function (/*...args*/) {\n    return this.dispatch(\"apply\", [void 0, array_slice(arguments)]);\n};\n\n/**\n * Binds the promised function, transforming return values into a fulfilled\n * promise and thrown errors into a rejected one.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ.fbind = function (object /*...args*/) {\n    var promise = Q(object);\n    var args = array_slice(arguments, 1);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\nPromise.prototype.fbind = function (/*...args*/) {\n    var promise = this;\n    var args = array_slice(arguments);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\n\n/**\n * Requests the names of the owned properties of a promised\n * object in a future turn.\n * @param object    promise or immediate reference for target object\n * @return promise for the keys of the eventually settled object\n */\nQ.keys = function (object) {\n    return Q(object).dispatch(\"keys\", []);\n};\n\nPromise.prototype.keys = function () {\n    return this.dispatch(\"keys\", []);\n};\n\n/**\n * Turns an array of promises into a promise for an array.  If any of\n * the promises gets rejected, the whole array is rejected immediately.\n * @param {Array*} an array (or promise for an array) of values (or\n * promises for values)\n * @returns a promise for an array of the corresponding values\n */\n// By Mark Miller\n// http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&rev=1308776521#allfulfilled\nQ.all = all;\nfunction all(promises) {\n    return when(promises, function (promises) {\n        var countDown = 0;\n        var deferred = defer();\n        array_reduce(promises, function (undefined, promise, index) {\n            var snapshot;\n            if (\n                isPromise(promise) &&\n                (snapshot = promise.inspect()).state === \"fulfilled\"\n            ) {\n                promises[index] = snapshot.value;\n            } else {\n                ++countDown;\n                when(\n                    promise,\n                    function (value) {\n                        promises[index] = value;\n                        if (--countDown === 0) {\n                            deferred.resolve(promises);\n                        }\n                    },\n                    deferred.reject,\n                    function (progress) {\n                        deferred.notify({ index: index, value: progress });\n                    }\n                );\n            }\n        }, void 0);\n        if (countDown === 0) {\n            deferred.resolve(promises);\n        }\n        return deferred.promise;\n    });\n}\n\nPromise.prototype.all = function () {\n    return all(this);\n};\n\n/**\n * Waits for all promises to be settled, either fulfilled or\n * rejected.  This is distinct from `all` since that would stop\n * waiting at the first rejection.  The promise returned by\n * `allResolved` will never be rejected.\n * @param promises a promise for an array (or an array) of promises\n * (or values)\n * @return a promise for an array of promises\n */\nQ.allResolved = deprecate(allResolved, \"allResolved\", \"allSettled\");\nfunction allResolved(promises) {\n    return when(promises, function (promises) {\n        promises = array_map(promises, Q);\n        return when(all(array_map(promises, function (promise) {\n            return when(promise, noop, noop);\n        })), function () {\n            return promises;\n        });\n    });\n}\n\nPromise.prototype.allResolved = function () {\n    return allResolved(this);\n};\n\n/**\n * @see Promise#allSettled\n */\nQ.allSettled = allSettled;\nfunction allSettled(promises) {\n    return Q(promises).allSettled();\n}\n\n/**\n * Turns an array of promises into a promise for an array of their states (as\n * returned by `inspect`) when they have all settled.\n * @param {Array[Any*]} values an array (or promise for an array) of values (or\n * promises for values)\n * @returns {Array[State]} an array of states for the respective values.\n */\nPromise.prototype.allSettled = function () {\n    return this.then(function (promises) {\n        return all(array_map(promises, function (promise) {\n            promise = Q(promise);\n            function regardless() {\n                return promise.inspect();\n            }\n            return promise.then(regardless, regardless);\n        }));\n    });\n};\n\n/**\n * Captures the failure of a promise, giving an oportunity to recover\n * with a callback.  If the given promise is fulfilled, the returned\n * promise is fulfilled.\n * @param {Any*} promise for something\n * @param {Function} callback to fulfill the returned promise if the\n * given promise is rejected\n * @returns a promise for the return value of the callback\n */\nQ.fail = // XXX legacy\nQ[\"catch\"] = function (object, rejected) {\n    return Q(object).then(void 0, rejected);\n};\n\nPromise.prototype.fail = // XXX legacy\nPromise.prototype[\"catch\"] = function (rejected) {\n    return this.then(void 0, rejected);\n};\n\n/**\n * Attaches a listener that can respond to progress notifications from a\n * promise's originating deferred. This listener receives the exact arguments\n * passed to ``deferred.notify``.\n * @param {Any*} promise for something\n * @param {Function} callback to receive any progress notifications\n * @returns the given promise, unchanged\n */\nQ.progress = progress;\nfunction progress(object, progressed) {\n    return Q(object).then(void 0, void 0, progressed);\n}\n\nPromise.prototype.progress = function (progressed) {\n    return this.then(void 0, void 0, progressed);\n};\n\n/**\n * Provides an opportunity to observe the settling of a promise,\n * regardless of whether the promise is fulfilled or rejected.  Forwards\n * the resolution to the returned promise when the callback is done.\n * The callback can return a promise to defer completion.\n * @param {Any*} promise\n * @param {Function} callback to observe the resolution of the given\n * promise, takes no arguments.\n * @returns a promise for the resolution of the given promise when\n * ``fin`` is done.\n */\nQ.fin = // XXX legacy\nQ[\"finally\"] = function (object, callback) {\n    return Q(object)[\"finally\"](callback);\n};\n\nPromise.prototype.fin = // XXX legacy\nPromise.prototype[\"finally\"] = function (callback) {\n    callback = Q(callback);\n    return this.then(function (value) {\n        return callback.fcall().then(function () {\n            return value;\n        });\n    }, function (reason) {\n        // TODO attempt to recycle the rejection with \"this\".\n        return callback.fcall().then(function () {\n            throw reason;\n        });\n    });\n};\n\n/**\n * Terminates a chain of promises, forcing rejections to be\n * thrown as exceptions.\n * @param {Any*} promise at the end of a chain of promises\n * @returns nothing\n */\nQ.done = function (object, fulfilled, rejected, progress) {\n    return Q(object).done(fulfilled, rejected, progress);\n};\n\nPromise.prototype.done = function (fulfilled, rejected, progress) {\n    var onUnhandledError = function (error) {\n        // forward to a future turn so that ``when``\n        // does not catch it and turn it into a rejection.\n        Q.nextTick(function () {\n            makeStackTraceLong(error, promise);\n            if (Q.onerror) {\n                Q.onerror(error);\n            } else {\n                throw error;\n            }\n        });\n    };\n\n    // Avoid unnecessary `nextTick`ing via an unnecessary `when`.\n    var promise = fulfilled || rejected || progress ?\n        this.then(fulfilled, rejected, progress) :\n        this;\n\n    if (typeof process === \"object\" && process && process.domain) {\n        onUnhandledError = process.domain.bind(onUnhandledError);\n    }\n\n    promise.then(void 0, onUnhandledError);\n};\n\n/**\n * Causes a promise to be rejected if it does not get fulfilled before\n * some milliseconds time out.\n * @param {Any*} promise\n * @param {Number} milliseconds timeout\n * @param {Any*} custom error message or Error object (optional)\n * @returns a promise for the resolution of the given promise if it is\n * fulfilled before the timeout, otherwise rejected.\n */\nQ.timeout = function (object, ms, error) {\n    return Q(object).timeout(ms, error);\n};\n\nPromise.prototype.timeout = function (ms, error) {\n    var deferred = defer();\n    var timeoutId = setTimeout(function () {\n        if (!error || \"string\" === typeof error) {\n            error = new Error(error || \"Timed out after \" + ms + \" ms\");\n            error.code = \"ETIMEDOUT\";\n        }\n        deferred.reject(error);\n    }, ms);\n\n    this.then(function (value) {\n        clearTimeout(timeoutId);\n        deferred.resolve(value);\n    }, function (exception) {\n        clearTimeout(timeoutId);\n        deferred.reject(exception);\n    }, deferred.notify);\n\n    return deferred.promise;\n};\n\n/**\n * Returns a promise for the given value (or promised value), some\n * milliseconds after it resolved. Passes rejections immediately.\n * @param {Any*} promise\n * @param {Number} milliseconds\n * @returns a promise for the resolution of the given promise after milliseconds\n * time has elapsed since the resolution of the given promise.\n * If the given promise rejects, that is passed immediately.\n */\nQ.delay = function (object, timeout) {\n    if (timeout === void 0) {\n        timeout = object;\n        object = void 0;\n    }\n    return Q(object).delay(timeout);\n};\n\nPromise.prototype.delay = function (timeout) {\n    return this.then(function (value) {\n        var deferred = defer();\n        setTimeout(function () {\n            deferred.resolve(value);\n        }, timeout);\n        return deferred.promise;\n    });\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided as an array, and returns a promise.\n *\n *      Q.nfapply(FS.readFile, [__filename])\n *      .then(function (content) {\n *      })\n *\n */\nQ.nfapply = function (callback, args) {\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfapply = function (args) {\n    var deferred = defer();\n    var nodeArgs = array_slice(args);\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided individually, and returns a promise.\n * @example\n * Q.nfcall(FS.readFile, __filename)\n * .then(function (content) {\n * })\n *\n */\nQ.nfcall = function (callback /*...args*/) {\n    var args = array_slice(arguments, 1);\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfcall = function (/*...args*/) {\n    var nodeArgs = array_slice(arguments);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Wraps a NodeJS continuation passing function and returns an equivalent\n * version that returns a promise.\n * @example\n * Q.nfbind(FS.readFile, __filename)(\"utf-8\")\n * .then(console.log)\n * .done()\n */\nQ.nfbind =\nQ.denodeify = function (callback /*...args*/) {\n    var baseArgs = array_slice(arguments, 1);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        Q(callback).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nfbind =\nPromise.prototype.denodeify = function (/*...args*/) {\n    var args = array_slice(arguments);\n    args.unshift(this);\n    return Q.denodeify.apply(void 0, args);\n};\n\nQ.nbind = function (callback, thisp /*...args*/) {\n    var baseArgs = array_slice(arguments, 2);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        function bound() {\n            return callback.apply(thisp, arguments);\n        }\n        Q(bound).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nbind = function (/*thisp, ...args*/) {\n    var args = array_slice(arguments, 0);\n    args.unshift(this);\n    return Q.nbind.apply(void 0, args);\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback with a given array of arguments, plus a provided callback.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param {Array} args arguments to pass to the method; the callback\n * will be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nmapply = // XXX As proposed by \"Redsandro\"\nQ.npost = function (object, name, args) {\n    return Q(object).npost(name, args);\n};\n\nPromise.prototype.nmapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.npost = function (name, args) {\n    var nodeArgs = array_slice(args || []);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback, forwarding the given variadic arguments, plus a provided\n * callback argument.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param ...args arguments to pass to the method; the callback will\n * be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nsend = // XXX Based on Mark Miller's proposed \"send\"\nQ.nmcall = // XXX Based on \"Redsandro's\" proposal\nQ.ninvoke = function (object, name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 2);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    Q(object).dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\nPromise.prototype.nsend = // XXX Based on Mark Miller's proposed \"send\"\nPromise.prototype.nmcall = // XXX Based on \"Redsandro's\" proposal\nPromise.prototype.ninvoke = function (name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 1);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * If a function would like to support both Node continuation-passing-style and\n * promise-returning-style, it can end its internal promise chain with\n * `nodeify(nodeback)`, forwarding the optional nodeback argument.  If the user\n * elects to use a nodeback, the result will be sent there.  If they do not\n * pass a nodeback, they will receive the result promise.\n * @param object a result (or a promise for a result)\n * @param {Function} nodeback a Node.js-style callback\n * @returns either the promise or nothing\n */\nQ.nodeify = nodeify;\nfunction nodeify(object, nodeback) {\n    return Q(object).nodeify(nodeback);\n}\n\nPromise.prototype.nodeify = function (nodeback) {\n    if (nodeback) {\n        this.then(function (value) {\n            Q.nextTick(function () {\n                nodeback(null, value);\n            });\n        }, function (error) {\n            Q.nextTick(function () {\n                nodeback(error);\n            });\n        });\n    } else {\n        return this;\n    }\n};\n\n// All code before this point will be filtered from stack traces.\nvar qEndingLine = captureLine();\n\nreturn Q;\n\n});\n\n})",
              "bottom": "})"
            },
            "dependencies": {
              "static": {},
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/loader.js": {
            "requireId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/loader.js",
            "memoizeId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/loader.js",
            "descriptor": {
              "filename": "loader.js",
              "filepath": "../renderers/loader.js",
              "mtime": 1421188200,
              "code": "\n\nexports.bootIntoNode = function (context) {\n\n\tvar loader = new Loader(context);\n\n\treturn loader.load(\"0-boot/0-boot\").then(function (context) {\n\t\treturn loader.callApi(\"css.load\", {\n\t\t\turi: \"0-boot\",\n\t\t\tcssPrefix: context.cssPrefix,\n\t\t\t// TODO: Load this dynamically with the js source code.\n\t\t\tsource: require(\"./0-boot/0-boot.scss\")\n\t\t}).then(function () {\n\n\t\t\treturn loader.load(\"1-insight/1-insight\").then(function (context) {\n\t\t\t\treturn loader.callApi(\"css.load\", {\n\t\t\t\t\turi: \"1-insight\",\n\t\t\t\t\tcssPrefix: context.cssPrefix,\n\t\t\t\t\t// TODO: Load this dynamically with the js source code.\n\t\t\t\t\tsource: require(\"./1-insight/1-insight.scss\")\n\t\t\t\t}).then(function () {\n\n\t\t\t\t\treturn loader;\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n}\n\n\nvar Loader = function(context) {\n\tvar self = this;\n\n\tself.API = context.API;\n\tself.domNode = context.domNode;\n\tself.widgetIndex = context.widgetIndex;\n\n\tself.api = {};\n}\n\nLoader.prototype.callApi = function (id, args) {\n\tvar self = this;\n\tif (!self.api[id]) {\n\t\treturn self.API.Q.reject(new Error(\"API for id '\" + id + \"' not registered!\"));\n\t}\n\ttry {\n\t\treturn self.API.Q.when(self.api[id](args));\n\t} catch (err) {\n\t\treturn self.API.Q.reject(err);\n\t}\n}\n\nLoader.prototype.registerApi = function (id, handler) {\n\tvar self = this;\n\tif (self.api[id]) {\n\t\treturn self.API.Q.reject(new Error(\"API for id '\" + id + \"' already registered!\"));\n\t}\n\tself.api[id] = handler;\n\treturn self.API.Q.resolve();\n}\n\nLoader.prototype.load = function (id) {\n\tvar self = this;\n\n\t// TODO: Load renderers dynamically.\n\n\treturn self.API.Q.resolve((function () {\n\n\t\tif (id === \"0-boot/0-boot\") {\n\t\t\treturn require(\"./0-boot/0-boot\");\n\t\t} else\n\t\tif (id === \"1-insight/1-insight\") {\n\t\t\treturn require(\"./1-insight/1-insight\");\n\t\t}\n\n\t\tthrow new Error(\"ACTION: Add condition for id '\" + id + \"'!\");\n\n\t})()).then(function (renderer) {\n\t\ttry {\n\t\t\tvar context = {\n\t\t\t\tAPI: self.API,\n\t\t\t\tdomNode: self.domNode,\n\t\t\t\tcssPrefix: \"_fcw_\" + id.split(\"/\")[0].replace(/\\//g, \"_\"),\n\t\t\t\tregisterApi: function (id, handler) {\n\t\t\t\t\treturn self.registerApi(id, handler);\n\t\t\t\t},\n\t\t\t\tcallApi: function (id, args) {\n\t\t\t\t\treturn self.callApi(id, args);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn renderer.init(context).then(function () {\n\t\t\t\treturn context;\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tthrow err;\n\t\t}\n\t});\n}\n\n",
              "globals": {
                "exports": {
                  "type": "reference"
                },
                "require": {
                  "type": "call"
                },
                "Loader": {
                  "type": "assign"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "./1-insight/1-insight.scss": {
                    "where": "inline"
                  },
                  "./0-boot/0-boot.scss": {
                    "where": "inline"
                  },
                  "./0-boot/0-boot": {
                    "where": "inline"
                  },
                  "./1-insight/1-insight": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../renderers';",
              "code": "function(require, exports, module) {var __dirname = '../renderers';\n\n\nexports.bootIntoNode = function (context) {\n\n\tvar loader = new Loader(context);\n\n\treturn loader.load(\"0-boot/0-boot\").then(function (context) {\n\t\treturn loader.callApi(\"css.load\", {\n\t\t\turi: \"0-boot\",\n\t\t\tcssPrefix: context.cssPrefix,\n\t\t\t// TODO: Load this dynamically with the js source code.\n\t\t\tsource: require(\"./0-boot/0-boot.scss\")\n\t\t}).then(function () {\n\n\t\t\treturn loader.load(\"1-insight/1-insight\").then(function (context) {\n\t\t\t\treturn loader.callApi(\"css.load\", {\n\t\t\t\t\turi: \"1-insight\",\n\t\t\t\t\tcssPrefix: context.cssPrefix,\n\t\t\t\t\t// TODO: Load this dynamically with the js source code.\n\t\t\t\t\tsource: require(\"./1-insight/1-insight.scss\")\n\t\t\t\t}).then(function () {\n\n\t\t\t\t\treturn loader;\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n}\n\n\nvar Loader = function(context) {\n\tvar self = this;\n\n\tself.API = context.API;\n\tself.domNode = context.domNode;\n\tself.widgetIndex = context.widgetIndex;\n\n\tself.api = {};\n}\n\nLoader.prototype.callApi = function (id, args) {\n\tvar self = this;\n\tif (!self.api[id]) {\n\t\treturn self.API.Q.reject(new Error(\"API for id '\" + id + \"' not registered!\"));\n\t}\n\ttry {\n\t\treturn self.API.Q.when(self.api[id](args));\n\t} catch (err) {\n\t\treturn self.API.Q.reject(err);\n\t}\n}\n\nLoader.prototype.registerApi = function (id, handler) {\n\tvar self = this;\n\tif (self.api[id]) {\n\t\treturn self.API.Q.reject(new Error(\"API for id '\" + id + \"' already registered!\"));\n\t}\n\tself.api[id] = handler;\n\treturn self.API.Q.resolve();\n}\n\nLoader.prototype.load = function (id) {\n\tvar self = this;\n\n\t// TODO: Load renderers dynamically.\n\n\treturn self.API.Q.resolve((function () {\n\n\t\tif (id === \"0-boot/0-boot\") {\n\t\t\treturn require(\"./0-boot/0-boot\");\n\t\t} else\n\t\tif (id === \"1-insight/1-insight\") {\n\t\t\treturn require(\"./1-insight/1-insight\");\n\t\t}\n\n\t\tthrow new Error(\"ACTION: Add condition for id '\" + id + \"'!\");\n\n\t})()).then(function (renderer) {\n\t\ttry {\n\t\t\tvar context = {\n\t\t\t\tAPI: self.API,\n\t\t\t\tdomNode: self.domNode,\n\t\t\t\tcssPrefix: \"_fcw_\" + id.split(\"/\")[0].replace(/\\//g, \"_\"),\n\t\t\t\tregisterApi: function (id, handler) {\n\t\t\t\t\treturn self.registerApi(id, handler);\n\t\t\t\t},\n\t\t\t\tcallApi: function (id, args) {\n\t\t\t\t\treturn self.callApi(id, args);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn renderer.init(context).then(function () {\n\t\t\t\treturn context;\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tthrow err;\n\t\t}\n\t});\n}\n\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "./1-insight/1-insight.scss": {
                  "where": "inline"
                },
                "./0-boot/0-boot.scss": {
                  "where": "inline"
                },
                "./0-boot/0-boot": {
                  "where": "inline"
                },
                "./1-insight/1-insight": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/1-insight/1-insight.scss": {
            "requireId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/1-insight/1-insight.scss",
            "memoizeId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/1-insight/1-insight.scss",
            "descriptor": {
              "filename": "1-insight.scss",
              "filepath": "../renderers/1-insight/1-insight.scss",
              "mtime": 1420588902,
              "code": "",
              "globals": {},
              "syntax": null,
              "format": "utf8",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {},
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "url-encoded",
              "top": null,
              "code": "''",
              "bottom": null
            },
            "dependencies": {
              "static": {},
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/0-boot/0-boot.scss": {
            "requireId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/0-boot/0-boot.scss",
            "memoizeId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/0-boot/0-boot.scss",
            "descriptor": {
              "filename": "0-boot.scss",
              "filepath": "../renderers/0-boot/0-boot.scss",
              "mtime": 1420321368,
              "code": "DIV.__CSS_PREFIX__-sandbox {\n  box-sizing: border-box;\n  border: 0px;\n  margin: 0px;\n  padding: 0px;\n  width: 100%;\n  height: 100%;\n  position: relative; }\n\nDIV.__CSS_PREFIX__-menu {\n  box-sizing: border-box;\n  border: 0px;\n  padding: 0px;\n  margin: 0px;\n  width: 100%;\n  position: absolute;\n  left: 0px;\n  top: 0px;\n  height: 20px; }\n\nDIV.__CSS_PREFIX__-menu > BUTTON {\n  height: 100%;\n  border: 1px solid black;\n  border-collapse: collapse;\n  padding: 3px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 0px;\n  margin-right: 1px; }\n\nDIV.__CSS_PREFIX__-graph {\n  box-sizing: border-box;\n  border: 0px;\n  margin: 0px;\n  padding: 0px;\n  width: 100%;\n  position: absolute;\n  left: 0px;\n  top: 20px; }\n\nDIV.__CSS_PREFIX__-console {\n  box-sizing: border-box;\n  border: 0px;\n  margin: 0px;\n  padding: 1px;\n  width: 100%;\n  position: absolute;\n  left: 0px;\n  top: 20px;\n  overflow-x: hidden;\n  overflow-y: auto; }\n\nDIV.__CSS_PREFIX__-console-panel {\n  box-sizing: border-box;\n  border: 0px;\n  padding: 2px;\n  width: 100%;\n  overflow: none; }\n\nDIV.__CSS_PREFIX__-console-panel > DIV.message {\n  border: 0px;\n  background-color: #ffffff;\n  font-family: Lucida Grande, Tahoma, sans-serif;\n  font-size: 11px; }\n",
              "globals": {},
              "syntax": null,
              "format": "utf8",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {},
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "url-encoded",
              "top": null,
              "code": "'DIV.__CSS_PREFIX__-sandbox%20%7B%0A%20%20box-sizing%3A%20border-box%3B%0A%20%20border%3A%200px%3B%0A%20%20margin%3A%200px%3B%0A%20%20padding%3A%200px%3B%0A%20%20width%3A%20100%25%3B%0A%20%20height%3A%20100%25%3B%0A%20%20position%3A%20relative%3B%20%7D%0A%0ADIV.__CSS_PREFIX__-menu%20%7B%0A%20%20box-sizing%3A%20border-box%3B%0A%20%20border%3A%200px%3B%0A%20%20padding%3A%200px%3B%0A%20%20margin%3A%200px%3B%0A%20%20width%3A%20100%25%3B%0A%20%20position%3A%20absolute%3B%0A%20%20left%3A%200px%3B%0A%20%20top%3A%200px%3B%0A%20%20height%3A%2020px%3B%20%7D%0A%0ADIV.__CSS_PREFIX__-menu%20%3E%20BUTTON%20%7B%0A%20%20height%3A%20100%25%3B%0A%20%20border%3A%201px%20solid%20black%3B%0A%20%20border-collapse%3A%20collapse%3B%0A%20%20padding%3A%203px%3B%0A%20%20padding-left%3A%205px%3B%0A%20%20padding-right%3A%205px%3B%0A%20%20margin%3A%200px%3B%0A%20%20margin-right%3A%201px%3B%20%7D%0A%0ADIV.__CSS_PREFIX__-graph%20%7B%0A%20%20box-sizing%3A%20border-box%3B%0A%20%20border%3A%200px%3B%0A%20%20margin%3A%200px%3B%0A%20%20padding%3A%200px%3B%0A%20%20width%3A%20100%25%3B%0A%20%20position%3A%20absolute%3B%0A%20%20left%3A%200px%3B%0A%20%20top%3A%2020px%3B%20%7D%0A%0ADIV.__CSS_PREFIX__-console%20%7B%0A%20%20box-sizing%3A%20border-box%3B%0A%20%20border%3A%200px%3B%0A%20%20margin%3A%200px%3B%0A%20%20padding%3A%201px%3B%0A%20%20width%3A%20100%25%3B%0A%20%20position%3A%20absolute%3B%0A%20%20left%3A%200px%3B%0A%20%20top%3A%2020px%3B%0A%20%20overflow-x%3A%20hidden%3B%0A%20%20overflow-y%3A%20auto%3B%20%7D%0A%0ADIV.__CSS_PREFIX__-console-panel%20%7B%0A%20%20box-sizing%3A%20border-box%3B%0A%20%20border%3A%200px%3B%0A%20%20padding%3A%202px%3B%0A%20%20width%3A%20100%25%3B%0A%20%20overflow%3A%20none%3B%20%7D%0A%0ADIV.__CSS_PREFIX__-console-panel%20%3E%20DIV.message%20%7B%0A%20%20border%3A%200px%3B%0A%20%20background-color%3A%20%23ffffff%3B%0A%20%20font-family%3A%20Lucida%20Grande%2C%20Tahoma%2C%20sans-serif%3B%0A%20%20font-size%3A%2011px%3B%20%7D%0A'",
              "bottom": null
            },
            "dependencies": {
              "static": {},
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/0-boot/0-boot.js": {
            "requireId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/0-boot/0-boot",
            "memoizeId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/0-boot/0-boot.js",
            "descriptor": {
              "filename": "0-boot.js",
              "filepath": "../renderers/0-boot/0-boot.js",
              "mtime": 1420179494,
              "code": "\n\nexports.init = function (context) {\n\n\tvar Q = context.API.Q;\n\n\tvar done = Q.resolve();\n\t[\n\t\trequire(\"./css\"),\n\t\trequire(\"./sandbox\")\n\t].forEach(function (renderer) {\n\t\tdone = Q.when(done, function () {\n\t\t\treturn renderer.init(context);\n\t\t});\n\t});\n\treturn done;\n}\n\n",
              "globals": {
                "exports": {
                  "type": "reference"
                },
                "require": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "./css": {
                    "where": "inline"
                  },
                  "./sandbox": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../renderers/0-boot';",
              "code": "function(require, exports, module) {var __dirname = '../renderers/0-boot';\n\n\nexports.init = function (context) {\n\n\tvar Q = context.API.Q;\n\n\tvar done = Q.resolve();\n\t[\n\t\trequire(\"./css\"),\n\t\trequire(\"./sandbox\")\n\t].forEach(function (renderer) {\n\t\tdone = Q.when(done, function () {\n\t\t\treturn renderer.init(context);\n\t\t});\n\t});\n\treturn done;\n}\n\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "./css": {
                  "where": "inline"
                },
                "./sandbox": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/0-boot/css.js": {
            "requireId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/0-boot/css",
            "memoizeId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/0-boot/css.js",
            "descriptor": {
              "filename": "css.js",
              "filepath": "../renderers/0-boot/css.js",
              "mtime": 1421188200,
              "code": "\n\nexports.init = function (context) {\n\n\tvar Q = context.API.Q;\n\tvar $ = context.API.JQUERY;\n\n\treturn context.registerApi(\"css.load\", function (args) {\n\n\t\tvar id = args.uri + '/' + args.cssPrefix;\n\n\t\tvar source = args.source.replace(/__CSS_PREFIX__/g, args.cssPrefix);\n\n\t\tvar existingStylesheetNode = $('HEAD > STYLE[fcwid=\"' + id + '\"]');\n\n\t\tif (existingStylesheetNode.length === 0) {\n//\t\t\texistingStylesheetNode = $('<link fcwid=\"' + id + '\" rel=\"stylesheet\" href=\"/renderers/' + id + '.css\"/>').appendTo(\"HEAD\");\n\t\t\texistingStylesheetNode = $('<style fcwid=\"' + id + '\"></style>').appendTo(\"HEAD\");\n\t\t\texistingStylesheetNode.html(source);\n\t\t} else {\n\t\t\t// TODO: Ensure CSS has not changed. If it has reload it.\n\t\t}\n\n\t});\n}\n\n",
              "globals": {
                "exports": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {},
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../renderers/0-boot';",
              "code": "function(require, exports, module) {var __dirname = '../renderers/0-boot';\n\n\nexports.init = function (context) {\n\n\tvar Q = context.API.Q;\n\tvar $ = context.API.JQUERY;\n\n\treturn context.registerApi(\"css.load\", function (args) {\n\n\t\tvar id = args.uri + '/' + args.cssPrefix;\n\n\t\tvar source = args.source.replace(/__CSS_PREFIX__/g, args.cssPrefix);\n\n\t\tvar existingStylesheetNode = $('HEAD > STYLE[fcwid=\"' + id + '\"]');\n\n\t\tif (existingStylesheetNode.length === 0) {\n//\t\t\texistingStylesheetNode = $('<link fcwid=\"' + id + '\" rel=\"stylesheet\" href=\"/renderers/' + id + '.css\"/>').appendTo(\"HEAD\");\n\t\t\texistingStylesheetNode = $('<style fcwid=\"' + id + '\"></style>').appendTo(\"HEAD\");\n\t\t\texistingStylesheetNode.html(source);\n\t\t} else {\n\t\t\t// TODO: Ensure CSS has not changed. If it has reload it.\n\t\t}\n\n\t});\n}\n\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {},
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/0-boot/sandbox.js": {
            "requireId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/0-boot/sandbox",
            "memoizeId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/0-boot/sandbox.js",
            "descriptor": {
              "filename": "sandbox.js",
              "filepath": "../renderers/0-boot/sandbox.js",
              "mtime": 1420421163,
              "code": "\n\nexports.init = function (context) {\n\n\tvar Q = context.API.Q;\n\tvar $ = context.API.JQUERY;\n\n\tvar sandboxNode = $('<div class=\"' + context.cssPrefix + '-sandbox\"></div>').appendTo(context.domNode);\n\n\n\tvar ctx = {};\n\tfor (var name in context) {\n\t\tctx[name] = context[name];\n\t}\n\tctx.domNode = sandboxNode;\n\n\n\tvar currentView = false;\n\tfunction showView (name) {\n\t\tif (currentView) {\n\t\t\t$('DIV.' + context.cssPrefix + '-sandbox > DIV.' + context.cssPrefix + '-' + currentView, ctx.domNode.parent()).hide();\n\t\t}\n\t\tcurrentView = name;\n\t\t$('DIV.' + context.cssPrefix + '-sandbox > DIV.' + context.cssPrefix + '-' + name, ctx.domNode.parent()).show();\n\t\treturn Q.resolve();\n\t}\n\tfunction addView (name, renderer) {\n\t\treturn renderer.init(ctx).then(function () {\n\t\t\t$('DIV.' + context.cssPrefix + '-sandbox > DIV.' + context.cssPrefix + '-' + name, ctx.domNode.parent()).hide();\n\t\t\treturn context.callApi(\"menu.add.button\", {\n\t\t\t\tlid: \"view-\" + name,\n\t\t\t\tlabel: \"View: \" + name,\n\t\t\t\tcommand: function () {\n\t\t\t\t\treturn showView(name);\n\t\t\t\t}\n\t\t\t});\n\t\t}).then(function () {\n\t\t\treturn showView(\"console\");\n\t\t});\n\t}\n\n\n\n\tvar done = Q.resolve();\n\t[\n\t\trequire(\"./menu\")\n\t].forEach(function (renderer) {\n\t\tdone = Q.when(done, function () {\n\t\t\treturn renderer.init(ctx);\n\t\t});\n\t});\n\treturn Q.when(done, function () {\n\n\t\treturn addView(\"graph\", require(\"./graph\")).then(function () {\n\n\t\t\treturn addView(\"console\", require(\"./console\"));\n\n\t\t}).then(function () {\n\n\t\t\treturn context.registerApi(\"view.show\", function (args) {\n\t\t\t\treturn showView(args.name);\n\t\t\t});\n\n\t\t}).then(function () {\n\n\t\t\treturn showView(\"console\");\n\t\t});\n\t});\n}\n\n",
              "globals": {
                "exports": {
                  "type": "reference"
                },
                "require": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "./menu": {
                    "where": "inline"
                  },
                  "./console": {
                    "where": "inline"
                  },
                  "./graph": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../renderers/0-boot';",
              "code": "function(require, exports, module) {var __dirname = '../renderers/0-boot';\n\n\nexports.init = function (context) {\n\n\tvar Q = context.API.Q;\n\tvar $ = context.API.JQUERY;\n\n\tvar sandboxNode = $('<div class=\"' + context.cssPrefix + '-sandbox\"></div>').appendTo(context.domNode);\n\n\n\tvar ctx = {};\n\tfor (var name in context) {\n\t\tctx[name] = context[name];\n\t}\n\tctx.domNode = sandboxNode;\n\n\n\tvar currentView = false;\n\tfunction showView (name) {\n\t\tif (currentView) {\n\t\t\t$('DIV.' + context.cssPrefix + '-sandbox > DIV.' + context.cssPrefix + '-' + currentView, ctx.domNode.parent()).hide();\n\t\t}\n\t\tcurrentView = name;\n\t\t$('DIV.' + context.cssPrefix + '-sandbox > DIV.' + context.cssPrefix + '-' + name, ctx.domNode.parent()).show();\n\t\treturn Q.resolve();\n\t}\n\tfunction addView (name, renderer) {\n\t\treturn renderer.init(ctx).then(function () {\n\t\t\t$('DIV.' + context.cssPrefix + '-sandbox > DIV.' + context.cssPrefix + '-' + name, ctx.domNode.parent()).hide();\n\t\t\treturn context.callApi(\"menu.add.button\", {\n\t\t\t\tlid: \"view-\" + name,\n\t\t\t\tlabel: \"View: \" + name,\n\t\t\t\tcommand: function () {\n\t\t\t\t\treturn showView(name);\n\t\t\t\t}\n\t\t\t});\n\t\t}).then(function () {\n\t\t\treturn showView(\"console\");\n\t\t});\n\t}\n\n\n\n\tvar done = Q.resolve();\n\t[\n\t\trequire(\"./menu\")\n\t].forEach(function (renderer) {\n\t\tdone = Q.when(done, function () {\n\t\t\treturn renderer.init(ctx);\n\t\t});\n\t});\n\treturn Q.when(done, function () {\n\n\t\treturn addView(\"graph\", require(\"./graph\")).then(function () {\n\n\t\t\treturn addView(\"console\", require(\"./console\"));\n\n\t\t}).then(function () {\n\n\t\t\treturn context.registerApi(\"view.show\", function (args) {\n\t\t\t\treturn showView(args.name);\n\t\t\t});\n\n\t\t}).then(function () {\n\n\t\t\treturn showView(\"console\");\n\t\t});\n\t});\n}\n\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "./menu": {
                  "where": "inline"
                },
                "./console": {
                  "where": "inline"
                },
                "./graph": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/0-boot/menu.js": {
            "requireId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/0-boot/menu",
            "memoizeId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/0-boot/menu.js",
            "descriptor": {
              "filename": "menu.js",
              "filepath": "../renderers/0-boot/menu.js",
              "mtime": 1420421156,
              "code": "\n\nexports.init = function (context) {\n\n\tvar Q = context.API.Q;\n\tvar $ = context.API.JQUERY;\n\n\tvar menuNode = $('<div class=\"' + context.cssPrefix + '-menu\"></div>').appendTo(context.domNode);\n\n\treturn context.registerApi(\"menu.add.button\", function (args) {\n\n\t\tvar buttonNode = $('<button button=\"' + args.lid + '\">' + args.label + '</button>').appendTo(menuNode);\n\t\tbuttonNode.click(function () {\n\t\t\targs.command();\n\t\t});\n\n\t\treturn Q.resolve();\n\n\t}).then(function () {\n\n\t\treturn context.registerApi(\"menu.close\", function (args) {\n\t\t\tmenuNode.hide();\n\t\t\treturn Q.resolve();\n\t\t}).then(function () {\n\t\t\treturn context.registerApi(\"menu.show\", function (args) {\n\t\t\t\tmenuNode.show();\n\t\t\t\treturn Q.resolve();\n\t\t\t});\n\t\t});\n\n\t}).then(function () {\n\n\t\treturn context.callApi(\"menu.add.button\", {\n\t\t\tlid: \"close-menu\",\n\t\t\tlabel: \"Close Menu\",\n\t\t\tcommand: function () {\n\t\t\t\tcontext.callApi(\"menu.close\");\n\t\t\t}\n\t\t});\n\t}).then(function () {\n\n\t\t// Triple-click to open menu.\n\t\tvar timer,          // timer required to reset\n\t\t    timeout = 200;  // timer reset in ms\n\t\tcontext.domNode.on(\"dblclick\", function (evt) {\n\t\t    timer = setTimeout(function () {\n\t\t        timer = null;\n\t\t    }, timeout);\n\t\t});\n\t\tcontext.domNode.on(\"click\", function (evt) {\n\t\t    if (timer) {\n\t\t        clearTimeout(timer);\n\t\t        timer = null;\n\n\t\t        context.callApi(\"menu.show\");\n\t\t    }\n\t\t});\n\t});\n}\n\n",
              "globals": {
                "exports": {
                  "type": "reference"
                },
                "setTimeout": {
                  "type": "call"
                },
                "clearTimeout": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {},
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../renderers/0-boot';",
              "code": "function(require, exports, module) {var __dirname = '../renderers/0-boot';\n\n\nexports.init = function (context) {\n\n\tvar Q = context.API.Q;\n\tvar $ = context.API.JQUERY;\n\n\tvar menuNode = $('<div class=\"' + context.cssPrefix + '-menu\"></div>').appendTo(context.domNode);\n\n\treturn context.registerApi(\"menu.add.button\", function (args) {\n\n\t\tvar buttonNode = $('<button button=\"' + args.lid + '\">' + args.label + '</button>').appendTo(menuNode);\n\t\tbuttonNode.click(function () {\n\t\t\targs.command();\n\t\t});\n\n\t\treturn Q.resolve();\n\n\t}).then(function () {\n\n\t\treturn context.registerApi(\"menu.close\", function (args) {\n\t\t\tmenuNode.hide();\n\t\t\treturn Q.resolve();\n\t\t}).then(function () {\n\t\t\treturn context.registerApi(\"menu.show\", function (args) {\n\t\t\t\tmenuNode.show();\n\t\t\t\treturn Q.resolve();\n\t\t\t});\n\t\t});\n\n\t}).then(function () {\n\n\t\treturn context.callApi(\"menu.add.button\", {\n\t\t\tlid: \"close-menu\",\n\t\t\tlabel: \"Close Menu\",\n\t\t\tcommand: function () {\n\t\t\t\tcontext.callApi(\"menu.close\");\n\t\t\t}\n\t\t});\n\t}).then(function () {\n\n\t\t// Triple-click to open menu.\n\t\tvar timer,          // timer required to reset\n\t\t    timeout = 200;  // timer reset in ms\n\t\tcontext.domNode.on(\"dblclick\", function (evt) {\n\t\t    timer = setTimeout(function () {\n\t\t        timer = null;\n\t\t    }, timeout);\n\t\t});\n\t\tcontext.domNode.on(\"click\", function (evt) {\n\t\t    if (timer) {\n\t\t        clearTimeout(timer);\n\t\t        timer = null;\n\n\t\t        context.callApi(\"menu.show\");\n\t\t    }\n\t\t});\n\t});\n}\n\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {},
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/0-boot/console.js": {
            "requireId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/0-boot/console",
            "memoizeId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/0-boot/console.js",
            "descriptor": {
              "filename": "console.js",
              "filepath": "../renderers/0-boot/console.js",
              "mtime": 1420421121,
              "code": "\nvar RENDERER = require(\"../renderer\");\n\n\nexports.init = function (context) {\n\n\tvar Q = context.API.Q;\n\tvar $ = context.API.JQUERY;\n\n\tvar menuNode = $('.' + context.cssPrefix + '-menu', context.domNode);\n\n\tvar viewportNode = $('<div class=\"' + context.cssPrefix + '-console\"></div>').appendTo(context.domNode);\n\tvar panelNode = $('<div class=\"' + context.cssPrefix + '-console-panel\"></div>').appendTo(viewportNode);\n\n\n\tfunction redraw() {\n\n\t\t// TODO: Ignore multiple render calls within x time.\n\t\t// TODO: Wait a short while before issuing render.\n\t\t// TODO: Cascade render event (for resize) down the tree.\n\n\t\tvar height = context.domNode.parent().height();\n\n\t\tif (menuNode.is(\":visible\")) {\n\t\t\tviewportNode.css(\"top\", menuNode.css(\"height\"));\n\t\t\theight = height - menuNode.height() - 4;\n\t\t} else {\n\t\t\tviewportNode.css(\"top\", \"0px\");\n\t\t}\n\n\t\tviewportNode.height(height);\n\n\t\treturn Q.resolve();\n\t}\n\n\n\tfunction logMessageToPanelNode (message) {\n\t\ttry {\n\n\t\t\tRENDERER.appendMessageToNode(panelNode[0], message, {\n\t\t\t\tsupervisor: {\n// TODO: implement\n\t\t\t\t},\n\t\t        view: [\"summary\"],\n\t\t        wrapper: {\n\t\t\t\t    id: \"github.com/insight/insight.renderers.default/\",\n\t\t\t\t    module: \"insight/wrappers/console\"\n\t\t\t\t},\n\t\t        on: {\n\t\t            inspectMessage: function(message) {\n\t\t            \tconsole.log(\"inspectMessage\", message);\n\t\t            },\n\t\t            inspectNode: function(message, args) {\n\t\t            \tconsole.log(\"inspectNode\", message, args);\n\t\t            },\n\t\t            inspectFile: function(message, args) {\n\t\t            \tconsole.log(\"inspectFile\", message, args);\n\t\t            }\n\t\t        },\n\t\t        callback: function(domNode) {\n\nconsole.log(\"render done\", domNode);\n/*\n\t\t        \t// TODO: Relocate all this into domNode.templateObject.postRender();\n\t\t\t\t\tif(typeof message.meta[\"group.start\"] != \"undefined\") {\n\t\t\t\t\t    // get reference to body of last added console row\n\t\t\t\t\t    var node = DOMPLATE_UTIL.getElementByClass(domNode, \"body\");\n\n\t\t\t\t\t    // insert further messages into group\n\t\t\t\t\t    supervisor.groupStack.push(node);\n\t\t\t\t\t    // expand group if requested\n\t\t\t\t\t    if(typeof message.meta[\"group.expand\"] && message.meta[\"group.expand\"]==message.meta[\"group\"] && node.parentNode) {\n\t\t\t\t\t        node.parentNode.setAttribute(\"expanded\", \"true\");\n\t\t\t\t\t    }\n\t\t\t\t\t}\n\t\t\t\t\tif(typeof message.meta[\"group.end\"] != \"undefined\") {\n\t\t\t\t\t    var count = message.meta[\"group.end\"];\n\t\t\t\t\t    if(count===true) {\n\t\t\t\t\t        count = 1;\n\t\t\t\t\t    }\n\t\t\t\t\t    for( var i=0 ; i<count ; i++ ) {\n\t\t\t\t\t        var groupStartNode = supervisor.groupStack.pop();\n\t\t\t\t\t\t\tif(groupStartNode.parentNode.templateObject) {\n\t\t\t\t\t\t\t\tgroupStartNode.parentNode.templateObject.setCount(groupStartNode.parentNode, groupStartNode.children.length);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t    }\n\t\t\t\t\t}\n\t\t\t\t\tif(typeof message.meta[\"expand\"] != \"undefined\" && message.meta[\"expand\"]) {\n\t\t\t\t\t    var node = DOMPLATE_UTIL.getElementByClass(domNode, \"body\");\n\t\t\t\t\t    if(node.parentNode && node.parentNode.templateObject) {\n\t\t\t\t\t        node.parentNode.templateObject.expandForMasterRow(node.parentNode, node);\n\t\t\t\t\t    }\n\t\t\t\t\t    else\n\t\t\t\t\t    \tconsole.error(\"NYI - expand for message - in \" + module.id);\n\t\t\t\t\t}\n\t\t\t\t\tif(typeof message.meta[\"actions\"] != \"undefined\" && message.meta[\"actions\"] == false) {\n\t\t\t\t\t    var node = DOMPLATE_UTIL.getElementByClass(domNode, \"actions\");\n\t\t\t\t\t    if (node)\n\t\t\t\t\t    \tnode.style.display = \"none\";\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\n\t\t                    domNode.children[0] &&\n\t\t                    domNode.children[0].templateObject &&\n\t\t                    domNode.children[0].templateObject.postRender\n\t\t                ) {\n\t\t\t\t\t\t\tdomNode.children[0].templateObject.postRender(domNode.children[0]);\n\t\t                }\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\tconsole.warn(\"Error during template postRender\", e, e.stack);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (supervisor._appendMessageToNode__queue.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tdoSynchronizedappendMessageToNode.apply(null, [supervisor].concat(supervisor._appendMessageToNode__queue.shift()));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tsupervisor._appendMessageToNode__queue = false;\n*/\n\t\t        }\n\t\t    });\n\n\n\t\t} catch (err) {\n\t\t\tconsole.error(\"Error rendering message to panel node: \" + err, err.stack);\n\t\t}\n\t}\n\n\treturn context.registerApi(\"console.clear\", function (args) {\n\n\t\tpanelNode.html(\"\");\n\n\t\treturn Q.resolve();\n\t}).then(function () {\n\t\treturn context.registerApi(\"console.log\", function (args) {\n\n//\t\t\t$('<div>' + JSON.stringify(args.args) + '</div>').appendTo(panelNode);\n\n\t\t\tlogMessageToPanelNode({\n\t\t\t\tmeta: {},\n\t\t\t\tog: args.args\n\t\t\t});\n\n\t\t\treturn Q.resolve();\n\t\t});\n\t}).then(function () {\n\t\treturn context.callApi(\"menu.add.button\", {\n\t\t\tlid: \"clear\",\n\t\t\tlabel: \"Clear\",\n\t\t\tcommand: function () {\n\t\t\t\treturn context.callApi(\"console.clear\");\n\t\t\t}\n\t\t});\n\t}).then(function () {\n\n\t\t$(window).resize(function() {\n\t\t\treturn redraw();\n\t\t});\n\t\t$(window).ready(function () {\n\t\t\treturn setTimeout(function () {\n\t\t\t\treturn redraw();\n\t\t\t}, 100);\n\t\t});\n\n\t\tviewportNode.on(\"show\", function () {\n\t\t\treturn setTimeout(function () {\n\t\t\t\treturn redraw();\n\t\t\t}, 100);\n\t\t});\n\t\tmenuNode.on(\"show\", function () {\n\t\t\treturn setTimeout(function () {\n\t\t\t\treturn redraw();\n\t\t\t}, 100);\n\t\t});\n\t\tmenuNode.on(\"hide\", function () {\n\t\t\treturn setTimeout(function () {\n\t\t\t\treturn redraw();\n\t\t\t}, 100);\n\t\t});\n\t});\n\n}\n\n\n",
              "globals": {
                "RENDERER": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "exports": {
                  "type": "reference"
                },
                "console": {
                  "type": "reference"
                },
                "window": {
                  "type": "reference"
                },
                "setTimeout": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "../renderer": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../renderers/0-boot';",
              "code": "function(require, exports, module) {var __dirname = '../renderers/0-boot';\n\nvar RENDERER = require(\"../renderer\");\n\n\nexports.init = function (context) {\n\n\tvar Q = context.API.Q;\n\tvar $ = context.API.JQUERY;\n\n\tvar menuNode = $('.' + context.cssPrefix + '-menu', context.domNode);\n\n\tvar viewportNode = $('<div class=\"' + context.cssPrefix + '-console\"></div>').appendTo(context.domNode);\n\tvar panelNode = $('<div class=\"' + context.cssPrefix + '-console-panel\"></div>').appendTo(viewportNode);\n\n\n\tfunction redraw() {\n\n\t\t// TODO: Ignore multiple render calls within x time.\n\t\t// TODO: Wait a short while before issuing render.\n\t\t// TODO: Cascade render event (for resize) down the tree.\n\n\t\tvar height = context.domNode.parent().height();\n\n\t\tif (menuNode.is(\":visible\")) {\n\t\t\tviewportNode.css(\"top\", menuNode.css(\"height\"));\n\t\t\theight = height - menuNode.height() - 4;\n\t\t} else {\n\t\t\tviewportNode.css(\"top\", \"0px\");\n\t\t}\n\n\t\tviewportNode.height(height);\n\n\t\treturn Q.resolve();\n\t}\n\n\n\tfunction logMessageToPanelNode (message) {\n\t\ttry {\n\n\t\t\tRENDERER.appendMessageToNode(panelNode[0], message, {\n\t\t\t\tsupervisor: {\n// TODO: implement\n\t\t\t\t},\n\t\t        view: [\"summary\"],\n\t\t        wrapper: {\n\t\t\t\t    id: \"github.com/insight/insight.renderers.default/\",\n\t\t\t\t    module: \"insight/wrappers/console\"\n\t\t\t\t},\n\t\t        on: {\n\t\t            inspectMessage: function(message) {\n\t\t            \tconsole.log(\"inspectMessage\", message);\n\t\t            },\n\t\t            inspectNode: function(message, args) {\n\t\t            \tconsole.log(\"inspectNode\", message, args);\n\t\t            },\n\t\t            inspectFile: function(message, args) {\n\t\t            \tconsole.log(\"inspectFile\", message, args);\n\t\t            }\n\t\t        },\n\t\t        callback: function(domNode) {\n\nconsole.log(\"render done\", domNode);\n/*\n\t\t        \t// TODO: Relocate all this into domNode.templateObject.postRender();\n\t\t\t\t\tif(typeof message.meta[\"group.start\"] != \"undefined\") {\n\t\t\t\t\t    // get reference to body of last added console row\n\t\t\t\t\t    var node = DOMPLATE_UTIL.getElementByClass(domNode, \"body\");\n\n\t\t\t\t\t    // insert further messages into group\n\t\t\t\t\t    supervisor.groupStack.push(node);\n\t\t\t\t\t    // expand group if requested\n\t\t\t\t\t    if(typeof message.meta[\"group.expand\"] && message.meta[\"group.expand\"]==message.meta[\"group\"] && node.parentNode) {\n\t\t\t\t\t        node.parentNode.setAttribute(\"expanded\", \"true\");\n\t\t\t\t\t    }\n\t\t\t\t\t}\n\t\t\t\t\tif(typeof message.meta[\"group.end\"] != \"undefined\") {\n\t\t\t\t\t    var count = message.meta[\"group.end\"];\n\t\t\t\t\t    if(count===true) {\n\t\t\t\t\t        count = 1;\n\t\t\t\t\t    }\n\t\t\t\t\t    for( var i=0 ; i<count ; i++ ) {\n\t\t\t\t\t        var groupStartNode = supervisor.groupStack.pop();\n\t\t\t\t\t\t\tif(groupStartNode.parentNode.templateObject) {\n\t\t\t\t\t\t\t\tgroupStartNode.parentNode.templateObject.setCount(groupStartNode.parentNode, groupStartNode.children.length);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t    }\n\t\t\t\t\t}\n\t\t\t\t\tif(typeof message.meta[\"expand\"] != \"undefined\" && message.meta[\"expand\"]) {\n\t\t\t\t\t    var node = DOMPLATE_UTIL.getElementByClass(domNode, \"body\");\n\t\t\t\t\t    if(node.parentNode && node.parentNode.templateObject) {\n\t\t\t\t\t        node.parentNode.templateObject.expandForMasterRow(node.parentNode, node);\n\t\t\t\t\t    }\n\t\t\t\t\t    else\n\t\t\t\t\t    \tconsole.error(\"NYI - expand for message - in \" + module.id);\n\t\t\t\t\t}\n\t\t\t\t\tif(typeof message.meta[\"actions\"] != \"undefined\" && message.meta[\"actions\"] == false) {\n\t\t\t\t\t    var node = DOMPLATE_UTIL.getElementByClass(domNode, \"actions\");\n\t\t\t\t\t    if (node)\n\t\t\t\t\t    \tnode.style.display = \"none\";\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\n\t\t                    domNode.children[0] &&\n\t\t                    domNode.children[0].templateObject &&\n\t\t                    domNode.children[0].templateObject.postRender\n\t\t                ) {\n\t\t\t\t\t\t\tdomNode.children[0].templateObject.postRender(domNode.children[0]);\n\t\t                }\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\tconsole.warn(\"Error during template postRender\", e, e.stack);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (supervisor._appendMessageToNode__queue.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tdoSynchronizedappendMessageToNode.apply(null, [supervisor].concat(supervisor._appendMessageToNode__queue.shift()));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tsupervisor._appendMessageToNode__queue = false;\n*/\n\t\t        }\n\t\t    });\n\n\n\t\t} catch (err) {\n\t\t\tconsole.error(\"Error rendering message to panel node: \" + err, err.stack);\n\t\t}\n\t}\n\n\treturn context.registerApi(\"console.clear\", function (args) {\n\n\t\tpanelNode.html(\"\");\n\n\t\treturn Q.resolve();\n\t}).then(function () {\n\t\treturn context.registerApi(\"console.log\", function (args) {\n\n//\t\t\t$('<div>' + JSON.stringify(args.args) + '</div>').appendTo(panelNode);\n\n\t\t\tlogMessageToPanelNode({\n\t\t\t\tmeta: {},\n\t\t\t\tog: args.args\n\t\t\t});\n\n\t\t\treturn Q.resolve();\n\t\t});\n\t}).then(function () {\n\t\treturn context.callApi(\"menu.add.button\", {\n\t\t\tlid: \"clear\",\n\t\t\tlabel: \"Clear\",\n\t\t\tcommand: function () {\n\t\t\t\treturn context.callApi(\"console.clear\");\n\t\t\t}\n\t\t});\n\t}).then(function () {\n\n\t\t$(window).resize(function() {\n\t\t\treturn redraw();\n\t\t});\n\t\t$(window).ready(function () {\n\t\t\treturn setTimeout(function () {\n\t\t\t\treturn redraw();\n\t\t\t}, 100);\n\t\t});\n\n\t\tviewportNode.on(\"show\", function () {\n\t\t\treturn setTimeout(function () {\n\t\t\t\treturn redraw();\n\t\t\t}, 100);\n\t\t});\n\t\tmenuNode.on(\"show\", function () {\n\t\t\treturn setTimeout(function () {\n\t\t\t\treturn redraw();\n\t\t\t}, 100);\n\t\t});\n\t\tmenuNode.on(\"hide\", function () {\n\t\t\treturn setTimeout(function () {\n\t\t\t\treturn redraw();\n\t\t\t}, 100);\n\t\t});\n\t});\n\n}\n\n\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "../renderer": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/renderer.js": {
            "requireId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/renderer",
            "memoizeId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/renderer.js",
            "descriptor": {
              "filename": "renderer.js",
              "filepath": "../renderers/renderer.js",
              "mtime": 1420350915,
              "code": "\nvar UTIL = require(\"modules/util\"),\n    JSON = require(\"modules/json\"),\n    DOM = require(\"./util/dom\"),\n    ENCODER = require(\"insight/encoder/default\"),\n    DECODER = require(\"insight/decoder/default\"),\n    DOMPLATE_UTIL = exports.DOMPLATE_UTIL = require(\"domplate/util\"),\n    Q = require(\"modules/q\"),\n    RESOURCE = require(\"modules/resource\");\n\n\nvar INSIGHT_RENDERERS_DEFAULT = require(\"insight.renderers.default\");\n\n\nvar RELOADING = false;\n\nvar LOADER = null;\nexports.setLoader = function(inst) { LOADER = inst; }\n\nvar templatePacks = {\n\tlist: [],\n\tbyid: {}\n};\n\nvar modules = {};\n\nvar renderWrappers = {};\n\n\n// TODO: Keep this on a supervisor level in the future\nvar injectedCss = {};\n\n\n\nvar Supervisor = exports.Supervisor = function() {\n\tthis.groupStack = [];\n\tthis.messageWrapper = null;\n\tthis._appendMessageToNode__queue = false;\n\tthis.on = {};\n};\nSupervisor.prototype.ensureCssForDocument = function(document)\n{\n\tfor (var id in injectedCss)\n\t\tDOM.importCssString(injectedCss[id], document, \"devcomp-insight-css-\" + id);\n}\nSupervisor.prototype.resetGroupStack = function()\n{\n\tthis.groupStack = [];\n}\nSupervisor.prototype.setMessageWrapper = function(wrapper)\n{\n    this.messageWrapper = wrapper;\n}\nSupervisor.prototype.appendMessageToNode = function(domNode, message)\n{\n\tif (this._appendMessageToNode__queue === false)\n\t{\n\t\tthis._appendMessageToNode__queue = [];\n\t\tdoSynchronizedappendMessageToNode(this, domNode, message);\n\t}\n\telse\n\tif (this._appendMessageToNode__queue !== false)\n\t\tthis._appendMessageToNode__queue.push([domNode, message]);\n}\n\nfunction doSynchronizedappendMessageToNode(supervisor, domNode, message)\n{\n\tif(supervisor.groupStack.length>0) {\n\t\tdomNode = supervisor.groupStack[supervisor.groupStack.length-1];\n\t    if(!domNode) {\n\t        throw new Error(\"domNode is null!\");\n\t    }\n\t}\n\n\texports.appendMessageToNode(domNode, message, {\n\t\tsupervisor: supervisor,\n        view: [\"summary\"],\n        wrapper: supervisor.messageWrapper,\n        on: {\n            inspectMessage: function(message)\n            {\n            \tif (typeof supervisor.on.inspectMessage !== \"undefined\")\n            \t\tsupervisor.on.inspectMessage(message);\n            },\n            inspectNode: function(message, args)\n            {\n            \tif (typeof supervisor.on.inspectNode !== \"undefined\")\n            \t\tsupervisor.on.inspectNode(message, args);\n            },\n            inspectFile: function(message, args)\n            {\n            \tif (typeof supervisor.on.inspectFile !== \"undefined\")\n            \t\tsupervisor.on.inspectFile(message, args);\n            }\n        },\n        callback: function(domNode)\n        {\n        \t// TODO: Relocate all this into domNode.templateObject.postRender();\n\t\t\tif(typeof message.meta[\"group.start\"] != \"undefined\") {\n\t\t\t    // get reference to body of last added console row\n\t\t\t    var node = DOMPLATE_UTIL.getElementByClass(domNode, \"body\");\n\n\t\t\t    // insert further messages into group\n\t\t\t    supervisor.groupStack.push(node);\n\t\t\t    // expand group if requested\n\t\t\t    if(typeof message.meta[\"group.expand\"] && message.meta[\"group.expand\"]==message.meta[\"group\"] && node.parentNode) {\n\t\t\t        node.parentNode.setAttribute(\"expanded\", \"true\");\n\t\t\t    }\n\t\t\t}\n\t\t\tif(typeof message.meta[\"group.end\"] != \"undefined\") {\n\t\t\t    var count = message.meta[\"group.end\"];\n\t\t\t    if(count===true) {\n\t\t\t        count = 1;\n\t\t\t    }\n\t\t\t    for( var i=0 ; i<count ; i++ ) {\n\t\t\t        var groupStartNode = supervisor.groupStack.pop();\n\t\t\t\t\tif(groupStartNode.parentNode.templateObject) {\n\t\t\t\t\t\tgroupStartNode.parentNode.templateObject.setCount(groupStartNode.parentNode, groupStartNode.children.length);\n\t\t\t\t\t}\n\t\t\t    }\n\t\t\t}\n\t\t\tif(typeof message.meta[\"expand\"] != \"undefined\" && message.meta[\"expand\"]) {\n\t\t\t    var node = DOMPLATE_UTIL.getElementByClass(domNode, \"body\");\n\t\t\t    if(node.parentNode && node.parentNode.templateObject) {\n\t\t\t        node.parentNode.templateObject.expandForMasterRow(node.parentNode, node);\n\t\t\t    }\n\t\t\t    else\n\t\t\t    \tconsole.error(\"NYI - expand for message - in \" + module.id);\n\t\t\t}\n\t\t\tif(typeof message.meta[\"actions\"] != \"undefined\" && message.meta[\"actions\"] == false) {\n\t\t\t    var node = DOMPLATE_UTIL.getElementByClass(domNode, \"actions\");\n\t\t\t    if (node)\n\t\t\t    \tnode.style.display = \"none\";\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\n                    domNode.children[0] &&\n                    domNode.children[0].templateObject &&\n                    domNode.children[0].templateObject.postRender\n                ) {\n\t\t\t\t\tdomNode.children[0].templateObject.postRender(domNode.children[0]);\n                }\n\t\t\t} catch(e) {\n\t\t\t\tconsole.warn(\"Error during template postRender\", e, e.stack);\n\t\t\t}\n\n\t\t\tif (supervisor._appendMessageToNode__queue.length > 0)\n\t\t\t{\n\t\t\t\tdoSynchronizedappendMessageToNode.apply(null, [supervisor].concat(supervisor._appendMessageToNode__queue.shift()));\n\t\t\t}\n\t\t\telse\n\t\t\t\tsupervisor._appendMessageToNode__queue = false;\n        }\n    });\n}\n\n\nfunction ensureTemplatePacks()\n{\n    var PACK;\n\n    PACK = require(\"insight.renderers.default/php/pack\");\n    if (!templatePacks.byid[\"php\"])\n    {\n    \ttemplatePacks.byid[\"php\"] = PACK;\n        templatePacks.list.push(PACK);\n    }\n\n    PACK = require(\"insight.renderers.default/insight/pack\");\n    if (!templatePacks.byid[\"insight\"])\n    {\n    \ttemplatePacks.byid[\"insight\"] = PACK;\n        templatePacks.list.push(PACK);\n    }\n}\n\nvar commonHelpers = {\n\thelpers: null,\n    // NOTE: This should only be called once or with an ID to replace existing\n    importCssString: function(id, css, document)\n    {\n    \tinjectedCss[id] = css;\n        DOM.importCssString(css, document, \"devcomp-insight-css-\" + id);\n    },\n    util: UTIL.copy(DOMPLATE_UTIL),\n    getTemplateForId: function(id)\n    {\nconsole.error(\"NYI - commonHelpers.getTemplateForid (in \" + module.id + \")\");    \t\n        throw new Error(\"NYI - commonHelpers.getTemplateForid (in \" + module.id + \")\");\n    },\n    getTemplateModuleForNode: function(node)\n    {\n//console.log(\"getTemplateModuleForNode\", node);        \n    \ttry {\n\t        ensureTemplatePacks();\n\t        var found;\n\n\t        var og = node.getObjectGraph(),\n\t        \togNode = og.origin,\n\t        \tmeta = og.meta;\n\n\t        // Match message-based renderers\n\t        if (node === ogNode && meta && meta.renderer)\n\t        {\n        \t\tif (!node.meta) node.meta = {};\n\t        \tvar pack = false;\n\t        \tvar id = \"http://registry.pinf.org/cadorn.org/renderers/packages/insight/0\";\n\t        \tif (meta.renderer.substring(0, id.length+1) === id + \":\")\n\t        \t{\n\t        \t\tif (node === node.getObjectGraph().getOrigin())\n\t        \t\t\tnode.meta.renderer = meta.renderer.substring(id.length+1);\n\t        \t\tpack = \"insight\";\n\t        \t}\n\t        \tif (pack)\n\t        \t\tfound = templatePacks.byid[pack].getTemplateForNode(node);\n\t        \telse\n\t        \t\tconsole.warn(\"Unknown renderer: \" + meta.renderer);\n\t        }\n\n\t        // Match message-based language primitives\n\t        if (!found && meta && meta[\"lang.id\"])\n\t        {\n\t        \tif (meta[\"lang.id\"] == \"registry.pinf.org/cadorn.org/github/renderers/packages/php/master\")\n\t        \t{\n\t        \t\tfound = templatePacks.byid[\"php\"].getTemplateForNode(node);\n\t        \t\tif (!found)\n\t        \t\t{\n\t        \t\t\t// lookup in default language pack\n\t            \t\tfound = templatePacks.byid[\"insight\"].getTemplateForNode(node);\n\t        \t\t}\n\t        \t}\n\t        \telse\n\t        \t\tthrow new Error(\"Unknown language ID: \" + meta[\"lang.id\"]);\n\t        }\n\t        else\n\t    \tif (!found)\n\t        {\n\t\t        for (var i=templatePacks.list.length-1 ; i>=0 ; i--)\n\t\t        {\n\t\t            if (typeof templatePacks.list[i].getTemplateForNode == \"function\" &&\n\t\t                (found = templatePacks.list[i].getTemplateForNode(node)))\n\t\t                break;\n\t\t        }\n\t        }\n\t        if (!found)\n\t        {\n\t            console.error(\"ERROR: Template for node '\" + node.type + \"' not found! (in \" + module.id + \")\", node);\n\t            return false;\n\t        }\n\t        return found;\n    \t} catch (err) {\n    \t\tconsole.error(\"Error getting template for node\", err.stack, node);\n    \t}\n    },\n    getTemplateForNode: function(node)\n    {\n        var template = commonHelpers.getTemplateModuleForNode(node);\n        if(!template)\n            return false;\n        try {\n        \treturn template.getTemplate(this.helpers);\n        } catch(e) {\n        \tconsole.warn(\"Error getting template\", e);\n        }\n    },\n    getResourceBaseUrl: function(module)\n    {\n\n//console.log(\"module.id\", module.id);\n//console.log(\"MATCH\",  module.id.replace(/^lib\\/insight\\//, \"resources\"));\n\n        return require.sandbox.id + \"/\" + module.id.split(\"/\")[0] + \"/resources/\";\n/*\n    \tvar bravojs = getBravoJS();\n    \tif (/^memory:\\/\\//.test(bravojs.url))\n    \t{\n    \t\tvar pathId = module._id.split(\"@/\")[0];\t\t// TODO: Don't use _id here\n    \t\t\n    \t\tvar m = pathId.match(/devcomp\\/data\\/packages\\.jar!\\/(.*)$/),\n    \t\t\turl;\n    \t\tif (m)\n    \t\t{\n    \t\t\t// we are bundled    \t\t    \n    \t\t\turl = \"resource://\" + LOADER.getAPI().ENV.platformOptions.jetpackID.replace(\"@\", \"-at-\") + \"-i-packages\" + \"/\" + m[1] + \"/resources/\";\n    \t\t} else\n    \t\tif (pathId.charAt(0) === \"/\") {\n    \t\t\t// we are in dev\n    \t\t\turl = \"file://\" + pathId + \"/resources/\";\n    \t\t} else\n    \t\t\tthrow new Error(\"Cannot get URL for: \" + module.pkgId);\n    \t\treturn url;\n    \t}\n    \telse\n    \t{\n            return RESOURCE.forPackage(module).getResourceBaseUrl();//bravojs.url.match(/^(\\w*:\\/)\\//)[1] + pkgId + \"@/resources/\";\n    \t}\n*/\n    },\n    logger: {\n        log: function()\n        {\n            console.log.apply(console, arguments);            \n        },\n        error: function()\n        {\n            console.error.apply(console, arguments);            \n        }\n    }\n};\ncommonHelpers.util.merge = function(obj1, obj2)\n{\n    if(!obj1) return obj2;\n    if(!obj2) return obj1;\n    return UTIL.update(obj1, obj2);\n}\n\n\nexports.replaceMessageForNode = function(node, message, options)\n{\n\ttry {\n\t\treturn renderMessage(node, message, options, \"replace\");\n\t} catch(e) {\n\t\tconsole.error(\"Error rendering message\", e);\n\t\tthrow e;\n\t}\n}\n\nexports.appendMessageToNode = function(node, message, options)\n{\n\ttry {\n\t\treturn renderMessage(node, message, options, \"append\");\n\t} catch(e) {\n\t\tconsole.error(\"Error rendering message\", e);\n\t\tthrow e;\n\t}\n}\n\nexports.replaceNodeForNode = function(domNode, node, options)\n{\n\ttry {\n\t\treturn renderMessage(domNode, {\n\t\t\tnode: node\n\t\t}, options, \"replace\");\n\t} catch(e) {\n\t\tconsole.error(\"Error rendering message\", e);\n\t\tthrow e;\n\t}\n}\n\nfunction renderMessage(domNode, message, options, mode)\n{\n    options = options || {};\n    options.view = options.view || [\"summary\"];\n    options.on = options.on || {};\n\n//console.log(\"renderMessage\", domNode, message, options, mode);\n\n    var helpers = UTIL.copy(commonHelpers);\n    helpers.helpers = helpers;\n    helpers.document = domNode.ownerDocument;\n    helpers.dispatchEvent = function(name, args)\n    {\n        if (typeof options.on[name] != \"undefined\")\n            options.on[name](args[1].message, args[1].args);\n    };\n\n    message = UTIL.copy(message);\n\n    if (typeof message.meta == \"string\")\n        message.meta = JSON.decode(message.meta);\n\n    if (typeof message === \"string\")\n    {\n        if (mode == \"append\")\n        {\n            var div = domNode.ownerDocument.createElement(\"div\");\n            div.setAttribute(\"class\", \"message\");\n            div.innerHTML = message;\n            domNode.appendChild(div);\n        }\n        else\n        if (mode == \"replace\")\n        {\n        \tdomNode.innerHTML = message;\n        }\n        else\n            throw new Error(\"NYI\");\n        return;\n    }\n\n    if (typeof message.og == \"undefined\" && typeof message.node == \"undefined\")\n    {\n        if (typeof message.data != \"undefined\")\n        {\n            // we have data set but no template. try and determine which template to use.\n            var encoder = ENCODER.Encoder();\n            message.og = encoder.encode(message.data, {}, {});\n        }\n        else\n            throw new Error(\"NYI\");\n    }\n\n    if (typeof message.og == \"string\")\n    {\n    \tmessage.originalOg = message.og;\n        message.og = DECODER.generateFromMessage({\n        \tmeta: message.meta,\n            data: message.og\n        }, DECODER.EXTENDED);\n        message.meta = message.og.getMeta();\n    }\n\n    if (typeof message.og == \"object\")\n    {\n    \tmessage.og.setMeta(message.meta);\n    \tmessage.og.message = message;\n    }\n\n    if (typeof message.ogPath !== \"undefined\")\n    {\n    \treturn renderMessage(domNode, {\n\t\t\tnode: message.og.nodeForPath(message.ogPath)\n\t\t}, options, \"replace\");\n    }\n    \n    if (typeof message.template == \"undefined\")\n    {\n        if (typeof message.og == \"object\")\n        {\n            var template = helpers.getTemplateModuleForNode(message.og.getOrigin());\n            if (!template)\n                throw new Error(\"Unable to locate template for ObjectGraph!\");\n            message.template = template.getTemplateLocator();\n        }\n        else\n        if (typeof message.node != \"undefined\")\n        {\n            var template = helpers.getTemplateModuleForNode(message.node);\n            if (!template)\n                throw new Error(\"Unable to locate template for node!\");\n            message.template = template.getTemplateLocator();\n        }\n        else\n            throw new Error(\"NYI\");\n    }\n\n    if (typeof message.template != \"undefined\")\n    {\n        // ASSUMPTION: module.mappings[\"templates\"] resolves to 'github.com/insight/insight.renderers.default/' package\n        // TODO: Arbitrary template loading via authorization callback\n        if (typeof message.template.id != \"undefined\" && message.template.id != \"github.com/insight/insight.renderers.default/\")\n            throw new Error(\"Only templates from 'github.com/insight/insight.renderers.default/' are supported at this time!\");\n\n        function render(template)\n        {\n            var div;\n\n            if (mode == \"append\")\n            {\n                div = domNode.ownerDocument.createElement(\"div\");\n                div.setAttribute(\"class\", \"message\");\n            }\n            else\n            if (mode == \"replace\")\n            {\n                div = domNode;\n                div.innerHTML = \"\";\n            }\n            else\n                throw new Error(\"NYI\");\n\n            function renderWrapped(div, view)\n            {\n            \t// Nothing to render for groups. Child nodes have already been inserted.\n            \t// TODO: Maybe do not insert child nodes until expanding?\n            \tif (message.meta && typeof message.meta[\"group.start\"] !== \"undefined\" && message.meta[\"group.start\"])\n            \t\treturn;\n\n            \toptions = UTIL.copy(options);\n                if (typeof view != \"undefined\")\n                    options.view = view;\n\n                if (typeof options.view != \"array\")\n                    options.view = [options.view];\n\n                if (typeof message.og != \"undefined\")\n                {\n                    if (typeof template.renderObjectGraphToNode == \"undefined\")\n                        throw new Error(\"Template module '\" + message.template.module + \"' from '\" + message.template.id + \"' does not export 'renderObjectGraphToNode'!\");\n                    template.renderObjectGraphToNode(message.og.getOrigin(), div, options, helpers);\n                }\n\n/*\n                else\n                if (typeof message.data != \"undefined\")\n                {\n                    if (typeof template.renderDataToNode == \"undefined\")\n                        throw new Error(\"Template module '\" + message.template.module + \"' from '\" + message.template.id + \"' does not export 'renderDataToNode'!\");\n                    template.renderDataToNode(message.data, div, options, helpers);\n                }\n*/\n                else\n                    throw new Error(\"NYI\");\n            }\n\n            if (mode == \"append\")\n            {\n            \tdomNode.appendChild(div);\n            }\n            \n            if (typeof options.wrapper != \"undefined\")\n            {\n                if (options.wrapper.id != \"github.com/insight/insight.renderers.default/\")\n                    throw new Error(\"Only wrappers from 'github.com/insight/insight.renderers.default/' are supported at this time!\");\n\n                function doRenderWrapped(id)\n                {\n                \tmessage.render = renderWrapped;\n                \ttry {\n                \t\tmessage.template = template.getTemplate(helpers);\n                \t} catch (err) {\n                \t\tconsole.warn(\"Error getting template\", err.stack);\n                \t}\n                \tmessage.meta = message.meta || {};\n//console.log(\"ID\", id);\n                \ttry {\n                \t\trequire(\"insight.renderers.default/lib/\" + id).renderMessage(message, div, options, helpers);\n                \t} catch (err) {\n                \t\tconsole.warn(\"Error rendering message\", err.stack);\n                \t}\n\n                \tif (typeof options.callback === \"function\")\n                    \toptions.callback(div);\n                }\n\n//console.log(\"load WRAPPER 1\", \"insight.renderers.default/lib/\" + options.wrapper.module);\n//console.log(\"require\", require);\n\n                doRenderWrapped(options.wrapper.module);\n/*\n                var wrapperId = require.id(\"insight.renderers.default/lib/\" + options.wrapper.module);\n\nconsole.log(\"wrapperId\", wrapperId);\n\n                if (renderWrappers[wrapperId] && Q.isPromise(renderWrappers[wrapperId])) {\n\t\t\t\t\tQ.when(renderWrappers[wrapperId], doRenderWrapped);\n                }\n                else {\n//                else if (renderWrappers[wrapperId] || require.isMemoized(wrapperId)) {\n                \tdoRenderWrapped(wrapperId);\n            \t}\n*/\n/*                \n                else {\nthrow new Error(\"TODO: Implement dynamic loading of templates.\");                    \n                \tvar result = Q.defer();           \n\nconsole.log(\"load WRAPPER 2\", \"insight.renderers.default/lib/\" + options.wrapper.module);\n                    module.load(\"insight.renderers.default/lib/\" + options.wrapper.module, function(id)\n                    {\n                    \tdoRenderWrapped(id);\n                    \trenderWrappers[wrapperId] = true;\n                    \tresult.resolve(id);\n                    });\n                    renderWrappers[wrapperId] = result.promise;\n                }\n*/\n            }\n            else\n                renderWrapped(div);\n        }\n\n        if (typeof message.template.getTemplate == \"function\")\n        {\n            render(message.template.getTemplate());\n            return;\n        }\n\n        var tplId = message.template.id + \"|\" + message.template.module;\n        \n        if (modules[tplId] && RELOADING)\n        {\n            // TODO: This can probably move down to remove modules right after included as in \"comm\"\n            // remove all modules for this template from previous loads\n            modules[tplId][0].forEach(function(id)\n            {\n//                delete getBravoJS().pendingModuleDeclarations[id];\n//                delete getBravoJS().requireMemo[id];\n            });\n            delete modules[tplId];\n        }\n\n        if (!modules[tplId])\n        {\n//            modules[tplId] = [Object.keys(getBravoJS().pendingModuleDeclarations).concat(Object.keys(getBravoJS().requireMemo))];\n//console.log(\"lod module dynamiclly!\", message.template.module);\n\n//console.log(\"INSIGHT_RENDERERS_DEFAULT\", INSIGHT_RENDERERS_DEFAULT);\n\n//console.log(\"LOAD MODULE ASYNC\", \"insight.renderers.default/\" + message.template.module);\n\n            // TODO: Use `require.async` to load templates dynamically. For now they are already memoized by the pack helper by including them statically.\n            var template = require(\"insight.renderers.default/lib/\" + message.template.module);\n//console.log(\"template\", template);\n/*\n            moduleload(\"templates/\" + message.template.module, function(id)\n            {\n            \tvar template = modules[tplId][1] = require(id);\n\n                if (typeof template.getTemplatePack == \"function\")\n                {\n                    var templatePack = template.getTemplatePack();\n                    if (templatePacks.list.indexOf(templatePack) === -1)\n                        templatePacks.list.push(templatePack);\n                }\n\n                render(template);\n\n                // compute all newly added modules\n                modules[tplId][0] = Object.keys(getBravoJS().pendingModuleDeclarations).concat(Object.keys(getBravoJS().requireMemo)).filter(function(id)\n                {\n                    return (modules[tplId][0].indexOf(id) === -1);\n                });\n            });\n*/            \n\n            if (typeof template.getTemplatePack == \"function\") {\n                var templatePack = template.getTemplatePack();\n                if (templatePacks.list.indexOf(templatePack) === -1) {\n                    templatePacks.list.push(templatePack);\n                }\n            }\n\n            render(template);\n        }\n        else\n            render(modules[tplId][1]);\n    }\n    else\n        throw new Error(\"NYI\");\n}\n",
              "globals": {
                "UTIL": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "JSON": {
                  "type": "assign"
                },
                "DOM": {
                  "type": "assign"
                },
                "ENCODER": {
                  "type": "assign"
                },
                "DECODER": {
                  "type": "assign"
                },
                "DOMPLATE_UTIL": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                },
                "Q": {
                  "type": "assign"
                },
                "RESOURCE": {
                  "type": "assign"
                },
                "INSIGHT_RENDERERS_DEFAULT": {
                  "type": "assign"
                },
                "RELOADING": {
                  "type": "assign"
                },
                "LOADER": {
                  "type": "assign"
                },
                "templatePacks": {
                  "type": "assign"
                },
                "modules": {
                  "type": "assign"
                },
                "renderWrappers": {
                  "type": "assign"
                },
                "injectedCss": {
                  "type": "assign"
                },
                "Supervisor": {
                  "type": "assign"
                },
                "doSynchronizedappendMessageToNode": {
                  "type": "call"
                },
                "module": {
                  "type": "reference"
                },
                "console": {
                  "type": "reference"
                },
                "ensureTemplatePacks": {
                  "type": "assign"
                },
                "commonHelpers": {
                  "type": "assign"
                },
                "renderMessage": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "modules/util": {
                    "where": "inline"
                  },
                  "modules/json": {
                    "where": "inline"
                  },
                  "./util/dom": {
                    "where": "inline"
                  },
                  "insight/encoder/default": {
                    "where": "inline"
                  },
                  "insight/decoder/default": {
                    "where": "inline"
                  },
                  "domplate/util": {
                    "where": "inline"
                  },
                  "modules/q": {
                    "where": "inline"
                  },
                  "modules/resource": {
                    "where": "inline"
                  },
                  "insight.renderers.default": {
                    "where": "inline"
                  },
                  "insight.renderers.default/php/pack": {
                    "where": "inline"
                  },
                  "insight.renderers.default/insight/pack": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../renderers';",
              "code": "function(require, exports, module) {var __dirname = '../renderers';\n\nvar UTIL = require(\"modules/util\"),\n    JSON = require(\"modules/json\"),\n    DOM = require(\"./util/dom\"),\n    ENCODER = require(\"insight/encoder/default\"),\n    DECODER = require(\"insight/decoder/default\"),\n    DOMPLATE_UTIL = exports.DOMPLATE_UTIL = require(\"domplate/util\"),\n    Q = require(\"modules/q\"),\n    RESOURCE = require(\"modules/resource\");\n\n\nvar INSIGHT_RENDERERS_DEFAULT = require(\"insight.renderers.default\");\n\n\nvar RELOADING = false;\n\nvar LOADER = null;\nexports.setLoader = function(inst) { LOADER = inst; }\n\nvar templatePacks = {\n\tlist: [],\n\tbyid: {}\n};\n\nvar modules = {};\n\nvar renderWrappers = {};\n\n\n// TODO: Keep this on a supervisor level in the future\nvar injectedCss = {};\n\n\n\nvar Supervisor = exports.Supervisor = function() {\n\tthis.groupStack = [];\n\tthis.messageWrapper = null;\n\tthis._appendMessageToNode__queue = false;\n\tthis.on = {};\n};\nSupervisor.prototype.ensureCssForDocument = function(document)\n{\n\tfor (var id in injectedCss)\n\t\tDOM.importCssString(injectedCss[id], document, \"devcomp-insight-css-\" + id);\n}\nSupervisor.prototype.resetGroupStack = function()\n{\n\tthis.groupStack = [];\n}\nSupervisor.prototype.setMessageWrapper = function(wrapper)\n{\n    this.messageWrapper = wrapper;\n}\nSupervisor.prototype.appendMessageToNode = function(domNode, message)\n{\n\tif (this._appendMessageToNode__queue === false)\n\t{\n\t\tthis._appendMessageToNode__queue = [];\n\t\tdoSynchronizedappendMessageToNode(this, domNode, message);\n\t}\n\telse\n\tif (this._appendMessageToNode__queue !== false)\n\t\tthis._appendMessageToNode__queue.push([domNode, message]);\n}\n\nfunction doSynchronizedappendMessageToNode(supervisor, domNode, message)\n{\n\tif(supervisor.groupStack.length>0) {\n\t\tdomNode = supervisor.groupStack[supervisor.groupStack.length-1];\n\t    if(!domNode) {\n\t        throw new Error(\"domNode is null!\");\n\t    }\n\t}\n\n\texports.appendMessageToNode(domNode, message, {\n\t\tsupervisor: supervisor,\n        view: [\"summary\"],\n        wrapper: supervisor.messageWrapper,\n        on: {\n            inspectMessage: function(message)\n            {\n            \tif (typeof supervisor.on.inspectMessage !== \"undefined\")\n            \t\tsupervisor.on.inspectMessage(message);\n            },\n            inspectNode: function(message, args)\n            {\n            \tif (typeof supervisor.on.inspectNode !== \"undefined\")\n            \t\tsupervisor.on.inspectNode(message, args);\n            },\n            inspectFile: function(message, args)\n            {\n            \tif (typeof supervisor.on.inspectFile !== \"undefined\")\n            \t\tsupervisor.on.inspectFile(message, args);\n            }\n        },\n        callback: function(domNode)\n        {\n        \t// TODO: Relocate all this into domNode.templateObject.postRender();\n\t\t\tif(typeof message.meta[\"group.start\"] != \"undefined\") {\n\t\t\t    // get reference to body of last added console row\n\t\t\t    var node = DOMPLATE_UTIL.getElementByClass(domNode, \"body\");\n\n\t\t\t    // insert further messages into group\n\t\t\t    supervisor.groupStack.push(node);\n\t\t\t    // expand group if requested\n\t\t\t    if(typeof message.meta[\"group.expand\"] && message.meta[\"group.expand\"]==message.meta[\"group\"] && node.parentNode) {\n\t\t\t        node.parentNode.setAttribute(\"expanded\", \"true\");\n\t\t\t    }\n\t\t\t}\n\t\t\tif(typeof message.meta[\"group.end\"] != \"undefined\") {\n\t\t\t    var count = message.meta[\"group.end\"];\n\t\t\t    if(count===true) {\n\t\t\t        count = 1;\n\t\t\t    }\n\t\t\t    for( var i=0 ; i<count ; i++ ) {\n\t\t\t        var groupStartNode = supervisor.groupStack.pop();\n\t\t\t\t\tif(groupStartNode.parentNode.templateObject) {\n\t\t\t\t\t\tgroupStartNode.parentNode.templateObject.setCount(groupStartNode.parentNode, groupStartNode.children.length);\n\t\t\t\t\t}\n\t\t\t    }\n\t\t\t}\n\t\t\tif(typeof message.meta[\"expand\"] != \"undefined\" && message.meta[\"expand\"]) {\n\t\t\t    var node = DOMPLATE_UTIL.getElementByClass(domNode, \"body\");\n\t\t\t    if(node.parentNode && node.parentNode.templateObject) {\n\t\t\t        node.parentNode.templateObject.expandForMasterRow(node.parentNode, node);\n\t\t\t    }\n\t\t\t    else\n\t\t\t    \tconsole.error(\"NYI - expand for message - in \" + module.id);\n\t\t\t}\n\t\t\tif(typeof message.meta[\"actions\"] != \"undefined\" && message.meta[\"actions\"] == false) {\n\t\t\t    var node = DOMPLATE_UTIL.getElementByClass(domNode, \"actions\");\n\t\t\t    if (node)\n\t\t\t    \tnode.style.display = \"none\";\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\n                    domNode.children[0] &&\n                    domNode.children[0].templateObject &&\n                    domNode.children[0].templateObject.postRender\n                ) {\n\t\t\t\t\tdomNode.children[0].templateObject.postRender(domNode.children[0]);\n                }\n\t\t\t} catch(e) {\n\t\t\t\tconsole.warn(\"Error during template postRender\", e, e.stack);\n\t\t\t}\n\n\t\t\tif (supervisor._appendMessageToNode__queue.length > 0)\n\t\t\t{\n\t\t\t\tdoSynchronizedappendMessageToNode.apply(null, [supervisor].concat(supervisor._appendMessageToNode__queue.shift()));\n\t\t\t}\n\t\t\telse\n\t\t\t\tsupervisor._appendMessageToNode__queue = false;\n        }\n    });\n}\n\n\nfunction ensureTemplatePacks()\n{\n    var PACK;\n\n    PACK = require(\"insight.renderers.default/php/pack\");\n    if (!templatePacks.byid[\"php\"])\n    {\n    \ttemplatePacks.byid[\"php\"] = PACK;\n        templatePacks.list.push(PACK);\n    }\n\n    PACK = require(\"insight.renderers.default/insight/pack\");\n    if (!templatePacks.byid[\"insight\"])\n    {\n    \ttemplatePacks.byid[\"insight\"] = PACK;\n        templatePacks.list.push(PACK);\n    }\n}\n\nvar commonHelpers = {\n\thelpers: null,\n    // NOTE: This should only be called once or with an ID to replace existing\n    importCssString: function(id, css, document)\n    {\n    \tinjectedCss[id] = css;\n        DOM.importCssString(css, document, \"devcomp-insight-css-\" + id);\n    },\n    util: UTIL.copy(DOMPLATE_UTIL),\n    getTemplateForId: function(id)\n    {\nconsole.error(\"NYI - commonHelpers.getTemplateForid (in \" + module.id + \")\");    \t\n        throw new Error(\"NYI - commonHelpers.getTemplateForid (in \" + module.id + \")\");\n    },\n    getTemplateModuleForNode: function(node)\n    {\n//console.log(\"getTemplateModuleForNode\", node);        \n    \ttry {\n\t        ensureTemplatePacks();\n\t        var found;\n\n\t        var og = node.getObjectGraph(),\n\t        \togNode = og.origin,\n\t        \tmeta = og.meta;\n\n\t        // Match message-based renderers\n\t        if (node === ogNode && meta && meta.renderer)\n\t        {\n        \t\tif (!node.meta) node.meta = {};\n\t        \tvar pack = false;\n\t        \tvar id = \"http://registry.pinf.org/cadorn.org/renderers/packages/insight/0\";\n\t        \tif (meta.renderer.substring(0, id.length+1) === id + \":\")\n\t        \t{\n\t        \t\tif (node === node.getObjectGraph().getOrigin())\n\t        \t\t\tnode.meta.renderer = meta.renderer.substring(id.length+1);\n\t        \t\tpack = \"insight\";\n\t        \t}\n\t        \tif (pack)\n\t        \t\tfound = templatePacks.byid[pack].getTemplateForNode(node);\n\t        \telse\n\t        \t\tconsole.warn(\"Unknown renderer: \" + meta.renderer);\n\t        }\n\n\t        // Match message-based language primitives\n\t        if (!found && meta && meta[\"lang.id\"])\n\t        {\n\t        \tif (meta[\"lang.id\"] == \"registry.pinf.org/cadorn.org/github/renderers/packages/php/master\")\n\t        \t{\n\t        \t\tfound = templatePacks.byid[\"php\"].getTemplateForNode(node);\n\t        \t\tif (!found)\n\t        \t\t{\n\t        \t\t\t// lookup in default language pack\n\t            \t\tfound = templatePacks.byid[\"insight\"].getTemplateForNode(node);\n\t        \t\t}\n\t        \t}\n\t        \telse\n\t        \t\tthrow new Error(\"Unknown language ID: \" + meta[\"lang.id\"]);\n\t        }\n\t        else\n\t    \tif (!found)\n\t        {\n\t\t        for (var i=templatePacks.list.length-1 ; i>=0 ; i--)\n\t\t        {\n\t\t            if (typeof templatePacks.list[i].getTemplateForNode == \"function\" &&\n\t\t                (found = templatePacks.list[i].getTemplateForNode(node)))\n\t\t                break;\n\t\t        }\n\t        }\n\t        if (!found)\n\t        {\n\t            console.error(\"ERROR: Template for node '\" + node.type + \"' not found! (in \" + module.id + \")\", node);\n\t            return false;\n\t        }\n\t        return found;\n    \t} catch (err) {\n    \t\tconsole.error(\"Error getting template for node\", err.stack, node);\n    \t}\n    },\n    getTemplateForNode: function(node)\n    {\n        var template = commonHelpers.getTemplateModuleForNode(node);\n        if(!template)\n            return false;\n        try {\n        \treturn template.getTemplate(this.helpers);\n        } catch(e) {\n        \tconsole.warn(\"Error getting template\", e);\n        }\n    },\n    getResourceBaseUrl: function(module)\n    {\n\n//console.log(\"module.id\", module.id);\n//console.log(\"MATCH\",  module.id.replace(/^lib\\/insight\\//, \"resources\"));\n\n        return require.sandbox.id + \"/\" + module.id.split(\"/\")[0] + \"/resources/\";\n/*\n    \tvar bravojs = getBravoJS();\n    \tif (/^memory:\\/\\//.test(bravojs.url))\n    \t{\n    \t\tvar pathId = module._id.split(\"@/\")[0];\t\t// TODO: Don't use _id here\n    \t\t\n    \t\tvar m = pathId.match(/devcomp\\/data\\/packages\\.jar!\\/(.*)$/),\n    \t\t\turl;\n    \t\tif (m)\n    \t\t{\n    \t\t\t// we are bundled    \t\t    \n    \t\t\turl = \"resource://\" + LOADER.getAPI().ENV.platformOptions.jetpackID.replace(\"@\", \"-at-\") + \"-i-packages\" + \"/\" + m[1] + \"/resources/\";\n    \t\t} else\n    \t\tif (pathId.charAt(0) === \"/\") {\n    \t\t\t// we are in dev\n    \t\t\turl = \"file://\" + pathId + \"/resources/\";\n    \t\t} else\n    \t\t\tthrow new Error(\"Cannot get URL for: \" + module.pkgId);\n    \t\treturn url;\n    \t}\n    \telse\n    \t{\n            return RESOURCE.forPackage(module).getResourceBaseUrl();//bravojs.url.match(/^(\\w*:\\/)\\//)[1] + pkgId + \"@/resources/\";\n    \t}\n*/\n    },\n    logger: {\n        log: function()\n        {\n            console.log.apply(console, arguments);            \n        },\n        error: function()\n        {\n            console.error.apply(console, arguments);            \n        }\n    }\n};\ncommonHelpers.util.merge = function(obj1, obj2)\n{\n    if(!obj1) return obj2;\n    if(!obj2) return obj1;\n    return UTIL.update(obj1, obj2);\n}\n\n\nexports.replaceMessageForNode = function(node, message, options)\n{\n\ttry {\n\t\treturn renderMessage(node, message, options, \"replace\");\n\t} catch(e) {\n\t\tconsole.error(\"Error rendering message\", e);\n\t\tthrow e;\n\t}\n}\n\nexports.appendMessageToNode = function(node, message, options)\n{\n\ttry {\n\t\treturn renderMessage(node, message, options, \"append\");\n\t} catch(e) {\n\t\tconsole.error(\"Error rendering message\", e);\n\t\tthrow e;\n\t}\n}\n\nexports.replaceNodeForNode = function(domNode, node, options)\n{\n\ttry {\n\t\treturn renderMessage(domNode, {\n\t\t\tnode: node\n\t\t}, options, \"replace\");\n\t} catch(e) {\n\t\tconsole.error(\"Error rendering message\", e);\n\t\tthrow e;\n\t}\n}\n\nfunction renderMessage(domNode, message, options, mode)\n{\n    options = options || {};\n    options.view = options.view || [\"summary\"];\n    options.on = options.on || {};\n\n//console.log(\"renderMessage\", domNode, message, options, mode);\n\n    var helpers = UTIL.copy(commonHelpers);\n    helpers.helpers = helpers;\n    helpers.document = domNode.ownerDocument;\n    helpers.dispatchEvent = function(name, args)\n    {\n        if (typeof options.on[name] != \"undefined\")\n            options.on[name](args[1].message, args[1].args);\n    };\n\n    message = UTIL.copy(message);\n\n    if (typeof message.meta == \"string\")\n        message.meta = JSON.decode(message.meta);\n\n    if (typeof message === \"string\")\n    {\n        if (mode == \"append\")\n        {\n            var div = domNode.ownerDocument.createElement(\"div\");\n            div.setAttribute(\"class\", \"message\");\n            div.innerHTML = message;\n            domNode.appendChild(div);\n        }\n        else\n        if (mode == \"replace\")\n        {\n        \tdomNode.innerHTML = message;\n        }\n        else\n            throw new Error(\"NYI\");\n        return;\n    }\n\n    if (typeof message.og == \"undefined\" && typeof message.node == \"undefined\")\n    {\n        if (typeof message.data != \"undefined\")\n        {\n            // we have data set but no template. try and determine which template to use.\n            var encoder = ENCODER.Encoder();\n            message.og = encoder.encode(message.data, {}, {});\n        }\n        else\n            throw new Error(\"NYI\");\n    }\n\n    if (typeof message.og == \"string\")\n    {\n    \tmessage.originalOg = message.og;\n        message.og = DECODER.generateFromMessage({\n        \tmeta: message.meta,\n            data: message.og\n        }, DECODER.EXTENDED);\n        message.meta = message.og.getMeta();\n    }\n\n    if (typeof message.og == \"object\")\n    {\n    \tmessage.og.setMeta(message.meta);\n    \tmessage.og.message = message;\n    }\n\n    if (typeof message.ogPath !== \"undefined\")\n    {\n    \treturn renderMessage(domNode, {\n\t\t\tnode: message.og.nodeForPath(message.ogPath)\n\t\t}, options, \"replace\");\n    }\n    \n    if (typeof message.template == \"undefined\")\n    {\n        if (typeof message.og == \"object\")\n        {\n            var template = helpers.getTemplateModuleForNode(message.og.getOrigin());\n            if (!template)\n                throw new Error(\"Unable to locate template for ObjectGraph!\");\n            message.template = template.getTemplateLocator();\n        }\n        else\n        if (typeof message.node != \"undefined\")\n        {\n            var template = helpers.getTemplateModuleForNode(message.node);\n            if (!template)\n                throw new Error(\"Unable to locate template for node!\");\n            message.template = template.getTemplateLocator();\n        }\n        else\n            throw new Error(\"NYI\");\n    }\n\n    if (typeof message.template != \"undefined\")\n    {\n        // ASSUMPTION: module.mappings[\"templates\"] resolves to 'github.com/insight/insight.renderers.default/' package\n        // TODO: Arbitrary template loading via authorization callback\n        if (typeof message.template.id != \"undefined\" && message.template.id != \"github.com/insight/insight.renderers.default/\")\n            throw new Error(\"Only templates from 'github.com/insight/insight.renderers.default/' are supported at this time!\");\n\n        function render(template)\n        {\n            var div;\n\n            if (mode == \"append\")\n            {\n                div = domNode.ownerDocument.createElement(\"div\");\n                div.setAttribute(\"class\", \"message\");\n            }\n            else\n            if (mode == \"replace\")\n            {\n                div = domNode;\n                div.innerHTML = \"\";\n            }\n            else\n                throw new Error(\"NYI\");\n\n            function renderWrapped(div, view)\n            {\n            \t// Nothing to render for groups. Child nodes have already been inserted.\n            \t// TODO: Maybe do not insert child nodes until expanding?\n            \tif (message.meta && typeof message.meta[\"group.start\"] !== \"undefined\" && message.meta[\"group.start\"])\n            \t\treturn;\n\n            \toptions = UTIL.copy(options);\n                if (typeof view != \"undefined\")\n                    options.view = view;\n\n                if (typeof options.view != \"array\")\n                    options.view = [options.view];\n\n                if (typeof message.og != \"undefined\")\n                {\n                    if (typeof template.renderObjectGraphToNode == \"undefined\")\n                        throw new Error(\"Template module '\" + message.template.module + \"' from '\" + message.template.id + \"' does not export 'renderObjectGraphToNode'!\");\n                    template.renderObjectGraphToNode(message.og.getOrigin(), div, options, helpers);\n                }\n\n/*\n                else\n                if (typeof message.data != \"undefined\")\n                {\n                    if (typeof template.renderDataToNode == \"undefined\")\n                        throw new Error(\"Template module '\" + message.template.module + \"' from '\" + message.template.id + \"' does not export 'renderDataToNode'!\");\n                    template.renderDataToNode(message.data, div, options, helpers);\n                }\n*/\n                else\n                    throw new Error(\"NYI\");\n            }\n\n            if (mode == \"append\")\n            {\n            \tdomNode.appendChild(div);\n            }\n            \n            if (typeof options.wrapper != \"undefined\")\n            {\n                if (options.wrapper.id != \"github.com/insight/insight.renderers.default/\")\n                    throw new Error(\"Only wrappers from 'github.com/insight/insight.renderers.default/' are supported at this time!\");\n\n                function doRenderWrapped(id)\n                {\n                \tmessage.render = renderWrapped;\n                \ttry {\n                \t\tmessage.template = template.getTemplate(helpers);\n                \t} catch (err) {\n                \t\tconsole.warn(\"Error getting template\", err.stack);\n                \t}\n                \tmessage.meta = message.meta || {};\n//console.log(\"ID\", id);\n                \ttry {\n                \t\trequire(\"insight.renderers.default/lib/\" + id).renderMessage(message, div, options, helpers);\n                \t} catch (err) {\n                \t\tconsole.warn(\"Error rendering message\", err.stack);\n                \t}\n\n                \tif (typeof options.callback === \"function\")\n                    \toptions.callback(div);\n                }\n\n//console.log(\"load WRAPPER 1\", \"insight.renderers.default/lib/\" + options.wrapper.module);\n//console.log(\"require\", require);\n\n                doRenderWrapped(options.wrapper.module);\n/*\n                var wrapperId = require.id(\"insight.renderers.default/lib/\" + options.wrapper.module);\n\nconsole.log(\"wrapperId\", wrapperId);\n\n                if (renderWrappers[wrapperId] && Q.isPromise(renderWrappers[wrapperId])) {\n\t\t\t\t\tQ.when(renderWrappers[wrapperId], doRenderWrapped);\n                }\n                else {\n//                else if (renderWrappers[wrapperId] || require.isMemoized(wrapperId)) {\n                \tdoRenderWrapped(wrapperId);\n            \t}\n*/\n/*                \n                else {\nthrow new Error(\"TODO: Implement dynamic loading of templates.\");                    \n                \tvar result = Q.defer();           \n\nconsole.log(\"load WRAPPER 2\", \"insight.renderers.default/lib/\" + options.wrapper.module);\n                    module.load(\"insight.renderers.default/lib/\" + options.wrapper.module, function(id)\n                    {\n                    \tdoRenderWrapped(id);\n                    \trenderWrappers[wrapperId] = true;\n                    \tresult.resolve(id);\n                    });\n                    renderWrappers[wrapperId] = result.promise;\n                }\n*/\n            }\n            else\n                renderWrapped(div);\n        }\n\n        if (typeof message.template.getTemplate == \"function\")\n        {\n            render(message.template.getTemplate());\n            return;\n        }\n\n        var tplId = message.template.id + \"|\" + message.template.module;\n        \n        if (modules[tplId] && RELOADING)\n        {\n            // TODO: This can probably move down to remove modules right after included as in \"comm\"\n            // remove all modules for this template from previous loads\n            modules[tplId][0].forEach(function(id)\n            {\n//                delete getBravoJS().pendingModuleDeclarations[id];\n//                delete getBravoJS().requireMemo[id];\n            });\n            delete modules[tplId];\n        }\n\n        if (!modules[tplId])\n        {\n//            modules[tplId] = [Object.keys(getBravoJS().pendingModuleDeclarations).concat(Object.keys(getBravoJS().requireMemo))];\n//console.log(\"lod module dynamiclly!\", message.template.module);\n\n//console.log(\"INSIGHT_RENDERERS_DEFAULT\", INSIGHT_RENDERERS_DEFAULT);\n\n//console.log(\"LOAD MODULE ASYNC\", \"insight.renderers.default/\" + message.template.module);\n\n            // TODO: Use `require.async` to load templates dynamically. For now they are already memoized by the pack helper by including them statically.\n            var template = require(\"insight.renderers.default/lib/\" + message.template.module);\n//console.log(\"template\", template);\n/*\n            moduleload(\"templates/\" + message.template.module, function(id)\n            {\n            \tvar template = modules[tplId][1] = require(id);\n\n                if (typeof template.getTemplatePack == \"function\")\n                {\n                    var templatePack = template.getTemplatePack();\n                    if (templatePacks.list.indexOf(templatePack) === -1)\n                        templatePacks.list.push(templatePack);\n                }\n\n                render(template);\n\n                // compute all newly added modules\n                modules[tplId][0] = Object.keys(getBravoJS().pendingModuleDeclarations).concat(Object.keys(getBravoJS().requireMemo)).filter(function(id)\n                {\n                    return (modules[tplId][0].indexOf(id) === -1);\n                });\n            });\n*/            \n\n            if (typeof template.getTemplatePack == \"function\") {\n                var templatePack = template.getTemplatePack();\n                if (templatePacks.list.indexOf(templatePack) === -1) {\n                    templatePacks.list.push(templatePack);\n                }\n            }\n\n            render(template);\n        }\n        else\n            render(modules[tplId][1]);\n    }\n    else\n        throw new Error(\"NYI\");\n}\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "modules/util": {
                  "where": "inline"
                },
                "modules/json": {
                  "where": "inline"
                },
                "./util/dom": {
                  "where": "inline"
                },
                "insight/encoder/default": {
                  "where": "inline"
                },
                "insight/decoder/default": {
                  "where": "inline"
                },
                "domplate/util": {
                  "where": "inline"
                },
                "modules/q": {
                  "where": "inline"
                },
                "modules/resource": {
                  "where": "inline"
                },
                "insight.renderers.default": {
                  "where": "inline"
                },
                "insight.renderers.default/php/pack": {
                  "where": "inline"
                },
                "insight.renderers.default/insight/pack": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/util.js": {
            "requireId": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/util",
            "memoizeId": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/util.js",
            "descriptor": {
              "filename": "util.js",
              "filepath": "../../pinf-bridgelib-js/lib/util.js",
              "mtime": 1420263912,
              "code": "\n// -- kriskowal Kris Kowal Copyright (C) 2009-2010 MIT License\n// -- isaacs Isaac Schlueter\n// -- nrstott Nathan Stott\n// -- fitzgen Nick Fitzgerald\n// -- nevilleburnell Neville Burnell\n// -- cadorn Christoph Dorn\n\n// a decorator for functions that curry \"polymorphically\",\n// that is, that return a function that can be tested\n// against various objects if they're only \"partially\n// completed\", or fewer arguments than needed are used.\n// \n// this enables the idioms:\n//      [1, 2, 3].every(lt(4)) eq true\n//      [1, 2, 3].map(add(1)) eq [2, 3, 4]\n//      [{}, {}, {}].forEach(set('a', 10))\n//\nexports.operator = function (name, length, block) {\n    var operator = function () {\n        var args = exports.array(arguments);\n        var completion = function (object) {\n            if (\n                typeof object == \"object\" &&\n                object !== null && // seriously?  typeof null == \"object\"\n                name in object && // would throw if object === null\n                // not interested in literal objects:\n                !Object.prototype.hasOwnProperty.call(object, name)\n            )\n                return object[name].apply(object, args);\n            return block.apply(\n                this,\n                [object].concat(args)\n            );\n        };\n        if (arguments.length < length) {\n            // polymoprhic curry, delayed completion\n            return completion;\n        } else {\n            // immediate completion\n            return completion.call(this, args.shift());\n        }\n    };\n    operator.name = name;\n    operator.displayName = name;\n    operator.length = length;\n    operator.operator = block;\n    return operator;\n};\n\nexports.no = function (value) {\n    return value === null || value === undefined;\n};\n\n// object\n\nexports.object = exports.operator('toObject', 1, function (object) {\n    var items = object;\n    if (!items.length)\n        items = exports.items(object);\n    var copy = {};\n    for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n        var key = item[0];\n        var value = item[1];\n        copy[key] = value;\n    }\n    return copy;\n});\n\nexports.object.copy = function (object) {\n    var copy = {};\n    exports.object.keys(object).forEach(function (key) {\n        copy[key] = object[key];\n    });\n    return copy;\n};\n\nexports.object.deepCopy = function (object) {\n    var copy = {};\n    exports.object.keys(object).forEach(function (key) {\n        copy[key] = exports.deepCopy(object[key]);\n    });\n    return copy;\n};\n\nexports.object.eq = function (a, b, stack) {\n    return (\n        !exports.no(a) && !exports.no(b) &&\n        exports.array.eq(\n            exports.sort(exports.object.keys(a)),\n            exports.sort(exports.object.keys(b))\n        ) &&\n        exports.object.keys(a).every(function (key) {\n            return exports.eq(a[key], b[key], stack);\n        })\n    );\n};\n\nexports.object.len = function (object) {\n    return exports.object.keys(object).length;\n};\n\nexports.object.has = function (object, key) {\n    return Object.prototype.hasOwnProperty.call(object, key);\n};\n\nexports.object.keys = function (object) {\n    var keys = [];\n    for (var key in object) {\n        if (exports.object.has(object, key))\n            keys.push(key);\n    }\n    return keys;\n};\n\nexports.object.values = function (object) {\n    var values = [];\n    exports.object.keys(object).forEach(function (key) {\n        values.push(object[key]);\n    });\n    return values;\n};\n\nexports.object.items = function (object) {\n    var items = [];\n    exports.object.keys(object).forEach(function (key) {\n        items.push([key, object[key]]);\n    });\n    return items;\n};\n\n/**\n * Updates an object with the properties from another object.\n * This function is variadic requiring a minimum of two arguments.\n * The first argument is the object to update.  Remaining arguments\n * are considered the sources for the update.  If multiple sources\n * contain values for the same property, the last one with that\n * property in the arguments list wins.\n *\n * example usage:\n * util.update({}, { hello: \"world\" });  // -> { hello: \"world\" }\n * util.update({}, { hello: \"world\" }, { hello: \"le monde\" }); // -> { hello: \"le monde\" }\n *\n * @returns Updated object\n * @type Object\n *\n */\nexports.object.update = function () {\n    return variadicHelper(arguments, function(target, source) {\n        var key;\n        for (key in source) {\n            if (exports.object.has(source, key)) {\n                target[key] = source[key];\n            }\n        }\n    });\n};\n\nexports.object.deepUpdate = function (target, source) {\n    var key;\n\tfor (key in source) {\n        if(exports.object.has(source, key)) {\n            if(typeof source[key] == \"object\" && exports.object.has(target, key)) {\n                exports.object.deepUpdate(target[key], source[key]);\n            } else {\n                target[key] = source[key];\n            }\n        }\n    }\n};\n\n/**\n * Updates an object with the properties of another object(s) if those\n * properties are not already defined for the target object. First argument is\n * the object to complete, the remaining arguments are considered sources to\n * complete from. If multiple sources contain the same property, the value of\n * the first source with that property will be the one inserted in to the\n * target.\n *\n * example usage:\n * util.complete({}, { hello: \"world\" });  // -> { hello: \"world\" }\n * util.complete({ hello: \"narwhal\" }, { hello: \"world\" }); // -> { hello: \"narwhal\" }\n * util.complete({}, { hello: \"world\" }, { hello: \"le monde\" }); // -> { hello: \"world\" }\n *\n * @returns Completed object\n * @type Object\n *\n */\nexports.object.complete = function () {\n    return variadicHelper(arguments, function(target, source) {\n        var key;\n        for (key in source) {\n            if (\n                exports.object.has(source, key) &&\n                !exports.object.has(target, key)\n            ) {\n                target[key] = source[key];\n            }\n        }\n    });\n};\n\nexports.object.deepComplete = function () {\n    return variadicHelper(arguments, function (target, source) {\n        var key;\n        for (key in source) {\n            if (\n                exports.object.has(source, key) &&\n                !exports.object.has(target, key)\n            ) {\n                target[key] = exports.deepCopy(source[key]);\n            }\n        }\n    });\n};\n\nexports.object.deepDiff = function () {\n    var sources = Array.prototype.slice.call(arguments);\n    var diff = exports.deepCopy(sources.shift());\n    return variadicHelper([diff].concat(sources), function (diff, source) {\n        var key;\n        for (key in source) {\n            if(exports.object.has(source, key)) {\n                if(exports.object.has(diff, key)) {\n                    if(exports.deepEqual(diff[key], source[key])) {\n                        delete diff[key];\n                    } else {\n                        if(!exports.isArrayLike(diff[key])) {\n                            diff[key] = exports.deepDiff(diff[key], source[key]);\n                        }\n                    }\n                }\n            }\n        }\n    });\n};\n\nexports.object.repr = function (object) {\n    return \"{\" +\n        exports.object.keys(object)\n        .map(function (key) {\n            return exports.enquote(key) + \": \" +\n                exports.repr(object[key]);\n        }).join(\", \") +\n    \"}\";\n};\n\n/**\n * @param args Arguments list of the calling function\n * First argument should be a callback that takes target and source parameters.\n * Second argument should be target.\n * Remaining arguments are treated a sources.\n *\n * @returns Target\n * @type Object\n */\nvar variadicHelper = function (args, callback) {\n    var sources = Array.prototype.slice.call(args);\n    var target = sources.shift();\n\n    sources.forEach(function(source) {\n        callback(target, source);\n    });\n\n    return target;\n};\n\n// array\n\nexports.array = function (array) {\n    if (exports.no(array))\n        return [];\n    if (!exports.isArrayLike(array)) {\n        if (\n            array.toArray &&\n            !Object.prototype.hasOwnProperty.call(array, 'toArray')\n        ) {\n            return array.toArray();\n        } else if (\n            array.forEach &&\n            !Object.prototype.hasOwnProperty.call(array, 'forEach')\n        ) {\n            var results = [];\n            array.forEach(function (value) {\n                results.push(value);\n            });\n            return results;\n        } else if (typeof array === \"string\") {\n            return Array.prototype.slice.call(array);\n        } else {\n            return exports.items(array);\n        }\n    }\n    return Array.prototype.slice.call(array);\n};\n\nexports.array.coerce = function (array) {\n    if (!Array.isArray(array))\n        return exports.array(array);\n    return array;\n};\n\nexports.isArrayLike = function(object) {\n    return Array.isArray(object) || exports.isArguments(object);\n};\n\n// from http://code.google.com/p/google-caja/wiki/NiceNeighbor\n// by \"kangax\"\n//\n// Mark Miller posted a solution that will work in ES5 compliant\n// implementations, that may provide future insight:\n// (http://groups.google.com/group/narwhaljs/msg/116097568bae41c6)\nexports.isArguments = function (object) {\n    // ES5 reliable positive\n    if (Object.prototype.toString.call(object) == \"[object Arguments]\")\n        return true;\n    // for ES5, we will still need a way to distinguish false negatives\n    //  from the following code (in ES5, it is possible to create\n    //  an object that satisfies all of these constraints but is\n    //  not an Arguments object).\n    // callee should exist\n    if (\n        !typeof object == \"object\" ||\n        !Object.prototype.hasOwnProperty.call(object, 'callee') ||\n        !object.callee || \n        // It should be a Function object ([[Class]] === 'Function')\n        Object.prototype.toString.call(object.callee) !== '[object Function]' ||\n        typeof object.length != 'number'\n    )\n        return false;\n    for (var name in object) {\n        // both \"callee\" and \"length\" should be { DontEnum }\n        if (name === 'callee' || name === 'length') return false;\n    }\n    return true;\n};\n\nexports.array.copy = exports.array;\n\nexports.array.deepCopy = function (array) {\n    return array.map(exports.deepCopy);\n};\n\nexports.array.len = function (array) {\n    return array.length;\n};\n\nexports.array.has = function (array, value) {\n    return Array.prototype.indexOf.call(array, value) >= 0;\n};\n\nexports.array.put = function (array, key, value) {\n    array.splice(key, 0, value);\n    return array;\n};\n\nexports.array.del = function (array, begin, end) {\n    array.splice(begin, end === undefined ? 1 : (end - begin));\n    return array;\n};\n\nexports.array.eq = function (a, b, stack) {\n    return exports.isArrayLike(b) &&\n        a.length == b.length &&\n        exports.zip(a, b).every(exports.apply(function (a, b) {\n            return exports.eq(a, b, stack);\n        }));\n};\n\nexports.array.lt = function (a, b) {\n    var length = Math.max(a.length, b.length);\n    for (var i = 0; i < length; i++)\n        if (!exports.eq(a[i], b[i]))\n            return exports.lt(a[i], b[i]);\n    return false;\n};\n\nexports.array.repr = function (array) {\n    return \"[\" + exports.map(array, exports.repr).join(', ') + \"]\";\n};\n\nexports.array.first = function (array) {\n    return array[0];\n};\n\nexports.array.last = function (array) {\n    return array[array.length - 1];\n};\n\nexports.apply = exports.operator('apply', 2, function (args, block) {\n    return block.apply(this, args);\n});\n\nexports.copy = exports.operator('copy', 1, function (object) {\n    if (exports.no(object))\n        return object;\n    if (exports.isArrayLike(object))\n        return exports.array.copy(object);\n    if (object instanceof Date)\n        return object;\n    if (typeof object == 'object')\n        return exports.object.copy(object);\n    return object;\n});\n\nexports.deepCopy = exports.operator('deepCopy', 1, function (object) {\n    if (exports.no(object))\n        return object;\n    if (exports.isArrayLike(object))\n        return exports.array.deepCopy(object);\n    if (typeof object == 'object')\n        return exports.object.deepCopy(object);\n    return object;\n});\n\nexports.repr = exports.operator('repr', 1, function (object) {\n    if (exports.no(object))\n        return String(object);\n    if (exports.isArrayLike(object))\n        return exports.array.repr(object);\n    if (typeof object == 'object' && !(object instanceof Date))\n        return exports.object.repr(object);\n    if (typeof object == 'string')\n        return exports.enquote(object);\n    return object.toString();\n});\n\nexports.keys = exports.operator('keys', 1, function (object) {\n    if (exports.isArrayLike(object))\n        return exports.range(object.length);\n    else if (typeof object == 'object')\n        return exports.object.keys(object);\n    return [];\n});\n\nexports.values = exports.operator('values', 1, function (object) {\n    if (exports.isArrayLike(object))\n        return exports.array(object);\n    else if (typeof object == 'object')\n        return exports.object.values(object);\n    return [];\n});\n\nexports.items = exports.operator('items', 1, function (object) {\n    if (exports.isArrayLike(object) || typeof object == \"string\")\n        return exports.enumerate(object);\n    else if (typeof object == 'object')\n        return exports.object.items(object);\n    return [];\n});\n\nexports.len = exports.operator('len', 1, function (object) {\n    if (exports.isArrayLike(object))\n        return exports.array.len(object);\n    else if (typeof object == 'object')\n        return exports.object.len(object);\n});\n\nexports.has = exports.operator('has', 2, function (object, value) {\n    if (exports.isArrayLike(object))\n        return exports.array.has(object, value);\n    else if (typeof object == 'object')\n        return exports.object.has(object, value);\n    return false;\n});\n\nexports.get = exports.operator('get', 2, function (object, key, value) {\n    if (typeof object == \"string\") {\n        if (!typeof key == \"number\")\n            throw new Error(\"TypeError: String keys must be numbers\");\n        if (!exports.has(exports.range(object.length), key)) {\n            if (arguments.length == 3)\n                return value;\n            throw new Error(\"KeyError: \" + exports.repr(key));\n        }\n        return object.charAt(key);\n    }\n    if (typeof object == \"object\") {\n        if (!exports.object.has(object, key)) {\n            if (arguments.length == 3)\n                return value;\n            throw new Error(\"KeyError: \" + exports.repr(key));\n        }\n        return object[key];\n    } \n    throw new Error(\"Object does not have keys: \" + exports.repr(object));\n});\n\nexports.set = exports.operator('set', 3, function (object, key, value) {\n    object[key] = value;\n    return object;\n});\n\nexports.getset = exports.operator('getset', 3, function (object, key, value) {\n    if (!exports.has(object, key))\n        exports.set(object, key, value);\n    return exports.get(object, key);\n});\n\nexports.del = exports.operator('del', 2, function (object, begin, end) {\n    if (exports.isArrayLike(object))\n        return exports.array.del(object, begin, end);\n    delete object[begin];\n    return object;\n});\n\nexports.cut = exports.operator('cut', 2, function (object, key) {\n    var result = exports.get(object, key);\n    exports.del(object, key);\n    return result;\n});\n\nexports.put = exports.operator('put', 2, function (object, key, value) {\n    if (exports.isArrayLike(object))\n        return exports.array.put(object, key, value);\n    return exports.set(object, key, value);\n});\n\nexports.first = exports.operator('first', 1, function (object) {\n    return object[0];\n});\n\nexports.last = exports.operator('last', 1, function (object) {\n    return object[object.length - 1];\n});\n\nexports.update = exports.operator('update', 2, function () {\n    var args = Array.prototype.slice.call(arguments);\n    return exports.object.update.apply(this, args);\n});\n\nexports.deepUpdate = exports.operator('deepUpdate', 2, function (target, source) {\n    exports.object.deepUpdate(target, source);\n});\n\nexports.complete = exports.operator('complete', 2, function (target, source) {\n    var args = Array.prototype.slice.call(arguments);\n    return exports.object.complete.apply(this, args);\n});\n\nexports.deepComplete = exports.operator('deepComplete', 2, function (target, source) {\n    var args = Array.prototype.slice.call(arguments);\n    return exports.object.deepComplete.apply(this, args);\n});\n\nexports.deepDiff = exports.operator('deepDiff', 2, function (target, source) {\n    var args = Array.prototype.slice.call(arguments);\n    return exports.object.deepDiff.apply(this, args);\n});\n\nexports.deepEqual = function(actual, expected) {\n    \n    // 7.1. All identical values are equivalent, as determined by ===.\n    if (actual === expected) {\n        return true;\n\n    // 7.2. If the expected value is a Date object, the actual value is\n    // equivalent if it is also a Date object that refers to the same time.\n    } else if (actual instanceof Date && expected instanceof Date) {\n        return actual.getTime() === expected.getTime();\n\n    // 7.3. Other pairs that do not both pass typeof value == \"object\",\n    // equivalence is determined by ==.\n    } else if (typeof actual != 'object' && typeof expected != 'object') {\n        return actual == expected;\n\n    // XXX specification bug: this should be specified\n    } else if (typeof expected == \"string\" || typeof actual == \"string\") {\n        return expected == actual;\n\n    // 7.4. For all other Object pairs, including Array objects, equivalence is\n    // determined by having the same number of owned properties (as verified\n    // with Object.prototype.hasOwnProperty.call), the same set of keys\n    // (although not necessarily the same order), equivalent values for every\n    // corresponding key, and an identical \"prototype\" property. Note: this\n    // accounts for both named and indexed properties on Arrays.\n    } else {\n        return actual.prototype === expected.prototype && exports.object.eq(actual, expected);\n    }\n}\n\nexports.remove = exports.operator('remove', 2, function (list, value) {\n    var index;\n    if ((index = list.indexOf(value))>-1)\n        list.splice(index,1);\n    return list;\n});\n\n// TODO insert\n// TODO discard\n\nexports.range = function () {\n    var start = 0, stop = 0, step = 1;\n    if (arguments.length == 1) {\n        stop = arguments[0];\n    } else {\n        start = arguments[0];\n        stop = arguments[1];\n        step = arguments[2] || 1;\n    }\n    var range = [];\n    for (var i = start; i < stop; i += step)\n        range.push(i);\n    return range;\n};\n\nexports.forEach = function (array, block) {\n    Array.prototype.forEach.call(\n        exports.array.coerce(array),\n        block\n    );\n};\n\nexports.forEachApply = function (array, block) {\n    Array.prototype.forEach.call(\n        exports.array.coerce(array),\n        exports.apply(block)\n    );\n};\n\nexports.map = function (array, block, context) {\n    return Array.prototype.map.call(\n        exports.array.coerce(array),\n        block,\n        context\n    );\n};\n\nexports.mapApply = function (array, block) {\n    return Array.prototype.map.call(\n        exports.array.coerce(array),\n        exports.apply(block)\n    );\n};\n\nexports.every = exports.operator('every', 2, function (array, block, context) {\n    return exports.all(exports.map(array, block, context));\n});\n\nexports.some = exports.operator('some', 2, function (array, block, context) {\n    return exports.any(exports.map(array, block, context));\n});\n\nexports.all = exports.operator('all', 1, function (array) {\n    array = exports.array.coerce(array);\n    for (var i = 0; i < array.length; i++)\n        if (!array[i])\n            return false;\n    return true;\n});\n\nexports.any = exports.operator('all', 1, function (array) {\n    array = exports.array.coerce(array);\n    for (var i = 0; i < array.length; i++)\n        if (array[i])\n            return true;\n    return false;\n});\n\nexports.reduce = exports.operator('reduce', 2, function (array, block, basis) {\n    array = exports.array.coerce(array);\n    return array.reduce.apply(array, arguments);\n});\n\nexports.reduceRight = exports.operator('reduceRight', 2, function (array, block, basis) {\n    array = exports.array.coerce(array);\n    return array.reduceRight.apply(array, arguments);\n});\n\nexports.zip = function () {\n    return exports.transpose(arguments);\n};\n\nexports.transpose = function (array) {\n    array = exports.array.coerce(array);\n    var transpose = [];\n    var length = Math.min.apply(this, exports.map(array, function (row) {\n        return row.length;\n    }));\n    for (var i = 0; i < array.length; i++) {\n        var row = array[i];\n        for (var j = 0; j < length; j++) {\n            var cell = row[j];\n            if (!transpose[j])\n                transpose[j] = [];\n            transpose[j][i] = cell;\n        }\n    }\n    return transpose;\n};\n\nexports.enumerate = function (array, start) {\n    array = exports.array.coerce(array);\n    if (exports.no(start))\n        start = 0;\n    return exports.zip(\n        exports.range(start, start + array.length),\n        array\n    );\n};\n\n// arithmetic, transitive, and logical operators\n\nexports.is = function (a, b) {\n    // <Mark Miller>\n    if (a === b)\n        // 0 === -0, but they are not identical\n        return a !== 0 || 1/a === 1/b;\n    // NaN !== NaN, but they are identical.\n    // NaNs are the only non-reflexive value, i.e., if a !== a,\n    // then a is a NaN.\n    return a !== a && b !== b;\n    // </Mark Miller>\n};\n\nexports.eq = exports.operator('eq', 2, function (a, b, stack) {\n    if (!stack)\n        stack = [];\n    if (a === b)\n        return true;\n    if (typeof a !== typeof b)\n        return false;\n    if (exports.no(a))\n        return exports.no(b);\n    if (a instanceof Date)\n        return a.valueOf() === b.valueOf();\n    if (a instanceof RegExp)\n        return a.source === b.source &&\n            a.global === b.global &&\n            a.ignoreCase === b.ignoreCase &&\n            a.multiline === b.multiline;\n    if (typeof a === \"function\") { \n        var caller = stack[stack.length - 1];\n        // XXX what is this for?  can it be axed?\n        // it comes from the \"equiv\" project code\n        return caller !== Object &&\n            typeof caller !== \"undefined\";\n    }\n    if (exports.isArrayLike(a))\n        return exports.array.eq(\n            a, b,\n            stack.concat([a.constructor])\n        );\n    if (typeof a === 'object')\n        return exports.object.eq(\n            a, b,\n            stack.concat([a.constructor])\n        );\n    return false;\n});\n\nexports.ne = exports.operator('ne', 2, function (a, b) {\n    return !exports.eq(a, b);\n});\n\nexports.lt = exports.operator('lt', 2, function (a, b) {\n    if (exports.no(a) != exports.no(b))\n        return exports.no(a) > exports.no(b);\n    if (exports.isArrayLike(a) && exports.isArrayLike(b))\n        return exports.array.lt(a, b);\n    return a < b;\n});\n\nexports.gt = exports.operator('gt', 2, function (a, b) {\n    return !(exports.lt(a, b) || exports.eq(a, b));\n});\n\nexports.le = exports.operator(2, 'le', function (a, b) {\n    return exports.lt(a, b) || exports.eq(a, b);\n});\n\nexports.ge = exports.operator(2, 'ge', function (a, b) {\n    return !exports.lt(a, b);\n});\n\nexports.mul = exports.operator(2, 'mul', function (a, b) {\n    if (typeof a == \"string\")\n        return exports.string.mul(a, b);\n    return a * b;\n});\n\n/*** by\n    returns a `comparator` that compares\n    values based on the values resultant from\n    a given `relation`.\n    accepts a `relation` and an optional comparator.\n\n    To sort a list of objects based on their\n    \"a\" key::\n\n        objects.sort(by(get(\"a\")))\n\n    To get those in descending order::\n\n        objects.sort(by(get(\"a\")), desc)\n\n    `by` returns a comparison function that also tracks\n    the arguments you used to construct it.  This permits\n    `sort` and `sorted` to perform a Schwartzian transform\n    which can increase the performance of the sort\n    by a factor of 2.\n*/\nexports.by = function (relation) {\n    var compare = arguments[1];\n    if (exports.no(compare))\n        compare = exports.compare;\n    var comparator = function (a, b) {\n        a = relation(a);\n        b = relation(b);\n        return compare(a, b);\n    };\n    comparator.by = relation;\n    comparator.compare = compare;\n    return comparator;\n};\n\nexports.compare = exports.operator(2, 'compare', function (a, b) {\n    if (exports.no(a) !== exports.no(b))\n        return exports.no(b) - exports.no(a);\n    if (typeof a === \"number\" && typeof b === \"number\")\n        return a - b;\n    return exports.eq(a, b) ? 0 : exports.lt(a, b) ? -1 : 1;\n});\n\n/*** sort\n    an in-place array sorter that uses a deep comparison\n    function by default (compare), and improves performance if\n    you provide a comparator returned by \"by\", using a\n    Schwartzian transform.\n*/\nexports.sort = function (array, compare) {\n    if (exports.no(compare))\n        compare = exports.compare;\n    if (compare.by) {\n        /* schwartzian transform */\n        array.splice.apply(\n            array,\n            [0, array.length].concat(\n                array.map(function (value) {\n                    return [compare.by(value), value];\n                }).sort(function (a, b) {\n                    return compare.compare(a[0], b[0]);\n                }).map(function (pair) {\n                    return pair[1];\n                })\n            )\n        );\n    } else {\n        array.sort(compare);\n    }\n    return array;\n};\n\n/*** sorted\n    returns a sorted copy of an array using a deep\n    comparison function by default (compare), and\n    improves performance if you provide a comparator\n    returned by \"by\", using a Schwartzian transform.\n*/\nexports.sorted = function (array, compare) {\n    return exports.sort(exports.array.copy(array), compare);\n};\n\nexports.reverse = function (array) {\n    return Array.prototype.reverse.call(array);\n};\n\nexports.reversed = function (array) {\n    return exports.reverse(exports.array.copy(array));\n};\n\nexports.hash = exports.operator(1, 'hash', function (object) {\n    return '' + object;\n});\n\nexports.unique = exports.operator(1, 'unique', function (array, eq, hash) {\n    var visited = {};\n    if (!eq) eq = exports.eq;\n    if (!hash) hash = exports.hash;\n    return array.filter(function (value) {\n        var bucket = exports.getset(visited, hash(value), []);\n        var finds = bucket.filter(function (other) {\n            return eq(value, other);\n        });\n        if (!finds.length)\n            bucket.push(value);\n        return !finds.length;\n    });\n});\n\n// string\n\nexports.string = exports.operator(1, 'toString', function (object) {\n    return '' + object;\n});\n\nexports.string.mul = function (string, n) {\n    return exports.range(n).map(function () {\n        return string;\n    }).join('');\n};\n\n/*** escape\n    escapes all characters of a string that are\n    special to JavaScript and many other languages.\n    Recognizes all of the relevant\n    control characters and formats all other\n    non-printable characters as Hex byte escape\n    sequences or Unicode escape sequences depending\n    on their size.\n\n    Pass ``true`` as an optional second argument and\n    ``escape`` produces valid contents for escaped\n    JSON strings, wherein non-printable-characters are\n    all escaped with the Unicode ``\\u`` notation.\n*/\n/* more Steve Levithan flagrence */\nvar escapeExpression = /[^ !#-[\\]-~]/g;\n/* from Doug Crockford's JSON library */\nvar escapePatterns = {\n    '\\b': '\\\\b',    '\\t': '\\\\t',\n    '\\n': '\\\\n',    '\\f': '\\\\f',    '\\r': '\\\\r',\n    '\"' : '\\\\\"',    '\\\\': '\\\\\\\\'\n};\nexports.escape = function (value, strictJson) {\n    if (typeof value != \"string\")\n        throw new Error(\n            module.path +\n            \"#escape: requires a string.  got \" +\n            exports.repr(value)\n        );\n    return value.replace(\n        escapeExpression, \n        function (match) {\n            if (escapePatterns[match])\n                return escapePatterns[match];\n            match = match.charCodeAt();\n            if (!strictJson && match < 256)\n                return \"\\\\x\" + exports.padBegin(match.toString(16), 2);\n            return '\\\\u' + exports.padBegin(match.toString(16), 4);\n        }\n    );\n};\n\n/*** enquote\n    transforms a string into a string literal, escaping\n    all characters of a string that are special to\n    JavaScript and and some other languages.\n\n    ``enquote`` uses double quotes to be JSON compatible.\n\n    Pass ``true`` as an optional second argument to\n    be strictly JSON compliant, wherein all\n    non-printable-characters are represented with\n    Unicode escape sequences.\n*/\nexports.enquote = function (value, strictJson) {\n    return '\"' + exports.escape(value, strictJson) + '\"';\n};\n\n/*** expand\n    transforms tabs to an equivalent number of spaces.\n*/\n// TODO special case for \\r if it ever matters\nexports.expand = function (str, tabLength) {\n    str = String(str);\n    tabLength = tabLength || 4;\n    var output = [],\n        tabLf = /[\\t\\n]/g,\n        lastLastIndex = 0,\n        lastLfIndex = 0,\n        charsAddedThisLine = 0,\n        tabOffset, match;\n    while (match = tabLf.exec(str)) {\n        if (match[0] == \"\\t\") {\n            tabOffset = (\n                tabLength - 1 -\n                (\n                    (match.index - lastLfIndex) +\n                    charsAddedThisLine\n                ) % tabLength\n            );\n            charsAddedThisLine += tabOffset;\n            output.push(\n                str.slice(lastLastIndex, match.index) +\n                exports.mul(\" \", tabOffset + 1)\n            );\n        } else if (match[0] === \"\\n\") {\n            output.push(str.slice(lastLastIndex, tabLf.lastIndex));\n            lastLfIndex = tabLf.lastIndex;\n            charsAddedThisLine = 0;\n        }\n        lastLastIndex = tabLf.lastIndex;\n    }\n    return output.join(\"\") + str.slice(lastLastIndex);\n};\n\nvar trimBeginExpression = /^\\s\\s*/g;\nexports.trimBegin = function (value) {\n    return String(value).replace(trimBeginExpression, \"\");  \n};\n\nvar trimEndExpression = /\\s\\s*$/g;\nexports.trimEnd = function (value) {\n    return String(value).replace(trimEndExpression, \"\");    \n};\n\nexports.trim = function (value) {\n    return String(value).replace(trimBeginExpression, \"\").replace(trimEndExpression, \"\");\n};\n\n/* generates padBegin and padEnd */\nvar augmentor = function (augment) {\n    return function (value, length, pad) {\n        if (exports.no(pad)) pad = '0';\n        if (exports.no(length)) length = 2;\n        value = String(value);\n        while (value.length < length) {\n            value = augment(value, pad);\n        }\n        return value;\n    };\n};\n\n/*** padBegin\n\n    accepts:\n     - a `String` or `Number` value\n     - a minimum length of the resultant `String`:\n       by default, 2\n     - a pad string: by default, ``'0'``.\n\n    returns a `String` of the value padded up to at least\n    the minimum length.  adds the padding to the begining\n    side of the `String`.\n\n*/\nexports.padBegin = augmentor(function (value, pad) {\n    return pad + value;\n});\n\n/*** padEnd\n\n    accepts:\n     - a `String` or `Number` value\n     - a minimum length of the resultant `String`:\n       by default, 2\n     - a pad string: by default, ``'0'``.\n\n    returns a `String` of the value padded up to at least\n    the minimum length.  adds the padding to the end\n    side of the `String`.\n\n*/\nexports.padEnd = augmentor(function (value, pad) {\n    return value + pad;\n});\n\n/*** splitName\n    splits a string into an array of words from an original\n    string.\n*/\n// thanks go to Steve Levithan for this regular expression\n// that, in addition to splitting any normal-form identifier\n// in any case convention, splits XMLHttpRequest into\n// \"XML\", \"Http\", and \"Request\"\nvar splitNameExpression = /[a-z]+|[A-Z](?:[a-z]+|[A-Z]*(?![a-z]))|[.\\d]+/g;\nexports.splitName = function (value) {\n    var result = String(value).match(splitNameExpression);\n    if (result)\n        return result;\n    return [value];\n};\n\n/*** joinName\n    joins a list of words with a given delimiter\n    between alphanumeric words.\n*/\nexports.joinName = function (delimiter, parts) {\n    if (exports.no(delimiter)) delimiter = '_';\n    parts.unshift([]);\n    return parts.reduce(function (parts, part) {\n        if (\n            part.match(/\\d/) &&\n            exports.len(parts) && parts[parts.length-1].match(/\\d/)\n        ) {\n            return parts.concat([delimiter + part]);\n        } else {\n            return parts.concat([part]);\n        }\n    }).join('');\n};\n\n/*** upper\n    converts a name to ``UPPER CASE`` using\n    a given delimiter between numeric words.\n\n    see:\n     - `lower`\n     - `camel`\n     - `title`\n\n*/\nexports.upper = function (value, delimiter) {\n    if (exports.no(delimiter))\n        return value.toUpperCase();\n    return exports.splitName(value).map(function (part) {\n        return part.toUpperCase();\n    }).join(delimiter);\n};\n\n/*** lower\n    converts a name to a ``lower case`` using\n    a given delimiter between numeric words.\n\n    see:\n     - `upper`\n     - `camel`\n     - `title`\n\n*/\nexports.lower = function (value, delimiter) {\n    if (exports.no(delimiter))\n        return String(value).toLowerCase();\n    return exports.splitName(value).map(function (part) {\n        return part.toLowerCase();\n    }).join(delimiter);\n};\n\n/*** camel\n    converts a name to ``camel Case`` using\n    a given delimiter between numeric words.\n\n    see:\n     - `lower`\n     - `upper`\n     - `title`\n\n*/\nexports.camel = function (value, delimiter) {\n    return exports.joinName(\n        delimiter,\n        exports.mapApply(\n            exports.enumerate(exports.splitName(value)),\n            function (n, part) {\n                if (n) {\n                    return (\n                        part.substring(0, 1).toUpperCase() +\n                        part.substring(1).toLowerCase()\n                    );\n                } else {\n                    return part.toLowerCase();\n                }\n            }\n        )\n    );\n};\n\n/*** title\n    converts a name to ``Title Case`` using\n    a given delimiter between numeric words.\n\n    see:\n     - `lower`\n     - `upper`\n     - `camel`\n\n*/\nexports.title = function (value, delimiter) {\n    return exports.joinName(\n        delimiter,\n        exports.splitName(value).map(function (part) {\n            return (\n                part.substring(0, 1).toUpperCase() +\n                part.substring(1).toLowerCase()\n            );\n        })\n    );\n};\n\n",
              "globals": {
                "exports": {
                  "type": "reference"
                },
                "Object": {
                  "type": "reference"
                },
                "variadicHelper": {
                  "type": "call"
                },
                "Array": {
                  "type": "reference"
                },
                "Math": {
                  "type": "reference"
                },
                "String": {
                  "type": "call"
                },
                "i": {
                  "type": "reference"
                },
                "escapeExpression": {
                  "type": "assign"
                },
                "escapePatterns": {
                  "type": "assign"
                },
                "trimBeginExpression": {
                  "type": "assign"
                },
                "trimEndExpression": {
                  "type": "assign"
                },
                "augmentor": {
                  "type": "assign"
                },
                "splitNameExpression": {
                  "type": "assign"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {},
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../pinf-bridgelib-js/lib';",
              "code": "function(require, exports, module) {var __dirname = '../../pinf-bridgelib-js/lib';\n\n// -- kriskowal Kris Kowal Copyright (C) 2009-2010 MIT License\n// -- isaacs Isaac Schlueter\n// -- nrstott Nathan Stott\n// -- fitzgen Nick Fitzgerald\n// -- nevilleburnell Neville Burnell\n// -- cadorn Christoph Dorn\n\n// a decorator for functions that curry \"polymorphically\",\n// that is, that return a function that can be tested\n// against various objects if they're only \"partially\n// completed\", or fewer arguments than needed are used.\n// \n// this enables the idioms:\n//      [1, 2, 3].every(lt(4)) eq true\n//      [1, 2, 3].map(add(1)) eq [2, 3, 4]\n//      [{}, {}, {}].forEach(set('a', 10))\n//\nexports.operator = function (name, length, block) {\n    var operator = function () {\n        var args = exports.array(arguments);\n        var completion = function (object) {\n            if (\n                typeof object == \"object\" &&\n                object !== null && // seriously?  typeof null == \"object\"\n                name in object && // would throw if object === null\n                // not interested in literal objects:\n                !Object.prototype.hasOwnProperty.call(object, name)\n            )\n                return object[name].apply(object, args);\n            return block.apply(\n                this,\n                [object].concat(args)\n            );\n        };\n        if (arguments.length < length) {\n            // polymoprhic curry, delayed completion\n            return completion;\n        } else {\n            // immediate completion\n            return completion.call(this, args.shift());\n        }\n    };\n    operator.name = name;\n    operator.displayName = name;\n    operator.length = length;\n    operator.operator = block;\n    return operator;\n};\n\nexports.no = function (value) {\n    return value === null || value === undefined;\n};\n\n// object\n\nexports.object = exports.operator('toObject', 1, function (object) {\n    var items = object;\n    if (!items.length)\n        items = exports.items(object);\n    var copy = {};\n    for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n        var key = item[0];\n        var value = item[1];\n        copy[key] = value;\n    }\n    return copy;\n});\n\nexports.object.copy = function (object) {\n    var copy = {};\n    exports.object.keys(object).forEach(function (key) {\n        copy[key] = object[key];\n    });\n    return copy;\n};\n\nexports.object.deepCopy = function (object) {\n    var copy = {};\n    exports.object.keys(object).forEach(function (key) {\n        copy[key] = exports.deepCopy(object[key]);\n    });\n    return copy;\n};\n\nexports.object.eq = function (a, b, stack) {\n    return (\n        !exports.no(a) && !exports.no(b) &&\n        exports.array.eq(\n            exports.sort(exports.object.keys(a)),\n            exports.sort(exports.object.keys(b))\n        ) &&\n        exports.object.keys(a).every(function (key) {\n            return exports.eq(a[key], b[key], stack);\n        })\n    );\n};\n\nexports.object.len = function (object) {\n    return exports.object.keys(object).length;\n};\n\nexports.object.has = function (object, key) {\n    return Object.prototype.hasOwnProperty.call(object, key);\n};\n\nexports.object.keys = function (object) {\n    var keys = [];\n    for (var key in object) {\n        if (exports.object.has(object, key))\n            keys.push(key);\n    }\n    return keys;\n};\n\nexports.object.values = function (object) {\n    var values = [];\n    exports.object.keys(object).forEach(function (key) {\n        values.push(object[key]);\n    });\n    return values;\n};\n\nexports.object.items = function (object) {\n    var items = [];\n    exports.object.keys(object).forEach(function (key) {\n        items.push([key, object[key]]);\n    });\n    return items;\n};\n\n/**\n * Updates an object with the properties from another object.\n * This function is variadic requiring a minimum of two arguments.\n * The first argument is the object to update.  Remaining arguments\n * are considered the sources for the update.  If multiple sources\n * contain values for the same property, the last one with that\n * property in the arguments list wins.\n *\n * example usage:\n * util.update({}, { hello: \"world\" });  // -> { hello: \"world\" }\n * util.update({}, { hello: \"world\" }, { hello: \"le monde\" }); // -> { hello: \"le monde\" }\n *\n * @returns Updated object\n * @type Object\n *\n */\nexports.object.update = function () {\n    return variadicHelper(arguments, function(target, source) {\n        var key;\n        for (key in source) {\n            if (exports.object.has(source, key)) {\n                target[key] = source[key];\n            }\n        }\n    });\n};\n\nexports.object.deepUpdate = function (target, source) {\n    var key;\n\tfor (key in source) {\n        if(exports.object.has(source, key)) {\n            if(typeof source[key] == \"object\" && exports.object.has(target, key)) {\n                exports.object.deepUpdate(target[key], source[key]);\n            } else {\n                target[key] = source[key];\n            }\n        }\n    }\n};\n\n/**\n * Updates an object with the properties of another object(s) if those\n * properties are not already defined for the target object. First argument is\n * the object to complete, the remaining arguments are considered sources to\n * complete from. If multiple sources contain the same property, the value of\n * the first source with that property will be the one inserted in to the\n * target.\n *\n * example usage:\n * util.complete({}, { hello: \"world\" });  // -> { hello: \"world\" }\n * util.complete({ hello: \"narwhal\" }, { hello: \"world\" }); // -> { hello: \"narwhal\" }\n * util.complete({}, { hello: \"world\" }, { hello: \"le monde\" }); // -> { hello: \"world\" }\n *\n * @returns Completed object\n * @type Object\n *\n */\nexports.object.complete = function () {\n    return variadicHelper(arguments, function(target, source) {\n        var key;\n        for (key in source) {\n            if (\n                exports.object.has(source, key) &&\n                !exports.object.has(target, key)\n            ) {\n                target[key] = source[key];\n            }\n        }\n    });\n};\n\nexports.object.deepComplete = function () {\n    return variadicHelper(arguments, function (target, source) {\n        var key;\n        for (key in source) {\n            if (\n                exports.object.has(source, key) &&\n                !exports.object.has(target, key)\n            ) {\n                target[key] = exports.deepCopy(source[key]);\n            }\n        }\n    });\n};\n\nexports.object.deepDiff = function () {\n    var sources = Array.prototype.slice.call(arguments);\n    var diff = exports.deepCopy(sources.shift());\n    return variadicHelper([diff].concat(sources), function (diff, source) {\n        var key;\n        for (key in source) {\n            if(exports.object.has(source, key)) {\n                if(exports.object.has(diff, key)) {\n                    if(exports.deepEqual(diff[key], source[key])) {\n                        delete diff[key];\n                    } else {\n                        if(!exports.isArrayLike(diff[key])) {\n                            diff[key] = exports.deepDiff(diff[key], source[key]);\n                        }\n                    }\n                }\n            }\n        }\n    });\n};\n\nexports.object.repr = function (object) {\n    return \"{\" +\n        exports.object.keys(object)\n        .map(function (key) {\n            return exports.enquote(key) + \": \" +\n                exports.repr(object[key]);\n        }).join(\", \") +\n    \"}\";\n};\n\n/**\n * @param args Arguments list of the calling function\n * First argument should be a callback that takes target and source parameters.\n * Second argument should be target.\n * Remaining arguments are treated a sources.\n *\n * @returns Target\n * @type Object\n */\nvar variadicHelper = function (args, callback) {\n    var sources = Array.prototype.slice.call(args);\n    var target = sources.shift();\n\n    sources.forEach(function(source) {\n        callback(target, source);\n    });\n\n    return target;\n};\n\n// array\n\nexports.array = function (array) {\n    if (exports.no(array))\n        return [];\n    if (!exports.isArrayLike(array)) {\n        if (\n            array.toArray &&\n            !Object.prototype.hasOwnProperty.call(array, 'toArray')\n        ) {\n            return array.toArray();\n        } else if (\n            array.forEach &&\n            !Object.prototype.hasOwnProperty.call(array, 'forEach')\n        ) {\n            var results = [];\n            array.forEach(function (value) {\n                results.push(value);\n            });\n            return results;\n        } else if (typeof array === \"string\") {\n            return Array.prototype.slice.call(array);\n        } else {\n            return exports.items(array);\n        }\n    }\n    return Array.prototype.slice.call(array);\n};\n\nexports.array.coerce = function (array) {\n    if (!Array.isArray(array))\n        return exports.array(array);\n    return array;\n};\n\nexports.isArrayLike = function(object) {\n    return Array.isArray(object) || exports.isArguments(object);\n};\n\n// from http://code.google.com/p/google-caja/wiki/NiceNeighbor\n// by \"kangax\"\n//\n// Mark Miller posted a solution that will work in ES5 compliant\n// implementations, that may provide future insight:\n// (http://groups.google.com/group/narwhaljs/msg/116097568bae41c6)\nexports.isArguments = function (object) {\n    // ES5 reliable positive\n    if (Object.prototype.toString.call(object) == \"[object Arguments]\")\n        return true;\n    // for ES5, we will still need a way to distinguish false negatives\n    //  from the following code (in ES5, it is possible to create\n    //  an object that satisfies all of these constraints but is\n    //  not an Arguments object).\n    // callee should exist\n    if (\n        !typeof object == \"object\" ||\n        !Object.prototype.hasOwnProperty.call(object, 'callee') ||\n        !object.callee || \n        // It should be a Function object ([[Class]] === 'Function')\n        Object.prototype.toString.call(object.callee) !== '[object Function]' ||\n        typeof object.length != 'number'\n    )\n        return false;\n    for (var name in object) {\n        // both \"callee\" and \"length\" should be { DontEnum }\n        if (name === 'callee' || name === 'length') return false;\n    }\n    return true;\n};\n\nexports.array.copy = exports.array;\n\nexports.array.deepCopy = function (array) {\n    return array.map(exports.deepCopy);\n};\n\nexports.array.len = function (array) {\n    return array.length;\n};\n\nexports.array.has = function (array, value) {\n    return Array.prototype.indexOf.call(array, value) >= 0;\n};\n\nexports.array.put = function (array, key, value) {\n    array.splice(key, 0, value);\n    return array;\n};\n\nexports.array.del = function (array, begin, end) {\n    array.splice(begin, end === undefined ? 1 : (end - begin));\n    return array;\n};\n\nexports.array.eq = function (a, b, stack) {\n    return exports.isArrayLike(b) &&\n        a.length == b.length &&\n        exports.zip(a, b).every(exports.apply(function (a, b) {\n            return exports.eq(a, b, stack);\n        }));\n};\n\nexports.array.lt = function (a, b) {\n    var length = Math.max(a.length, b.length);\n    for (var i = 0; i < length; i++)\n        if (!exports.eq(a[i], b[i]))\n            return exports.lt(a[i], b[i]);\n    return false;\n};\n\nexports.array.repr = function (array) {\n    return \"[\" + exports.map(array, exports.repr).join(', ') + \"]\";\n};\n\nexports.array.first = function (array) {\n    return array[0];\n};\n\nexports.array.last = function (array) {\n    return array[array.length - 1];\n};\n\nexports.apply = exports.operator('apply', 2, function (args, block) {\n    return block.apply(this, args);\n});\n\nexports.copy = exports.operator('copy', 1, function (object) {\n    if (exports.no(object))\n        return object;\n    if (exports.isArrayLike(object))\n        return exports.array.copy(object);\n    if (object instanceof Date)\n        return object;\n    if (typeof object == 'object')\n        return exports.object.copy(object);\n    return object;\n});\n\nexports.deepCopy = exports.operator('deepCopy', 1, function (object) {\n    if (exports.no(object))\n        return object;\n    if (exports.isArrayLike(object))\n        return exports.array.deepCopy(object);\n    if (typeof object == 'object')\n        return exports.object.deepCopy(object);\n    return object;\n});\n\nexports.repr = exports.operator('repr', 1, function (object) {\n    if (exports.no(object))\n        return String(object);\n    if (exports.isArrayLike(object))\n        return exports.array.repr(object);\n    if (typeof object == 'object' && !(object instanceof Date))\n        return exports.object.repr(object);\n    if (typeof object == 'string')\n        return exports.enquote(object);\n    return object.toString();\n});\n\nexports.keys = exports.operator('keys', 1, function (object) {\n    if (exports.isArrayLike(object))\n        return exports.range(object.length);\n    else if (typeof object == 'object')\n        return exports.object.keys(object);\n    return [];\n});\n\nexports.values = exports.operator('values', 1, function (object) {\n    if (exports.isArrayLike(object))\n        return exports.array(object);\n    else if (typeof object == 'object')\n        return exports.object.values(object);\n    return [];\n});\n\nexports.items = exports.operator('items', 1, function (object) {\n    if (exports.isArrayLike(object) || typeof object == \"string\")\n        return exports.enumerate(object);\n    else if (typeof object == 'object')\n        return exports.object.items(object);\n    return [];\n});\n\nexports.len = exports.operator('len', 1, function (object) {\n    if (exports.isArrayLike(object))\n        return exports.array.len(object);\n    else if (typeof object == 'object')\n        return exports.object.len(object);\n});\n\nexports.has = exports.operator('has', 2, function (object, value) {\n    if (exports.isArrayLike(object))\n        return exports.array.has(object, value);\n    else if (typeof object == 'object')\n        return exports.object.has(object, value);\n    return false;\n});\n\nexports.get = exports.operator('get', 2, function (object, key, value) {\n    if (typeof object == \"string\") {\n        if (!typeof key == \"number\")\n            throw new Error(\"TypeError: String keys must be numbers\");\n        if (!exports.has(exports.range(object.length), key)) {\n            if (arguments.length == 3)\n                return value;\n            throw new Error(\"KeyError: \" + exports.repr(key));\n        }\n        return object.charAt(key);\n    }\n    if (typeof object == \"object\") {\n        if (!exports.object.has(object, key)) {\n            if (arguments.length == 3)\n                return value;\n            throw new Error(\"KeyError: \" + exports.repr(key));\n        }\n        return object[key];\n    } \n    throw new Error(\"Object does not have keys: \" + exports.repr(object));\n});\n\nexports.set = exports.operator('set', 3, function (object, key, value) {\n    object[key] = value;\n    return object;\n});\n\nexports.getset = exports.operator('getset', 3, function (object, key, value) {\n    if (!exports.has(object, key))\n        exports.set(object, key, value);\n    return exports.get(object, key);\n});\n\nexports.del = exports.operator('del', 2, function (object, begin, end) {\n    if (exports.isArrayLike(object))\n        return exports.array.del(object, begin, end);\n    delete object[begin];\n    return object;\n});\n\nexports.cut = exports.operator('cut', 2, function (object, key) {\n    var result = exports.get(object, key);\n    exports.del(object, key);\n    return result;\n});\n\nexports.put = exports.operator('put', 2, function (object, key, value) {\n    if (exports.isArrayLike(object))\n        return exports.array.put(object, key, value);\n    return exports.set(object, key, value);\n});\n\nexports.first = exports.operator('first', 1, function (object) {\n    return object[0];\n});\n\nexports.last = exports.operator('last', 1, function (object) {\n    return object[object.length - 1];\n});\n\nexports.update = exports.operator('update', 2, function () {\n    var args = Array.prototype.slice.call(arguments);\n    return exports.object.update.apply(this, args);\n});\n\nexports.deepUpdate = exports.operator('deepUpdate', 2, function (target, source) {\n    exports.object.deepUpdate(target, source);\n});\n\nexports.complete = exports.operator('complete', 2, function (target, source) {\n    var args = Array.prototype.slice.call(arguments);\n    return exports.object.complete.apply(this, args);\n});\n\nexports.deepComplete = exports.operator('deepComplete', 2, function (target, source) {\n    var args = Array.prototype.slice.call(arguments);\n    return exports.object.deepComplete.apply(this, args);\n});\n\nexports.deepDiff = exports.operator('deepDiff', 2, function (target, source) {\n    var args = Array.prototype.slice.call(arguments);\n    return exports.object.deepDiff.apply(this, args);\n});\n\nexports.deepEqual = function(actual, expected) {\n    \n    // 7.1. All identical values are equivalent, as determined by ===.\n    if (actual === expected) {\n        return true;\n\n    // 7.2. If the expected value is a Date object, the actual value is\n    // equivalent if it is also a Date object that refers to the same time.\n    } else if (actual instanceof Date && expected instanceof Date) {\n        return actual.getTime() === expected.getTime();\n\n    // 7.3. Other pairs that do not both pass typeof value == \"object\",\n    // equivalence is determined by ==.\n    } else if (typeof actual != 'object' && typeof expected != 'object') {\n        return actual == expected;\n\n    // XXX specification bug: this should be specified\n    } else if (typeof expected == \"string\" || typeof actual == \"string\") {\n        return expected == actual;\n\n    // 7.4. For all other Object pairs, including Array objects, equivalence is\n    // determined by having the same number of owned properties (as verified\n    // with Object.prototype.hasOwnProperty.call), the same set of keys\n    // (although not necessarily the same order), equivalent values for every\n    // corresponding key, and an identical \"prototype\" property. Note: this\n    // accounts for both named and indexed properties on Arrays.\n    } else {\n        return actual.prototype === expected.prototype && exports.object.eq(actual, expected);\n    }\n}\n\nexports.remove = exports.operator('remove', 2, function (list, value) {\n    var index;\n    if ((index = list.indexOf(value))>-1)\n        list.splice(index,1);\n    return list;\n});\n\n// TODO insert\n// TODO discard\n\nexports.range = function () {\n    var start = 0, stop = 0, step = 1;\n    if (arguments.length == 1) {\n        stop = arguments[0];\n    } else {\n        start = arguments[0];\n        stop = arguments[1];\n        step = arguments[2] || 1;\n    }\n    var range = [];\n    for (var i = start; i < stop; i += step)\n        range.push(i);\n    return range;\n};\n\nexports.forEach = function (array, block) {\n    Array.prototype.forEach.call(\n        exports.array.coerce(array),\n        block\n    );\n};\n\nexports.forEachApply = function (array, block) {\n    Array.prototype.forEach.call(\n        exports.array.coerce(array),\n        exports.apply(block)\n    );\n};\n\nexports.map = function (array, block, context) {\n    return Array.prototype.map.call(\n        exports.array.coerce(array),\n        block,\n        context\n    );\n};\n\nexports.mapApply = function (array, block) {\n    return Array.prototype.map.call(\n        exports.array.coerce(array),\n        exports.apply(block)\n    );\n};\n\nexports.every = exports.operator('every', 2, function (array, block, context) {\n    return exports.all(exports.map(array, block, context));\n});\n\nexports.some = exports.operator('some', 2, function (array, block, context) {\n    return exports.any(exports.map(array, block, context));\n});\n\nexports.all = exports.operator('all', 1, function (array) {\n    array = exports.array.coerce(array);\n    for (var i = 0; i < array.length; i++)\n        if (!array[i])\n            return false;\n    return true;\n});\n\nexports.any = exports.operator('all', 1, function (array) {\n    array = exports.array.coerce(array);\n    for (var i = 0; i < array.length; i++)\n        if (array[i])\n            return true;\n    return false;\n});\n\nexports.reduce = exports.operator('reduce', 2, function (array, block, basis) {\n    array = exports.array.coerce(array);\n    return array.reduce.apply(array, arguments);\n});\n\nexports.reduceRight = exports.operator('reduceRight', 2, function (array, block, basis) {\n    array = exports.array.coerce(array);\n    return array.reduceRight.apply(array, arguments);\n});\n\nexports.zip = function () {\n    return exports.transpose(arguments);\n};\n\nexports.transpose = function (array) {\n    array = exports.array.coerce(array);\n    var transpose = [];\n    var length = Math.min.apply(this, exports.map(array, function (row) {\n        return row.length;\n    }));\n    for (var i = 0; i < array.length; i++) {\n        var row = array[i];\n        for (var j = 0; j < length; j++) {\n            var cell = row[j];\n            if (!transpose[j])\n                transpose[j] = [];\n            transpose[j][i] = cell;\n        }\n    }\n    return transpose;\n};\n\nexports.enumerate = function (array, start) {\n    array = exports.array.coerce(array);\n    if (exports.no(start))\n        start = 0;\n    return exports.zip(\n        exports.range(start, start + array.length),\n        array\n    );\n};\n\n// arithmetic, transitive, and logical operators\n\nexports.is = function (a, b) {\n    // <Mark Miller>\n    if (a === b)\n        // 0 === -0, but they are not identical\n        return a !== 0 || 1/a === 1/b;\n    // NaN !== NaN, but they are identical.\n    // NaNs are the only non-reflexive value, i.e., if a !== a,\n    // then a is a NaN.\n    return a !== a && b !== b;\n    // </Mark Miller>\n};\n\nexports.eq = exports.operator('eq', 2, function (a, b, stack) {\n    if (!stack)\n        stack = [];\n    if (a === b)\n        return true;\n    if (typeof a !== typeof b)\n        return false;\n    if (exports.no(a))\n        return exports.no(b);\n    if (a instanceof Date)\n        return a.valueOf() === b.valueOf();\n    if (a instanceof RegExp)\n        return a.source === b.source &&\n            a.global === b.global &&\n            a.ignoreCase === b.ignoreCase &&\n            a.multiline === b.multiline;\n    if (typeof a === \"function\") { \n        var caller = stack[stack.length - 1];\n        // XXX what is this for?  can it be axed?\n        // it comes from the \"equiv\" project code\n        return caller !== Object &&\n            typeof caller !== \"undefined\";\n    }\n    if (exports.isArrayLike(a))\n        return exports.array.eq(\n            a, b,\n            stack.concat([a.constructor])\n        );\n    if (typeof a === 'object')\n        return exports.object.eq(\n            a, b,\n            stack.concat([a.constructor])\n        );\n    return false;\n});\n\nexports.ne = exports.operator('ne', 2, function (a, b) {\n    return !exports.eq(a, b);\n});\n\nexports.lt = exports.operator('lt', 2, function (a, b) {\n    if (exports.no(a) != exports.no(b))\n        return exports.no(a) > exports.no(b);\n    if (exports.isArrayLike(a) && exports.isArrayLike(b))\n        return exports.array.lt(a, b);\n    return a < b;\n});\n\nexports.gt = exports.operator('gt', 2, function (a, b) {\n    return !(exports.lt(a, b) || exports.eq(a, b));\n});\n\nexports.le = exports.operator(2, 'le', function (a, b) {\n    return exports.lt(a, b) || exports.eq(a, b);\n});\n\nexports.ge = exports.operator(2, 'ge', function (a, b) {\n    return !exports.lt(a, b);\n});\n\nexports.mul = exports.operator(2, 'mul', function (a, b) {\n    if (typeof a == \"string\")\n        return exports.string.mul(a, b);\n    return a * b;\n});\n\n/*** by\n    returns a `comparator` that compares\n    values based on the values resultant from\n    a given `relation`.\n    accepts a `relation` and an optional comparator.\n\n    To sort a list of objects based on their\n    \"a\" key::\n\n        objects.sort(by(get(\"a\")))\n\n    To get those in descending order::\n\n        objects.sort(by(get(\"a\")), desc)\n\n    `by` returns a comparison function that also tracks\n    the arguments you used to construct it.  This permits\n    `sort` and `sorted` to perform a Schwartzian transform\n    which can increase the performance of the sort\n    by a factor of 2.\n*/\nexports.by = function (relation) {\n    var compare = arguments[1];\n    if (exports.no(compare))\n        compare = exports.compare;\n    var comparator = function (a, b) {\n        a = relation(a);\n        b = relation(b);\n        return compare(a, b);\n    };\n    comparator.by = relation;\n    comparator.compare = compare;\n    return comparator;\n};\n\nexports.compare = exports.operator(2, 'compare', function (a, b) {\n    if (exports.no(a) !== exports.no(b))\n        return exports.no(b) - exports.no(a);\n    if (typeof a === \"number\" && typeof b === \"number\")\n        return a - b;\n    return exports.eq(a, b) ? 0 : exports.lt(a, b) ? -1 : 1;\n});\n\n/*** sort\n    an in-place array sorter that uses a deep comparison\n    function by default (compare), and improves performance if\n    you provide a comparator returned by \"by\", using a\n    Schwartzian transform.\n*/\nexports.sort = function (array, compare) {\n    if (exports.no(compare))\n        compare = exports.compare;\n    if (compare.by) {\n        /* schwartzian transform */\n        array.splice.apply(\n            array,\n            [0, array.length].concat(\n                array.map(function (value) {\n                    return [compare.by(value), value];\n                }).sort(function (a, b) {\n                    return compare.compare(a[0], b[0]);\n                }).map(function (pair) {\n                    return pair[1];\n                })\n            )\n        );\n    } else {\n        array.sort(compare);\n    }\n    return array;\n};\n\n/*** sorted\n    returns a sorted copy of an array using a deep\n    comparison function by default (compare), and\n    improves performance if you provide a comparator\n    returned by \"by\", using a Schwartzian transform.\n*/\nexports.sorted = function (array, compare) {\n    return exports.sort(exports.array.copy(array), compare);\n};\n\nexports.reverse = function (array) {\n    return Array.prototype.reverse.call(array);\n};\n\nexports.reversed = function (array) {\n    return exports.reverse(exports.array.copy(array));\n};\n\nexports.hash = exports.operator(1, 'hash', function (object) {\n    return '' + object;\n});\n\nexports.unique = exports.operator(1, 'unique', function (array, eq, hash) {\n    var visited = {};\n    if (!eq) eq = exports.eq;\n    if (!hash) hash = exports.hash;\n    return array.filter(function (value) {\n        var bucket = exports.getset(visited, hash(value), []);\n        var finds = bucket.filter(function (other) {\n            return eq(value, other);\n        });\n        if (!finds.length)\n            bucket.push(value);\n        return !finds.length;\n    });\n});\n\n// string\n\nexports.string = exports.operator(1, 'toString', function (object) {\n    return '' + object;\n});\n\nexports.string.mul = function (string, n) {\n    return exports.range(n).map(function () {\n        return string;\n    }).join('');\n};\n\n/*** escape\n    escapes all characters of a string that are\n    special to JavaScript and many other languages.\n    Recognizes all of the relevant\n    control characters and formats all other\n    non-printable characters as Hex byte escape\n    sequences or Unicode escape sequences depending\n    on their size.\n\n    Pass ``true`` as an optional second argument and\n    ``escape`` produces valid contents for escaped\n    JSON strings, wherein non-printable-characters are\n    all escaped with the Unicode ``\\u`` notation.\n*/\n/* more Steve Levithan flagrence */\nvar escapeExpression = /[^ !#-[\\]-~]/g;\n/* from Doug Crockford's JSON library */\nvar escapePatterns = {\n    '\\b': '\\\\b',    '\\t': '\\\\t',\n    '\\n': '\\\\n',    '\\f': '\\\\f',    '\\r': '\\\\r',\n    '\"' : '\\\\\"',    '\\\\': '\\\\\\\\'\n};\nexports.escape = function (value, strictJson) {\n    if (typeof value != \"string\")\n        throw new Error(\n            module.path +\n            \"#escape: requires a string.  got \" +\n            exports.repr(value)\n        );\n    return value.replace(\n        escapeExpression, \n        function (match) {\n            if (escapePatterns[match])\n                return escapePatterns[match];\n            match = match.charCodeAt();\n            if (!strictJson && match < 256)\n                return \"\\\\x\" + exports.padBegin(match.toString(16), 2);\n            return '\\\\u' + exports.padBegin(match.toString(16), 4);\n        }\n    );\n};\n\n/*** enquote\n    transforms a string into a string literal, escaping\n    all characters of a string that are special to\n    JavaScript and and some other languages.\n\n    ``enquote`` uses double quotes to be JSON compatible.\n\n    Pass ``true`` as an optional second argument to\n    be strictly JSON compliant, wherein all\n    non-printable-characters are represented with\n    Unicode escape sequences.\n*/\nexports.enquote = function (value, strictJson) {\n    return '\"' + exports.escape(value, strictJson) + '\"';\n};\n\n/*** expand\n    transforms tabs to an equivalent number of spaces.\n*/\n// TODO special case for \\r if it ever matters\nexports.expand = function (str, tabLength) {\n    str = String(str);\n    tabLength = tabLength || 4;\n    var output = [],\n        tabLf = /[\\t\\n]/g,\n        lastLastIndex = 0,\n        lastLfIndex = 0,\n        charsAddedThisLine = 0,\n        tabOffset, match;\n    while (match = tabLf.exec(str)) {\n        if (match[0] == \"\\t\") {\n            tabOffset = (\n                tabLength - 1 -\n                (\n                    (match.index - lastLfIndex) +\n                    charsAddedThisLine\n                ) % tabLength\n            );\n            charsAddedThisLine += tabOffset;\n            output.push(\n                str.slice(lastLastIndex, match.index) +\n                exports.mul(\" \", tabOffset + 1)\n            );\n        } else if (match[0] === \"\\n\") {\n            output.push(str.slice(lastLastIndex, tabLf.lastIndex));\n            lastLfIndex = tabLf.lastIndex;\n            charsAddedThisLine = 0;\n        }\n        lastLastIndex = tabLf.lastIndex;\n    }\n    return output.join(\"\") + str.slice(lastLastIndex);\n};\n\nvar trimBeginExpression = /^\\s\\s*/g;\nexports.trimBegin = function (value) {\n    return String(value).replace(trimBeginExpression, \"\");  \n};\n\nvar trimEndExpression = /\\s\\s*$/g;\nexports.trimEnd = function (value) {\n    return String(value).replace(trimEndExpression, \"\");    \n};\n\nexports.trim = function (value) {\n    return String(value).replace(trimBeginExpression, \"\").replace(trimEndExpression, \"\");\n};\n\n/* generates padBegin and padEnd */\nvar augmentor = function (augment) {\n    return function (value, length, pad) {\n        if (exports.no(pad)) pad = '0';\n        if (exports.no(length)) length = 2;\n        value = String(value);\n        while (value.length < length) {\n            value = augment(value, pad);\n        }\n        return value;\n    };\n};\n\n/*** padBegin\n\n    accepts:\n     - a `String` or `Number` value\n     - a minimum length of the resultant `String`:\n       by default, 2\n     - a pad string: by default, ``'0'``.\n\n    returns a `String` of the value padded up to at least\n    the minimum length.  adds the padding to the begining\n    side of the `String`.\n\n*/\nexports.padBegin = augmentor(function (value, pad) {\n    return pad + value;\n});\n\n/*** padEnd\n\n    accepts:\n     - a `String` or `Number` value\n     - a minimum length of the resultant `String`:\n       by default, 2\n     - a pad string: by default, ``'0'``.\n\n    returns a `String` of the value padded up to at least\n    the minimum length.  adds the padding to the end\n    side of the `String`.\n\n*/\nexports.padEnd = augmentor(function (value, pad) {\n    return value + pad;\n});\n\n/*** splitName\n    splits a string into an array of words from an original\n    string.\n*/\n// thanks go to Steve Levithan for this regular expression\n// that, in addition to splitting any normal-form identifier\n// in any case convention, splits XMLHttpRequest into\n// \"XML\", \"Http\", and \"Request\"\nvar splitNameExpression = /[a-z]+|[A-Z](?:[a-z]+|[A-Z]*(?![a-z]))|[.\\d]+/g;\nexports.splitName = function (value) {\n    var result = String(value).match(splitNameExpression);\n    if (result)\n        return result;\n    return [value];\n};\n\n/*** joinName\n    joins a list of words with a given delimiter\n    between alphanumeric words.\n*/\nexports.joinName = function (delimiter, parts) {\n    if (exports.no(delimiter)) delimiter = '_';\n    parts.unshift([]);\n    return parts.reduce(function (parts, part) {\n        if (\n            part.match(/\\d/) &&\n            exports.len(parts) && parts[parts.length-1].match(/\\d/)\n        ) {\n            return parts.concat([delimiter + part]);\n        } else {\n            return parts.concat([part]);\n        }\n    }).join('');\n};\n\n/*** upper\n    converts a name to ``UPPER CASE`` using\n    a given delimiter between numeric words.\n\n    see:\n     - `lower`\n     - `camel`\n     - `title`\n\n*/\nexports.upper = function (value, delimiter) {\n    if (exports.no(delimiter))\n        return value.toUpperCase();\n    return exports.splitName(value).map(function (part) {\n        return part.toUpperCase();\n    }).join(delimiter);\n};\n\n/*** lower\n    converts a name to a ``lower case`` using\n    a given delimiter between numeric words.\n\n    see:\n     - `upper`\n     - `camel`\n     - `title`\n\n*/\nexports.lower = function (value, delimiter) {\n    if (exports.no(delimiter))\n        return String(value).toLowerCase();\n    return exports.splitName(value).map(function (part) {\n        return part.toLowerCase();\n    }).join(delimiter);\n};\n\n/*** camel\n    converts a name to ``camel Case`` using\n    a given delimiter between numeric words.\n\n    see:\n     - `lower`\n     - `upper`\n     - `title`\n\n*/\nexports.camel = function (value, delimiter) {\n    return exports.joinName(\n        delimiter,\n        exports.mapApply(\n            exports.enumerate(exports.splitName(value)),\n            function (n, part) {\n                if (n) {\n                    return (\n                        part.substring(0, 1).toUpperCase() +\n                        part.substring(1).toLowerCase()\n                    );\n                } else {\n                    return part.toLowerCase();\n                }\n            }\n        )\n    );\n};\n\n/*** title\n    converts a name to ``Title Case`` using\n    a given delimiter between numeric words.\n\n    see:\n     - `lower`\n     - `upper`\n     - `camel`\n\n*/\nexports.title = function (value, delimiter) {\n    return exports.joinName(\n        delimiter,\n        exports.splitName(value).map(function (part) {\n            return (\n                part.substring(0, 1).toUpperCase() +\n                part.substring(1).toLowerCase()\n            );\n        })\n    );\n};\n\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {},
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/json.js": {
            "requireId": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/json",
            "memoizeId": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/json.js",
            "descriptor": {
              "filename": "json.js",
              "filepath": "../../pinf-bridgelib-js/lib/json.js",
              "mtime": 1375341060,
              "code": "\nexports.encode = JSON.stringify;\nexports.decode = JSON.parse;\n",
              "globals": {
                "exports": {
                  "type": "reference"
                },
                "JSON": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {},
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../pinf-bridgelib-js/lib';",
              "code": "function(require, exports, module) {var __dirname = '../../pinf-bridgelib-js/lib';\n\nexports.encode = JSON.stringify;\nexports.decode = JSON.parse;\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {},
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/util/dom.js": {
            "requireId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/util/dom",
            "memoizeId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/util/dom.js",
            "descriptor": {
              "filename": "dom.js",
              "filepath": "../renderers/util/dom.js",
              "mtime": 1420261646,
              "code": "/* vim:ts=4:sts=4:sw=4:\n * ***** BEGIN LICENSE BLOCK *****\n * Version: MPL 1.1/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Mozilla Public License Version\n * 1.1 (the \"License\"); you may not use this file except in compliance with\n * the License. You may obtain a copy of the License at\n * http://www.mozilla.org/MPL/\n *\n * Software distributed under the License is distributed on an \"AS IS\" basis,\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n * for the specific language governing rights and limitations under the\n * License.\n *\n * The Original Code is Ajax.org Code Editor (ACE).\n *\n * The Initial Developer of the Original Code is\n * Ajax.org B.V.\n * Portions created by the Initial Developer are Copyright (C) 2010\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *      Fabian Jakobs <fabian AT ajax DOT org>\n *      Mihai Sucan <mihai AT sucan AT gmail ODT com>\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either the GNU General Public License Version 2 or later (the \"GPL\"), or\n * the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the MPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the MPL, the GPL or the LGPL.\n *\n * ***** END LICENSE BLOCK ***** */\n\n\nvar XHTML_NS = \"http://www.w3.org/1999/xhtml\";\n\nexports.createElement = function(tag, ns) {\n    return document.createElementNS ?\n           document.createElementNS(ns || XHTML_NS, tag) :\n           document.createElement(tag);\n};\n\nexports.setText = function(elem, text) {\n    if (elem.innerText !== undefined) {\n        elem.innerText = text;\n    }\n    if (elem.textContent !== undefined) {\n        elem.textContent = text;\n    }\n};\n\nif (typeof document === \"undefined\" || !document.documentElement.classList) {\n    exports.hasCssClass = function(el, name) {\n        var classes = el.className.split(/\\s+/g);\n        return classes.indexOf(name) !== -1;\n    };\n\n    /**\n    * Add a CSS class to the list of classes on the given node\n    */\n    exports.addCssClass = function(el, name) {\n        if (!exports.hasCssClass(el, name)) {\n            el.className += \" \" + name;\n        }\n    };\n\n    /**\n    * Remove a CSS class from the list of classes on the given node\n    */\n    exports.removeCssClass = function(el, name) {\n        var classes = el.className.split(/\\s+/g);\n        while (true) {\n            var index = classes.indexOf(name);\n            if (index == -1) {\n                break;\n            }\n            classes.splice(index, 1);\n        }\n        el.className = classes.join(\" \");\n    };\n\n    exports.toggleCssClass = function(el, name) {\n        var classes = el.className.split(/\\s+/g), add = true;\n        while (true) {\n            var index = classes.indexOf(name);\n            if (index == -1) {\n                break;\n            }\n            add = false;\n            classes.splice(index, 1);\n        }\n        if(add)\n            classes.push(name);\n\n        el.className = classes.join(\" \");\n        return add;\n    };\n} else {\n    exports.hasCssClass = function(el, name) {\n        return el.classList.contains(name);\n    };\n\n    exports.addCssClass = function(el, name) {\n        el.classList.add(name);\n    };\n\n    exports.removeCssClass = function(el, name) {\n        el.classList.remove(name);\n    };\n\n    exports.toggleCssClass = function(el, name) {\n        return el.classList.toggle(name);\n    };\n}\n\n/**\n * Add or remove a CSS class from the list of classes on the given node\n * depending on the value of <tt>include</tt>\n */\nexports.setCssClass = function(node, className, include) {\n    if (include) {\n        exports.addCssClass(node, className);\n    } else {\n        exports.removeCssClass(node, className);\n    }\n};\n\nexports.importCssString = function(cssText, doc, id) {\n    doc = doc || document;\n    \n    if (typeof id !== \"undefined\")\n    {\n    \tif (doc.getElementById(id))\n    \t\treturn;\n    }\n\n    if (doc.createStyleSheet) {\n        var sheet = doc.createStyleSheet();\n        sheet.cssText = cssText;\n    }\n    else {\n        var style = doc.createElementNS ?\n                    doc.createElementNS(XHTML_NS, \"style\") :\n                    doc.createElement(\"style\");\n        if (typeof id !== \"undefined\")\n        {\n        \tstyle.setAttribute(\"id\", id);\n        }\n        style.appendChild(doc.createTextNode(cssText));\n\n        var head = doc.getElementsByTagName(\"head\")[0] || doc.documentElement;\n        head.appendChild(style);\n    }\n};\n\nexports.getInnerWidth = function(element) {\n    return (parseInt(exports.computedStyle(element, \"paddingLeft\"))\n            + parseInt(exports.computedStyle(element, \"paddingRight\")) + element.clientWidth);\n};\n\nexports.getInnerHeight = function(element) {\n    return (parseInt(exports.computedStyle(element, \"paddingTop\"))\n            + parseInt(exports.computedStyle(element, \"paddingBottom\")) + element.clientHeight);\n};\n\nif (typeof window !== \"undefined\" && window.pageYOffset !== undefined) {\n    exports.getPageScrollTop = function() {\n        return window.pageYOffset;\n    };\n\n    exports.getPageScrollLeft = function() {\n        return window.pageXOffset;\n    };\n}\nelse {\n    exports.getPageScrollTop = function() {\n        return document.body.scrollTop;\n    };\n\n    exports.getPageScrollLeft = function() {\n        return document.body.scrollLeft;\n    };\n}\n\nexports.computedStyle = function(element, style) {\n    if (window.getComputedStyle) {\n        return (window.getComputedStyle(element, \"\") || {})[style] || \"\";\n    }\n    else {\n        return element.currentStyle[style];\n    }\n};\n\nexports.scrollbarWidth = function() {\n\n    var inner = exports.createElement(\"p\");\n    inner.style.width = \"100%\";\n    inner.style.height = \"200px\";\n\n    var outer = exports.createElement(\"div\");\n    var style = outer.style;\n\n    style.position = \"absolute\";\n    style.left = \"-10000px\";\n    style.overflow = \"hidden\";\n    style.width = \"200px\";\n    style.height = \"150px\";\n\n    outer.appendChild(inner);\n\n    var body = document.body || document.documentElement;\n    body.appendChild(outer);\n\n    var noScrollbar = inner.offsetWidth;\n\n    style.overflow = \"scroll\";\n    var withScrollbar = inner.offsetWidth;\n\n    if (noScrollbar == withScrollbar) {\n        withScrollbar = outer.clientWidth;\n    }\n\n    body.removeChild(outer);\n\n    return noScrollbar-withScrollbar;\n};\n\n/**\n * Optimized set innerHTML. This is faster than plain innerHTML if the element\n * already contains a lot of child elements.\n *\n * See http://blog.stevenlevithan.com/archives/faster-than-innerhtml for details\n */\nexports.setInnerHtml = function(el, innerHtml) {\n    var element = el.cloneNode(false);//document.createElement(\"div\");\n    element.innerHTML = innerHtml;\n    el.parentNode.replaceChild(element, el);\n    return element;\n};\n\nexports.setInnerText = function(el, innerText) {\n    if (document.body && \"textContent\" in document.body)\n        el.textContent = innerText;\n    else\n        el.innerText = innerText;\n\n};\n\nexports.getInnerText = function(el) {\n    if (document.body && \"textContent\" in document.body)\n        return el.textContent;\n    else\n         return el.innerText || el.textContent || \"\";\n};\n\nexports.getParentWindow = function(document) {\n    return document.defaultView || document.parentWindow;\n};\n\nexports.getSelectionStart = function(textarea) {\n    // TODO IE\n    var start;\n    try {\n        start = textarea.selectionStart || 0;\n    } catch (e) {\n        start = 0;\n    }\n    return start;\n};\n\nexports.setSelectionStart = function(textarea, start) {\n    // TODO IE\n    return textarea.selectionStart = start;\n};\n\nexports.getSelectionEnd = function(textarea) {\n    // TODO IE\n    var end;\n    try {\n        end = textarea.selectionEnd || 0;\n    } catch (e) {\n        end = 0;\n    }\n    return end;\n};\n\nexports.setSelectionEnd = function(textarea, end) {\n    // TODO IE\n    return textarea.selectionEnd = end;\n};\n",
              "globals": {
                "XHTML_NS": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                },
                "document": {
                  "type": "reference"
                },
                "parseInt": {
                  "type": "call"
                },
                "window": {
                  "type": "typeof"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {},
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../renderers/util';",
              "code": "function(require, exports, module) {var __dirname = '../renderers/util';\n/* vim:ts=4:sts=4:sw=4:\n * ***** BEGIN LICENSE BLOCK *****\n * Version: MPL 1.1/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Mozilla Public License Version\n * 1.1 (the \"License\"); you may not use this file except in compliance with\n * the License. You may obtain a copy of the License at\n * http://www.mozilla.org/MPL/\n *\n * Software distributed under the License is distributed on an \"AS IS\" basis,\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n * for the specific language governing rights and limitations under the\n * License.\n *\n * The Original Code is Ajax.org Code Editor (ACE).\n *\n * The Initial Developer of the Original Code is\n * Ajax.org B.V.\n * Portions created by the Initial Developer are Copyright (C) 2010\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *      Fabian Jakobs <fabian AT ajax DOT org>\n *      Mihai Sucan <mihai AT sucan AT gmail ODT com>\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either the GNU General Public License Version 2 or later (the \"GPL\"), or\n * the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the MPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the MPL, the GPL or the LGPL.\n *\n * ***** END LICENSE BLOCK ***** */\n\n\nvar XHTML_NS = \"http://www.w3.org/1999/xhtml\";\n\nexports.createElement = function(tag, ns) {\n    return document.createElementNS ?\n           document.createElementNS(ns || XHTML_NS, tag) :\n           document.createElement(tag);\n};\n\nexports.setText = function(elem, text) {\n    if (elem.innerText !== undefined) {\n        elem.innerText = text;\n    }\n    if (elem.textContent !== undefined) {\n        elem.textContent = text;\n    }\n};\n\nif (typeof document === \"undefined\" || !document.documentElement.classList) {\n    exports.hasCssClass = function(el, name) {\n        var classes = el.className.split(/\\s+/g);\n        return classes.indexOf(name) !== -1;\n    };\n\n    /**\n    * Add a CSS class to the list of classes on the given node\n    */\n    exports.addCssClass = function(el, name) {\n        if (!exports.hasCssClass(el, name)) {\n            el.className += \" \" + name;\n        }\n    };\n\n    /**\n    * Remove a CSS class from the list of classes on the given node\n    */\n    exports.removeCssClass = function(el, name) {\n        var classes = el.className.split(/\\s+/g);\n        while (true) {\n            var index = classes.indexOf(name);\n            if (index == -1) {\n                break;\n            }\n            classes.splice(index, 1);\n        }\n        el.className = classes.join(\" \");\n    };\n\n    exports.toggleCssClass = function(el, name) {\n        var classes = el.className.split(/\\s+/g), add = true;\n        while (true) {\n            var index = classes.indexOf(name);\n            if (index == -1) {\n                break;\n            }\n            add = false;\n            classes.splice(index, 1);\n        }\n        if(add)\n            classes.push(name);\n\n        el.className = classes.join(\" \");\n        return add;\n    };\n} else {\n    exports.hasCssClass = function(el, name) {\n        return el.classList.contains(name);\n    };\n\n    exports.addCssClass = function(el, name) {\n        el.classList.add(name);\n    };\n\n    exports.removeCssClass = function(el, name) {\n        el.classList.remove(name);\n    };\n\n    exports.toggleCssClass = function(el, name) {\n        return el.classList.toggle(name);\n    };\n}\n\n/**\n * Add or remove a CSS class from the list of classes on the given node\n * depending on the value of <tt>include</tt>\n */\nexports.setCssClass = function(node, className, include) {\n    if (include) {\n        exports.addCssClass(node, className);\n    } else {\n        exports.removeCssClass(node, className);\n    }\n};\n\nexports.importCssString = function(cssText, doc, id) {\n    doc = doc || document;\n    \n    if (typeof id !== \"undefined\")\n    {\n    \tif (doc.getElementById(id))\n    \t\treturn;\n    }\n\n    if (doc.createStyleSheet) {\n        var sheet = doc.createStyleSheet();\n        sheet.cssText = cssText;\n    }\n    else {\n        var style = doc.createElementNS ?\n                    doc.createElementNS(XHTML_NS, \"style\") :\n                    doc.createElement(\"style\");\n        if (typeof id !== \"undefined\")\n        {\n        \tstyle.setAttribute(\"id\", id);\n        }\n        style.appendChild(doc.createTextNode(cssText));\n\n        var head = doc.getElementsByTagName(\"head\")[0] || doc.documentElement;\n        head.appendChild(style);\n    }\n};\n\nexports.getInnerWidth = function(element) {\n    return (parseInt(exports.computedStyle(element, \"paddingLeft\"))\n            + parseInt(exports.computedStyle(element, \"paddingRight\")) + element.clientWidth);\n};\n\nexports.getInnerHeight = function(element) {\n    return (parseInt(exports.computedStyle(element, \"paddingTop\"))\n            + parseInt(exports.computedStyle(element, \"paddingBottom\")) + element.clientHeight);\n};\n\nif (typeof window !== \"undefined\" && window.pageYOffset !== undefined) {\n    exports.getPageScrollTop = function() {\n        return window.pageYOffset;\n    };\n\n    exports.getPageScrollLeft = function() {\n        return window.pageXOffset;\n    };\n}\nelse {\n    exports.getPageScrollTop = function() {\n        return document.body.scrollTop;\n    };\n\n    exports.getPageScrollLeft = function() {\n        return document.body.scrollLeft;\n    };\n}\n\nexports.computedStyle = function(element, style) {\n    if (window.getComputedStyle) {\n        return (window.getComputedStyle(element, \"\") || {})[style] || \"\";\n    }\n    else {\n        return element.currentStyle[style];\n    }\n};\n\nexports.scrollbarWidth = function() {\n\n    var inner = exports.createElement(\"p\");\n    inner.style.width = \"100%\";\n    inner.style.height = \"200px\";\n\n    var outer = exports.createElement(\"div\");\n    var style = outer.style;\n\n    style.position = \"absolute\";\n    style.left = \"-10000px\";\n    style.overflow = \"hidden\";\n    style.width = \"200px\";\n    style.height = \"150px\";\n\n    outer.appendChild(inner);\n\n    var body = document.body || document.documentElement;\n    body.appendChild(outer);\n\n    var noScrollbar = inner.offsetWidth;\n\n    style.overflow = \"scroll\";\n    var withScrollbar = inner.offsetWidth;\n\n    if (noScrollbar == withScrollbar) {\n        withScrollbar = outer.clientWidth;\n    }\n\n    body.removeChild(outer);\n\n    return noScrollbar-withScrollbar;\n};\n\n/**\n * Optimized set innerHTML. This is faster than plain innerHTML if the element\n * already contains a lot of child elements.\n *\n * See http://blog.stevenlevithan.com/archives/faster-than-innerhtml for details\n */\nexports.setInnerHtml = function(el, innerHtml) {\n    var element = el.cloneNode(false);//document.createElement(\"div\");\n    element.innerHTML = innerHtml;\n    el.parentNode.replaceChild(element, el);\n    return element;\n};\n\nexports.setInnerText = function(el, innerText) {\n    if (document.body && \"textContent\" in document.body)\n        el.textContent = innerText;\n    else\n        el.innerText = innerText;\n\n};\n\nexports.getInnerText = function(el) {\n    if (document.body && \"textContent\" in document.body)\n        return el.textContent;\n    else\n         return el.innerText || el.textContent || \"\";\n};\n\nexports.getParentWindow = function(document) {\n    return document.defaultView || document.parentWindow;\n};\n\nexports.getSelectionStart = function(textarea) {\n    // TODO IE\n    var start;\n    try {\n        start = textarea.selectionStart || 0;\n    } catch (e) {\n        start = 0;\n    }\n    return start;\n};\n\nexports.setSelectionStart = function(textarea, start) {\n    // TODO IE\n    return textarea.selectionStart = start;\n};\n\nexports.getSelectionEnd = function(textarea) {\n    // TODO IE\n    var end;\n    try {\n        end = textarea.selectionEnd || 0;\n    } catch (e) {\n        end = 0;\n    }\n    return end;\n};\n\nexports.setSelectionEnd = function(textarea, end) {\n    // TODO IE\n    return textarea.selectionEnd = end;\n};\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {},
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "e21a2edc75d6a45b8180079e1437bfa808cf8b61-insight-for-js/lib/encoder/default.js": {
            "requireId": "e21a2edc75d6a45b8180079e1437bfa808cf8b61-insight-for-js/lib/encoder/default",
            "memoizeId": "e21a2edc75d6a45b8180079e1437bfa808cf8b61-insight-for-js/lib/encoder/default.js",
            "descriptor": {
              "filename": "default.js",
              "filepath": "../../insight-for-js/lib/encoder/default.js",
              "mtime": 1375341038,
              "code": "\nvar UTIL = require(\"modules/util\");\nvar JSON = require(\"modules/json\");\n\nvar Encoder = exports.Encoder = function() {\n    if (!(this instanceof exports.Encoder))\n        return new exports.Encoder();\n    this.options = {\n        \"maxObjectDepth\": 4,\n        \"maxArrayDepth\": 4,\n        \"maxOverallDepth\": 6,\n        \"includeLanguageMeta\": true\n    };\n}\n\nEncoder.prototype.setOption = function(name, value) {\n    this.options[name] = value;\n}\n\nEncoder.prototype.setOrigin = function(variable) {\n    this.origin = variable;\n    // reset some variables\n    this.instances = [];\n    return true;\n}\n\nEncoder.prototype.encode = function(data, meta, options) {\n\n    options = options || {};\n\n    if(typeof data != \"undefined\") {\n        this.setOrigin(data);\n    }\n\n    // TODO: Use meta[\"fc.encoder.options\"] to control encoding\n\n    var graph = {};\n    \n    try {\n        if(typeof this.origin != \"undefined\") {\n            graph[\"origin\"] = this.encodeVariable(this.origin);\n        }\n    } catch(e) {\n        console.warn(\"Error encoding variable\" + e);\n        throw e;\n    }\n\n    if(UTIL.len(this.instances)>0) {\n        graph[\"instances\"] = [];\n        this.instances.forEach(function(instance) {\n            graph[\"instances\"].push(instance[1]);\n        });\n    }\n\n    if(UTIL.has(options, \"jsonEncode\") && !options.jsonEncode) {\n        return graph;\n    }\n\n    try {\n        return JSON.encode(graph);\n    } catch(e) {\n        console.warn(\"Error jsonifying object graph\" + e);\n        throw e;\n    }\n    return null;\n}\n\nEncoder.prototype.encodeVariable = function(variable, objectDepth, arrayDepth, overallDepth) {\n    objectDepth = objectDepth || 1;\n    arrayDepth = arrayDepth || 1;\n    overallDepth = overallDepth || 1;\n    \n    if(variable===null) {\n        var ret = {\"type\": \"constant\", \"constant\": \"null\"};\n        if(this.options[\"includeLanguageMeta\"]) {\n            ret[\"lang.type\"] = \"null\";\n        }\n        return ret;\n    } else\n    if(variable===true || variable===false) {\n        var ret = {\"type\": \"constant\", \"constant\": (variable===true)?\"true\":\"false\"};\n        if(this.options[\"includeLanguageMeta\"]) {\n            ret[\"lang.type\"] = \"boolean\";\n        }\n        return ret;\n    }\n\n    var type = typeof variable;\n    if(type==\"number\") {\n        if(Math.round(variable)==variable) {\n            var ret = {\"type\": \"text\", \"text\": \"\"+variable};\n            if(this.options[\"includeLanguageMeta\"]) {\n                ret[\"lang.type\"] = \"integer\";\n            }\n            return ret;\n        } else {\n            var ret = {\"type\": \"text\", \"text\": \"\"+variable};\n            if(this.options[\"includeLanguageMeta\"]) {\n                ret[\"lang.type\"] = \"float\";\n            }\n            return ret;\n        }\n    } else\n    if(type==\"function\") {\n        var ret = {\"type\": \"text\", \"text\": \"\"+variable};\n        if(this.options[\"includeLanguageMeta\"]) {\n            ret[\"lang.type\"] = \"function\";\n        }\n        return ret;\n    } else\n    if(type==\"string\") {\n        // HACK: This should be done via an option\n        // FirePHPCore compatibility: Detect resource string\n        if(variable==\"** Excluded by Filter **\") {\n            var ret = {\"type\": \"text\", \"text\": variable};\n            ret[\"encoder.notice\"] = \"Excluded by Filter\";\n            ret[\"encoder.trimmed\"] = true;\n            if(this.options[\"includeLanguageMeta\"]) {\n                ret[\"lang.type\"] = \"string\";\n            }\n            return ret;\n        } else\n        if(variable.match(/^\\*\\*\\sRecursion\\s\\([^\\(]*\\)\\s\\*\\*$/)) {\n            var ret = {\"type\": \"text\", \"text\": variable};\n            ret[\"encoder.notice\"] = \"Recursion\";\n            ret[\"encoder.trimmed\"] = true;\n            if(this.options[\"includeLanguageMeta\"]) {\n                ret[\"lang.type\"] = \"string\";\n            }\n            return ret;\n        } else\n        if(variable.match(/^\\*\\*\\sResource\\sid\\s#\\d*\\s\\*\\*$/)) {\n            var ret = {\"type\": \"text\", \"text\": variable.substring(3, variable.length-3)};\n            if(this.options[\"includeLanguageMeta\"]) {\n                ret[\"lang.type\"] = \"resource\";\n            }\n            return ret;\n        } else {\n            var ret = {\"type\": \"text\", \"text\": variable};\n            if(this.options[\"includeLanguageMeta\"]) {\n                ret[\"lang.type\"] = \"string\";\n            }\n            return ret;\n        }\n    } else\n    if(type==\"object\") {\n        if(UTIL.isArrayLike(variable)) {\n            var ret = {\n                \"type\": \"array\",\n                \"array\": this.encodeArray(variable, objectDepth, arrayDepth, overallDepth)\n            };\n            if(this.options[\"includeLanguageMeta\"]) {\n                ret[\"lang.type\"] = \"array\";\n            }\n            return ret;\n        } else {\n            // HACK: This should be done via an option\n            // FirePHPCore compatibility: we only have an object if a class name is present\n\n            if(typeof variable[\"__className\"] != \"undefined\"  ) {\n                var ret = {\n                    \"type\": \"reference\",\n                    \"reference\": this.encodeInstance(variable, objectDepth, arrayDepth, overallDepth)\n                };\n                return ret;\n            } else {\n                var ret;\n                if (/^\\[Exception\\.\\.\\.\\s/.test(variable)) {\n                    ret = {\n                        \"type\": \"map\",\n                        \"map\": this.encodeException(variable, objectDepth, arrayDepth, overallDepth)\n                    };\n                } else {\n                    ret = {\n                        \"type\": \"map\",\n                        \"map\": this.encodeAssociativeArray(variable, objectDepth, arrayDepth, overallDepth)\n                    };\n                }\n                if(this.options[\"includeLanguageMeta\"]) {\n                    ret[\"lang.type\"] = \"array\";\n                }\n                return ret;\n            }\n        }\n    }\n\n    var ret = {\"type\": \"text\", \"text\": \"Variable with type '\" + type + \"' unknown: \"+variable};\n    if(this.options[\"includeLanguageMeta\"]) {\n        ret[\"lang.type\"] = \"unknown\";\n    }\n    return ret;\n//    return \"[\"+(typeof variable)+\"][\"+variable+\"]\";    \n}\n\nEncoder.prototype.encodeArray = function(variable, objectDepth, arrayDepth, overallDepth) {\n    objectDepth = objectDepth || 1;\n    arrayDepth = arrayDepth || 1;\n    overallDepth = overallDepth || 1;\n    if(arrayDepth > this.options[\"maxArrayDepth\"]) {\n        return {\"notice\": \"Max Array Depth (\" + this.options[\"maxArrayDepth\"] + \")\"};\n    } else\n    if(overallDepth > this.options[\"maxOverallDepth\"]) {\n        return {\"notice\": \"Max Overall Depth (\" + this.options[\"maxOverallDepth\"] + \")\"};\n    }\n    var self = this,\n        items = [];\n    UTIL.forEach(variable, function(item) {\n        items.push(self.encodeVariable(item, 1, arrayDepth + 1, overallDepth + 1));\n    });\n    return items;\n}\n\n\nEncoder.prototype.encodeAssociativeArray = function(variable, objectDepth, arrayDepth, overallDepth) {\n    objectDepth = objectDepth || 1;\n    arrayDepth = arrayDepth || 1;\n    overallDepth = overallDepth || 1;\n    if(arrayDepth > this.options[\"maxArrayDepth\"]) {\n        return {\"notice\": \"Max Array Depth (\" + this.options[\"maxArrayDepth\"] + \")\"};\n    } else\n    if(overallDepth > this.options[\"maxOverallDepth\"]) {\n        return {\"notice\": \"Max Overall Depth (\" + this.options[\"maxOverallDepth\"] + \")\"};\n    }\n    var self = this,\n        items = [];\n    for (var key in variable) {\n\n        // HACK: This should be done via an option\n        // FirePHPCore compatibility: numeric (integer) strings as keys in associative arrays get converted to integers\n        // http://www.php.net/manual/en/language.types.array.php\n        if(isNumber(key) && Math.round(key)==key) {\n            key = parseInt(key);\n        }\n        \n        items.push([\n            self.encodeVariable(key, 1, arrayDepth + 1, overallDepth + 1),\n            self.encodeVariable(variable[key], 1, arrayDepth + 1, overallDepth + 1)\n        ]);\n    }\n    return items;\n}\n\n\nEncoder.prototype.encodeException = function(variable, objectDepth, arrayDepth, overallDepth) {\n    var self = this,\n        items = [];\n    items.push([\n        self.encodeVariable(\"message\", 1, arrayDepth + 1, overallDepth + 1),\n        self.encodeVariable((\"\"+variable), 1, arrayDepth + 1, overallDepth + 1)\n    ]);\n    return items;\n}\n\n// http://stackoverflow.com/questions/18082/validate-numbers-in-javascript-isnumeric\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n\n\nEncoder.prototype.getInstanceId = function(object) {\n    for( var i=0 ; i<this.instances.length ; i++ ) {\n        if(this.instances[i][0]===object) {\n            return i;\n        }\n    }\n    return null;\n}\n\nEncoder.prototype.encodeInstance = function(object, objectDepth, arrayDepth, overallDepth) {\n    objectDepth = objectDepth || 1;\n    arrayDepth = arrayDepth || 1;\n    overallDepth = overallDepth || 1;\n    var id = this.getInstanceId(object);\n    if(id!=null) {\n        return id;\n    }\n    this.instances.push([\n        object,\n        this.encodeObject(object, objectDepth, arrayDepth, overallDepth)\n    ]);\n    return UTIL.len(this.instances)-1;\n}\n\nEncoder.prototype.encodeObject = function(object, objectDepth, arrayDepth, overallDepth) {\n    objectDepth = objectDepth || 1;\n    arrayDepth = arrayDepth || 1;\n    overallDepth = overallDepth || 1;\n\n    if(arrayDepth > this.options[\"maxObjectDepth\"]) {\n        return {\"notice\": \"Max Object Depth (\" + this.options[\"maxObjectDepth\"] + \")\"};\n    } else\n    if(overallDepth > this.options[\"maxOverallDepth\"]) {\n        return {\"notice\": \"Max Overall Depth (\" + this.options[\"maxOverallDepth\"] + \")\"};\n    }\n    \n    var self = this,\n        ret = {\"type\": \"dictionary\", \"dictionary\": {}};\n\n    // HACK: This should be done via an option\n    // FirePHPCore compatibility: we have an object if a class name is present\n    var isPHPClass = false;\n    if(typeof object[\"__className\"] != \"undefined\") {\n        isPHPClass = true;\n        ret[\"lang.class\"] = object[\"__className\"];\n        delete(object[\"__className\"]);\n        if(this.options[\"includeLanguageMeta\"]) {\n            ret[\"lang.type\"] = \"object\";\n        }\n    }\n\n    // HACK: This should be done via an option\n    // FirePHPCore compatibility: we have an exception if a class name is present\n    if(typeof object[\"__isException\"] != \"undefined\" && object[\"__isException\"]) {\n        ret[\"lang.type\"] = \"exception\";\n    }\n\n    UTIL.forEach(object, function(item) {\n        try {\n            if(item[0]==\"__fc_tpl_id\") {\n                ret['fc.tpl.id'] = item[1];\n                return;\n            }\n            if(isPHPClass) {\n                var val = self.encodeVariable(item[1], objectDepth + 1, 1, overallDepth + 1),\n                    parts = item[0].split(\":\"),\n                    name = parts[parts.length-1];\n                if(parts[0]==\"public\") {\n                    val[\"lang.visibility\"] = \"public\";\n                } else\n                if(parts[0]==\"protected\") {\n                    val[\"lang.visibility\"] = \"protected\";\n                } else\n                if(parts[0]==\"private\") {\n                    val[\"lang.visibility\"] = \"private\";\n                } else\n                if(parts[0]==\"undeclared\") {\n                    val[\"lang.undeclared\"] = 1;\n                }\n                if(parts.length==2 && parts[1]==\"static\") {\n                    val[\"lang.static\"] = 1;\n                }\n                ret[\"dictionary\"][name] = val;\n            } else {\n                ret[\"dictionary\"][item[0]] = self.encodeVariable(item[1], objectDepth + 1, 1, overallDepth + 1);\n            }\n        } catch(e) {\n            console.warn(e);\n            ret[\"dictionary\"][\"__oops__\"] = {\"notice\": \"Error encoding member (\" + e + \")\"};\n        }\n    });\n    \n    return ret;\n}",
              "globals": {
                "UTIL": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "JSON": {
                  "type": "assign"
                },
                "Encoder": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                },
                "console": {
                  "type": "reference"
                },
                "Math": {
                  "type": "reference"
                },
                "isNumber": {
                  "type": "call"
                },
                "parseInt": {
                  "type": "call"
                },
                "isNaN": {
                  "type": "call"
                },
                "parseFloat": {
                  "type": "call"
                },
                "isFinite": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "modules/util": {
                    "where": "inline"
                  },
                  "modules/json": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight-for-js/lib/encoder';",
              "code": "function(require, exports, module) {var __dirname = '../../insight-for-js/lib/encoder';\n\nvar UTIL = require(\"modules/util\");\nvar JSON = require(\"modules/json\");\n\nvar Encoder = exports.Encoder = function() {\n    if (!(this instanceof exports.Encoder))\n        return new exports.Encoder();\n    this.options = {\n        \"maxObjectDepth\": 4,\n        \"maxArrayDepth\": 4,\n        \"maxOverallDepth\": 6,\n        \"includeLanguageMeta\": true\n    };\n}\n\nEncoder.prototype.setOption = function(name, value) {\n    this.options[name] = value;\n}\n\nEncoder.prototype.setOrigin = function(variable) {\n    this.origin = variable;\n    // reset some variables\n    this.instances = [];\n    return true;\n}\n\nEncoder.prototype.encode = function(data, meta, options) {\n\n    options = options || {};\n\n    if(typeof data != \"undefined\") {\n        this.setOrigin(data);\n    }\n\n    // TODO: Use meta[\"fc.encoder.options\"] to control encoding\n\n    var graph = {};\n    \n    try {\n        if(typeof this.origin != \"undefined\") {\n            graph[\"origin\"] = this.encodeVariable(this.origin);\n        }\n    } catch(e) {\n        console.warn(\"Error encoding variable\" + e);\n        throw e;\n    }\n\n    if(UTIL.len(this.instances)>0) {\n        graph[\"instances\"] = [];\n        this.instances.forEach(function(instance) {\n            graph[\"instances\"].push(instance[1]);\n        });\n    }\n\n    if(UTIL.has(options, \"jsonEncode\") && !options.jsonEncode) {\n        return graph;\n    }\n\n    try {\n        return JSON.encode(graph);\n    } catch(e) {\n        console.warn(\"Error jsonifying object graph\" + e);\n        throw e;\n    }\n    return null;\n}\n\nEncoder.prototype.encodeVariable = function(variable, objectDepth, arrayDepth, overallDepth) {\n    objectDepth = objectDepth || 1;\n    arrayDepth = arrayDepth || 1;\n    overallDepth = overallDepth || 1;\n    \n    if(variable===null) {\n        var ret = {\"type\": \"constant\", \"constant\": \"null\"};\n        if(this.options[\"includeLanguageMeta\"]) {\n            ret[\"lang.type\"] = \"null\";\n        }\n        return ret;\n    } else\n    if(variable===true || variable===false) {\n        var ret = {\"type\": \"constant\", \"constant\": (variable===true)?\"true\":\"false\"};\n        if(this.options[\"includeLanguageMeta\"]) {\n            ret[\"lang.type\"] = \"boolean\";\n        }\n        return ret;\n    }\n\n    var type = typeof variable;\n    if(type==\"number\") {\n        if(Math.round(variable)==variable) {\n            var ret = {\"type\": \"text\", \"text\": \"\"+variable};\n            if(this.options[\"includeLanguageMeta\"]) {\n                ret[\"lang.type\"] = \"integer\";\n            }\n            return ret;\n        } else {\n            var ret = {\"type\": \"text\", \"text\": \"\"+variable};\n            if(this.options[\"includeLanguageMeta\"]) {\n                ret[\"lang.type\"] = \"float\";\n            }\n            return ret;\n        }\n    } else\n    if(type==\"function\") {\n        var ret = {\"type\": \"text\", \"text\": \"\"+variable};\n        if(this.options[\"includeLanguageMeta\"]) {\n            ret[\"lang.type\"] = \"function\";\n        }\n        return ret;\n    } else\n    if(type==\"string\") {\n        // HACK: This should be done via an option\n        // FirePHPCore compatibility: Detect resource string\n        if(variable==\"** Excluded by Filter **\") {\n            var ret = {\"type\": \"text\", \"text\": variable};\n            ret[\"encoder.notice\"] = \"Excluded by Filter\";\n            ret[\"encoder.trimmed\"] = true;\n            if(this.options[\"includeLanguageMeta\"]) {\n                ret[\"lang.type\"] = \"string\";\n            }\n            return ret;\n        } else\n        if(variable.match(/^\\*\\*\\sRecursion\\s\\([^\\(]*\\)\\s\\*\\*$/)) {\n            var ret = {\"type\": \"text\", \"text\": variable};\n            ret[\"encoder.notice\"] = \"Recursion\";\n            ret[\"encoder.trimmed\"] = true;\n            if(this.options[\"includeLanguageMeta\"]) {\n                ret[\"lang.type\"] = \"string\";\n            }\n            return ret;\n        } else\n        if(variable.match(/^\\*\\*\\sResource\\sid\\s#\\d*\\s\\*\\*$/)) {\n            var ret = {\"type\": \"text\", \"text\": variable.substring(3, variable.length-3)};\n            if(this.options[\"includeLanguageMeta\"]) {\n                ret[\"lang.type\"] = \"resource\";\n            }\n            return ret;\n        } else {\n            var ret = {\"type\": \"text\", \"text\": variable};\n            if(this.options[\"includeLanguageMeta\"]) {\n                ret[\"lang.type\"] = \"string\";\n            }\n            return ret;\n        }\n    } else\n    if(type==\"object\") {\n        if(UTIL.isArrayLike(variable)) {\n            var ret = {\n                \"type\": \"array\",\n                \"array\": this.encodeArray(variable, objectDepth, arrayDepth, overallDepth)\n            };\n            if(this.options[\"includeLanguageMeta\"]) {\n                ret[\"lang.type\"] = \"array\";\n            }\n            return ret;\n        } else {\n            // HACK: This should be done via an option\n            // FirePHPCore compatibility: we only have an object if a class name is present\n\n            if(typeof variable[\"__className\"] != \"undefined\"  ) {\n                var ret = {\n                    \"type\": \"reference\",\n                    \"reference\": this.encodeInstance(variable, objectDepth, arrayDepth, overallDepth)\n                };\n                return ret;\n            } else {\n                var ret;\n                if (/^\\[Exception\\.\\.\\.\\s/.test(variable)) {\n                    ret = {\n                        \"type\": \"map\",\n                        \"map\": this.encodeException(variable, objectDepth, arrayDepth, overallDepth)\n                    };\n                } else {\n                    ret = {\n                        \"type\": \"map\",\n                        \"map\": this.encodeAssociativeArray(variable, objectDepth, arrayDepth, overallDepth)\n                    };\n                }\n                if(this.options[\"includeLanguageMeta\"]) {\n                    ret[\"lang.type\"] = \"array\";\n                }\n                return ret;\n            }\n        }\n    }\n\n    var ret = {\"type\": \"text\", \"text\": \"Variable with type '\" + type + \"' unknown: \"+variable};\n    if(this.options[\"includeLanguageMeta\"]) {\n        ret[\"lang.type\"] = \"unknown\";\n    }\n    return ret;\n//    return \"[\"+(typeof variable)+\"][\"+variable+\"]\";    \n}\n\nEncoder.prototype.encodeArray = function(variable, objectDepth, arrayDepth, overallDepth) {\n    objectDepth = objectDepth || 1;\n    arrayDepth = arrayDepth || 1;\n    overallDepth = overallDepth || 1;\n    if(arrayDepth > this.options[\"maxArrayDepth\"]) {\n        return {\"notice\": \"Max Array Depth (\" + this.options[\"maxArrayDepth\"] + \")\"};\n    } else\n    if(overallDepth > this.options[\"maxOverallDepth\"]) {\n        return {\"notice\": \"Max Overall Depth (\" + this.options[\"maxOverallDepth\"] + \")\"};\n    }\n    var self = this,\n        items = [];\n    UTIL.forEach(variable, function(item) {\n        items.push(self.encodeVariable(item, 1, arrayDepth + 1, overallDepth + 1));\n    });\n    return items;\n}\n\n\nEncoder.prototype.encodeAssociativeArray = function(variable, objectDepth, arrayDepth, overallDepth) {\n    objectDepth = objectDepth || 1;\n    arrayDepth = arrayDepth || 1;\n    overallDepth = overallDepth || 1;\n    if(arrayDepth > this.options[\"maxArrayDepth\"]) {\n        return {\"notice\": \"Max Array Depth (\" + this.options[\"maxArrayDepth\"] + \")\"};\n    } else\n    if(overallDepth > this.options[\"maxOverallDepth\"]) {\n        return {\"notice\": \"Max Overall Depth (\" + this.options[\"maxOverallDepth\"] + \")\"};\n    }\n    var self = this,\n        items = [];\n    for (var key in variable) {\n\n        // HACK: This should be done via an option\n        // FirePHPCore compatibility: numeric (integer) strings as keys in associative arrays get converted to integers\n        // http://www.php.net/manual/en/language.types.array.php\n        if(isNumber(key) && Math.round(key)==key) {\n            key = parseInt(key);\n        }\n        \n        items.push([\n            self.encodeVariable(key, 1, arrayDepth + 1, overallDepth + 1),\n            self.encodeVariable(variable[key], 1, arrayDepth + 1, overallDepth + 1)\n        ]);\n    }\n    return items;\n}\n\n\nEncoder.prototype.encodeException = function(variable, objectDepth, arrayDepth, overallDepth) {\n    var self = this,\n        items = [];\n    items.push([\n        self.encodeVariable(\"message\", 1, arrayDepth + 1, overallDepth + 1),\n        self.encodeVariable((\"\"+variable), 1, arrayDepth + 1, overallDepth + 1)\n    ]);\n    return items;\n}\n\n// http://stackoverflow.com/questions/18082/validate-numbers-in-javascript-isnumeric\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n\n\nEncoder.prototype.getInstanceId = function(object) {\n    for( var i=0 ; i<this.instances.length ; i++ ) {\n        if(this.instances[i][0]===object) {\n            return i;\n        }\n    }\n    return null;\n}\n\nEncoder.prototype.encodeInstance = function(object, objectDepth, arrayDepth, overallDepth) {\n    objectDepth = objectDepth || 1;\n    arrayDepth = arrayDepth || 1;\n    overallDepth = overallDepth || 1;\n    var id = this.getInstanceId(object);\n    if(id!=null) {\n        return id;\n    }\n    this.instances.push([\n        object,\n        this.encodeObject(object, objectDepth, arrayDepth, overallDepth)\n    ]);\n    return UTIL.len(this.instances)-1;\n}\n\nEncoder.prototype.encodeObject = function(object, objectDepth, arrayDepth, overallDepth) {\n    objectDepth = objectDepth || 1;\n    arrayDepth = arrayDepth || 1;\n    overallDepth = overallDepth || 1;\n\n    if(arrayDepth > this.options[\"maxObjectDepth\"]) {\n        return {\"notice\": \"Max Object Depth (\" + this.options[\"maxObjectDepth\"] + \")\"};\n    } else\n    if(overallDepth > this.options[\"maxOverallDepth\"]) {\n        return {\"notice\": \"Max Overall Depth (\" + this.options[\"maxOverallDepth\"] + \")\"};\n    }\n    \n    var self = this,\n        ret = {\"type\": \"dictionary\", \"dictionary\": {}};\n\n    // HACK: This should be done via an option\n    // FirePHPCore compatibility: we have an object if a class name is present\n    var isPHPClass = false;\n    if(typeof object[\"__className\"] != \"undefined\") {\n        isPHPClass = true;\n        ret[\"lang.class\"] = object[\"__className\"];\n        delete(object[\"__className\"]);\n        if(this.options[\"includeLanguageMeta\"]) {\n            ret[\"lang.type\"] = \"object\";\n        }\n    }\n\n    // HACK: This should be done via an option\n    // FirePHPCore compatibility: we have an exception if a class name is present\n    if(typeof object[\"__isException\"] != \"undefined\" && object[\"__isException\"]) {\n        ret[\"lang.type\"] = \"exception\";\n    }\n\n    UTIL.forEach(object, function(item) {\n        try {\n            if(item[0]==\"__fc_tpl_id\") {\n                ret['fc.tpl.id'] = item[1];\n                return;\n            }\n            if(isPHPClass) {\n                var val = self.encodeVariable(item[1], objectDepth + 1, 1, overallDepth + 1),\n                    parts = item[0].split(\":\"),\n                    name = parts[parts.length-1];\n                if(parts[0]==\"public\") {\n                    val[\"lang.visibility\"] = \"public\";\n                } else\n                if(parts[0]==\"protected\") {\n                    val[\"lang.visibility\"] = \"protected\";\n                } else\n                if(parts[0]==\"private\") {\n                    val[\"lang.visibility\"] = \"private\";\n                } else\n                if(parts[0]==\"undeclared\") {\n                    val[\"lang.undeclared\"] = 1;\n                }\n                if(parts.length==2 && parts[1]==\"static\") {\n                    val[\"lang.static\"] = 1;\n                }\n                ret[\"dictionary\"][name] = val;\n            } else {\n                ret[\"dictionary\"][item[0]] = self.encodeVariable(item[1], objectDepth + 1, 1, overallDepth + 1);\n            }\n        } catch(e) {\n            console.warn(e);\n            ret[\"dictionary\"][\"__oops__\"] = {\"notice\": \"Error encoding member (\" + e + \")\"};\n        }\n    });\n    \n    return ret;\n}\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "modules/util": {
                  "where": "inline"
                },
                "modules/json": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "e21a2edc75d6a45b8180079e1437bfa808cf8b61-insight-for-js/lib/decoder/default.js": {
            "requireId": "e21a2edc75d6a45b8180079e1437bfa808cf8b61-insight-for-js/lib/decoder/default",
            "memoizeId": "e21a2edc75d6a45b8180079e1437bfa808cf8b61-insight-for-js/lib/decoder/default.js",
            "descriptor": {
              "filename": "default.js",
              "filepath": "../../insight-for-js/lib/decoder/default.js",
              "mtime": 1375341038,
              "code": "\nvar UTIL = require(\"modules/util\"),\n    JSON = require(\"modules/json\"),\n    ENCODER = require(\"../encoder/default\");\n\nexports.EXTENDED = \"EXTENDED\";\nexports.SIMPLE = \"SIMPLE\";\n\n\nexports.generateFromMessage = function(message, format)\n{\n    format = format || exports.EXTENDED;\n\n    var og = new ObjectGraph();\n\n    var meta = {},\n        data;\n\n    if (typeof message.getMeta == \"function\")\n    {\n        meta = JSON.decode(message.getMeta() || \"{}\");\n    }\n    else\n    if (typeof message.meta == \"string\")\n    {\n        meta = JSON.decode(message.meta);\n    }\n    else\n    if (typeof message.meta == \"object\")\n    {\n        meta = message.meta;\n    }\n\n    if (typeof message.getData == \"function\")\n    {\n        data = message.getData();\n    }\n    else\n    if (typeof message.data != \"undefined\")\n    {\n        data = message.data;\n    }\n    else\n        throw new Error(\"NYI\");\n\n    if(meta[\"msg.preprocessor\"] && meta[\"msg.preprocessor\"]==\"FirePHPCoreCompatibility\") {\n\n        var parts = convertFirePHPCoreData(meta, data);\n        if (typeof message.setMeta == \"function\")\n            message.setMeta(JSON.encode(parts[0]));\n        else\n            message.meta = JSON.encode(parts[0]);\n        data = parts[1];\n\n    } else\n    if(typeof data !== \"undefined\" && data != \"\") {\n        try {\n\n            data = JSON.decode(data);\n\n        } catch(e) {\n            console.error(\"Error decoding JSON data: \" + data);\n            throw e;\n        }\n    } else {\n        data = {};\n    }\n\n    // assign group title to value if applicable\n    if(typeof meta[\"group.title\"] != \"undefined\") {\n        data = {\n            \"origin\": {\n                \"type\": \"text\",\n                \"text\": meta[\"group.title\"]\n            }\n        };\n    }\n\n    if(data.instances) {\n        for( var i=0 ; i<data.instances.length ; i++ ) {\n            data.instances[i] = generateNodesFromData(og, data.instances[i]);\n        }\n        og.setInstances(data.instances);\n    }\n\n    if(meta[\"lang.id\"]) {\n        og.setLanguageId(meta[\"lang.id\"]);\n    }\n\n    og.setMeta(meta);\n\n    if(UTIL.has(data, \"origin\")) {\n        if(format==exports.EXTENDED) {\n            og.setOrigin(generateNodesFromData(og, data.origin));\n        } else\n        if(format==exports.SIMPLE) {\n            og.setOrigin(generateObjectsFromData(og, data.origin));\n        } else {\n            throw new Error(\"unsupported format: \" + format);\n        }\n    }\n\n    return og;\n}\n\nfunction generateObjectsFromData(objectGraph, data) {\n\n    var node;\n\n    if(data.type==\"array\") {\n        node = [];\n        for( var i=0 ; i<data[data.type].length ; i++ ) {\n            node.push(generateObjectsFromData(objectGraph, data[data.type][i]));\n        }\n    } else\n    if(data.type==\"map\") {\n        node = [];\n        for( var i=0 ; i<data[data.type].length ; i++ ) {\n            node.push([\n                generateObjectsFromData(objectGraph, data[data.type][i][0]),\n                generateObjectsFromData(objectGraph, data[data.type][i][1])\n            ]);\n        }\n    } else\n    if(data.type==\"dictionary\") {\n        node = {};\n        for( var name in data[data.type] ) {\n            node[name] = generateObjectsFromData(objectGraph, data[data.type][name]);\n        }\n    } else {\n        node = data[data.type];\n    }\n\n    return node;\n}\n\n\nfunction generateNodesFromData(objectGraph, data, parentNode) {\n    \n    parentNode = parentNode || null;\n    \n    var node = new Node(objectGraph, data, parentNode);\n    \n    if(node.value!==null && typeof node.value != \"undefined\") {\n        // some types need nested nodes decoded\n        if(node.type==\"array\") {\n            for( var i=0 ; i<node.value.length ; i++ ) {\n                node.value[i] = generateNodesFromData(objectGraph, node.value[i], node);\n            }\n        } else\n        if(node.type==\"map\") {\n            for( var i=0 ; i<node.value.length ; i++ ) {\n                node.value[i][0] = generateNodesFromData(objectGraph, node.value[i][0], node);\n                node.value[i][1] = generateNodesFromData(objectGraph, node.value[i][1], node);\n            }\n        } else\n        if(node.type==\"dictionary\") {\n            for( var name in node.value ) {\n                node.value[name] = generateNodesFromData(objectGraph, node.value[name], node);\n            }\n        }\n    } else {\n        node.value = null;\n    }\n\n    return node;\n}\n\n\n\nvar Node = function(objectGraph, data, parentNode) {\n    var self = this;\n    self.parentNode = parentNode || null;\n    self.type = data.type;\n    self.value = data[data.type];\n    self.meta = {};\n    UTIL.every(data, function(item) {\n        if(item[0]!=\"type\" && item[0]!=self.type) {\n            self.meta[item[0]] = item[1];\n        }\n    });\n    if(self.type==\"reference\") {\n        self.getInstance = function() {\n            return objectGraph.getInstance(self.value);\n        }\n    }\n    self.getObjectGraph = function() {\n        return objectGraph;\n    }\n}\n\nNode.prototype.getTemplateId = function() {\n    if(UTIL.has(this.meta, \"tpl.id\")) {\n        return this.meta[\"tpl.id\"];\n    }\n    return false;\n}\n\nNode.prototype.compact = function() {\n    if(!this.compacted) {\n        if(this.type==\"map\") {\n            this.compacted = {};\n            for( var i=0 ; i<this.value.length ; i++ ) {\n                this.compacted[this.value[i][0].value] = this.value[i][1];\n            }\n        }\n    }\n    return this.compacted;\n}\n\nNode.prototype.getPath = function(locateChild) {\n    var path = [];\n    if (this.parentNode)\n        path = path.concat(this.parentNode.getPath(this));\n    else\n        path = path.concat(this.getObjectGraph().getPath(this));\n    if (locateChild)\n    {\n        if(this.type==\"map\") {\n            for( var i=0 ; i<this.value.length ; i++ ) {\n                if (this.value[i][1] === locateChild)\n                {\n                    path.push(\"value[\" + i + \"][1]\");\n                    break;\n                }\n            }\n        } else\n        if(this.type==\"dictionary\") {\n            for (var key in this.value)\n            {\n                if (this.value[key] === locateChild)\n                {\n                    path.push(\"value['\" + key + \"']\");\n                    break;\n                }\n            }\n        } else\n        if(this.type==\"array\") {\n            for( var i=0 ; i<this.value.length ; i++ ) {\n                if (this.value[i] === locateChild)\n                {\n                    path.push(\"value[\" + i + \"]\");\n                    break;\n                }\n            }\n        } else {\nconsole.error(\"NYI - getPath() for this.type = '\" + this.type + \"'\", this);            \n        }\n    }\n    return path;\n}\n\nNode.prototype.forPath = function(path) {\n    if (!path || path.length === 0)\n        return this;\n    if(this.type==\"map\") {\n        var m = path[0].match(/^value\\[(\\d*)\\]\\[1\\]$/);\n        return this.value[parseInt(m[1])][1].forPath(path.slice(1));\n    } else\n    if(this.type==\"dictionary\") {\n        var m = path[0].match(/^value\\['(.*?)'\\]$/);\n        return this.value[m[1]].forPath(path.slice(1));\n    } else\n    if(this.type==\"array\") {\n        var m = path[0].match(/^value\\[(\\d*)\\]$/);\n        return this.value[parseInt(m[1])].forPath(path.slice(1));\n    } else {\n//console.error(\"NYI - forPath('\" + path + \"') for this.type = '\" + this.type + \"'\", this);            \n    }\n    return null;\n}\n\n//Node.prototype.renderIntoViewer = function(viewerDocument, options) {\n//    throw new Error(\"NYI - Node.prototype.renderIntoViewer in \" + module.id);\n//    return RENDERER.renderIntoViewer(this, viewerDocument, options);\n//}\n\n\nvar ObjectGraph = function() {\n//    this.message = message;\n}\n//ObjectGraph.prototype = Object.create(new Node());\n\nObjectGraph.prototype.setOrigin = function(node) {\n    this.origin = node;\n}\n\nObjectGraph.prototype.getOrigin = function() {\n    return this.origin;\n}\n\nObjectGraph.prototype.setInstances = function(instances) {\n    this.instances = instances;\n}\n\nObjectGraph.prototype.getInstance = function(index) {\n    return this.instances[index];\n}\n\nObjectGraph.prototype.setLanguageId = function(id) {\n    this.languageId = id;\n}\n\nObjectGraph.prototype.getLanguageId = function() {\n    return this.languageId;\n}\n\nObjectGraph.prototype.setMeta = function(meta) {\n    this.meta = meta;\n}\n\nObjectGraph.prototype.getMeta = function() {\n    return this.meta;\n}\n\nObjectGraph.prototype.getPath = function(locateChild) {\n    if (this.origin === locateChild)\n    {\n        return [\"origin\"];\n    }\n    for( var i=0 ; i<this.instances.length ; i++ ) {\n        if (this.instances[i] === locateChild)\n        {\n            return [\"instances[\" + i + \"]\"];\n        }\n    }\n    throw new Error(\"Child node not found. We should never reach this!\");\n}\n        \nObjectGraph.prototype.nodeForPath = function(path) {\n    var m = path[0].match(/^instances\\[(\\d*)\\]$/);\n    if (m) {\n        return this.instances[parseInt(m[1])].forPath(path.slice(1));\n    } else {\n        // assume path[0] == 'origin'\n        return this.origin.forPath(path.slice(1));\n    }\n    return node;\n}\n\n\nvar encoder = ENCODER.Encoder();\nencoder.setOption(\"maxObjectDepth\", 1000);\nencoder.setOption(\"maxArrayDepth\", 1000);\nencoder.setOption(\"maxOverallDepth\", 1000);\nfunction convertFirePHPCoreData(meta, data) {\n    data = encoder.encode(JSON.decode(data), null, {\n        \"jsonEncode\": false\n    });\n    return [meta, data]; \n}\n",
              "globals": {
                "UTIL": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "JSON": {
                  "type": "assign"
                },
                "ENCODER": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                },
                "convertFirePHPCoreData": {
                  "type": "call"
                },
                "console": {
                  "type": "reference"
                },
                "generateNodesFromData": {
                  "type": "call"
                },
                "generateObjectsFromData": {
                  "type": "call"
                },
                "Node": {
                  "type": "assign"
                },
                "ObjectGraph": {
                  "type": "assign"
                },
                "encoder": {
                  "type": "assign"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "modules/util": {
                    "where": "inline"
                  },
                  "modules/json": {
                    "where": "inline"
                  },
                  "../encoder/default": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight-for-js/lib/decoder';",
              "code": "function(require, exports, module) {var __dirname = '../../insight-for-js/lib/decoder';\n\nvar UTIL = require(\"modules/util\"),\n    JSON = require(\"modules/json\"),\n    ENCODER = require(\"../encoder/default\");\n\nexports.EXTENDED = \"EXTENDED\";\nexports.SIMPLE = \"SIMPLE\";\n\n\nexports.generateFromMessage = function(message, format)\n{\n    format = format || exports.EXTENDED;\n\n    var og = new ObjectGraph();\n\n    var meta = {},\n        data;\n\n    if (typeof message.getMeta == \"function\")\n    {\n        meta = JSON.decode(message.getMeta() || \"{}\");\n    }\n    else\n    if (typeof message.meta == \"string\")\n    {\n        meta = JSON.decode(message.meta);\n    }\n    else\n    if (typeof message.meta == \"object\")\n    {\n        meta = message.meta;\n    }\n\n    if (typeof message.getData == \"function\")\n    {\n        data = message.getData();\n    }\n    else\n    if (typeof message.data != \"undefined\")\n    {\n        data = message.data;\n    }\n    else\n        throw new Error(\"NYI\");\n\n    if(meta[\"msg.preprocessor\"] && meta[\"msg.preprocessor\"]==\"FirePHPCoreCompatibility\") {\n\n        var parts = convertFirePHPCoreData(meta, data);\n        if (typeof message.setMeta == \"function\")\n            message.setMeta(JSON.encode(parts[0]));\n        else\n            message.meta = JSON.encode(parts[0]);\n        data = parts[1];\n\n    } else\n    if(typeof data !== \"undefined\" && data != \"\") {\n        try {\n\n            data = JSON.decode(data);\n\n        } catch(e) {\n            console.error(\"Error decoding JSON data: \" + data);\n            throw e;\n        }\n    } else {\n        data = {};\n    }\n\n    // assign group title to value if applicable\n    if(typeof meta[\"group.title\"] != \"undefined\") {\n        data = {\n            \"origin\": {\n                \"type\": \"text\",\n                \"text\": meta[\"group.title\"]\n            }\n        };\n    }\n\n    if(data.instances) {\n        for( var i=0 ; i<data.instances.length ; i++ ) {\n            data.instances[i] = generateNodesFromData(og, data.instances[i]);\n        }\n        og.setInstances(data.instances);\n    }\n\n    if(meta[\"lang.id\"]) {\n        og.setLanguageId(meta[\"lang.id\"]);\n    }\n\n    og.setMeta(meta);\n\n    if(UTIL.has(data, \"origin\")) {\n        if(format==exports.EXTENDED) {\n            og.setOrigin(generateNodesFromData(og, data.origin));\n        } else\n        if(format==exports.SIMPLE) {\n            og.setOrigin(generateObjectsFromData(og, data.origin));\n        } else {\n            throw new Error(\"unsupported format: \" + format);\n        }\n    }\n\n    return og;\n}\n\nfunction generateObjectsFromData(objectGraph, data) {\n\n    var node;\n\n    if(data.type==\"array\") {\n        node = [];\n        for( var i=0 ; i<data[data.type].length ; i++ ) {\n            node.push(generateObjectsFromData(objectGraph, data[data.type][i]));\n        }\n    } else\n    if(data.type==\"map\") {\n        node = [];\n        for( var i=0 ; i<data[data.type].length ; i++ ) {\n            node.push([\n                generateObjectsFromData(objectGraph, data[data.type][i][0]),\n                generateObjectsFromData(objectGraph, data[data.type][i][1])\n            ]);\n        }\n    } else\n    if(data.type==\"dictionary\") {\n        node = {};\n        for( var name in data[data.type] ) {\n            node[name] = generateObjectsFromData(objectGraph, data[data.type][name]);\n        }\n    } else {\n        node = data[data.type];\n    }\n\n    return node;\n}\n\n\nfunction generateNodesFromData(objectGraph, data, parentNode) {\n    \n    parentNode = parentNode || null;\n    \n    var node = new Node(objectGraph, data, parentNode);\n    \n    if(node.value!==null && typeof node.value != \"undefined\") {\n        // some types need nested nodes decoded\n        if(node.type==\"array\") {\n            for( var i=0 ; i<node.value.length ; i++ ) {\n                node.value[i] = generateNodesFromData(objectGraph, node.value[i], node);\n            }\n        } else\n        if(node.type==\"map\") {\n            for( var i=0 ; i<node.value.length ; i++ ) {\n                node.value[i][0] = generateNodesFromData(objectGraph, node.value[i][0], node);\n                node.value[i][1] = generateNodesFromData(objectGraph, node.value[i][1], node);\n            }\n        } else\n        if(node.type==\"dictionary\") {\n            for( var name in node.value ) {\n                node.value[name] = generateNodesFromData(objectGraph, node.value[name], node);\n            }\n        }\n    } else {\n        node.value = null;\n    }\n\n    return node;\n}\n\n\n\nvar Node = function(objectGraph, data, parentNode) {\n    var self = this;\n    self.parentNode = parentNode || null;\n    self.type = data.type;\n    self.value = data[data.type];\n    self.meta = {};\n    UTIL.every(data, function(item) {\n        if(item[0]!=\"type\" && item[0]!=self.type) {\n            self.meta[item[0]] = item[1];\n        }\n    });\n    if(self.type==\"reference\") {\n        self.getInstance = function() {\n            return objectGraph.getInstance(self.value);\n        }\n    }\n    self.getObjectGraph = function() {\n        return objectGraph;\n    }\n}\n\nNode.prototype.getTemplateId = function() {\n    if(UTIL.has(this.meta, \"tpl.id\")) {\n        return this.meta[\"tpl.id\"];\n    }\n    return false;\n}\n\nNode.prototype.compact = function() {\n    if(!this.compacted) {\n        if(this.type==\"map\") {\n            this.compacted = {};\n            for( var i=0 ; i<this.value.length ; i++ ) {\n                this.compacted[this.value[i][0].value] = this.value[i][1];\n            }\n        }\n    }\n    return this.compacted;\n}\n\nNode.prototype.getPath = function(locateChild) {\n    var path = [];\n    if (this.parentNode)\n        path = path.concat(this.parentNode.getPath(this));\n    else\n        path = path.concat(this.getObjectGraph().getPath(this));\n    if (locateChild)\n    {\n        if(this.type==\"map\") {\n            for( var i=0 ; i<this.value.length ; i++ ) {\n                if (this.value[i][1] === locateChild)\n                {\n                    path.push(\"value[\" + i + \"][1]\");\n                    break;\n                }\n            }\n        } else\n        if(this.type==\"dictionary\") {\n            for (var key in this.value)\n            {\n                if (this.value[key] === locateChild)\n                {\n                    path.push(\"value['\" + key + \"']\");\n                    break;\n                }\n            }\n        } else\n        if(this.type==\"array\") {\n            for( var i=0 ; i<this.value.length ; i++ ) {\n                if (this.value[i] === locateChild)\n                {\n                    path.push(\"value[\" + i + \"]\");\n                    break;\n                }\n            }\n        } else {\nconsole.error(\"NYI - getPath() for this.type = '\" + this.type + \"'\", this);            \n        }\n    }\n    return path;\n}\n\nNode.prototype.forPath = function(path) {\n    if (!path || path.length === 0)\n        return this;\n    if(this.type==\"map\") {\n        var m = path[0].match(/^value\\[(\\d*)\\]\\[1\\]$/);\n        return this.value[parseInt(m[1])][1].forPath(path.slice(1));\n    } else\n    if(this.type==\"dictionary\") {\n        var m = path[0].match(/^value\\['(.*?)'\\]$/);\n        return this.value[m[1]].forPath(path.slice(1));\n    } else\n    if(this.type==\"array\") {\n        var m = path[0].match(/^value\\[(\\d*)\\]$/);\n        return this.value[parseInt(m[1])].forPath(path.slice(1));\n    } else {\n//console.error(\"NYI - forPath('\" + path + \"') for this.type = '\" + this.type + \"'\", this);            \n    }\n    return null;\n}\n\n//Node.prototype.renderIntoViewer = function(viewerDocument, options) {\n//    throw new Error(\"NYI - Node.prototype.renderIntoViewer in \" + module.id);\n//    return RENDERER.renderIntoViewer(this, viewerDocument, options);\n//}\n\n\nvar ObjectGraph = function() {\n//    this.message = message;\n}\n//ObjectGraph.prototype = Object.create(new Node());\n\nObjectGraph.prototype.setOrigin = function(node) {\n    this.origin = node;\n}\n\nObjectGraph.prototype.getOrigin = function() {\n    return this.origin;\n}\n\nObjectGraph.prototype.setInstances = function(instances) {\n    this.instances = instances;\n}\n\nObjectGraph.prototype.getInstance = function(index) {\n    return this.instances[index];\n}\n\nObjectGraph.prototype.setLanguageId = function(id) {\n    this.languageId = id;\n}\n\nObjectGraph.prototype.getLanguageId = function() {\n    return this.languageId;\n}\n\nObjectGraph.prototype.setMeta = function(meta) {\n    this.meta = meta;\n}\n\nObjectGraph.prototype.getMeta = function() {\n    return this.meta;\n}\n\nObjectGraph.prototype.getPath = function(locateChild) {\n    if (this.origin === locateChild)\n    {\n        return [\"origin\"];\n    }\n    for( var i=0 ; i<this.instances.length ; i++ ) {\n        if (this.instances[i] === locateChild)\n        {\n            return [\"instances[\" + i + \"]\"];\n        }\n    }\n    throw new Error(\"Child node not found. We should never reach this!\");\n}\n        \nObjectGraph.prototype.nodeForPath = function(path) {\n    var m = path[0].match(/^instances\\[(\\d*)\\]$/);\n    if (m) {\n        return this.instances[parseInt(m[1])].forPath(path.slice(1));\n    } else {\n        // assume path[0] == 'origin'\n        return this.origin.forPath(path.slice(1));\n    }\n    return node;\n}\n\n\nvar encoder = ENCODER.Encoder();\nencoder.setOption(\"maxObjectDepth\", 1000);\nencoder.setOption(\"maxArrayDepth\", 1000);\nencoder.setOption(\"maxOverallDepth\", 1000);\nfunction convertFirePHPCoreData(meta, data) {\n    data = encoder.encode(JSON.decode(data), null, {\n        \"jsonEncode\": false\n    });\n    return [meta, data]; \n}\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "modules/util": {
                  "where": "inline"
                },
                "modules/json": {
                  "where": "inline"
                },
                "../encoder/default": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "5ed24c94e4143800bdf9eb7a901c557360709fbd-domplate/lib/util.js": {
            "requireId": "5ed24c94e4143800bdf9eb7a901c557360709fbd-domplate/lib/util",
            "memoizeId": "5ed24c94e4143800bdf9eb7a901c557360709fbd-domplate/lib/util.js",
            "descriptor": {
              "filename": "util.js",
              "filepath": "../../domplate/lib/util.js",
              "mtime": 1375378769,
              "code": "\n/*\n * The functions below are taken from Firebug as-is and should be kept in-sync.\n * \n * @see http://code.google.com/p/fbug/source/browse/branches/firebug1.5/content/firebug/lib.js\n */\n\nvar FBTrace = {};\nvar FBL = exports;\n\n(function() {\n\n// ************************************************************************************************\n// String\n\nthis.escapeNewLines = function(value)\n{\n    return value.replace(/\\r/gm, \"\\\\r\").replace(/\\n/gm, \"\\\\n\");\n};\n\nthis.stripNewLines = function(value)\n{\n    return typeof(value) == \"string\" ? value.replace(/[\\r\\n]/gm, \" \") : value;\n};\n\nthis.escapeJS = function(value)\n{\n    return value.replace(/\\r/gm, \"\\\\r\").replace(/\\n/gm, \"\\\\n\").replace('\"', '\\\\\"', \"g\");\n};\n\nthis.cropString = function(text, limit, alterText)\n{\n    if (!alterText)\n        alterText = \"...\"; //…\n\n    text = text + \"\";\n\n    if (!limit)\n        limit = 50;\n    var halfLimit = (limit / 2);\n    halfLimit -= 2; // adjustment for alterText's increase in size\n\n    if (text.length > limit)\n        return text.substr(0, halfLimit) + alterText + text.substr(text.length-halfLimit);\n    else\n        return text;\n};\n\nthis.cropStringLeft = function(text, limit, alterText)\n{\n    if (!alterText)\n        alterText = \"...\"; //…\n\n    text = text + \"\";\n\n    if (!limit)\n        limit = 50;\n    limit -= alterText.length;\n\n    if (text.length > limit)\n        return alterText + text.substr(text.length-limit);\n    else\n        return text;\n};\n\n\n// ************************************************************************************************\n// CSS classes\n\nthis.hasClass = function(node, name) // className, className, ...\n{\n    if (!node || node.nodeType != 1)\n        return false;\n    else\n    {\n        for (var i=1; i<arguments.length; ++i)\n        {\n            var name = arguments[i];\n            var re = new RegExp(\"(^|\\\\s)\"+name+\"($|\\\\s)\");\n            if (!re.exec(node.getAttribute(\"class\")))\n                return false;\n        }\n\n        return true;\n    }\n};\n\nthis.setClass = function(node, name)\n{\n    if (node && !this.hasClass(node, name))\n        node.className += \" \" + name;\n};\n\nthis.getClassValue = function(node, name)\n{\n    var re = new RegExp(name+\"-([^ ]+)\");\n    var m = re.exec(node.className);\n    return m ? m[1] : \"\";\n};\n\nthis.removeClass = function(node, name)\n{\n    if (node && node.className)\n    {\n        var index = node.className.indexOf(name);\n        if (index >= 0)\n        {\n            var size = name.length;\n            node.className = node.className.substr(0,index-1) + node.className.substr(index+size);\n        }\n    }\n};\n\nthis.toggleClass = function(elt, name)\n{\n    if (this.hasClass(elt, name))\n        this.removeClass(elt, name);\n    else\n        this.setClass(elt, name);\n};\n\nthis.setClassTimed = function(elt, name, context, timeout)\n{\n    if (!timeout)\n        timeout = 1300;\n\n    if (elt.__setClassTimeout)\n        context.clearTimeout(elt.__setClassTimeout);\n    else\n        this.setClass(elt, name);\n\n    if (!this.isVisible(elt))\n    {\n        if (elt.__invisibleAtSetPoint)\n            elt.__invisibleAtSetPoint--;\n        else\n            elt.__invisibleAtSetPoint = 5;\n    }\n    else\n    {\n        delete elt.__invisibleAtSetPoint;\n    }\n\n    elt.__setClassTimeout = context.setTimeout(function()\n    {\n        delete elt.__setClassTimeout;\n\n        if (elt.__invisibleAtSetPoint)\n            FBL.setClassTimed(elt, name, context, timeout);\n        else\n        {\n            delete elt.__invisibleAtSetPoint;\n            FBL.removeClass(elt, name);\n        }\n    }, timeout);\n};\n\nthis.cancelClassTimed = function(elt, name, context)\n{\n    if (elt.__setClassTimeout)\n    {\n        FBL.removeClass(elt, name);\n        context.clearTimeout(elt.__setClassTimeout);\n        delete elt.__setClassTimeout;\n    }\n};\n\n\n// ************************************************************************************************\n// DOM queries\n\nthis.$ = function(id, doc)\n{\n    if (doc)\n        return doc.getElementById(id);\n    else\n        return document.getElementById(id);\n};\n\nthis.getChildByClass = function(node) // ,classname, classname, classname...\n{\n    for (var i = 1; i < arguments.length; ++i)\n    {\n        var className = arguments[i];\n        var child = node.firstChild;\n        node = null;\n        for (; child; child = child.nextSibling)\n        {\n            if (this.hasClass(child, className))\n            {\n                node = child;\n                break;\n            }\n        }\n    }\n\n    return node;\n};\n\nthis.getAncestorByClass = function(node, className)\n{\n    for (var parent = node; parent; parent = parent.parentNode)\n    {\n        if (this.hasClass(parent, className))\n            return parent;\n    }\n\n    return null;\n};\n\nthis.getElementByClass = function(node, className)  // className, className, ...\n{\n    var args = cloneArray(arguments); args.splice(0, 1);\n    var className = args.join(\" \");\n\n    var elements = node.getElementsByClassName(className);\n    return elements[0];\n};\n\nthis.getElementsByClass = function(node, className)  // className, className, ...\n{\n    var args = cloneArray(arguments); args.splice(0, 1);\n    var className = args.join(\" \");\n    return node.getElementsByClassName(className);\n};\n\nthis.getElementsByAttribute = function(node, attrName, attrValue)\n{\n    function iteratorHelper(node, attrName, attrValue, result)\n    {\n        for (var child = node.firstChild; child; child = child.nextSibling)\n        {\n            if (child.getAttribute(attrName) == attrValue)\n                result.push(child);\n\n            iteratorHelper(child, attrName, attrValue, result);\n        }\n    }\n\n    var result = [];\n    iteratorHelper(node, attrName, attrValue, result);\n    return result;\n}\n\nthis.isAncestor = function(node, potentialAncestor)\n{\n    for (var parent = node; parent; parent = parent.parentNode)\n    {\n        if (parent == potentialAncestor)\n            return true;\n    }\n\n    return false;\n};\n\nthis.getNextElement = function(node)\n{\n    while (node && node.nodeType != 1)\n        node = node.nextSibling;\n\n    return node;\n};\n\nthis.getPreviousElement = function(node)\n{\n    while (node && node.nodeType != 1)\n        node = node.previousSibling;\n\n    return node;\n};\n\nthis.getBody = function(doc)\n{\n    if (doc.body)\n        return doc.body;\n\n    var body = doc.getElementsByTagName(\"body\")[0];\n    if (body)\n        return body;\n\n    return doc.documentElement;  // For non-HTML docs\n};\n\nthis.findNextDown = function(node, criteria)\n{\n    if (!node)\n        return null;\n\n    for (var child = node.firstChild; child; child = child.nextSibling)\n    {\n        if (criteria(child))\n            return child;\n\n        var next = this.findNextDown(child, criteria);\n        if (next)\n            return next;\n    }\n};\n\nthis.findPreviousUp = function(node, criteria)\n{\n    if (!node)\n        return null;\n\n    for (var child = node.lastChild; child; child = child.previousSibling)\n    {\n        var next = this.findPreviousUp(child, criteria);\n        if (next)\n            return next;\n\n        if (criteria(child))\n            return child;\n    }\n};\n\nthis.findNext = function(node, criteria, upOnly, maxRoot)\n{\n    if (!node)\n        return null;\n\n    if (!upOnly)\n    {\n        var next = this.findNextDown(node, criteria);\n        if (next)\n            return next;\n    }\n\n    for (var sib = node.nextSibling; sib; sib = sib.nextSibling)\n    {\n        if (criteria(sib))\n            return sib;\n\n        var next = this.findNextDown(sib, criteria);\n        if (next)\n            return next;\n    }\n\n    if (node.parentNode && node.parentNode != maxRoot)\n        return this.findNext(node.parentNode, criteria, true);\n};\n\nthis.findPrevious = function(node, criteria, downOnly, maxRoot)\n{\n    if (!node)\n        return null;\n\n    for (var sib = node.previousSibling; sib; sib = sib.previousSibling)\n    {\n        var prev = this.findPreviousUp(sib, criteria);\n        if (prev)\n            return prev;\n\n        if (criteria(sib))\n            return sib;\n    }\n\n    if (!downOnly)\n    {\n        var next = this.findPreviousUp(node, criteria);\n        if (next)\n            return next;\n    }\n\n    if (node.parentNode && node.parentNode != maxRoot)\n    {\n        if (criteria(node.parentNode))\n            return node.parentNode;\n\n        return this.findPrevious(node.parentNode, criteria, true);\n    }\n};\n\nthis.getNextByClass = function(root, state)\n{\n    function iter(node) { return node.nodeType == 1 && FBL.hasClass(node, state); }\n    return this.findNext(root, iter);\n};\n\nthis.getPreviousByClass = function(root, state)\n{\n    function iter(node) { return node.nodeType == 1 && FBL.hasClass(node, state); }\n    return this.findPrevious(root, iter);\n};\n\nthis.hasChildElements = function(node)\n{\n    if (node.contentDocument) // iframes\n        return true;\n\n    for (var child = node.firstChild; child; child = child.nextSibling)\n    {\n        if (child.nodeType == 1)\n            return true;\n    }\n\n    return false;\n};\n\nthis.isElement = function(o)\n{\n    try {\n        return o && o instanceof Element;\n    }\n    catch (ex) {\n        return false;\n    }\n};\n\nthis.isNode = function(o)\n{\n    try {\n        return o && o instanceof Node;\n    }\n    catch (ex) {\n        return false;\n    }\n};\n\n\n// ************************************************************************************************\n// Events\n\nthis.cancelEvent = function(event)\n{\n    event.stopPropagation();\n    event.preventDefault();\n};\n\nthis.isLeftClick = function(event)\n{\n    return event.button == 0 && this.noKeyModifiers(event);\n};\n\nthis.isMiddleClick = function(event)\n{\n    return event.button == 1 && this.noKeyModifiers(event);\n};\n\nthis.isRightClick = function(event)\n{\n    return event.button == 2 && this.noKeyModifiers(event);\n};\n\nthis.noKeyModifiers = function(event)\n{\n    return !event.ctrlKey && !event.shiftKey && !event.altKey && !event.metaKey;\n};\n\nthis.isControlClick = function(event)\n{\n    return event.button == 0 && this.isControl(event);\n};\n\nthis.isShiftClick = function(event)\n{\n    return event.button == 0 && this.isShift(event);\n};\n\nthis.isControl = function(event)\n{\n    return (event.metaKey || event.ctrlKey) && !event.shiftKey && !event.altKey;\n};\n\nthis.isControlShift = function(event)\n{\n    return (event.metaKey || event.ctrlKey) && event.shiftKey && !event.altKey;\n};\n\nthis.isShift = function(event)\n{\n    return event.shiftKey && !event.metaKey && !event.ctrlKey && !event.altKey;\n};\n\n\n// ************************************************************************************************\n// Basics\n\nthis.bind = function()  // fn, thisObject, args => thisObject.fn(args, arguments);\n{\n   var args = cloneArray(arguments), fn = args.shift(), object = args.shift();\n   return function() { return fn.apply(object, arrayInsert(cloneArray(args), 0, arguments)); }\n};\n\nthis.bindFixed = function() // fn, thisObject, args => thisObject.fn(args);\n{\n    var args = cloneArray(arguments), fn = args.shift(), object = args.shift();\n    return function() { return fn.apply(object, args); }\n};\n\nthis.extend = function(l, r)\n{\n    var newOb = {};\n    for (var n in l)\n        newOb[n] = l[n];\n    for (var n in r)\n        newOb[n] = r[n];\n    return newOb;\n};\n\nthis.keys = function(map)  // At least sometimes the keys will be on user-level window objects\n{\n    var keys = [];\n    try\n    {\n        for (var name in map)  // enumeration is safe\n            keys.push(name);   // name is string, safe\n    }\n    catch (exc)\n    {\n        // Sometimes we get exceptions trying to iterate properties\n    }\n\n    return keys;  // return is safe\n};\n\nthis.values = function(map)\n{\n    var values = [];\n    try\n    {\n        for (var name in map)\n        {\n            try\n            {\n                values.push(map[name]);\n            }\n            catch (exc)\n            {\n                // Sometimes we get exceptions trying to access properties\n                if (FBTrace.DBG_ERRORS)\n                    FBTrace.dumpPropreties(\"lib.values FAILED \", exc);\n            }\n\n        }\n    }\n    catch (exc)\n    {\n        // Sometimes we get exceptions trying to iterate properties\n        if (FBTrace.DBG_ERRORS)\n            FBTrace.dumpPropreties(\"lib.values FAILED \", exc);\n    }\n\n    return values;\n};\n\nthis.remove = function(list, item)\n{\n    for (var i = 0; i < list.length; ++i)\n    {\n        if (list[i] == item)\n        {\n            list.splice(i, 1);\n            break;\n        }\n    }\n};\n\nthis.sliceArray = function(array, index)\n{\n    var slice = [];\n    for (var i = index; i < array.length; ++i)\n        slice.push(array[i]);\n\n    return slice;\n};\n\nfunction cloneArray(array, fn)\n{\n   var newArray = [];\n\n   if (fn)\n       for (var i = 0; i < array.length; ++i)\n           newArray.push(fn(array[i]));\n   else\n       for (var i = 0; i < array.length; ++i)\n           newArray.push(array[i]);\n\n   return newArray;\n}\n\nfunction extendArray(array, array2)\n{\n   var newArray = [];\n   newArray.push.apply(newArray, array);\n   newArray.push.apply(newArray, array2);\n   return newArray;\n}\n\nthis.extendArray = extendArray;\nthis.cloneArray = cloneArray;\n\nfunction arrayInsert(array, index, other)\n{\n   for (var i = 0; i < other.length; ++i)\n       array.splice(i+index, 0, other[i]);\n\n   return array;\n}\n\nthis.arrayInsert = arrayInsert;\n\n\nthis.isArrayLike = function(object) {\n    return (Object.prototype.toString.call(object) == \"[object Array]\") || this.isArguments(object);\n}\n\n// from http://code.google.com/p/google-caja/wiki/NiceNeighbor\n// by \"kangax\"\n//\n// Mark Miller posted a solution that will work in ES5 compliant\n// implementations, that may provide future insight:\n// (http://groups.google.com/group/narwhaljs/msg/116097568bae41c6)\nthis.isArguments = function (object) {\n    // ES5 reliable positive\n    if (Object.prototype.toString.call(object) == \"[object Arguments]\")\n        return true;\n    // for ES5, we will still need a way to distinguish false negatives\n    //  from the following code (in ES5, it is possible to create\n    //  an object that satisfies all of these constraints but is\n    //  not an Arguments object).\n    // callee should exist\n    if (\n        !typeof object == \"object\" ||\n        !Object.prototype.hasOwnProperty.call(object, 'callee') ||\n        !object.callee || \n        // It should be a Function object ([[Class]] === 'Function')\n        Object.prototype.toString.call(object.callee) !== '[object Function]' ||\n        typeof object.length != 'number'\n    )\n        return false;\n    for (var name in object) {\n        // both \"callee\" and \"length\" should be { DontEnum }\n        if (name === 'callee' || name === 'length') return false;\n    }\n    return true;\n}\n\n\n}).apply(exports);\n    ",
              "globals": {
                "FBTrace": {
                  "type": "assign"
                },
                "FBL": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                },
                "document": {
                  "type": "reference"
                },
                "parent": {
                  "type": "reference"
                },
                "child": {
                  "type": "reference"
                },
                "sib": {
                  "type": "reference"
                },
                "i": {
                  "type": "reference"
                },
                "Object": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {},
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../domplate/lib';",
              "code": "function(require, exports, module) {var __dirname = '../../domplate/lib';\n\n/*\n * The functions below are taken from Firebug as-is and should be kept in-sync.\n * \n * @see http://code.google.com/p/fbug/source/browse/branches/firebug1.5/content/firebug/lib.js\n */\n\nvar FBTrace = {};\nvar FBL = exports;\n\n(function() {\n\n// ************************************************************************************************\n// String\n\nthis.escapeNewLines = function(value)\n{\n    return value.replace(/\\r/gm, \"\\\\r\").replace(/\\n/gm, \"\\\\n\");\n};\n\nthis.stripNewLines = function(value)\n{\n    return typeof(value) == \"string\" ? value.replace(/[\\r\\n]/gm, \" \") : value;\n};\n\nthis.escapeJS = function(value)\n{\n    return value.replace(/\\r/gm, \"\\\\r\").replace(/\\n/gm, \"\\\\n\").replace('\"', '\\\\\"', \"g\");\n};\n\nthis.cropString = function(text, limit, alterText)\n{\n    if (!alterText)\n        alterText = \"...\"; //…\n\n    text = text + \"\";\n\n    if (!limit)\n        limit = 50;\n    var halfLimit = (limit / 2);\n    halfLimit -= 2; // adjustment for alterText's increase in size\n\n    if (text.length > limit)\n        return text.substr(0, halfLimit) + alterText + text.substr(text.length-halfLimit);\n    else\n        return text;\n};\n\nthis.cropStringLeft = function(text, limit, alterText)\n{\n    if (!alterText)\n        alterText = \"...\"; //…\n\n    text = text + \"\";\n\n    if (!limit)\n        limit = 50;\n    limit -= alterText.length;\n\n    if (text.length > limit)\n        return alterText + text.substr(text.length-limit);\n    else\n        return text;\n};\n\n\n// ************************************************************************************************\n// CSS classes\n\nthis.hasClass = function(node, name) // className, className, ...\n{\n    if (!node || node.nodeType != 1)\n        return false;\n    else\n    {\n        for (var i=1; i<arguments.length; ++i)\n        {\n            var name = arguments[i];\n            var re = new RegExp(\"(^|\\\\s)\"+name+\"($|\\\\s)\");\n            if (!re.exec(node.getAttribute(\"class\")))\n                return false;\n        }\n\n        return true;\n    }\n};\n\nthis.setClass = function(node, name)\n{\n    if (node && !this.hasClass(node, name))\n        node.className += \" \" + name;\n};\n\nthis.getClassValue = function(node, name)\n{\n    var re = new RegExp(name+\"-([^ ]+)\");\n    var m = re.exec(node.className);\n    return m ? m[1] : \"\";\n};\n\nthis.removeClass = function(node, name)\n{\n    if (node && node.className)\n    {\n        var index = node.className.indexOf(name);\n        if (index >= 0)\n        {\n            var size = name.length;\n            node.className = node.className.substr(0,index-1) + node.className.substr(index+size);\n        }\n    }\n};\n\nthis.toggleClass = function(elt, name)\n{\n    if (this.hasClass(elt, name))\n        this.removeClass(elt, name);\n    else\n        this.setClass(elt, name);\n};\n\nthis.setClassTimed = function(elt, name, context, timeout)\n{\n    if (!timeout)\n        timeout = 1300;\n\n    if (elt.__setClassTimeout)\n        context.clearTimeout(elt.__setClassTimeout);\n    else\n        this.setClass(elt, name);\n\n    if (!this.isVisible(elt))\n    {\n        if (elt.__invisibleAtSetPoint)\n            elt.__invisibleAtSetPoint--;\n        else\n            elt.__invisibleAtSetPoint = 5;\n    }\n    else\n    {\n        delete elt.__invisibleAtSetPoint;\n    }\n\n    elt.__setClassTimeout = context.setTimeout(function()\n    {\n        delete elt.__setClassTimeout;\n\n        if (elt.__invisibleAtSetPoint)\n            FBL.setClassTimed(elt, name, context, timeout);\n        else\n        {\n            delete elt.__invisibleAtSetPoint;\n            FBL.removeClass(elt, name);\n        }\n    }, timeout);\n};\n\nthis.cancelClassTimed = function(elt, name, context)\n{\n    if (elt.__setClassTimeout)\n    {\n        FBL.removeClass(elt, name);\n        context.clearTimeout(elt.__setClassTimeout);\n        delete elt.__setClassTimeout;\n    }\n};\n\n\n// ************************************************************************************************\n// DOM queries\n\nthis.$ = function(id, doc)\n{\n    if (doc)\n        return doc.getElementById(id);\n    else\n        return document.getElementById(id);\n};\n\nthis.getChildByClass = function(node) // ,classname, classname, classname...\n{\n    for (var i = 1; i < arguments.length; ++i)\n    {\n        var className = arguments[i];\n        var child = node.firstChild;\n        node = null;\n        for (; child; child = child.nextSibling)\n        {\n            if (this.hasClass(child, className))\n            {\n                node = child;\n                break;\n            }\n        }\n    }\n\n    return node;\n};\n\nthis.getAncestorByClass = function(node, className)\n{\n    for (var parent = node; parent; parent = parent.parentNode)\n    {\n        if (this.hasClass(parent, className))\n            return parent;\n    }\n\n    return null;\n};\n\nthis.getElementByClass = function(node, className)  // className, className, ...\n{\n    var args = cloneArray(arguments); args.splice(0, 1);\n    var className = args.join(\" \");\n\n    var elements = node.getElementsByClassName(className);\n    return elements[0];\n};\n\nthis.getElementsByClass = function(node, className)  // className, className, ...\n{\n    var args = cloneArray(arguments); args.splice(0, 1);\n    var className = args.join(\" \");\n    return node.getElementsByClassName(className);\n};\n\nthis.getElementsByAttribute = function(node, attrName, attrValue)\n{\n    function iteratorHelper(node, attrName, attrValue, result)\n    {\n        for (var child = node.firstChild; child; child = child.nextSibling)\n        {\n            if (child.getAttribute(attrName) == attrValue)\n                result.push(child);\n\n            iteratorHelper(child, attrName, attrValue, result);\n        }\n    }\n\n    var result = [];\n    iteratorHelper(node, attrName, attrValue, result);\n    return result;\n}\n\nthis.isAncestor = function(node, potentialAncestor)\n{\n    for (var parent = node; parent; parent = parent.parentNode)\n    {\n        if (parent == potentialAncestor)\n            return true;\n    }\n\n    return false;\n};\n\nthis.getNextElement = function(node)\n{\n    while (node && node.nodeType != 1)\n        node = node.nextSibling;\n\n    return node;\n};\n\nthis.getPreviousElement = function(node)\n{\n    while (node && node.nodeType != 1)\n        node = node.previousSibling;\n\n    return node;\n};\n\nthis.getBody = function(doc)\n{\n    if (doc.body)\n        return doc.body;\n\n    var body = doc.getElementsByTagName(\"body\")[0];\n    if (body)\n        return body;\n\n    return doc.documentElement;  // For non-HTML docs\n};\n\nthis.findNextDown = function(node, criteria)\n{\n    if (!node)\n        return null;\n\n    for (var child = node.firstChild; child; child = child.nextSibling)\n    {\n        if (criteria(child))\n            return child;\n\n        var next = this.findNextDown(child, criteria);\n        if (next)\n            return next;\n    }\n};\n\nthis.findPreviousUp = function(node, criteria)\n{\n    if (!node)\n        return null;\n\n    for (var child = node.lastChild; child; child = child.previousSibling)\n    {\n        var next = this.findPreviousUp(child, criteria);\n        if (next)\n            return next;\n\n        if (criteria(child))\n            return child;\n    }\n};\n\nthis.findNext = function(node, criteria, upOnly, maxRoot)\n{\n    if (!node)\n        return null;\n\n    if (!upOnly)\n    {\n        var next = this.findNextDown(node, criteria);\n        if (next)\n            return next;\n    }\n\n    for (var sib = node.nextSibling; sib; sib = sib.nextSibling)\n    {\n        if (criteria(sib))\n            return sib;\n\n        var next = this.findNextDown(sib, criteria);\n        if (next)\n            return next;\n    }\n\n    if (node.parentNode && node.parentNode != maxRoot)\n        return this.findNext(node.parentNode, criteria, true);\n};\n\nthis.findPrevious = function(node, criteria, downOnly, maxRoot)\n{\n    if (!node)\n        return null;\n\n    for (var sib = node.previousSibling; sib; sib = sib.previousSibling)\n    {\n        var prev = this.findPreviousUp(sib, criteria);\n        if (prev)\n            return prev;\n\n        if (criteria(sib))\n            return sib;\n    }\n\n    if (!downOnly)\n    {\n        var next = this.findPreviousUp(node, criteria);\n        if (next)\n            return next;\n    }\n\n    if (node.parentNode && node.parentNode != maxRoot)\n    {\n        if (criteria(node.parentNode))\n            return node.parentNode;\n\n        return this.findPrevious(node.parentNode, criteria, true);\n    }\n};\n\nthis.getNextByClass = function(root, state)\n{\n    function iter(node) { return node.nodeType == 1 && FBL.hasClass(node, state); }\n    return this.findNext(root, iter);\n};\n\nthis.getPreviousByClass = function(root, state)\n{\n    function iter(node) { return node.nodeType == 1 && FBL.hasClass(node, state); }\n    return this.findPrevious(root, iter);\n};\n\nthis.hasChildElements = function(node)\n{\n    if (node.contentDocument) // iframes\n        return true;\n\n    for (var child = node.firstChild; child; child = child.nextSibling)\n    {\n        if (child.nodeType == 1)\n            return true;\n    }\n\n    return false;\n};\n\nthis.isElement = function(o)\n{\n    try {\n        return o && o instanceof Element;\n    }\n    catch (ex) {\n        return false;\n    }\n};\n\nthis.isNode = function(o)\n{\n    try {\n        return o && o instanceof Node;\n    }\n    catch (ex) {\n        return false;\n    }\n};\n\n\n// ************************************************************************************************\n// Events\n\nthis.cancelEvent = function(event)\n{\n    event.stopPropagation();\n    event.preventDefault();\n};\n\nthis.isLeftClick = function(event)\n{\n    return event.button == 0 && this.noKeyModifiers(event);\n};\n\nthis.isMiddleClick = function(event)\n{\n    return event.button == 1 && this.noKeyModifiers(event);\n};\n\nthis.isRightClick = function(event)\n{\n    return event.button == 2 && this.noKeyModifiers(event);\n};\n\nthis.noKeyModifiers = function(event)\n{\n    return !event.ctrlKey && !event.shiftKey && !event.altKey && !event.metaKey;\n};\n\nthis.isControlClick = function(event)\n{\n    return event.button == 0 && this.isControl(event);\n};\n\nthis.isShiftClick = function(event)\n{\n    return event.button == 0 && this.isShift(event);\n};\n\nthis.isControl = function(event)\n{\n    return (event.metaKey || event.ctrlKey) && !event.shiftKey && !event.altKey;\n};\n\nthis.isControlShift = function(event)\n{\n    return (event.metaKey || event.ctrlKey) && event.shiftKey && !event.altKey;\n};\n\nthis.isShift = function(event)\n{\n    return event.shiftKey && !event.metaKey && !event.ctrlKey && !event.altKey;\n};\n\n\n// ************************************************************************************************\n// Basics\n\nthis.bind = function()  // fn, thisObject, args => thisObject.fn(args, arguments);\n{\n   var args = cloneArray(arguments), fn = args.shift(), object = args.shift();\n   return function() { return fn.apply(object, arrayInsert(cloneArray(args), 0, arguments)); }\n};\n\nthis.bindFixed = function() // fn, thisObject, args => thisObject.fn(args);\n{\n    var args = cloneArray(arguments), fn = args.shift(), object = args.shift();\n    return function() { return fn.apply(object, args); }\n};\n\nthis.extend = function(l, r)\n{\n    var newOb = {};\n    for (var n in l)\n        newOb[n] = l[n];\n    for (var n in r)\n        newOb[n] = r[n];\n    return newOb;\n};\n\nthis.keys = function(map)  // At least sometimes the keys will be on user-level window objects\n{\n    var keys = [];\n    try\n    {\n        for (var name in map)  // enumeration is safe\n            keys.push(name);   // name is string, safe\n    }\n    catch (exc)\n    {\n        // Sometimes we get exceptions trying to iterate properties\n    }\n\n    return keys;  // return is safe\n};\n\nthis.values = function(map)\n{\n    var values = [];\n    try\n    {\n        for (var name in map)\n        {\n            try\n            {\n                values.push(map[name]);\n            }\n            catch (exc)\n            {\n                // Sometimes we get exceptions trying to access properties\n                if (FBTrace.DBG_ERRORS)\n                    FBTrace.dumpPropreties(\"lib.values FAILED \", exc);\n            }\n\n        }\n    }\n    catch (exc)\n    {\n        // Sometimes we get exceptions trying to iterate properties\n        if (FBTrace.DBG_ERRORS)\n            FBTrace.dumpPropreties(\"lib.values FAILED \", exc);\n    }\n\n    return values;\n};\n\nthis.remove = function(list, item)\n{\n    for (var i = 0; i < list.length; ++i)\n    {\n        if (list[i] == item)\n        {\n            list.splice(i, 1);\n            break;\n        }\n    }\n};\n\nthis.sliceArray = function(array, index)\n{\n    var slice = [];\n    for (var i = index; i < array.length; ++i)\n        slice.push(array[i]);\n\n    return slice;\n};\n\nfunction cloneArray(array, fn)\n{\n   var newArray = [];\n\n   if (fn)\n       for (var i = 0; i < array.length; ++i)\n           newArray.push(fn(array[i]));\n   else\n       for (var i = 0; i < array.length; ++i)\n           newArray.push(array[i]);\n\n   return newArray;\n}\n\nfunction extendArray(array, array2)\n{\n   var newArray = [];\n   newArray.push.apply(newArray, array);\n   newArray.push.apply(newArray, array2);\n   return newArray;\n}\n\nthis.extendArray = extendArray;\nthis.cloneArray = cloneArray;\n\nfunction arrayInsert(array, index, other)\n{\n   for (var i = 0; i < other.length; ++i)\n       array.splice(i+index, 0, other[i]);\n\n   return array;\n}\n\nthis.arrayInsert = arrayInsert;\n\n\nthis.isArrayLike = function(object) {\n    return (Object.prototype.toString.call(object) == \"[object Array]\") || this.isArguments(object);\n}\n\n// from http://code.google.com/p/google-caja/wiki/NiceNeighbor\n// by \"kangax\"\n//\n// Mark Miller posted a solution that will work in ES5 compliant\n// implementations, that may provide future insight:\n// (http://groups.google.com/group/narwhaljs/msg/116097568bae41c6)\nthis.isArguments = function (object) {\n    // ES5 reliable positive\n    if (Object.prototype.toString.call(object) == \"[object Arguments]\")\n        return true;\n    // for ES5, we will still need a way to distinguish false negatives\n    //  from the following code (in ES5, it is possible to create\n    //  an object that satisfies all of these constraints but is\n    //  not an Arguments object).\n    // callee should exist\n    if (\n        !typeof object == \"object\" ||\n        !Object.prototype.hasOwnProperty.call(object, 'callee') ||\n        !object.callee || \n        // It should be a Function object ([[Class]] === 'Function')\n        Object.prototype.toString.call(object.callee) !== '[object Function]' ||\n        typeof object.length != 'number'\n    )\n        return false;\n    for (var name in object) {\n        // both \"callee\" and \"length\" should be { DontEnum }\n        if (name === 'callee' || name === 'length') return false;\n    }\n    return true;\n}\n\n\n}).apply(exports);\n    \n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {},
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/q.js": {
            "requireId": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/q",
            "memoizeId": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/q.js",
            "descriptor": {
              "filename": "q.js",
              "filepath": "../../pinf-bridgelib-js/lib/q.js",
              "mtime": 1375341060,
              "code": "\nvar Q = require(\"q/q\");\n\nfor (var key in Q)\n    exports[key] = Q[key];\n\n\nexports.when = function(value, fulfilled, rejected)\n{\n\tif (typeof rejected === \"object\" &&\n\t\tQ.isPromise(rejected.promise))\n\t{\n\t\tvar promise = Q.when(value, fulfilled, rejected.reject);\n\n\t\tpromise.then(void 0, function(e)\n\t\t{\n\t\t\trejected.reject(e);\n\t\t});\n\n\t\treturn promise;\n\t}\n\treturn Q.when(value, fulfilled, rejected);\n}\n",
              "globals": {
                "Q": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "key": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "q/q": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../pinf-bridgelib-js/lib';",
              "code": "function(require, exports, module) {var __dirname = '../../pinf-bridgelib-js/lib';\n\nvar Q = require(\"q/q\");\n\nfor (var key in Q)\n    exports[key] = Q[key];\n\n\nexports.when = function(value, fulfilled, rejected)\n{\n\tif (typeof rejected === \"object\" &&\n\t\tQ.isPromise(rejected.promise))\n\t{\n\t\tvar promise = Q.when(value, fulfilled, rejected.reject);\n\n\t\tpromise.then(void 0, function(e)\n\t\t{\n\t\t\trejected.reject(e);\n\t\t});\n\n\t\treturn promise;\n\t}\n\treturn Q.when(value, fulfilled, rejected);\n}\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "q/q": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "e27218a8d2b77deb02eb65c861a2cc8a619a9d27-q/q.js": {
            "requireId": "e27218a8d2b77deb02eb65c861a2cc8a619a9d27-q/q",
            "memoizeId": "e27218a8d2b77deb02eb65c861a2cc8a619a9d27-q/q.js",
            "descriptor": {
              "filename": "q.js",
              "filepath": "../../pinf-bridgelib-js/node_modules/q/q.js",
              "mtime": 1415633173,
              "code": "// vim:ts=4:sts=4:sw=4:\n/*!\n *\n * Copyright 2009-2012 Kris Kowal under the terms of the MIT\n * license found at http://github.com/kriskowal/q/raw/master/LICENSE\n *\n * With parts by Tyler Close\n * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\n * at http://www.opensource.org/licenses/mit-license.html\n * Forked at ref_send.js version: 2009-05-11\n *\n * With parts by Mark Miller\n * Copyright (C) 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n(function (definition) {\n    \"use strict\";\n\n    // This file will function properly as a <script> tag, or a module\n    // using CommonJS and NodeJS or RequireJS module formats.  In\n    // Common/Node/RequireJS, the module exports the Q API and when\n    // executed as a simple <script>, it creates a Q global instead.\n\n    // Montage Require\n    if (typeof bootstrap === \"function\") {\n        bootstrap(\"promise\", definition);\n\n    // CommonJS\n    } else if (typeof exports === \"object\" && typeof module === \"object\") {\n        module.exports = definition();\n\n    // RequireJS\n    } else if (typeof define === \"function\" && define.amd) {\n        define(definition);\n\n    // SES (Secure EcmaScript)\n    } else if (typeof ses !== \"undefined\") {\n        if (!ses.ok()) {\n            return;\n        } else {\n            ses.makeQ = definition;\n        }\n\n    // <script>\n    } else if (typeof self !== \"undefined\") {\n        self.Q = definition();\n\n    } else {\n        throw new Error(\"This environment was not anticiapted by Q. Please file a bug.\");\n    }\n\n})(function () {\n\"use strict\";\n\nvar hasStacks = false;\ntry {\n    throw new Error();\n} catch (e) {\n    hasStacks = !!e.stack;\n}\n\n// All code after this point will be filtered from stack traces reported\n// by Q.\nvar qStartingLine = captureLine();\nvar qFileName;\n\n// shims\n\n// used for fallback in \"allResolved\"\nvar noop = function () {};\n\n// Use the fastest possible means to execute a task in a future turn\n// of the event loop.\nvar nextTick =(function () {\n    // linked list of tasks (single, with head node)\n    var head = {task: void 0, next: null};\n    var tail = head;\n    var flushing = false;\n    var requestTick = void 0;\n    var isNodeJS = false;\n\n    function flush() {\n        /* jshint loopfunc: true */\n\n        while (head.next) {\n            head = head.next;\n            var task = head.task;\n            head.task = void 0;\n            var domain = head.domain;\n\n            if (domain) {\n                head.domain = void 0;\n                domain.enter();\n            }\n\n            try {\n                task();\n\n            } catch (e) {\n                if (isNodeJS) {\n                    // In node, uncaught exceptions are considered fatal errors.\n                    // Re-throw them synchronously to interrupt flushing!\n\n                    // Ensure continuation if the uncaught exception is suppressed\n                    // listening \"uncaughtException\" events (as domains does).\n                    // Continue in next event to avoid tick recursion.\n                    if (domain) {\n                        domain.exit();\n                    }\n                    setTimeout(flush, 0);\n                    if (domain) {\n                        domain.enter();\n                    }\n\n                    throw e;\n\n                } else {\n                    // In browsers, uncaught exceptions are not fatal.\n                    // Re-throw them asynchronously to avoid slow-downs.\n                    setTimeout(function() {\n                       throw e;\n                    }, 0);\n                }\n            }\n\n            if (domain) {\n                domain.exit();\n            }\n        }\n\n        flushing = false;\n    }\n\n    nextTick = function (task) {\n        tail = tail.next = {\n            task: task,\n            domain: isNodeJS && process.domain,\n            next: null\n        };\n\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n\n    if (typeof process !== \"undefined\" && process.nextTick) {\n        // Node.js before 0.9. Note that some fake-Node environments, like the\n        // Mocha test runner, introduce a `process` global without a `nextTick`.\n        isNodeJS = true;\n\n        requestTick = function () {\n            process.nextTick(flush);\n        };\n\n    } else if (typeof setImmediate === \"function\") {\n        // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate\n        if (typeof window !== \"undefined\") {\n            requestTick = setImmediate.bind(window, flush);\n        } else {\n            requestTick = function () {\n                setImmediate(flush);\n            };\n        }\n\n    } else if (typeof MessageChannel !== \"undefined\") {\n        // modern browsers\n        // http://www.nonblocking.io/2011/06/windownexttick.html\n        var channel = new MessageChannel();\n        // At least Safari Version 6.0.5 (8536.30.1) intermittently cannot create\n        // working message ports the first time a page loads.\n        channel.port1.onmessage = function () {\n            requestTick = requestPortTick;\n            channel.port1.onmessage = flush;\n            flush();\n        };\n        var requestPortTick = function () {\n            // Opera requires us to provide a message payload, regardless of\n            // whether we use it.\n            channel.port2.postMessage(0);\n        };\n        requestTick = function () {\n            setTimeout(flush, 0);\n            requestPortTick();\n        };\n\n    } else {\n        // old browsers\n        requestTick = function () {\n            setTimeout(flush, 0);\n        };\n    }\n\n    return nextTick;\n})();\n\n// Attempt to make generics safe in the face of downstream\n// modifications.\n// There is no situation where this is necessary.\n// If you need a security guarantee, these primordials need to be\n// deeply frozen anyway, and if you don’t need a security guarantee,\n// this is just plain paranoid.\n// However, this **might** have the nice side-effect of reducing the size of\n// the minified code by reducing x.call() to merely x()\n// See Mark Miller’s explanation of what this does.\n// http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming\nvar call = Function.call;\nfunction uncurryThis(f) {\n    return function () {\n        return call.apply(f, arguments);\n    };\n}\n// This is equivalent, but slower:\n// uncurryThis = Function_bind.bind(Function_bind.call);\n// http://jsperf.com/uncurrythis\n\nvar array_slice = uncurryThis(Array.prototype.slice);\n\nvar array_reduce = uncurryThis(\n    Array.prototype.reduce || function (callback, basis) {\n        var index = 0,\n            length = this.length;\n        // concerning the initial value, if one is not provided\n        if (arguments.length === 1) {\n            // seek to the first value in the array, accounting\n            // for the possibility that is is a sparse array\n            do {\n                if (index in this) {\n                    basis = this[index++];\n                    break;\n                }\n                if (++index >= length) {\n                    throw new TypeError();\n                }\n            } while (1);\n        }\n        // reduce\n        for (; index < length; index++) {\n            // account for the possibility that the array is sparse\n            if (index in this) {\n                basis = callback(basis, this[index], index);\n            }\n        }\n        return basis;\n    }\n);\n\nvar array_indexOf = uncurryThis(\n    Array.prototype.indexOf || function (value) {\n        // not a very good shim, but good enough for our one use of it\n        for (var i = 0; i < this.length; i++) {\n            if (this[i] === value) {\n                return i;\n            }\n        }\n        return -1;\n    }\n);\n\nvar array_map = uncurryThis(\n    Array.prototype.map || function (callback, thisp) {\n        var self = this;\n        var collect = [];\n        array_reduce(self, function (undefined, value, index) {\n            collect.push(callback.call(thisp, value, index, self));\n        }, void 0);\n        return collect;\n    }\n);\n\nvar object_create = Object.create || function (prototype) {\n    function Type() { }\n    Type.prototype = prototype;\n    return new Type();\n};\n\nvar object_hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\n\nvar object_keys = Object.keys || function (object) {\n    var keys = [];\n    for (var key in object) {\n        if (object_hasOwnProperty(object, key)) {\n            keys.push(key);\n        }\n    }\n    return keys;\n};\n\nvar object_toString = uncurryThis(Object.prototype.toString);\n\nfunction isObject(value) {\n    return value === Object(value);\n}\n\n// generator related shims\n\n// FIXME: Remove this function once ES6 generators are in SpiderMonkey.\nfunction isStopIteration(exception) {\n    return (\n        object_toString(exception) === \"[object StopIteration]\" ||\n        exception instanceof QReturnValue\n    );\n}\n\n// FIXME: Remove this helper and Q.return once ES6 generators are in\n// SpiderMonkey.\nvar QReturnValue;\nif (typeof ReturnValue !== \"undefined\") {\n    QReturnValue = ReturnValue;\n} else {\n    QReturnValue = function (value) {\n        this.value = value;\n    };\n}\n\n// long stack traces\n\nvar STACK_JUMP_SEPARATOR = \"From previous event:\";\n\nfunction makeStackTraceLong(error, promise) {\n    // If possible, transform the error stack trace by removing Node and Q\n    // cruft, then concatenating with the stack trace of `promise`. See #57.\n    if (hasStacks &&\n        promise.stack &&\n        typeof error === \"object\" &&\n        error !== null &&\n        error.stack &&\n        error.stack.indexOf(STACK_JUMP_SEPARATOR) === -1\n    ) {\n        var stacks = [];\n        for (var p = promise; !!p; p = p.source) {\n            if (p.stack) {\n                stacks.unshift(p.stack);\n            }\n        }\n        stacks.unshift(error.stack);\n\n        var concatedStacks = stacks.join(\"\\n\" + STACK_JUMP_SEPARATOR + \"\\n\");\n        error.stack = filterStackString(concatedStacks);\n    }\n}\n\nfunction filterStackString(stackString) {\n    var lines = stackString.split(\"\\n\");\n    var desiredLines = [];\n    for (var i = 0; i < lines.length; ++i) {\n        var line = lines[i];\n\n        if (!isInternalFrame(line) && !isNodeFrame(line) && line) {\n            desiredLines.push(line);\n        }\n    }\n    return desiredLines.join(\"\\n\");\n}\n\nfunction isNodeFrame(stackLine) {\n    return stackLine.indexOf(\"(module.js:\") !== -1 ||\n           stackLine.indexOf(\"(node.js:\") !== -1;\n}\n\nfunction getFileNameAndLineNumber(stackLine) {\n    // Named functions: \"at functionName (filename:lineNumber:columnNumber)\"\n    // In IE10 function name can have spaces (\"Anonymous function\") O_o\n    var attempt1 = /at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(stackLine);\n    if (attempt1) {\n        return [attempt1[1], Number(attempt1[2])];\n    }\n\n    // Anonymous functions: \"at filename:lineNumber:columnNumber\"\n    var attempt2 = /at ([^ ]+):(\\d+):(?:\\d+)$/.exec(stackLine);\n    if (attempt2) {\n        return [attempt2[1], Number(attempt2[2])];\n    }\n\n    // Firefox style: \"function@filename:lineNumber or @filename:lineNumber\"\n    var attempt3 = /.*@(.+):(\\d+)$/.exec(stackLine);\n    if (attempt3) {\n        return [attempt3[1], Number(attempt3[2])];\n    }\n}\n\nfunction isInternalFrame(stackLine) {\n    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);\n\n    if (!fileNameAndLineNumber) {\n        return false;\n    }\n\n    var fileName = fileNameAndLineNumber[0];\n    var lineNumber = fileNameAndLineNumber[1];\n\n    return fileName === qFileName &&\n        lineNumber >= qStartingLine &&\n        lineNumber <= qEndingLine;\n}\n\n// discover own file name and line number range for filtering stack\n// traces\nfunction captureLine() {\n    if (!hasStacks) {\n        return;\n    }\n\n    try {\n        throw new Error();\n    } catch (e) {\n        var lines = e.stack.split(\"\\n\");\n        var firstLine = lines[0].indexOf(\"@\") > 0 ? lines[1] : lines[2];\n        var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);\n        if (!fileNameAndLineNumber) {\n            return;\n        }\n\n        qFileName = fileNameAndLineNumber[0];\n        return fileNameAndLineNumber[1];\n    }\n}\n\nfunction deprecate(callback, name, alternative) {\n    return function () {\n        if (typeof console !== \"undefined\" &&\n            typeof console.warn === \"function\") {\n            console.warn(name + \" is deprecated, use \" + alternative +\n                         \" instead.\", new Error(\"\").stack);\n        }\n        return callback.apply(callback, arguments);\n    };\n}\n\n// end of shims\n// beginning of real work\n\n/**\n * Constructs a promise for an immediate reference, passes promises through, or\n * coerces promises from different systems.\n * @param value immediate reference or promise\n */\nfunction Q(value) {\n    // If the object is already a Promise, return it directly.  This enables\n    // the resolve function to both be used to created references from objects,\n    // but to tolerably coerce non-promises to promises.\n    if (value instanceof Promise) {\n        return value;\n    }\n\n    // assimilate thenables\n    if (isPromiseAlike(value)) {\n        return coerce(value);\n    } else {\n        return fulfill(value);\n    }\n}\nQ.resolve = Q;\n\n/**\n * Performs a task in a future turn of the event loop.\n * @param {Function} task\n */\nQ.nextTick = nextTick;\n\n/**\n * Controls whether or not long stack traces will be on\n */\nQ.longStackSupport = false;\n\n// enable long stacks if Q_DEBUG is set\nif (typeof process === \"object\" && process && process.env && process.env.Q_DEBUG) {\n    Q.longStackSupport = true;\n}\n\n/**\n * Constructs a {promise, resolve, reject} object.\n *\n * `resolve` is a callback to invoke with a more resolved value for the\n * promise. To fulfill the promise, invoke `resolve` with any value that is\n * not a thenable. To reject the promise, invoke `resolve` with a rejected\n * thenable, or invoke `reject` with the reason directly. To resolve the\n * promise to another thenable, thus putting it in the same state, invoke\n * `resolve` with that other thenable.\n */\nQ.defer = defer;\nfunction defer() {\n    // if \"messages\" is an \"Array\", that indicates that the promise has not yet\n    // been resolved.  If it is \"undefined\", it has been resolved.  Each\n    // element of the messages array is itself an array of complete arguments to\n    // forward to the resolved promise.  We coerce the resolution value to a\n    // promise using the `resolve` function because it handles both fully\n    // non-thenable values and other thenables gracefully.\n    var messages = [], progressListeners = [], resolvedPromise;\n\n    var deferred = object_create(defer.prototype);\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, operands) {\n        var args = array_slice(arguments);\n        if (messages) {\n            messages.push(args);\n            if (op === \"when\" && operands[1]) { // progress operand\n                progressListeners.push(operands[1]);\n            }\n        } else {\n            Q.nextTick(function () {\n                resolvedPromise.promiseDispatch.apply(resolvedPromise, args);\n            });\n        }\n    };\n\n    // XXX deprecated\n    promise.valueOf = function () {\n        if (messages) {\n            return promise;\n        }\n        var nearerValue = nearer(resolvedPromise);\n        if (isPromise(nearerValue)) {\n            resolvedPromise = nearerValue; // shorten chain\n        }\n        return nearerValue;\n    };\n\n    promise.inspect = function () {\n        if (!resolvedPromise) {\n            return { state: \"pending\" };\n        }\n        return resolvedPromise.inspect();\n    };\n\n    if (Q.longStackSupport && hasStacks) {\n        try {\n            throw new Error();\n        } catch (e) {\n            // NOTE: don't try to use `Error.captureStackTrace` or transfer the\n            // accessor around; that causes memory leaks as per GH-111. Just\n            // reify the stack trace as a string ASAP.\n            //\n            // At the same time, cut off the first line; it's always just\n            // \"[object Promise]\\n\", as per the `toString`.\n            promise.stack = e.stack.substring(e.stack.indexOf(\"\\n\") + 1);\n        }\n    }\n\n    // NOTE: we do the checks for `resolvedPromise` in each method, instead of\n    // consolidating them into `become`, since otherwise we'd create new\n    // promises with the lines `become(whatever(value))`. See e.g. GH-252.\n\n    function become(newPromise) {\n        resolvedPromise = newPromise;\n        promise.source = newPromise;\n\n        array_reduce(messages, function (undefined, message) {\n            Q.nextTick(function () {\n                newPromise.promiseDispatch.apply(newPromise, message);\n            });\n        }, void 0);\n\n        messages = void 0;\n        progressListeners = void 0;\n    }\n\n    deferred.promise = promise;\n    deferred.resolve = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(Q(value));\n    };\n\n    deferred.fulfill = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(fulfill(value));\n    };\n    deferred.reject = function (reason) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(reject(reason));\n    };\n    deferred.notify = function (progress) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        array_reduce(progressListeners, function (undefined, progressListener) {\n            Q.nextTick(function () {\n                progressListener(progress);\n            });\n        }, void 0);\n    };\n\n    return deferred;\n}\n\n/**\n * Creates a Node-style callback that will resolve or reject the deferred\n * promise.\n * @returns a nodeback\n */\ndefer.prototype.makeNodeResolver = function () {\n    var self = this;\n    return function (error, value) {\n        if (error) {\n            self.reject(error);\n        } else if (arguments.length > 2) {\n            self.resolve(array_slice(arguments, 1));\n        } else {\n            self.resolve(value);\n        }\n    };\n};\n\n/**\n * @param resolver {Function} a function that returns nothing and accepts\n * the resolve, reject, and notify functions for a deferred.\n * @returns a promise that may be resolved with the given resolve and reject\n * functions, or rejected by a thrown exception in resolver\n */\nQ.Promise = promise; // ES6\nQ.promise = promise;\nfunction promise(resolver) {\n    if (typeof resolver !== \"function\") {\n        throw new TypeError(\"resolver must be a function.\");\n    }\n    var deferred = defer();\n    try {\n        resolver(deferred.resolve, deferred.reject, deferred.notify);\n    } catch (reason) {\n        deferred.reject(reason);\n    }\n    return deferred.promise;\n}\n\npromise.race = race; // ES6\npromise.all = all; // ES6\npromise.reject = reject; // ES6\npromise.resolve = Q; // ES6\n\n// XXX experimental.  This method is a way to denote that a local value is\n// serializable and should be immediately dispatched to a remote upon request,\n// instead of passing a reference.\nQ.passByCopy = function (object) {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return object;\n};\n\nPromise.prototype.passByCopy = function () {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return this;\n};\n\n/**\n * If two promises eventually fulfill to the same value, promises that value,\n * but otherwise rejects.\n * @param x {Any*}\n * @param y {Any*}\n * @returns {Any*} a promise for x and y if they are the same, but a rejection\n * otherwise.\n *\n */\nQ.join = function (x, y) {\n    return Q(x).join(y);\n};\n\nPromise.prototype.join = function (that) {\n    return Q([this, that]).spread(function (x, y) {\n        if (x === y) {\n            // TODO: \"===\" should be Object.is or equiv\n            return x;\n        } else {\n            throw new Error(\"Can't join: not the same: \" + x + \" \" + y);\n        }\n    });\n};\n\n/**\n * Returns a promise for the first of an array of promises to become settled.\n * @param answers {Array[Any*]} promises to race\n * @returns {Any*} the first promise to be settled\n */\nQ.race = race;\nfunction race(answerPs) {\n    return promise(function(resolve, reject) {\n        // Switch to this once we can assume at least ES5\n        // answerPs.forEach(function(answerP) {\n        //     Q(answerP).then(resolve, reject);\n        // });\n        // Use this in the meantime\n        for (var i = 0, len = answerPs.length; i < len; i++) {\n            Q(answerPs[i]).then(resolve, reject);\n        }\n    });\n}\n\nPromise.prototype.race = function () {\n    return this.then(Q.race);\n};\n\n/**\n * Constructs a Promise with a promise descriptor object and optional fallback\n * function.  The descriptor contains methods like when(rejected), get(name),\n * set(name, value), post(name, args), and delete(name), which all\n * return either a value, a promise for a value, or a rejection.  The fallback\n * accepts the operation name, a resolver, and any further arguments that would\n * have been forwarded to the appropriate method above had a method been\n * provided with the proper name.  The API makes no guarantees about the nature\n * of the returned object, apart from that it is usable whereever promises are\n * bought and sold.\n */\nQ.makePromise = Promise;\nfunction Promise(descriptor, fallback, inspect) {\n    if (fallback === void 0) {\n        fallback = function (op) {\n            return reject(new Error(\n                \"Promise does not support operation: \" + op\n            ));\n        };\n    }\n    if (inspect === void 0) {\n        inspect = function () {\n            return {state: \"unknown\"};\n        };\n    }\n\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, args) {\n        var result;\n        try {\n            if (descriptor[op]) {\n                result = descriptor[op].apply(promise, args);\n            } else {\n                result = fallback.call(promise, op, args);\n            }\n        } catch (exception) {\n            result = reject(exception);\n        }\n        if (resolve) {\n            resolve(result);\n        }\n    };\n\n    promise.inspect = inspect;\n\n    // XXX deprecated `valueOf` and `exception` support\n    if (inspect) {\n        var inspected = inspect();\n        if (inspected.state === \"rejected\") {\n            promise.exception = inspected.reason;\n        }\n\n        promise.valueOf = function () {\n            var inspected = inspect();\n            if (inspected.state === \"pending\" ||\n                inspected.state === \"rejected\") {\n                return promise;\n            }\n            return inspected.value;\n        };\n    }\n\n    return promise;\n}\n\nPromise.prototype.toString = function () {\n    return \"[object Promise]\";\n};\n\nPromise.prototype.then = function (fulfilled, rejected, progressed) {\n    var self = this;\n    var deferred = defer();\n    var done = false;   // ensure the untrusted promise makes at most a\n                        // single call to one of the callbacks\n\n    function _fulfilled(value) {\n        try {\n            return typeof fulfilled === \"function\" ? fulfilled(value) : value;\n        } catch (exception) {\n            return reject(exception);\n        }\n    }\n\n    function _rejected(exception) {\n        if (typeof rejected === \"function\") {\n            makeStackTraceLong(exception, self);\n            try {\n                return rejected(exception);\n            } catch (newException) {\n                return reject(newException);\n            }\n        }\n        return reject(exception);\n    }\n\n    function _progressed(value) {\n        return typeof progressed === \"function\" ? progressed(value) : value;\n    }\n\n    Q.nextTick(function () {\n        self.promiseDispatch(function (value) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_fulfilled(value));\n        }, \"when\", [function (exception) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_rejected(exception));\n        }]);\n    });\n\n    // Progress propagator need to be attached in the current tick.\n    self.promiseDispatch(void 0, \"when\", [void 0, function (value) {\n        var newValue;\n        var threw = false;\n        try {\n            newValue = _progressed(value);\n        } catch (e) {\n            threw = true;\n            if (Q.onerror) {\n                Q.onerror(e);\n            } else {\n                throw e;\n            }\n        }\n\n        if (!threw) {\n            deferred.notify(newValue);\n        }\n    }]);\n\n    return deferred.promise;\n};\n\nQ.tap = function (promise, callback) {\n    return Q(promise).tap(callback);\n};\n\n/**\n * Works almost like \"finally\", but not called for rejections.\n * Original resolution value is passed through callback unaffected.\n * Callback may return a promise that will be awaited for.\n * @param {Function} callback\n * @returns {Q.Promise}\n * @example\n * doSomething()\n *   .then(...)\n *   .tap(console.log)\n *   .then(...);\n */\nPromise.prototype.tap = function (callback) {\n    callback = Q(callback);\n\n    return this.then(function (value) {\n        return callback.fcall(value).thenResolve(value);\n    });\n};\n\n/**\n * Registers an observer on a promise.\n *\n * Guarantees:\n *\n * 1. that fulfilled and rejected will be called only once.\n * 2. that either the fulfilled callback or the rejected callback will be\n *    called, but not both.\n * 3. that fulfilled and rejected will not be called in this turn.\n *\n * @param value      promise or immediate reference to observe\n * @param fulfilled  function to be called with the fulfilled value\n * @param rejected   function to be called with the rejection exception\n * @param progressed function to be called on any progress notifications\n * @return promise for the return value from the invoked callback\n */\nQ.when = when;\nfunction when(value, fulfilled, rejected, progressed) {\n    return Q(value).then(fulfilled, rejected, progressed);\n}\n\nPromise.prototype.thenResolve = function (value) {\n    return this.then(function () { return value; });\n};\n\nQ.thenResolve = function (promise, value) {\n    return Q(promise).thenResolve(value);\n};\n\nPromise.prototype.thenReject = function (reason) {\n    return this.then(function () { throw reason; });\n};\n\nQ.thenReject = function (promise, reason) {\n    return Q(promise).thenReject(reason);\n};\n\n/**\n * If an object is not a promise, it is as \"near\" as possible.\n * If a promise is rejected, it is as \"near\" as possible too.\n * If it’s a fulfilled promise, the fulfillment value is nearer.\n * If it’s a deferred promise and the deferred has been resolved, the\n * resolution is \"nearer\".\n * @param object\n * @returns most resolved (nearest) form of the object\n */\n\n// XXX should we re-do this?\nQ.nearer = nearer;\nfunction nearer(value) {\n    if (isPromise(value)) {\n        var inspected = value.inspect();\n        if (inspected.state === \"fulfilled\") {\n            return inspected.value;\n        }\n    }\n    return value;\n}\n\n/**\n * @returns whether the given object is a promise.\n * Otherwise it is a fulfilled value.\n */\nQ.isPromise = isPromise;\nfunction isPromise(object) {\n    return object instanceof Promise;\n}\n\nQ.isPromiseAlike = isPromiseAlike;\nfunction isPromiseAlike(object) {\n    return isObject(object) && typeof object.then === \"function\";\n}\n\n/**\n * @returns whether the given object is a pending promise, meaning not\n * fulfilled or rejected.\n */\nQ.isPending = isPending;\nfunction isPending(object) {\n    return isPromise(object) && object.inspect().state === \"pending\";\n}\n\nPromise.prototype.isPending = function () {\n    return this.inspect().state === \"pending\";\n};\n\n/**\n * @returns whether the given object is a value or fulfilled\n * promise.\n */\nQ.isFulfilled = isFulfilled;\nfunction isFulfilled(object) {\n    return !isPromise(object) || object.inspect().state === \"fulfilled\";\n}\n\nPromise.prototype.isFulfilled = function () {\n    return this.inspect().state === \"fulfilled\";\n};\n\n/**\n * @returns whether the given object is a rejected promise.\n */\nQ.isRejected = isRejected;\nfunction isRejected(object) {\n    return isPromise(object) && object.inspect().state === \"rejected\";\n}\n\nPromise.prototype.isRejected = function () {\n    return this.inspect().state === \"rejected\";\n};\n\n//// BEGIN UNHANDLED REJECTION TRACKING\n\n// This promise library consumes exceptions thrown in handlers so they can be\n// handled by a subsequent promise.  The exceptions get added to this array when\n// they are created, and removed when they are handled.  Note that in ES6 or\n// shimmed environments, this would naturally be a `Set`.\nvar unhandledReasons = [];\nvar unhandledRejections = [];\nvar trackUnhandledRejections = true;\n\nfunction resetUnhandledRejections() {\n    unhandledReasons.length = 0;\n    unhandledRejections.length = 0;\n\n    if (!trackUnhandledRejections) {\n        trackUnhandledRejections = true;\n    }\n}\n\nfunction trackRejection(promise, reason) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n\n    unhandledRejections.push(promise);\n    if (reason && typeof reason.stack !== \"undefined\") {\n        unhandledReasons.push(reason.stack);\n    } else {\n        unhandledReasons.push(\"(no stack) \" + reason);\n    }\n}\n\nfunction untrackRejection(promise) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n\n    var at = array_indexOf(unhandledRejections, promise);\n    if (at !== -1) {\n        unhandledRejections.splice(at, 1);\n        unhandledReasons.splice(at, 1);\n    }\n}\n\nQ.resetUnhandledRejections = resetUnhandledRejections;\n\nQ.getUnhandledReasons = function () {\n    // Make a copy so that consumers can't interfere with our internal state.\n    return unhandledReasons.slice();\n};\n\nQ.stopUnhandledRejectionTracking = function () {\n    resetUnhandledRejections();\n    trackUnhandledRejections = false;\n};\n\nresetUnhandledRejections();\n\n//// END UNHANDLED REJECTION TRACKING\n\n/**\n * Constructs a rejected promise.\n * @param reason value describing the failure\n */\nQ.reject = reject;\nfunction reject(reason) {\n    var rejection = Promise({\n        \"when\": function (rejected) {\n            // note that the error has been handled\n            if (rejected) {\n                untrackRejection(this);\n            }\n            return rejected ? rejected(reason) : this;\n        }\n    }, function fallback() {\n        return this;\n    }, function inspect() {\n        return { state: \"rejected\", reason: reason };\n    });\n\n    // Note that the reason has not been handled.\n    trackRejection(rejection, reason);\n\n    return rejection;\n}\n\n/**\n * Constructs a fulfilled promise for an immediate reference.\n * @param value immediate reference\n */\nQ.fulfill = fulfill;\nfunction fulfill(value) {\n    return Promise({\n        \"when\": function () {\n            return value;\n        },\n        \"get\": function (name) {\n            return value[name];\n        },\n        \"set\": function (name, rhs) {\n            value[name] = rhs;\n        },\n        \"delete\": function (name) {\n            delete value[name];\n        },\n        \"post\": function (name, args) {\n            // Mark Miller proposes that post with no name should apply a\n            // promised function.\n            if (name === null || name === void 0) {\n                return value.apply(void 0, args);\n            } else {\n                return value[name].apply(value, args);\n            }\n        },\n        \"apply\": function (thisp, args) {\n            return value.apply(thisp, args);\n        },\n        \"keys\": function () {\n            return object_keys(value);\n        }\n    }, void 0, function inspect() {\n        return { state: \"fulfilled\", value: value };\n    });\n}\n\n/**\n * Converts thenables to Q promises.\n * @param promise thenable promise\n * @returns a Q promise\n */\nfunction coerce(promise) {\n    var deferred = defer();\n    Q.nextTick(function () {\n        try {\n            promise.then(deferred.resolve, deferred.reject, deferred.notify);\n        } catch (exception) {\n            deferred.reject(exception);\n        }\n    });\n    return deferred.promise;\n}\n\n/**\n * Annotates an object such that it will never be\n * transferred away from this process over any promise\n * communication channel.\n * @param object\n * @returns promise a wrapping of that object that\n * additionally responds to the \"isDef\" message\n * without a rejection.\n */\nQ.master = master;\nfunction master(object) {\n    return Promise({\n        \"isDef\": function () {}\n    }, function fallback(op, args) {\n        return dispatch(object, op, args);\n    }, function () {\n        return Q(object).inspect();\n    });\n}\n\n/**\n * Spreads the values of a promised array of arguments into the\n * fulfillment callback.\n * @param fulfilled callback that receives variadic arguments from the\n * promised array\n * @param rejected callback that receives the exception if the promise\n * is rejected.\n * @returns a promise for the return value or thrown exception of\n * either callback.\n */\nQ.spread = spread;\nfunction spread(value, fulfilled, rejected) {\n    return Q(value).spread(fulfilled, rejected);\n}\n\nPromise.prototype.spread = function (fulfilled, rejected) {\n    return this.all().then(function (array) {\n        return fulfilled.apply(void 0, array);\n    }, rejected);\n};\n\n/**\n * The async function is a decorator for generator functions, turning\n * them into asynchronous generators.  Although generators are only part\n * of the newest ECMAScript 6 drafts, this code does not cause syntax\n * errors in older engines.  This code should continue to work and will\n * in fact improve over time as the language improves.\n *\n * ES6 generators are currently part of V8 version 3.19 with the\n * --harmony-generators runtime flag enabled.  SpiderMonkey has had them\n * for longer, but under an older Python-inspired form.  This function\n * works on both kinds of generators.\n *\n * Decorates a generator function such that:\n *  - it may yield promises\n *  - execution will continue when that promise is fulfilled\n *  - the value of the yield expression will be the fulfilled value\n *  - it returns a promise for the return value (when the generator\n *    stops iterating)\n *  - the decorated function returns a promise for the return value\n *    of the generator or the first rejected promise among those\n *    yielded.\n *  - if an error is thrown in the generator, it propagates through\n *    every following yield until it is caught, or until it escapes\n *    the generator function altogether, and is translated into a\n *    rejection for the promise returned by the decorated generator.\n */\nQ.async = async;\nfunction async(makeGenerator) {\n    return function () {\n        // when verb is \"send\", arg is a value\n        // when verb is \"throw\", arg is an exception\n        function continuer(verb, arg) {\n            var result;\n\n            // Until V8 3.19 / Chromium 29 is released, SpiderMonkey is the only\n            // engine that has a deployed base of browsers that support generators.\n            // However, SM's generators use the Python-inspired semantics of\n            // outdated ES6 drafts.  We would like to support ES6, but we'd also\n            // like to make it possible to use generators in deployed browsers, so\n            // we also support Python-style generators.  At some point we can remove\n            // this block.\n\n            if (typeof StopIteration === \"undefined\") {\n                // ES6 Generators\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    return reject(exception);\n                }\n                if (result.done) {\n                    return Q(result.value);\n                } else {\n                    return when(result.value, callback, errback);\n                }\n            } else {\n                // SpiderMonkey Generators\n                // FIXME: Remove this case when SM does ES6 generators.\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    if (isStopIteration(exception)) {\n                        return Q(exception.value);\n                    } else {\n                        return reject(exception);\n                    }\n                }\n                return when(result, callback, errback);\n            }\n        }\n        var generator = makeGenerator.apply(this, arguments);\n        var callback = continuer.bind(continuer, \"next\");\n        var errback = continuer.bind(continuer, \"throw\");\n        return callback();\n    };\n}\n\n/**\n * The spawn function is a small wrapper around async that immediately\n * calls the generator and also ends the promise chain, so that any\n * unhandled errors are thrown instead of forwarded to the error\n * handler. This is useful because it's extremely common to run\n * generators at the top-level to work with libraries.\n */\nQ.spawn = spawn;\nfunction spawn(makeGenerator) {\n    Q.done(Q.async(makeGenerator)());\n}\n\n// FIXME: Remove this interface once ES6 generators are in SpiderMonkey.\n/**\n * Throws a ReturnValue exception to stop an asynchronous generator.\n *\n * This interface is a stop-gap measure to support generator return\n * values in older Firefox/SpiderMonkey.  In browsers that support ES6\n * generators like Chromium 29, just use \"return\" in your generator\n * functions.\n *\n * @param value the return value for the surrounding generator\n * @throws ReturnValue exception with the value.\n * @example\n * // ES6 style\n * Q.async(function* () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      return foo + bar;\n * })\n * // Older SpiderMonkey style\n * Q.async(function () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      Q.return(foo + bar);\n * })\n */\nQ[\"return\"] = _return;\nfunction _return(value) {\n    throw new QReturnValue(value);\n}\n\n/**\n * The promised function decorator ensures that any promise arguments\n * are settled and passed as values (`this` is also settled and passed\n * as a value).  It will also ensure that the result of a function is\n * always a promise.\n *\n * @example\n * var add = Q.promised(function (a, b) {\n *     return a + b;\n * });\n * add(Q(a), Q(B));\n *\n * @param {function} callback The function to decorate\n * @returns {function} a function that has been decorated.\n */\nQ.promised = promised;\nfunction promised(callback) {\n    return function () {\n        return spread([this, all(arguments)], function (self, args) {\n            return callback.apply(self, args);\n        });\n    };\n}\n\n/**\n * sends a message to a value in a future turn\n * @param object* the recipient\n * @param op the name of the message operation, e.g., \"when\",\n * @param args further arguments to be forwarded to the operation\n * @returns result {Promise} a promise for the result of the operation\n */\nQ.dispatch = dispatch;\nfunction dispatch(object, op, args) {\n    return Q(object).dispatch(op, args);\n}\n\nPromise.prototype.dispatch = function (op, args) {\n    var self = this;\n    var deferred = defer();\n    Q.nextTick(function () {\n        self.promiseDispatch(deferred.resolve, op, args);\n    });\n    return deferred.promise;\n};\n\n/**\n * Gets the value of a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to get\n * @return promise for the property value\n */\nQ.get = function (object, key) {\n    return Q(object).dispatch(\"get\", [key]);\n};\n\nPromise.prototype.get = function (key) {\n    return this.dispatch(\"get\", [key]);\n};\n\n/**\n * Sets the value of a property in a future turn.\n * @param object    promise or immediate reference for object object\n * @param name      name of property to set\n * @param value     new value of property\n * @return promise for the return value\n */\nQ.set = function (object, key, value) {\n    return Q(object).dispatch(\"set\", [key, value]);\n};\n\nPromise.prototype.set = function (key, value) {\n    return this.dispatch(\"set\", [key, value]);\n};\n\n/**\n * Deletes a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to delete\n * @return promise for the return value\n */\nQ.del = // XXX legacy\nQ[\"delete\"] = function (object, key) {\n    return Q(object).dispatch(\"delete\", [key]);\n};\n\nPromise.prototype.del = // XXX legacy\nPromise.prototype[\"delete\"] = function (key) {\n    return this.dispatch(\"delete\", [key]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param value     a value to post, typically an array of\n *                  invocation arguments for promises that\n *                  are ultimately backed with `resolve` values,\n *                  as opposed to those backed with URLs\n *                  wherein the posted value can be any\n *                  JSON serializable object.\n * @return promise for the return value\n */\n// bound locally because it is used by other methods\nQ.mapply = // XXX As proposed by \"Redsandro\"\nQ.post = function (object, name, args) {\n    return Q(object).dispatch(\"post\", [name, args]);\n};\n\nPromise.prototype.mapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.post = function (name, args) {\n    return this.dispatch(\"post\", [name, args]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param ...args   array of invocation arguments\n * @return promise for the return value\n */\nQ.send = // XXX Mark Miller's proposed parlance\nQ.mcall = // XXX As proposed by \"Redsandro\"\nQ.invoke = function (object, name /*...args*/) {\n    return Q(object).dispatch(\"post\", [name, array_slice(arguments, 2)]);\n};\n\nPromise.prototype.send = // XXX Mark Miller's proposed parlance\nPromise.prototype.mcall = // XXX As proposed by \"Redsandro\"\nPromise.prototype.invoke = function (name /*...args*/) {\n    return this.dispatch(\"post\", [name, array_slice(arguments, 1)]);\n};\n\n/**\n * Applies the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param args      array of application arguments\n */\nQ.fapply = function (object, args) {\n    return Q(object).dispatch(\"apply\", [void 0, args]);\n};\n\nPromise.prototype.fapply = function (args) {\n    return this.dispatch(\"apply\", [void 0, args]);\n};\n\n/**\n * Calls the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ[\"try\"] =\nQ.fcall = function (object /* ...args*/) {\n    return Q(object).dispatch(\"apply\", [void 0, array_slice(arguments, 1)]);\n};\n\nPromise.prototype.fcall = function (/*...args*/) {\n    return this.dispatch(\"apply\", [void 0, array_slice(arguments)]);\n};\n\n/**\n * Binds the promised function, transforming return values into a fulfilled\n * promise and thrown errors into a rejected one.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ.fbind = function (object /*...args*/) {\n    var promise = Q(object);\n    var args = array_slice(arguments, 1);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\nPromise.prototype.fbind = function (/*...args*/) {\n    var promise = this;\n    var args = array_slice(arguments);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\n\n/**\n * Requests the names of the owned properties of a promised\n * object in a future turn.\n * @param object    promise or immediate reference for target object\n * @return promise for the keys of the eventually settled object\n */\nQ.keys = function (object) {\n    return Q(object).dispatch(\"keys\", []);\n};\n\nPromise.prototype.keys = function () {\n    return this.dispatch(\"keys\", []);\n};\n\n/**\n * Turns an array of promises into a promise for an array.  If any of\n * the promises gets rejected, the whole array is rejected immediately.\n * @param {Array*} an array (or promise for an array) of values (or\n * promises for values)\n * @returns a promise for an array of the corresponding values\n */\n// By Mark Miller\n// http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&rev=1308776521#allfulfilled\nQ.all = all;\nfunction all(promises) {\n    return when(promises, function (promises) {\n        var countDown = 0;\n        var deferred = defer();\n        array_reduce(promises, function (undefined, promise, index) {\n            var snapshot;\n            if (\n                isPromise(promise) &&\n                (snapshot = promise.inspect()).state === \"fulfilled\"\n            ) {\n                promises[index] = snapshot.value;\n            } else {\n                ++countDown;\n                when(\n                    promise,\n                    function (value) {\n                        promises[index] = value;\n                        if (--countDown === 0) {\n                            deferred.resolve(promises);\n                        }\n                    },\n                    deferred.reject,\n                    function (progress) {\n                        deferred.notify({ index: index, value: progress });\n                    }\n                );\n            }\n        }, void 0);\n        if (countDown === 0) {\n            deferred.resolve(promises);\n        }\n        return deferred.promise;\n    });\n}\n\nPromise.prototype.all = function () {\n    return all(this);\n};\n\n/**\n * Waits for all promises to be settled, either fulfilled or\n * rejected.  This is distinct from `all` since that would stop\n * waiting at the first rejection.  The promise returned by\n * `allResolved` will never be rejected.\n * @param promises a promise for an array (or an array) of promises\n * (or values)\n * @return a promise for an array of promises\n */\nQ.allResolved = deprecate(allResolved, \"allResolved\", \"allSettled\");\nfunction allResolved(promises) {\n    return when(promises, function (promises) {\n        promises = array_map(promises, Q);\n        return when(all(array_map(promises, function (promise) {\n            return when(promise, noop, noop);\n        })), function () {\n            return promises;\n        });\n    });\n}\n\nPromise.prototype.allResolved = function () {\n    return allResolved(this);\n};\n\n/**\n * @see Promise#allSettled\n */\nQ.allSettled = allSettled;\nfunction allSettled(promises) {\n    return Q(promises).allSettled();\n}\n\n/**\n * Turns an array of promises into a promise for an array of their states (as\n * returned by `inspect`) when they have all settled.\n * @param {Array[Any*]} values an array (or promise for an array) of values (or\n * promises for values)\n * @returns {Array[State]} an array of states for the respective values.\n */\nPromise.prototype.allSettled = function () {\n    return this.then(function (promises) {\n        return all(array_map(promises, function (promise) {\n            promise = Q(promise);\n            function regardless() {\n                return promise.inspect();\n            }\n            return promise.then(regardless, regardless);\n        }));\n    });\n};\n\n/**\n * Captures the failure of a promise, giving an oportunity to recover\n * with a callback.  If the given promise is fulfilled, the returned\n * promise is fulfilled.\n * @param {Any*} promise for something\n * @param {Function} callback to fulfill the returned promise if the\n * given promise is rejected\n * @returns a promise for the return value of the callback\n */\nQ.fail = // XXX legacy\nQ[\"catch\"] = function (object, rejected) {\n    return Q(object).then(void 0, rejected);\n};\n\nPromise.prototype.fail = // XXX legacy\nPromise.prototype[\"catch\"] = function (rejected) {\n    return this.then(void 0, rejected);\n};\n\n/**\n * Attaches a listener that can respond to progress notifications from a\n * promise's originating deferred. This listener receives the exact arguments\n * passed to ``deferred.notify``.\n * @param {Any*} promise for something\n * @param {Function} callback to receive any progress notifications\n * @returns the given promise, unchanged\n */\nQ.progress = progress;\nfunction progress(object, progressed) {\n    return Q(object).then(void 0, void 0, progressed);\n}\n\nPromise.prototype.progress = function (progressed) {\n    return this.then(void 0, void 0, progressed);\n};\n\n/**\n * Provides an opportunity to observe the settling of a promise,\n * regardless of whether the promise is fulfilled or rejected.  Forwards\n * the resolution to the returned promise when the callback is done.\n * The callback can return a promise to defer completion.\n * @param {Any*} promise\n * @param {Function} callback to observe the resolution of the given\n * promise, takes no arguments.\n * @returns a promise for the resolution of the given promise when\n * ``fin`` is done.\n */\nQ.fin = // XXX legacy\nQ[\"finally\"] = function (object, callback) {\n    return Q(object)[\"finally\"](callback);\n};\n\nPromise.prototype.fin = // XXX legacy\nPromise.prototype[\"finally\"] = function (callback) {\n    callback = Q(callback);\n    return this.then(function (value) {\n        return callback.fcall().then(function () {\n            return value;\n        });\n    }, function (reason) {\n        // TODO attempt to recycle the rejection with \"this\".\n        return callback.fcall().then(function () {\n            throw reason;\n        });\n    });\n};\n\n/**\n * Terminates a chain of promises, forcing rejections to be\n * thrown as exceptions.\n * @param {Any*} promise at the end of a chain of promises\n * @returns nothing\n */\nQ.done = function (object, fulfilled, rejected, progress) {\n    return Q(object).done(fulfilled, rejected, progress);\n};\n\nPromise.prototype.done = function (fulfilled, rejected, progress) {\n    var onUnhandledError = function (error) {\n        // forward to a future turn so that ``when``\n        // does not catch it and turn it into a rejection.\n        Q.nextTick(function () {\n            makeStackTraceLong(error, promise);\n            if (Q.onerror) {\n                Q.onerror(error);\n            } else {\n                throw error;\n            }\n        });\n    };\n\n    // Avoid unnecessary `nextTick`ing via an unnecessary `when`.\n    var promise = fulfilled || rejected || progress ?\n        this.then(fulfilled, rejected, progress) :\n        this;\n\n    if (typeof process === \"object\" && process && process.domain) {\n        onUnhandledError = process.domain.bind(onUnhandledError);\n    }\n\n    promise.then(void 0, onUnhandledError);\n};\n\n/**\n * Causes a promise to be rejected if it does not get fulfilled before\n * some milliseconds time out.\n * @param {Any*} promise\n * @param {Number} milliseconds timeout\n * @param {Any*} custom error message or Error object (optional)\n * @returns a promise for the resolution of the given promise if it is\n * fulfilled before the timeout, otherwise rejected.\n */\nQ.timeout = function (object, ms, error) {\n    return Q(object).timeout(ms, error);\n};\n\nPromise.prototype.timeout = function (ms, error) {\n    var deferred = defer();\n    var timeoutId = setTimeout(function () {\n        if (!error || \"string\" === typeof error) {\n            error = new Error(error || \"Timed out after \" + ms + \" ms\");\n            error.code = \"ETIMEDOUT\";\n        }\n        deferred.reject(error);\n    }, ms);\n\n    this.then(function (value) {\n        clearTimeout(timeoutId);\n        deferred.resolve(value);\n    }, function (exception) {\n        clearTimeout(timeoutId);\n        deferred.reject(exception);\n    }, deferred.notify);\n\n    return deferred.promise;\n};\n\n/**\n * Returns a promise for the given value (or promised value), some\n * milliseconds after it resolved. Passes rejections immediately.\n * @param {Any*} promise\n * @param {Number} milliseconds\n * @returns a promise for the resolution of the given promise after milliseconds\n * time has elapsed since the resolution of the given promise.\n * If the given promise rejects, that is passed immediately.\n */\nQ.delay = function (object, timeout) {\n    if (timeout === void 0) {\n        timeout = object;\n        object = void 0;\n    }\n    return Q(object).delay(timeout);\n};\n\nPromise.prototype.delay = function (timeout) {\n    return this.then(function (value) {\n        var deferred = defer();\n        setTimeout(function () {\n            deferred.resolve(value);\n        }, timeout);\n        return deferred.promise;\n    });\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided as an array, and returns a promise.\n *\n *      Q.nfapply(FS.readFile, [__filename])\n *      .then(function (content) {\n *      })\n *\n */\nQ.nfapply = function (callback, args) {\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfapply = function (args) {\n    var deferred = defer();\n    var nodeArgs = array_slice(args);\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided individually, and returns a promise.\n * @example\n * Q.nfcall(FS.readFile, __filename)\n * .then(function (content) {\n * })\n *\n */\nQ.nfcall = function (callback /*...args*/) {\n    var args = array_slice(arguments, 1);\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfcall = function (/*...args*/) {\n    var nodeArgs = array_slice(arguments);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Wraps a NodeJS continuation passing function and returns an equivalent\n * version that returns a promise.\n * @example\n * Q.nfbind(FS.readFile, __filename)(\"utf-8\")\n * .then(console.log)\n * .done()\n */\nQ.nfbind =\nQ.denodeify = function (callback /*...args*/) {\n    var baseArgs = array_slice(arguments, 1);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        Q(callback).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nfbind =\nPromise.prototype.denodeify = function (/*...args*/) {\n    var args = array_slice(arguments);\n    args.unshift(this);\n    return Q.denodeify.apply(void 0, args);\n};\n\nQ.nbind = function (callback, thisp /*...args*/) {\n    var baseArgs = array_slice(arguments, 2);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        function bound() {\n            return callback.apply(thisp, arguments);\n        }\n        Q(bound).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nbind = function (/*thisp, ...args*/) {\n    var args = array_slice(arguments, 0);\n    args.unshift(this);\n    return Q.nbind.apply(void 0, args);\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback with a given array of arguments, plus a provided callback.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param {Array} args arguments to pass to the method; the callback\n * will be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nmapply = // XXX As proposed by \"Redsandro\"\nQ.npost = function (object, name, args) {\n    return Q(object).npost(name, args);\n};\n\nPromise.prototype.nmapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.npost = function (name, args) {\n    var nodeArgs = array_slice(args || []);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback, forwarding the given variadic arguments, plus a provided\n * callback argument.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param ...args arguments to pass to the method; the callback will\n * be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nsend = // XXX Based on Mark Miller's proposed \"send\"\nQ.nmcall = // XXX Based on \"Redsandro's\" proposal\nQ.ninvoke = function (object, name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 2);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    Q(object).dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\nPromise.prototype.nsend = // XXX Based on Mark Miller's proposed \"send\"\nPromise.prototype.nmcall = // XXX Based on \"Redsandro's\" proposal\nPromise.prototype.ninvoke = function (name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 1);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * If a function would like to support both Node continuation-passing-style and\n * promise-returning-style, it can end its internal promise chain with\n * `nodeify(nodeback)`, forwarding the optional nodeback argument.  If the user\n * elects to use a nodeback, the result will be sent there.  If they do not\n * pass a nodeback, they will receive the result promise.\n * @param object a result (or a promise for a result)\n * @param {Function} nodeback a Node.js-style callback\n * @returns either the promise or nothing\n */\nQ.nodeify = nodeify;\nfunction nodeify(object, nodeback) {\n    return Q(object).nodeify(nodeback);\n}\n\nPromise.prototype.nodeify = function (nodeback) {\n    if (nodeback) {\n        this.then(function (value) {\n            Q.nextTick(function () {\n                nodeback(null, value);\n            });\n        }, function (error) {\n            Q.nextTick(function () {\n                nodeback(error);\n            });\n        });\n    } else {\n        return this;\n    }\n};\n\n// All code before this point will be filtered from stack traces.\nvar qEndingLine = captureLine();\n\nreturn Q;\n\n});\n",
              "globals": {
                "setTimeout": {
                  "type": "call"
                },
                "process": {
                  "type": "reference"
                },
                "setImmediate": {
                  "type": "typeof"
                },
                "window": {
                  "type": "typeof"
                },
                "MessageChannel": {
                  "type": "typeof"
                },
                "Function": {
                  "type": "reference"
                },
                "Array": {
                  "type": "reference"
                },
                "Object": {
                  "type": "reference"
                },
                "ReturnValue": {
                  "type": "typeof"
                },
                "p": {
                  "type": "reference"
                },
                "Number": {
                  "type": "call"
                },
                "console": {
                  "type": "typeof"
                },
                "StopIteration": {
                  "type": "typeof"
                },
                "clearTimeout": {
                  "type": "call"
                },
                "bootstrap": {
                  "type": "typeof"
                },
                "exports": {
                  "type": "typeof"
                },
                "module": {
                  "type": "typeof"
                },
                "define": {
                  "type": "typeof"
                },
                "ses": {
                  "type": "typeof"
                },
                "self": {
                  "type": "typeof"
                }
              },
              "syntax": "javascript",
              "format": "amd-ish",
              "undefine": [
                "exports",
                "module",
                "bootstrap",
                "ses"
              ],
              "uses": {},
              "dependencies": {
                "static": {},
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "amd-ish",
              "top": "wrapAMD(function(require, define) {",
              "code": "wrapAMD(function(require, define) {\n// vim:ts=4:sts=4:sw=4:\n/*!\n *\n * Copyright 2009-2012 Kris Kowal under the terms of the MIT\n * license found at http://github.com/kriskowal/q/raw/master/LICENSE\n *\n * With parts by Tyler Close\n * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\n * at http://www.opensource.org/licenses/mit-license.html\n * Forked at ref_send.js version: 2009-05-11\n *\n * With parts by Mark Miller\n * Copyright (C) 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n(function (definition) {\n    \"use strict\";\n\n    // This file will function properly as a <script> tag, or a module\n    // using CommonJS and NodeJS or RequireJS module formats.  In\n    // Common/Node/RequireJS, the module exports the Q API and when\n    // executed as a simple <script>, it creates a Q global instead.\n\n    // Montage Require\n    if (typeof bootstrap === \"function\") {\n        bootstrap(\"promise\", definition);\n\n    // CommonJS\n    } else if (typeof exports === \"object\" && typeof module === \"object\") {\n        module.exports = definition();\n\n    // RequireJS\n    } else if (typeof define === \"function\" && define.amd) {\n        define(definition);\n\n    // SES (Secure EcmaScript)\n    } else if (typeof ses !== \"undefined\") {\n        if (!ses.ok()) {\n            return;\n        } else {\n            ses.makeQ = definition;\n        }\n\n    // <script>\n    } else if (typeof self !== \"undefined\") {\n        self.Q = definition();\n\n    } else {\n        throw new Error(\"This environment was not anticiapted by Q. Please file a bug.\");\n    }\n\n})(function () {\n\"use strict\";\n\nvar hasStacks = false;\ntry {\n    throw new Error();\n} catch (e) {\n    hasStacks = !!e.stack;\n}\n\n// All code after this point will be filtered from stack traces reported\n// by Q.\nvar qStartingLine = captureLine();\nvar qFileName;\n\n// shims\n\n// used for fallback in \"allResolved\"\nvar noop = function () {};\n\n// Use the fastest possible means to execute a task in a future turn\n// of the event loop.\nvar nextTick =(function () {\n    // linked list of tasks (single, with head node)\n    var head = {task: void 0, next: null};\n    var tail = head;\n    var flushing = false;\n    var requestTick = void 0;\n    var isNodeJS = false;\n\n    function flush() {\n        /* jshint loopfunc: true */\n\n        while (head.next) {\n            head = head.next;\n            var task = head.task;\n            head.task = void 0;\n            var domain = head.domain;\n\n            if (domain) {\n                head.domain = void 0;\n                domain.enter();\n            }\n\n            try {\n                task();\n\n            } catch (e) {\n                if (isNodeJS) {\n                    // In node, uncaught exceptions are considered fatal errors.\n                    // Re-throw them synchronously to interrupt flushing!\n\n                    // Ensure continuation if the uncaught exception is suppressed\n                    // listening \"uncaughtException\" events (as domains does).\n                    // Continue in next event to avoid tick recursion.\n                    if (domain) {\n                        domain.exit();\n                    }\n                    setTimeout(flush, 0);\n                    if (domain) {\n                        domain.enter();\n                    }\n\n                    throw e;\n\n                } else {\n                    // In browsers, uncaught exceptions are not fatal.\n                    // Re-throw them asynchronously to avoid slow-downs.\n                    setTimeout(function() {\n                       throw e;\n                    }, 0);\n                }\n            }\n\n            if (domain) {\n                domain.exit();\n            }\n        }\n\n        flushing = false;\n    }\n\n    nextTick = function (task) {\n        tail = tail.next = {\n            task: task,\n            domain: isNodeJS && process.domain,\n            next: null\n        };\n\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n\n    if (typeof process !== \"undefined\" && process.nextTick) {\n        // Node.js before 0.9. Note that some fake-Node environments, like the\n        // Mocha test runner, introduce a `process` global without a `nextTick`.\n        isNodeJS = true;\n\n        requestTick = function () {\n            process.nextTick(flush);\n        };\n\n    } else if (typeof setImmediate === \"function\") {\n        // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate\n        if (typeof window !== \"undefined\") {\n            requestTick = setImmediate.bind(window, flush);\n        } else {\n            requestTick = function () {\n                setImmediate(flush);\n            };\n        }\n\n    } else if (typeof MessageChannel !== \"undefined\") {\n        // modern browsers\n        // http://www.nonblocking.io/2011/06/windownexttick.html\n        var channel = new MessageChannel();\n        // At least Safari Version 6.0.5 (8536.30.1) intermittently cannot create\n        // working message ports the first time a page loads.\n        channel.port1.onmessage = function () {\n            requestTick = requestPortTick;\n            channel.port1.onmessage = flush;\n            flush();\n        };\n        var requestPortTick = function () {\n            // Opera requires us to provide a message payload, regardless of\n            // whether we use it.\n            channel.port2.postMessage(0);\n        };\n        requestTick = function () {\n            setTimeout(flush, 0);\n            requestPortTick();\n        };\n\n    } else {\n        // old browsers\n        requestTick = function () {\n            setTimeout(flush, 0);\n        };\n    }\n\n    return nextTick;\n})();\n\n// Attempt to make generics safe in the face of downstream\n// modifications.\n// There is no situation where this is necessary.\n// If you need a security guarantee, these primordials need to be\n// deeply frozen anyway, and if you don’t need a security guarantee,\n// this is just plain paranoid.\n// However, this **might** have the nice side-effect of reducing the size of\n// the minified code by reducing x.call() to merely x()\n// See Mark Miller’s explanation of what this does.\n// http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming\nvar call = Function.call;\nfunction uncurryThis(f) {\n    return function () {\n        return call.apply(f, arguments);\n    };\n}\n// This is equivalent, but slower:\n// uncurryThis = Function_bind.bind(Function_bind.call);\n// http://jsperf.com/uncurrythis\n\nvar array_slice = uncurryThis(Array.prototype.slice);\n\nvar array_reduce = uncurryThis(\n    Array.prototype.reduce || function (callback, basis) {\n        var index = 0,\n            length = this.length;\n        // concerning the initial value, if one is not provided\n        if (arguments.length === 1) {\n            // seek to the first value in the array, accounting\n            // for the possibility that is is a sparse array\n            do {\n                if (index in this) {\n                    basis = this[index++];\n                    break;\n                }\n                if (++index >= length) {\n                    throw new TypeError();\n                }\n            } while (1);\n        }\n        // reduce\n        for (; index < length; index++) {\n            // account for the possibility that the array is sparse\n            if (index in this) {\n                basis = callback(basis, this[index], index);\n            }\n        }\n        return basis;\n    }\n);\n\nvar array_indexOf = uncurryThis(\n    Array.prototype.indexOf || function (value) {\n        // not a very good shim, but good enough for our one use of it\n        for (var i = 0; i < this.length; i++) {\n            if (this[i] === value) {\n                return i;\n            }\n        }\n        return -1;\n    }\n);\n\nvar array_map = uncurryThis(\n    Array.prototype.map || function (callback, thisp) {\n        var self = this;\n        var collect = [];\n        array_reduce(self, function (undefined, value, index) {\n            collect.push(callback.call(thisp, value, index, self));\n        }, void 0);\n        return collect;\n    }\n);\n\nvar object_create = Object.create || function (prototype) {\n    function Type() { }\n    Type.prototype = prototype;\n    return new Type();\n};\n\nvar object_hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\n\nvar object_keys = Object.keys || function (object) {\n    var keys = [];\n    for (var key in object) {\n        if (object_hasOwnProperty(object, key)) {\n            keys.push(key);\n        }\n    }\n    return keys;\n};\n\nvar object_toString = uncurryThis(Object.prototype.toString);\n\nfunction isObject(value) {\n    return value === Object(value);\n}\n\n// generator related shims\n\n// FIXME: Remove this function once ES6 generators are in SpiderMonkey.\nfunction isStopIteration(exception) {\n    return (\n        object_toString(exception) === \"[object StopIteration]\" ||\n        exception instanceof QReturnValue\n    );\n}\n\n// FIXME: Remove this helper and Q.return once ES6 generators are in\n// SpiderMonkey.\nvar QReturnValue;\nif (typeof ReturnValue !== \"undefined\") {\n    QReturnValue = ReturnValue;\n} else {\n    QReturnValue = function (value) {\n        this.value = value;\n    };\n}\n\n// long stack traces\n\nvar STACK_JUMP_SEPARATOR = \"From previous event:\";\n\nfunction makeStackTraceLong(error, promise) {\n    // If possible, transform the error stack trace by removing Node and Q\n    // cruft, then concatenating with the stack trace of `promise`. See #57.\n    if (hasStacks &&\n        promise.stack &&\n        typeof error === \"object\" &&\n        error !== null &&\n        error.stack &&\n        error.stack.indexOf(STACK_JUMP_SEPARATOR) === -1\n    ) {\n        var stacks = [];\n        for (var p = promise; !!p; p = p.source) {\n            if (p.stack) {\n                stacks.unshift(p.stack);\n            }\n        }\n        stacks.unshift(error.stack);\n\n        var concatedStacks = stacks.join(\"\\n\" + STACK_JUMP_SEPARATOR + \"\\n\");\n        error.stack = filterStackString(concatedStacks);\n    }\n}\n\nfunction filterStackString(stackString) {\n    var lines = stackString.split(\"\\n\");\n    var desiredLines = [];\n    for (var i = 0; i < lines.length; ++i) {\n        var line = lines[i];\n\n        if (!isInternalFrame(line) && !isNodeFrame(line) && line) {\n            desiredLines.push(line);\n        }\n    }\n    return desiredLines.join(\"\\n\");\n}\n\nfunction isNodeFrame(stackLine) {\n    return stackLine.indexOf(\"(module.js:\") !== -1 ||\n           stackLine.indexOf(\"(node.js:\") !== -1;\n}\n\nfunction getFileNameAndLineNumber(stackLine) {\n    // Named functions: \"at functionName (filename:lineNumber:columnNumber)\"\n    // In IE10 function name can have spaces (\"Anonymous function\") O_o\n    var attempt1 = /at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(stackLine);\n    if (attempt1) {\n        return [attempt1[1], Number(attempt1[2])];\n    }\n\n    // Anonymous functions: \"at filename:lineNumber:columnNumber\"\n    var attempt2 = /at ([^ ]+):(\\d+):(?:\\d+)$/.exec(stackLine);\n    if (attempt2) {\n        return [attempt2[1], Number(attempt2[2])];\n    }\n\n    // Firefox style: \"function@filename:lineNumber or @filename:lineNumber\"\n    var attempt3 = /.*@(.+):(\\d+)$/.exec(stackLine);\n    if (attempt3) {\n        return [attempt3[1], Number(attempt3[2])];\n    }\n}\n\nfunction isInternalFrame(stackLine) {\n    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);\n\n    if (!fileNameAndLineNumber) {\n        return false;\n    }\n\n    var fileName = fileNameAndLineNumber[0];\n    var lineNumber = fileNameAndLineNumber[1];\n\n    return fileName === qFileName &&\n        lineNumber >= qStartingLine &&\n        lineNumber <= qEndingLine;\n}\n\n// discover own file name and line number range for filtering stack\n// traces\nfunction captureLine() {\n    if (!hasStacks) {\n        return;\n    }\n\n    try {\n        throw new Error();\n    } catch (e) {\n        var lines = e.stack.split(\"\\n\");\n        var firstLine = lines[0].indexOf(\"@\") > 0 ? lines[1] : lines[2];\n        var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);\n        if (!fileNameAndLineNumber) {\n            return;\n        }\n\n        qFileName = fileNameAndLineNumber[0];\n        return fileNameAndLineNumber[1];\n    }\n}\n\nfunction deprecate(callback, name, alternative) {\n    return function () {\n        if (typeof console !== \"undefined\" &&\n            typeof console.warn === \"function\") {\n            console.warn(name + \" is deprecated, use \" + alternative +\n                         \" instead.\", new Error(\"\").stack);\n        }\n        return callback.apply(callback, arguments);\n    };\n}\n\n// end of shims\n// beginning of real work\n\n/**\n * Constructs a promise for an immediate reference, passes promises through, or\n * coerces promises from different systems.\n * @param value immediate reference or promise\n */\nfunction Q(value) {\n    // If the object is already a Promise, return it directly.  This enables\n    // the resolve function to both be used to created references from objects,\n    // but to tolerably coerce non-promises to promises.\n    if (value instanceof Promise) {\n        return value;\n    }\n\n    // assimilate thenables\n    if (isPromiseAlike(value)) {\n        return coerce(value);\n    } else {\n        return fulfill(value);\n    }\n}\nQ.resolve = Q;\n\n/**\n * Performs a task in a future turn of the event loop.\n * @param {Function} task\n */\nQ.nextTick = nextTick;\n\n/**\n * Controls whether or not long stack traces will be on\n */\nQ.longStackSupport = false;\n\n// enable long stacks if Q_DEBUG is set\nif (typeof process === \"object\" && process && process.env && process.env.Q_DEBUG) {\n    Q.longStackSupport = true;\n}\n\n/**\n * Constructs a {promise, resolve, reject} object.\n *\n * `resolve` is a callback to invoke with a more resolved value for the\n * promise. To fulfill the promise, invoke `resolve` with any value that is\n * not a thenable. To reject the promise, invoke `resolve` with a rejected\n * thenable, or invoke `reject` with the reason directly. To resolve the\n * promise to another thenable, thus putting it in the same state, invoke\n * `resolve` with that other thenable.\n */\nQ.defer = defer;\nfunction defer() {\n    // if \"messages\" is an \"Array\", that indicates that the promise has not yet\n    // been resolved.  If it is \"undefined\", it has been resolved.  Each\n    // element of the messages array is itself an array of complete arguments to\n    // forward to the resolved promise.  We coerce the resolution value to a\n    // promise using the `resolve` function because it handles both fully\n    // non-thenable values and other thenables gracefully.\n    var messages = [], progressListeners = [], resolvedPromise;\n\n    var deferred = object_create(defer.prototype);\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, operands) {\n        var args = array_slice(arguments);\n        if (messages) {\n            messages.push(args);\n            if (op === \"when\" && operands[1]) { // progress operand\n                progressListeners.push(operands[1]);\n            }\n        } else {\n            Q.nextTick(function () {\n                resolvedPromise.promiseDispatch.apply(resolvedPromise, args);\n            });\n        }\n    };\n\n    // XXX deprecated\n    promise.valueOf = function () {\n        if (messages) {\n            return promise;\n        }\n        var nearerValue = nearer(resolvedPromise);\n        if (isPromise(nearerValue)) {\n            resolvedPromise = nearerValue; // shorten chain\n        }\n        return nearerValue;\n    };\n\n    promise.inspect = function () {\n        if (!resolvedPromise) {\n            return { state: \"pending\" };\n        }\n        return resolvedPromise.inspect();\n    };\n\n    if (Q.longStackSupport && hasStacks) {\n        try {\n            throw new Error();\n        } catch (e) {\n            // NOTE: don't try to use `Error.captureStackTrace` or transfer the\n            // accessor around; that causes memory leaks as per GH-111. Just\n            // reify the stack trace as a string ASAP.\n            //\n            // At the same time, cut off the first line; it's always just\n            // \"[object Promise]\\n\", as per the `toString`.\n            promise.stack = e.stack.substring(e.stack.indexOf(\"\\n\") + 1);\n        }\n    }\n\n    // NOTE: we do the checks for `resolvedPromise` in each method, instead of\n    // consolidating them into `become`, since otherwise we'd create new\n    // promises with the lines `become(whatever(value))`. See e.g. GH-252.\n\n    function become(newPromise) {\n        resolvedPromise = newPromise;\n        promise.source = newPromise;\n\n        array_reduce(messages, function (undefined, message) {\n            Q.nextTick(function () {\n                newPromise.promiseDispatch.apply(newPromise, message);\n            });\n        }, void 0);\n\n        messages = void 0;\n        progressListeners = void 0;\n    }\n\n    deferred.promise = promise;\n    deferred.resolve = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(Q(value));\n    };\n\n    deferred.fulfill = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(fulfill(value));\n    };\n    deferred.reject = function (reason) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(reject(reason));\n    };\n    deferred.notify = function (progress) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        array_reduce(progressListeners, function (undefined, progressListener) {\n            Q.nextTick(function () {\n                progressListener(progress);\n            });\n        }, void 0);\n    };\n\n    return deferred;\n}\n\n/**\n * Creates a Node-style callback that will resolve or reject the deferred\n * promise.\n * @returns a nodeback\n */\ndefer.prototype.makeNodeResolver = function () {\n    var self = this;\n    return function (error, value) {\n        if (error) {\n            self.reject(error);\n        } else if (arguments.length > 2) {\n            self.resolve(array_slice(arguments, 1));\n        } else {\n            self.resolve(value);\n        }\n    };\n};\n\n/**\n * @param resolver {Function} a function that returns nothing and accepts\n * the resolve, reject, and notify functions for a deferred.\n * @returns a promise that may be resolved with the given resolve and reject\n * functions, or rejected by a thrown exception in resolver\n */\nQ.Promise = promise; // ES6\nQ.promise = promise;\nfunction promise(resolver) {\n    if (typeof resolver !== \"function\") {\n        throw new TypeError(\"resolver must be a function.\");\n    }\n    var deferred = defer();\n    try {\n        resolver(deferred.resolve, deferred.reject, deferred.notify);\n    } catch (reason) {\n        deferred.reject(reason);\n    }\n    return deferred.promise;\n}\n\npromise.race = race; // ES6\npromise.all = all; // ES6\npromise.reject = reject; // ES6\npromise.resolve = Q; // ES6\n\n// XXX experimental.  This method is a way to denote that a local value is\n// serializable and should be immediately dispatched to a remote upon request,\n// instead of passing a reference.\nQ.passByCopy = function (object) {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return object;\n};\n\nPromise.prototype.passByCopy = function () {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return this;\n};\n\n/**\n * If two promises eventually fulfill to the same value, promises that value,\n * but otherwise rejects.\n * @param x {Any*}\n * @param y {Any*}\n * @returns {Any*} a promise for x and y if they are the same, but a rejection\n * otherwise.\n *\n */\nQ.join = function (x, y) {\n    return Q(x).join(y);\n};\n\nPromise.prototype.join = function (that) {\n    return Q([this, that]).spread(function (x, y) {\n        if (x === y) {\n            // TODO: \"===\" should be Object.is or equiv\n            return x;\n        } else {\n            throw new Error(\"Can't join: not the same: \" + x + \" \" + y);\n        }\n    });\n};\n\n/**\n * Returns a promise for the first of an array of promises to become settled.\n * @param answers {Array[Any*]} promises to race\n * @returns {Any*} the first promise to be settled\n */\nQ.race = race;\nfunction race(answerPs) {\n    return promise(function(resolve, reject) {\n        // Switch to this once we can assume at least ES5\n        // answerPs.forEach(function(answerP) {\n        //     Q(answerP).then(resolve, reject);\n        // });\n        // Use this in the meantime\n        for (var i = 0, len = answerPs.length; i < len; i++) {\n            Q(answerPs[i]).then(resolve, reject);\n        }\n    });\n}\n\nPromise.prototype.race = function () {\n    return this.then(Q.race);\n};\n\n/**\n * Constructs a Promise with a promise descriptor object and optional fallback\n * function.  The descriptor contains methods like when(rejected), get(name),\n * set(name, value), post(name, args), and delete(name), which all\n * return either a value, a promise for a value, or a rejection.  The fallback\n * accepts the operation name, a resolver, and any further arguments that would\n * have been forwarded to the appropriate method above had a method been\n * provided with the proper name.  The API makes no guarantees about the nature\n * of the returned object, apart from that it is usable whereever promises are\n * bought and sold.\n */\nQ.makePromise = Promise;\nfunction Promise(descriptor, fallback, inspect) {\n    if (fallback === void 0) {\n        fallback = function (op) {\n            return reject(new Error(\n                \"Promise does not support operation: \" + op\n            ));\n        };\n    }\n    if (inspect === void 0) {\n        inspect = function () {\n            return {state: \"unknown\"};\n        };\n    }\n\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, args) {\n        var result;\n        try {\n            if (descriptor[op]) {\n                result = descriptor[op].apply(promise, args);\n            } else {\n                result = fallback.call(promise, op, args);\n            }\n        } catch (exception) {\n            result = reject(exception);\n        }\n        if (resolve) {\n            resolve(result);\n        }\n    };\n\n    promise.inspect = inspect;\n\n    // XXX deprecated `valueOf` and `exception` support\n    if (inspect) {\n        var inspected = inspect();\n        if (inspected.state === \"rejected\") {\n            promise.exception = inspected.reason;\n        }\n\n        promise.valueOf = function () {\n            var inspected = inspect();\n            if (inspected.state === \"pending\" ||\n                inspected.state === \"rejected\") {\n                return promise;\n            }\n            return inspected.value;\n        };\n    }\n\n    return promise;\n}\n\nPromise.prototype.toString = function () {\n    return \"[object Promise]\";\n};\n\nPromise.prototype.then = function (fulfilled, rejected, progressed) {\n    var self = this;\n    var deferred = defer();\n    var done = false;   // ensure the untrusted promise makes at most a\n                        // single call to one of the callbacks\n\n    function _fulfilled(value) {\n        try {\n            return typeof fulfilled === \"function\" ? fulfilled(value) : value;\n        } catch (exception) {\n            return reject(exception);\n        }\n    }\n\n    function _rejected(exception) {\n        if (typeof rejected === \"function\") {\n            makeStackTraceLong(exception, self);\n            try {\n                return rejected(exception);\n            } catch (newException) {\n                return reject(newException);\n            }\n        }\n        return reject(exception);\n    }\n\n    function _progressed(value) {\n        return typeof progressed === \"function\" ? progressed(value) : value;\n    }\n\n    Q.nextTick(function () {\n        self.promiseDispatch(function (value) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_fulfilled(value));\n        }, \"when\", [function (exception) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_rejected(exception));\n        }]);\n    });\n\n    // Progress propagator need to be attached in the current tick.\n    self.promiseDispatch(void 0, \"when\", [void 0, function (value) {\n        var newValue;\n        var threw = false;\n        try {\n            newValue = _progressed(value);\n        } catch (e) {\n            threw = true;\n            if (Q.onerror) {\n                Q.onerror(e);\n            } else {\n                throw e;\n            }\n        }\n\n        if (!threw) {\n            deferred.notify(newValue);\n        }\n    }]);\n\n    return deferred.promise;\n};\n\nQ.tap = function (promise, callback) {\n    return Q(promise).tap(callback);\n};\n\n/**\n * Works almost like \"finally\", but not called for rejections.\n * Original resolution value is passed through callback unaffected.\n * Callback may return a promise that will be awaited for.\n * @param {Function} callback\n * @returns {Q.Promise}\n * @example\n * doSomething()\n *   .then(...)\n *   .tap(console.log)\n *   .then(...);\n */\nPromise.prototype.tap = function (callback) {\n    callback = Q(callback);\n\n    return this.then(function (value) {\n        return callback.fcall(value).thenResolve(value);\n    });\n};\n\n/**\n * Registers an observer on a promise.\n *\n * Guarantees:\n *\n * 1. that fulfilled and rejected will be called only once.\n * 2. that either the fulfilled callback or the rejected callback will be\n *    called, but not both.\n * 3. that fulfilled and rejected will not be called in this turn.\n *\n * @param value      promise or immediate reference to observe\n * @param fulfilled  function to be called with the fulfilled value\n * @param rejected   function to be called with the rejection exception\n * @param progressed function to be called on any progress notifications\n * @return promise for the return value from the invoked callback\n */\nQ.when = when;\nfunction when(value, fulfilled, rejected, progressed) {\n    return Q(value).then(fulfilled, rejected, progressed);\n}\n\nPromise.prototype.thenResolve = function (value) {\n    return this.then(function () { return value; });\n};\n\nQ.thenResolve = function (promise, value) {\n    return Q(promise).thenResolve(value);\n};\n\nPromise.prototype.thenReject = function (reason) {\n    return this.then(function () { throw reason; });\n};\n\nQ.thenReject = function (promise, reason) {\n    return Q(promise).thenReject(reason);\n};\n\n/**\n * If an object is not a promise, it is as \"near\" as possible.\n * If a promise is rejected, it is as \"near\" as possible too.\n * If it’s a fulfilled promise, the fulfillment value is nearer.\n * If it’s a deferred promise and the deferred has been resolved, the\n * resolution is \"nearer\".\n * @param object\n * @returns most resolved (nearest) form of the object\n */\n\n// XXX should we re-do this?\nQ.nearer = nearer;\nfunction nearer(value) {\n    if (isPromise(value)) {\n        var inspected = value.inspect();\n        if (inspected.state === \"fulfilled\") {\n            return inspected.value;\n        }\n    }\n    return value;\n}\n\n/**\n * @returns whether the given object is a promise.\n * Otherwise it is a fulfilled value.\n */\nQ.isPromise = isPromise;\nfunction isPromise(object) {\n    return object instanceof Promise;\n}\n\nQ.isPromiseAlike = isPromiseAlike;\nfunction isPromiseAlike(object) {\n    return isObject(object) && typeof object.then === \"function\";\n}\n\n/**\n * @returns whether the given object is a pending promise, meaning not\n * fulfilled or rejected.\n */\nQ.isPending = isPending;\nfunction isPending(object) {\n    return isPromise(object) && object.inspect().state === \"pending\";\n}\n\nPromise.prototype.isPending = function () {\n    return this.inspect().state === \"pending\";\n};\n\n/**\n * @returns whether the given object is a value or fulfilled\n * promise.\n */\nQ.isFulfilled = isFulfilled;\nfunction isFulfilled(object) {\n    return !isPromise(object) || object.inspect().state === \"fulfilled\";\n}\n\nPromise.prototype.isFulfilled = function () {\n    return this.inspect().state === \"fulfilled\";\n};\n\n/**\n * @returns whether the given object is a rejected promise.\n */\nQ.isRejected = isRejected;\nfunction isRejected(object) {\n    return isPromise(object) && object.inspect().state === \"rejected\";\n}\n\nPromise.prototype.isRejected = function () {\n    return this.inspect().state === \"rejected\";\n};\n\n//// BEGIN UNHANDLED REJECTION TRACKING\n\n// This promise library consumes exceptions thrown in handlers so they can be\n// handled by a subsequent promise.  The exceptions get added to this array when\n// they are created, and removed when they are handled.  Note that in ES6 or\n// shimmed environments, this would naturally be a `Set`.\nvar unhandledReasons = [];\nvar unhandledRejections = [];\nvar trackUnhandledRejections = true;\n\nfunction resetUnhandledRejections() {\n    unhandledReasons.length = 0;\n    unhandledRejections.length = 0;\n\n    if (!trackUnhandledRejections) {\n        trackUnhandledRejections = true;\n    }\n}\n\nfunction trackRejection(promise, reason) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n\n    unhandledRejections.push(promise);\n    if (reason && typeof reason.stack !== \"undefined\") {\n        unhandledReasons.push(reason.stack);\n    } else {\n        unhandledReasons.push(\"(no stack) \" + reason);\n    }\n}\n\nfunction untrackRejection(promise) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n\n    var at = array_indexOf(unhandledRejections, promise);\n    if (at !== -1) {\n        unhandledRejections.splice(at, 1);\n        unhandledReasons.splice(at, 1);\n    }\n}\n\nQ.resetUnhandledRejections = resetUnhandledRejections;\n\nQ.getUnhandledReasons = function () {\n    // Make a copy so that consumers can't interfere with our internal state.\n    return unhandledReasons.slice();\n};\n\nQ.stopUnhandledRejectionTracking = function () {\n    resetUnhandledRejections();\n    trackUnhandledRejections = false;\n};\n\nresetUnhandledRejections();\n\n//// END UNHANDLED REJECTION TRACKING\n\n/**\n * Constructs a rejected promise.\n * @param reason value describing the failure\n */\nQ.reject = reject;\nfunction reject(reason) {\n    var rejection = Promise({\n        \"when\": function (rejected) {\n            // note that the error has been handled\n            if (rejected) {\n                untrackRejection(this);\n            }\n            return rejected ? rejected(reason) : this;\n        }\n    }, function fallback() {\n        return this;\n    }, function inspect() {\n        return { state: \"rejected\", reason: reason };\n    });\n\n    // Note that the reason has not been handled.\n    trackRejection(rejection, reason);\n\n    return rejection;\n}\n\n/**\n * Constructs a fulfilled promise for an immediate reference.\n * @param value immediate reference\n */\nQ.fulfill = fulfill;\nfunction fulfill(value) {\n    return Promise({\n        \"when\": function () {\n            return value;\n        },\n        \"get\": function (name) {\n            return value[name];\n        },\n        \"set\": function (name, rhs) {\n            value[name] = rhs;\n        },\n        \"delete\": function (name) {\n            delete value[name];\n        },\n        \"post\": function (name, args) {\n            // Mark Miller proposes that post with no name should apply a\n            // promised function.\n            if (name === null || name === void 0) {\n                return value.apply(void 0, args);\n            } else {\n                return value[name].apply(value, args);\n            }\n        },\n        \"apply\": function (thisp, args) {\n            return value.apply(thisp, args);\n        },\n        \"keys\": function () {\n            return object_keys(value);\n        }\n    }, void 0, function inspect() {\n        return { state: \"fulfilled\", value: value };\n    });\n}\n\n/**\n * Converts thenables to Q promises.\n * @param promise thenable promise\n * @returns a Q promise\n */\nfunction coerce(promise) {\n    var deferred = defer();\n    Q.nextTick(function () {\n        try {\n            promise.then(deferred.resolve, deferred.reject, deferred.notify);\n        } catch (exception) {\n            deferred.reject(exception);\n        }\n    });\n    return deferred.promise;\n}\n\n/**\n * Annotates an object such that it will never be\n * transferred away from this process over any promise\n * communication channel.\n * @param object\n * @returns promise a wrapping of that object that\n * additionally responds to the \"isDef\" message\n * without a rejection.\n */\nQ.master = master;\nfunction master(object) {\n    return Promise({\n        \"isDef\": function () {}\n    }, function fallback(op, args) {\n        return dispatch(object, op, args);\n    }, function () {\n        return Q(object).inspect();\n    });\n}\n\n/**\n * Spreads the values of a promised array of arguments into the\n * fulfillment callback.\n * @param fulfilled callback that receives variadic arguments from the\n * promised array\n * @param rejected callback that receives the exception if the promise\n * is rejected.\n * @returns a promise for the return value or thrown exception of\n * either callback.\n */\nQ.spread = spread;\nfunction spread(value, fulfilled, rejected) {\n    return Q(value).spread(fulfilled, rejected);\n}\n\nPromise.prototype.spread = function (fulfilled, rejected) {\n    return this.all().then(function (array) {\n        return fulfilled.apply(void 0, array);\n    }, rejected);\n};\n\n/**\n * The async function is a decorator for generator functions, turning\n * them into asynchronous generators.  Although generators are only part\n * of the newest ECMAScript 6 drafts, this code does not cause syntax\n * errors in older engines.  This code should continue to work and will\n * in fact improve over time as the language improves.\n *\n * ES6 generators are currently part of V8 version 3.19 with the\n * --harmony-generators runtime flag enabled.  SpiderMonkey has had them\n * for longer, but under an older Python-inspired form.  This function\n * works on both kinds of generators.\n *\n * Decorates a generator function such that:\n *  - it may yield promises\n *  - execution will continue when that promise is fulfilled\n *  - the value of the yield expression will be the fulfilled value\n *  - it returns a promise for the return value (when the generator\n *    stops iterating)\n *  - the decorated function returns a promise for the return value\n *    of the generator or the first rejected promise among those\n *    yielded.\n *  - if an error is thrown in the generator, it propagates through\n *    every following yield until it is caught, or until it escapes\n *    the generator function altogether, and is translated into a\n *    rejection for the promise returned by the decorated generator.\n */\nQ.async = async;\nfunction async(makeGenerator) {\n    return function () {\n        // when verb is \"send\", arg is a value\n        // when verb is \"throw\", arg is an exception\n        function continuer(verb, arg) {\n            var result;\n\n            // Until V8 3.19 / Chromium 29 is released, SpiderMonkey is the only\n            // engine that has a deployed base of browsers that support generators.\n            // However, SM's generators use the Python-inspired semantics of\n            // outdated ES6 drafts.  We would like to support ES6, but we'd also\n            // like to make it possible to use generators in deployed browsers, so\n            // we also support Python-style generators.  At some point we can remove\n            // this block.\n\n            if (typeof StopIteration === \"undefined\") {\n                // ES6 Generators\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    return reject(exception);\n                }\n                if (result.done) {\n                    return Q(result.value);\n                } else {\n                    return when(result.value, callback, errback);\n                }\n            } else {\n                // SpiderMonkey Generators\n                // FIXME: Remove this case when SM does ES6 generators.\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    if (isStopIteration(exception)) {\n                        return Q(exception.value);\n                    } else {\n                        return reject(exception);\n                    }\n                }\n                return when(result, callback, errback);\n            }\n        }\n        var generator = makeGenerator.apply(this, arguments);\n        var callback = continuer.bind(continuer, \"next\");\n        var errback = continuer.bind(continuer, \"throw\");\n        return callback();\n    };\n}\n\n/**\n * The spawn function is a small wrapper around async that immediately\n * calls the generator and also ends the promise chain, so that any\n * unhandled errors are thrown instead of forwarded to the error\n * handler. This is useful because it's extremely common to run\n * generators at the top-level to work with libraries.\n */\nQ.spawn = spawn;\nfunction spawn(makeGenerator) {\n    Q.done(Q.async(makeGenerator)());\n}\n\n// FIXME: Remove this interface once ES6 generators are in SpiderMonkey.\n/**\n * Throws a ReturnValue exception to stop an asynchronous generator.\n *\n * This interface is a stop-gap measure to support generator return\n * values in older Firefox/SpiderMonkey.  In browsers that support ES6\n * generators like Chromium 29, just use \"return\" in your generator\n * functions.\n *\n * @param value the return value for the surrounding generator\n * @throws ReturnValue exception with the value.\n * @example\n * // ES6 style\n * Q.async(function* () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      return foo + bar;\n * })\n * // Older SpiderMonkey style\n * Q.async(function () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      Q.return(foo + bar);\n * })\n */\nQ[\"return\"] = _return;\nfunction _return(value) {\n    throw new QReturnValue(value);\n}\n\n/**\n * The promised function decorator ensures that any promise arguments\n * are settled and passed as values (`this` is also settled and passed\n * as a value).  It will also ensure that the result of a function is\n * always a promise.\n *\n * @example\n * var add = Q.promised(function (a, b) {\n *     return a + b;\n * });\n * add(Q(a), Q(B));\n *\n * @param {function} callback The function to decorate\n * @returns {function} a function that has been decorated.\n */\nQ.promised = promised;\nfunction promised(callback) {\n    return function () {\n        return spread([this, all(arguments)], function (self, args) {\n            return callback.apply(self, args);\n        });\n    };\n}\n\n/**\n * sends a message to a value in a future turn\n * @param object* the recipient\n * @param op the name of the message operation, e.g., \"when\",\n * @param args further arguments to be forwarded to the operation\n * @returns result {Promise} a promise for the result of the operation\n */\nQ.dispatch = dispatch;\nfunction dispatch(object, op, args) {\n    return Q(object).dispatch(op, args);\n}\n\nPromise.prototype.dispatch = function (op, args) {\n    var self = this;\n    var deferred = defer();\n    Q.nextTick(function () {\n        self.promiseDispatch(deferred.resolve, op, args);\n    });\n    return deferred.promise;\n};\n\n/**\n * Gets the value of a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to get\n * @return promise for the property value\n */\nQ.get = function (object, key) {\n    return Q(object).dispatch(\"get\", [key]);\n};\n\nPromise.prototype.get = function (key) {\n    return this.dispatch(\"get\", [key]);\n};\n\n/**\n * Sets the value of a property in a future turn.\n * @param object    promise or immediate reference for object object\n * @param name      name of property to set\n * @param value     new value of property\n * @return promise for the return value\n */\nQ.set = function (object, key, value) {\n    return Q(object).dispatch(\"set\", [key, value]);\n};\n\nPromise.prototype.set = function (key, value) {\n    return this.dispatch(\"set\", [key, value]);\n};\n\n/**\n * Deletes a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to delete\n * @return promise for the return value\n */\nQ.del = // XXX legacy\nQ[\"delete\"] = function (object, key) {\n    return Q(object).dispatch(\"delete\", [key]);\n};\n\nPromise.prototype.del = // XXX legacy\nPromise.prototype[\"delete\"] = function (key) {\n    return this.dispatch(\"delete\", [key]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param value     a value to post, typically an array of\n *                  invocation arguments for promises that\n *                  are ultimately backed with `resolve` values,\n *                  as opposed to those backed with URLs\n *                  wherein the posted value can be any\n *                  JSON serializable object.\n * @return promise for the return value\n */\n// bound locally because it is used by other methods\nQ.mapply = // XXX As proposed by \"Redsandro\"\nQ.post = function (object, name, args) {\n    return Q(object).dispatch(\"post\", [name, args]);\n};\n\nPromise.prototype.mapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.post = function (name, args) {\n    return this.dispatch(\"post\", [name, args]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param ...args   array of invocation arguments\n * @return promise for the return value\n */\nQ.send = // XXX Mark Miller's proposed parlance\nQ.mcall = // XXX As proposed by \"Redsandro\"\nQ.invoke = function (object, name /*...args*/) {\n    return Q(object).dispatch(\"post\", [name, array_slice(arguments, 2)]);\n};\n\nPromise.prototype.send = // XXX Mark Miller's proposed parlance\nPromise.prototype.mcall = // XXX As proposed by \"Redsandro\"\nPromise.prototype.invoke = function (name /*...args*/) {\n    return this.dispatch(\"post\", [name, array_slice(arguments, 1)]);\n};\n\n/**\n * Applies the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param args      array of application arguments\n */\nQ.fapply = function (object, args) {\n    return Q(object).dispatch(\"apply\", [void 0, args]);\n};\n\nPromise.prototype.fapply = function (args) {\n    return this.dispatch(\"apply\", [void 0, args]);\n};\n\n/**\n * Calls the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ[\"try\"] =\nQ.fcall = function (object /* ...args*/) {\n    return Q(object).dispatch(\"apply\", [void 0, array_slice(arguments, 1)]);\n};\n\nPromise.prototype.fcall = function (/*...args*/) {\n    return this.dispatch(\"apply\", [void 0, array_slice(arguments)]);\n};\n\n/**\n * Binds the promised function, transforming return values into a fulfilled\n * promise and thrown errors into a rejected one.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ.fbind = function (object /*...args*/) {\n    var promise = Q(object);\n    var args = array_slice(arguments, 1);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\nPromise.prototype.fbind = function (/*...args*/) {\n    var promise = this;\n    var args = array_slice(arguments);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\n\n/**\n * Requests the names of the owned properties of a promised\n * object in a future turn.\n * @param object    promise or immediate reference for target object\n * @return promise for the keys of the eventually settled object\n */\nQ.keys = function (object) {\n    return Q(object).dispatch(\"keys\", []);\n};\n\nPromise.prototype.keys = function () {\n    return this.dispatch(\"keys\", []);\n};\n\n/**\n * Turns an array of promises into a promise for an array.  If any of\n * the promises gets rejected, the whole array is rejected immediately.\n * @param {Array*} an array (or promise for an array) of values (or\n * promises for values)\n * @returns a promise for an array of the corresponding values\n */\n// By Mark Miller\n// http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&rev=1308776521#allfulfilled\nQ.all = all;\nfunction all(promises) {\n    return when(promises, function (promises) {\n        var countDown = 0;\n        var deferred = defer();\n        array_reduce(promises, function (undefined, promise, index) {\n            var snapshot;\n            if (\n                isPromise(promise) &&\n                (snapshot = promise.inspect()).state === \"fulfilled\"\n            ) {\n                promises[index] = snapshot.value;\n            } else {\n                ++countDown;\n                when(\n                    promise,\n                    function (value) {\n                        promises[index] = value;\n                        if (--countDown === 0) {\n                            deferred.resolve(promises);\n                        }\n                    },\n                    deferred.reject,\n                    function (progress) {\n                        deferred.notify({ index: index, value: progress });\n                    }\n                );\n            }\n        }, void 0);\n        if (countDown === 0) {\n            deferred.resolve(promises);\n        }\n        return deferred.promise;\n    });\n}\n\nPromise.prototype.all = function () {\n    return all(this);\n};\n\n/**\n * Waits for all promises to be settled, either fulfilled or\n * rejected.  This is distinct from `all` since that would stop\n * waiting at the first rejection.  The promise returned by\n * `allResolved` will never be rejected.\n * @param promises a promise for an array (or an array) of promises\n * (or values)\n * @return a promise for an array of promises\n */\nQ.allResolved = deprecate(allResolved, \"allResolved\", \"allSettled\");\nfunction allResolved(promises) {\n    return when(promises, function (promises) {\n        promises = array_map(promises, Q);\n        return when(all(array_map(promises, function (promise) {\n            return when(promise, noop, noop);\n        })), function () {\n            return promises;\n        });\n    });\n}\n\nPromise.prototype.allResolved = function () {\n    return allResolved(this);\n};\n\n/**\n * @see Promise#allSettled\n */\nQ.allSettled = allSettled;\nfunction allSettled(promises) {\n    return Q(promises).allSettled();\n}\n\n/**\n * Turns an array of promises into a promise for an array of their states (as\n * returned by `inspect`) when they have all settled.\n * @param {Array[Any*]} values an array (or promise for an array) of values (or\n * promises for values)\n * @returns {Array[State]} an array of states for the respective values.\n */\nPromise.prototype.allSettled = function () {\n    return this.then(function (promises) {\n        return all(array_map(promises, function (promise) {\n            promise = Q(promise);\n            function regardless() {\n                return promise.inspect();\n            }\n            return promise.then(regardless, regardless);\n        }));\n    });\n};\n\n/**\n * Captures the failure of a promise, giving an oportunity to recover\n * with a callback.  If the given promise is fulfilled, the returned\n * promise is fulfilled.\n * @param {Any*} promise for something\n * @param {Function} callback to fulfill the returned promise if the\n * given promise is rejected\n * @returns a promise for the return value of the callback\n */\nQ.fail = // XXX legacy\nQ[\"catch\"] = function (object, rejected) {\n    return Q(object).then(void 0, rejected);\n};\n\nPromise.prototype.fail = // XXX legacy\nPromise.prototype[\"catch\"] = function (rejected) {\n    return this.then(void 0, rejected);\n};\n\n/**\n * Attaches a listener that can respond to progress notifications from a\n * promise's originating deferred. This listener receives the exact arguments\n * passed to ``deferred.notify``.\n * @param {Any*} promise for something\n * @param {Function} callback to receive any progress notifications\n * @returns the given promise, unchanged\n */\nQ.progress = progress;\nfunction progress(object, progressed) {\n    return Q(object).then(void 0, void 0, progressed);\n}\n\nPromise.prototype.progress = function (progressed) {\n    return this.then(void 0, void 0, progressed);\n};\n\n/**\n * Provides an opportunity to observe the settling of a promise,\n * regardless of whether the promise is fulfilled or rejected.  Forwards\n * the resolution to the returned promise when the callback is done.\n * The callback can return a promise to defer completion.\n * @param {Any*} promise\n * @param {Function} callback to observe the resolution of the given\n * promise, takes no arguments.\n * @returns a promise for the resolution of the given promise when\n * ``fin`` is done.\n */\nQ.fin = // XXX legacy\nQ[\"finally\"] = function (object, callback) {\n    return Q(object)[\"finally\"](callback);\n};\n\nPromise.prototype.fin = // XXX legacy\nPromise.prototype[\"finally\"] = function (callback) {\n    callback = Q(callback);\n    return this.then(function (value) {\n        return callback.fcall().then(function () {\n            return value;\n        });\n    }, function (reason) {\n        // TODO attempt to recycle the rejection with \"this\".\n        return callback.fcall().then(function () {\n            throw reason;\n        });\n    });\n};\n\n/**\n * Terminates a chain of promises, forcing rejections to be\n * thrown as exceptions.\n * @param {Any*} promise at the end of a chain of promises\n * @returns nothing\n */\nQ.done = function (object, fulfilled, rejected, progress) {\n    return Q(object).done(fulfilled, rejected, progress);\n};\n\nPromise.prototype.done = function (fulfilled, rejected, progress) {\n    var onUnhandledError = function (error) {\n        // forward to a future turn so that ``when``\n        // does not catch it and turn it into a rejection.\n        Q.nextTick(function () {\n            makeStackTraceLong(error, promise);\n            if (Q.onerror) {\n                Q.onerror(error);\n            } else {\n                throw error;\n            }\n        });\n    };\n\n    // Avoid unnecessary `nextTick`ing via an unnecessary `when`.\n    var promise = fulfilled || rejected || progress ?\n        this.then(fulfilled, rejected, progress) :\n        this;\n\n    if (typeof process === \"object\" && process && process.domain) {\n        onUnhandledError = process.domain.bind(onUnhandledError);\n    }\n\n    promise.then(void 0, onUnhandledError);\n};\n\n/**\n * Causes a promise to be rejected if it does not get fulfilled before\n * some milliseconds time out.\n * @param {Any*} promise\n * @param {Number} milliseconds timeout\n * @param {Any*} custom error message or Error object (optional)\n * @returns a promise for the resolution of the given promise if it is\n * fulfilled before the timeout, otherwise rejected.\n */\nQ.timeout = function (object, ms, error) {\n    return Q(object).timeout(ms, error);\n};\n\nPromise.prototype.timeout = function (ms, error) {\n    var deferred = defer();\n    var timeoutId = setTimeout(function () {\n        if (!error || \"string\" === typeof error) {\n            error = new Error(error || \"Timed out after \" + ms + \" ms\");\n            error.code = \"ETIMEDOUT\";\n        }\n        deferred.reject(error);\n    }, ms);\n\n    this.then(function (value) {\n        clearTimeout(timeoutId);\n        deferred.resolve(value);\n    }, function (exception) {\n        clearTimeout(timeoutId);\n        deferred.reject(exception);\n    }, deferred.notify);\n\n    return deferred.promise;\n};\n\n/**\n * Returns a promise for the given value (or promised value), some\n * milliseconds after it resolved. Passes rejections immediately.\n * @param {Any*} promise\n * @param {Number} milliseconds\n * @returns a promise for the resolution of the given promise after milliseconds\n * time has elapsed since the resolution of the given promise.\n * If the given promise rejects, that is passed immediately.\n */\nQ.delay = function (object, timeout) {\n    if (timeout === void 0) {\n        timeout = object;\n        object = void 0;\n    }\n    return Q(object).delay(timeout);\n};\n\nPromise.prototype.delay = function (timeout) {\n    return this.then(function (value) {\n        var deferred = defer();\n        setTimeout(function () {\n            deferred.resolve(value);\n        }, timeout);\n        return deferred.promise;\n    });\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided as an array, and returns a promise.\n *\n *      Q.nfapply(FS.readFile, [__filename])\n *      .then(function (content) {\n *      })\n *\n */\nQ.nfapply = function (callback, args) {\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfapply = function (args) {\n    var deferred = defer();\n    var nodeArgs = array_slice(args);\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided individually, and returns a promise.\n * @example\n * Q.nfcall(FS.readFile, __filename)\n * .then(function (content) {\n * })\n *\n */\nQ.nfcall = function (callback /*...args*/) {\n    var args = array_slice(arguments, 1);\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfcall = function (/*...args*/) {\n    var nodeArgs = array_slice(arguments);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Wraps a NodeJS continuation passing function and returns an equivalent\n * version that returns a promise.\n * @example\n * Q.nfbind(FS.readFile, __filename)(\"utf-8\")\n * .then(console.log)\n * .done()\n */\nQ.nfbind =\nQ.denodeify = function (callback /*...args*/) {\n    var baseArgs = array_slice(arguments, 1);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        Q(callback).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nfbind =\nPromise.prototype.denodeify = function (/*...args*/) {\n    var args = array_slice(arguments);\n    args.unshift(this);\n    return Q.denodeify.apply(void 0, args);\n};\n\nQ.nbind = function (callback, thisp /*...args*/) {\n    var baseArgs = array_slice(arguments, 2);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        function bound() {\n            return callback.apply(thisp, arguments);\n        }\n        Q(bound).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nbind = function (/*thisp, ...args*/) {\n    var args = array_slice(arguments, 0);\n    args.unshift(this);\n    return Q.nbind.apply(void 0, args);\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback with a given array of arguments, plus a provided callback.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param {Array} args arguments to pass to the method; the callback\n * will be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nmapply = // XXX As proposed by \"Redsandro\"\nQ.npost = function (object, name, args) {\n    return Q(object).npost(name, args);\n};\n\nPromise.prototype.nmapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.npost = function (name, args) {\n    var nodeArgs = array_slice(args || []);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback, forwarding the given variadic arguments, plus a provided\n * callback argument.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param ...args arguments to pass to the method; the callback will\n * be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nsend = // XXX Based on Mark Miller's proposed \"send\"\nQ.nmcall = // XXX Based on \"Redsandro's\" proposal\nQ.ninvoke = function (object, name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 2);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    Q(object).dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\nPromise.prototype.nsend = // XXX Based on Mark Miller's proposed \"send\"\nPromise.prototype.nmcall = // XXX Based on \"Redsandro's\" proposal\nPromise.prototype.ninvoke = function (name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 1);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * If a function would like to support both Node continuation-passing-style and\n * promise-returning-style, it can end its internal promise chain with\n * `nodeify(nodeback)`, forwarding the optional nodeback argument.  If the user\n * elects to use a nodeback, the result will be sent there.  If they do not\n * pass a nodeback, they will receive the result promise.\n * @param object a result (or a promise for a result)\n * @param {Function} nodeback a Node.js-style callback\n * @returns either the promise or nothing\n */\nQ.nodeify = nodeify;\nfunction nodeify(object, nodeback) {\n    return Q(object).nodeify(nodeback);\n}\n\nPromise.prototype.nodeify = function (nodeback) {\n    if (nodeback) {\n        this.then(function (value) {\n            Q.nextTick(function () {\n                nodeback(null, value);\n            });\n        }, function (error) {\n            Q.nextTick(function () {\n                nodeback(error);\n            });\n        });\n    } else {\n        return this;\n    }\n};\n\n// All code before this point will be filtered from stack traces.\nvar qEndingLine = captureLine();\n\nreturn Q;\n\n});\n\n})",
              "bottom": "})"
            },
            "dependencies": {
              "static": {},
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/resource.js": {
            "requireId": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/resource",
            "memoizeId": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/resource.js",
            "descriptor": {
              "filename": "resource.js",
              "filepath": "../../pinf-bridgelib-js/lib/resource.js",
              "mtime": 1420263902,
              "code": "\nvar MD5 = require(\"./md5\");\n\n/*\n// TODO: Always do this via require(\"pinf/loader\");\n// if in browser\nvar BRAVOJS = (typeof bravojs !== \"undefined\")?bravojs:false;\n// if not in browser\nif (require.platform !== \"browser\") {\n    BRAVOJS = require(\"pinf\" + \"/loader\").getSandbox().loader.bravojs;\n}\n*/\n\n\nexports.forPackage = function(module, options)\n{\n    return new Resource(module, \"package\", options);\n}\n\nexports.forModule = function(module, options)\n{\n    return new Resource(module, \"module\", options);\n}\n\nvar Resource = function(owner, scope, options)\n{\n    this.module = false;\n    this.pkgHashId = false;\n    this.scope = scope;\n    this.ns = false;\n    this.options = options || {};\n\n    if (typeof owner === \"object\")\n    {\n    \t// TODO: Ensure `owner` is a module object\n        this.module = owner;\n        this.pkgHashId = MD5.hash_md5(this.module.pkgId);\n    } else\n    if (typeof owner === \"string\" && scope === \"package\")\n    {\n    \tthis.pkgHashId = MD5.hash_md5(owner);\n    }\n\n    if (this.scope === \"package\") {\n    \tthis.ns = \"__\" + this.pkgHashId + \"__\";\n    } else\n    if (this.scope === \"module\") {\n    \tif (!this.module)\n    \t\tthrow new Error(\"`this.module` not set! You must initialize resource module with module object!\");\n    \tthis.ns = \"__\" + this.module.hashId + \"__\";\n    } else\n    \tthrow new Error(\"Invalid scope: \" + scope);\n}\n\nResource.prototype.getNS = function()\n{\n    return this.ns;\n}\n\nResource.prototype.getId = function(id)\n{\n    return this.getNS() + id;\n}\n\nResource.prototype.getCSSClass = function(name)\n{\n    return this.getNS() + name;\n}\n\nResource.prototype.replaceVariables = function(str)\n{\n    str = str.replace(/__NS__/g, this.getNS());\n    str = str.replace(/__RESOURCE__/g, this.getResourceBaseUrl());\n    return str;\n}\n\nResource.prototype.importCssString = function(css)\n{\n    importCssString(this.replaceVariables(css));\n}\n\nResource.prototype.getProgramBaseUrl = function()\n{\n    if (this.options.programBaseUrl) {\n        return this.options.programBaseUrl;\n    } else {\n        throw new Error(\"Use something other than BRAVOJS.url\");\n        //return BRAVOJS.url.replace(/\\.js$/, \"/\");\n    }\n}\n\nResource.prototype.getResourceBaseUrl = function()\n{\n    return this.getProgramBaseUrl() + this.pkgHashId + \"@/resources/\";\n}\n\nResource.prototype.getResourceUrl = function(path)\n{\n    return this.getResourceBaseUrl() + path;\n}\n\n\n\n\n// @see https://github.com/ajaxorg/pilot/blob/1442bd4d574686c5b300daeaaf8fbd0b73c77e21/lib/pilot/dom.js#L135\nfunction importCssString(cssText, doc) {\n    doc = doc || document;\n\n    if (doc.createStyleSheet) {\n        var sheet = doc.createStyleSheet();\n        sheet.cssText = cssText;\n    }\n    else {\n        var style = doc.createElement(\"style\");\n\n        style.appendChild(doc.createTextNode(cssText));\n\n        var head = doc.getElementsByTagName(\"head\")[0] || doc.documentElement;\n        head.appendChild(style);\n    }\n}\n",
              "globals": {
                "MD5": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "exports": {
                  "type": "reference"
                },
                "Resource": {
                  "type": "assign"
                },
                "importCssString": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "./md5": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../pinf-bridgelib-js/lib';",
              "code": "function(require, exports, module) {var __dirname = '../../pinf-bridgelib-js/lib';\n\nvar MD5 = require(\"./md5\");\n\n/*\n// TODO: Always do this via require(\"pinf/loader\");\n// if in browser\nvar BRAVOJS = (typeof bravojs !== \"undefined\")?bravojs:false;\n// if not in browser\nif (require.platform !== \"browser\") {\n    BRAVOJS = require(\"pinf\" + \"/loader\").getSandbox().loader.bravojs;\n}\n*/\n\n\nexports.forPackage = function(module, options)\n{\n    return new Resource(module, \"package\", options);\n}\n\nexports.forModule = function(module, options)\n{\n    return new Resource(module, \"module\", options);\n}\n\nvar Resource = function(owner, scope, options)\n{\n    this.module = false;\n    this.pkgHashId = false;\n    this.scope = scope;\n    this.ns = false;\n    this.options = options || {};\n\n    if (typeof owner === \"object\")\n    {\n    \t// TODO: Ensure `owner` is a module object\n        this.module = owner;\n        this.pkgHashId = MD5.hash_md5(this.module.pkgId);\n    } else\n    if (typeof owner === \"string\" && scope === \"package\")\n    {\n    \tthis.pkgHashId = MD5.hash_md5(owner);\n    }\n\n    if (this.scope === \"package\") {\n    \tthis.ns = \"__\" + this.pkgHashId + \"__\";\n    } else\n    if (this.scope === \"module\") {\n    \tif (!this.module)\n    \t\tthrow new Error(\"`this.module` not set! You must initialize resource module with module object!\");\n    \tthis.ns = \"__\" + this.module.hashId + \"__\";\n    } else\n    \tthrow new Error(\"Invalid scope: \" + scope);\n}\n\nResource.prototype.getNS = function()\n{\n    return this.ns;\n}\n\nResource.prototype.getId = function(id)\n{\n    return this.getNS() + id;\n}\n\nResource.prototype.getCSSClass = function(name)\n{\n    return this.getNS() + name;\n}\n\nResource.prototype.replaceVariables = function(str)\n{\n    str = str.replace(/__NS__/g, this.getNS());\n    str = str.replace(/__RESOURCE__/g, this.getResourceBaseUrl());\n    return str;\n}\n\nResource.prototype.importCssString = function(css)\n{\n    importCssString(this.replaceVariables(css));\n}\n\nResource.prototype.getProgramBaseUrl = function()\n{\n    if (this.options.programBaseUrl) {\n        return this.options.programBaseUrl;\n    } else {\n        throw new Error(\"Use something other than BRAVOJS.url\");\n        //return BRAVOJS.url.replace(/\\.js$/, \"/\");\n    }\n}\n\nResource.prototype.getResourceBaseUrl = function()\n{\n    return this.getProgramBaseUrl() + this.pkgHashId + \"@/resources/\";\n}\n\nResource.prototype.getResourceUrl = function(path)\n{\n    return this.getResourceBaseUrl() + path;\n}\n\n\n\n\n// @see https://github.com/ajaxorg/pilot/blob/1442bd4d574686c5b300daeaaf8fbd0b73c77e21/lib/pilot/dom.js#L135\nfunction importCssString(cssText, doc) {\n    doc = doc || document;\n\n    if (doc.createStyleSheet) {\n        var sheet = doc.createStyleSheet();\n        sheet.cssText = cssText;\n    }\n    else {\n        var style = doc.createElement(\"style\");\n\n        style.appendChild(doc.createTextNode(cssText));\n\n        var head = doc.getElementsByTagName(\"head\")[0] || doc.documentElement;\n        head.appendChild(style);\n    }\n}\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "./md5": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/md5.js": {
            "requireId": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/md5",
            "memoizeId": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/md5.js",
            "descriptor": {
              "filename": "md5.js",
              "filepath": "../../pinf-bridgelib-js/lib/md5.js",
              "mtime": 1375341060,
              "code": "\n/*!\n    A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n    Digest Algorithm, as defined in RFC 1321.\n    Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.\n    Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n    Distributed under the BSD License\n    See http://pajhome.org.uk/crypt/md5 for more info.\n    Ported to Chiron and Narwhal by Kris Kowal, kriskowal\n*/\n\n// ported by:\n// -- kriskowal Kris Kowal Copyright (C) 2009-2010 MIT License\n\nvar util = require(\"./util\");\nvar struct = require(\"./struct\");\n\n/*\n * Configurable variables. You may need to tweak these to be compatible with\n * the server-side, but the defaults work in most cases.\n */\n\n/*** hash\n    returns a hex string of the md5 hash for a given string.\n*/\nexports.hash_md5 = function(s) {\n    return struct.bin2hex(exports.hash(s));\n}\nexports.hash = function (s, _characterSize) {\n    if (util.no(_characterSize)) _characterSize = struct.characterSize;\n    return struct.binl2bin(core_md5(struct.str2binl(s), s.length * _characterSize));\n};\n\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length\n */\nvar core_md5 = function (x, len) {\n    /* append padding */\n    x[len >> 5] |= 0x80 << ((len) % 32);\n    x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n    var a =  1732584193;\n    var b = -271733879;\n    var c = -1732584194;\n    var d =  271733878;\n\n    for (var i = 0; i < x.length; i += 16) {\n        var olda = a;\n        var oldb = b;\n        var oldc = c;\n        var oldd = d;\n\n        a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\n        d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\n        c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\n        b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n        a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\n        d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\n        c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n        b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\n        a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\n        d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n        c = md5_ff(c, d, a, b, x[i+10], 17, -42063);\n        b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\n        a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\n        d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);\n        c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\n        b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\n\n        a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\n        d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\n        c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);\n        b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\n        a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\n        d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\n        c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);\n        b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\n        a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\n        d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\n        c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\n        b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\n        a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\n        d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\n        c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\n        b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\n\n        a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\n        d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n        c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\n        b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);\n        a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\n        d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\n        c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\n        b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\n        a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\n        d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\n        c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\n        b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\n        a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\n        d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);\n        c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);\n        b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\n\n        a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\n        d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\n        c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\n        b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\n        a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\n        d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n        c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);\n        b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n        a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\n        d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);\n        c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n        b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\n        a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\n        d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\n        c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\n        b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\n\n        a = struct.addU32(a, olda);\n        b = struct.addU32(b, oldb);\n        c = struct.addU32(c, oldc);\n        d = struct.addU32(d, oldd);\n    }\n    return [a, b, c, d];\n\n};\n\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\nvar md5_cmn = function (q, a, b, x, s, t) {\n    return struct.addU32(struct.rolU32(struct.addU32(a, q, x, t), s), b);\n};\n\nvar md5_ff = function (a, b, c, d, x, s, t) {\n    return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n};\n\nvar md5_gg = function (a, b, c, d, x, s, t) {\n    return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n};\n\nvar md5_hh = function (a, b, c, d, x, s, t) {\n    return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n};\n\nvar md5_ii = function (a, b, c, d, x, s, t) {\n    return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n};\n\n/*\n * Calculate the HMAC-MD5, of a key and some data\n */\nvar core_hmac_md5 = function (key, data, _characterSize) {\n    if (util.no(_characterSize)) _characterSize = struct.characterSize;\n    var bkey = struct.str2binl(key);\n    if(bkey.length > 16) bkey = core_md5(bkey, key.length * _characterSize);\n\n    var ipad = [], opad = [];\n    for (var i = 0; i < 16; i++) {\n        ipad[i] = bkey[i] ^ 0x36363636;\n        opad[i] = bkey[i] ^ 0x5C5C5C5C;\n    }\n\n    var hash = core_md5(ipad.concat(struct.str2binl(data)), 512 + data.length * _characterSize);\n    return core_md5(opad.concat(hash), 512 + 128);\n};\n\n",
              "globals": {
                "util": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "struct": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                },
                "core_md5": {
                  "type": "call"
                },
                "md5_ff": {
                  "type": "call"
                },
                "md5_gg": {
                  "type": "call"
                },
                "md5_hh": {
                  "type": "call"
                },
                "md5_ii": {
                  "type": "call"
                },
                "md5_cmn": {
                  "type": "assign"
                },
                "core_hmac_md5": {
                  "type": "assign"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "./util": {
                    "where": "inline"
                  },
                  "./struct": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../pinf-bridgelib-js/lib';",
              "code": "function(require, exports, module) {var __dirname = '../../pinf-bridgelib-js/lib';\n\n/*!\n    A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n    Digest Algorithm, as defined in RFC 1321.\n    Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.\n    Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n    Distributed under the BSD License\n    See http://pajhome.org.uk/crypt/md5 for more info.\n    Ported to Chiron and Narwhal by Kris Kowal, kriskowal\n*/\n\n// ported by:\n// -- kriskowal Kris Kowal Copyright (C) 2009-2010 MIT License\n\nvar util = require(\"./util\");\nvar struct = require(\"./struct\");\n\n/*\n * Configurable variables. You may need to tweak these to be compatible with\n * the server-side, but the defaults work in most cases.\n */\n\n/*** hash\n    returns a hex string of the md5 hash for a given string.\n*/\nexports.hash_md5 = function(s) {\n    return struct.bin2hex(exports.hash(s));\n}\nexports.hash = function (s, _characterSize) {\n    if (util.no(_characterSize)) _characterSize = struct.characterSize;\n    return struct.binl2bin(core_md5(struct.str2binl(s), s.length * _characterSize));\n};\n\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length\n */\nvar core_md5 = function (x, len) {\n    /* append padding */\n    x[len >> 5] |= 0x80 << ((len) % 32);\n    x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n    var a =  1732584193;\n    var b = -271733879;\n    var c = -1732584194;\n    var d =  271733878;\n\n    for (var i = 0; i < x.length; i += 16) {\n        var olda = a;\n        var oldb = b;\n        var oldc = c;\n        var oldd = d;\n\n        a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\n        d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\n        c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\n        b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n        a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\n        d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\n        c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n        b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\n        a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\n        d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n        c = md5_ff(c, d, a, b, x[i+10], 17, -42063);\n        b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\n        a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\n        d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);\n        c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\n        b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\n\n        a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\n        d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\n        c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);\n        b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\n        a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\n        d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\n        c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);\n        b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\n        a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\n        d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\n        c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\n        b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\n        a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\n        d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\n        c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\n        b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\n\n        a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\n        d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n        c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\n        b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);\n        a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\n        d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\n        c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\n        b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\n        a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\n        d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\n        c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\n        b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\n        a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\n        d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);\n        c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);\n        b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\n\n        a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\n        d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\n        c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\n        b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\n        a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\n        d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n        c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);\n        b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n        a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\n        d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);\n        c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n        b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\n        a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\n        d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\n        c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\n        b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\n\n        a = struct.addU32(a, olda);\n        b = struct.addU32(b, oldb);\n        c = struct.addU32(c, oldc);\n        d = struct.addU32(d, oldd);\n    }\n    return [a, b, c, d];\n\n};\n\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\nvar md5_cmn = function (q, a, b, x, s, t) {\n    return struct.addU32(struct.rolU32(struct.addU32(a, q, x, t), s), b);\n};\n\nvar md5_ff = function (a, b, c, d, x, s, t) {\n    return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n};\n\nvar md5_gg = function (a, b, c, d, x, s, t) {\n    return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n};\n\nvar md5_hh = function (a, b, c, d, x, s, t) {\n    return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n};\n\nvar md5_ii = function (a, b, c, d, x, s, t) {\n    return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n};\n\n/*\n * Calculate the HMAC-MD5, of a key and some data\n */\nvar core_hmac_md5 = function (key, data, _characterSize) {\n    if (util.no(_characterSize)) _characterSize = struct.characterSize;\n    var bkey = struct.str2binl(key);\n    if(bkey.length > 16) bkey = core_md5(bkey, key.length * _characterSize);\n\n    var ipad = [], opad = [];\n    for (var i = 0; i < 16; i++) {\n        ipad[i] = bkey[i] ^ 0x36363636;\n        opad[i] = bkey[i] ^ 0x5C5C5C5C;\n    }\n\n    var hash = core_md5(ipad.concat(struct.str2binl(data)), 512 + data.length * _characterSize);\n    return core_md5(opad.concat(hash), 512 + 128);\n};\n\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "./util": {
                  "where": "inline"
                },
                "./struct": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/struct.js": {
            "requireId": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/struct",
            "memoizeId": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/struct.js",
            "descriptor": {
              "filename": "struct.js",
              "filepath": "../../pinf-bridgelib-js/lib/struct.js",
              "mtime": 1375341060,
              "code": "\n// -- kriskowal Kris Kowal Copyright (C) 2009-2010 MIT License\n\nvar util = require(\"./util\");\nvar binary = require(\"./binary\");\n\n/*** alphabet16Upper\n*/\nexports.alphabet16Upper = \"0123456789ABCDEF\";\n\n/*** alphabet16Lower\n*/\nexports.alphabet16Lower = \"0123456789abcdef\";\n\n/*** alphabet16\n    ``alphabet16Lower`` is the default hexadecimal alphabet.\n    This value can be overridden on the module\n    and function level.\n*/\n\nexports.alphabet16 = exports.alphabet16Lower;\n\n/*** alphabet36\n*/\nexports.alphabet36 = \"0123456789abcdefghijklmnopqrstuvwxyz\";\n\n/*** alphabet64\n*/\nexports.alphabet64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n/*** padBase64 \n    base-64 pad character. \"=\" for strict RFC compliance, \"\" for brevity\n    \"=\" by default.\n    This value can be overridden on the module\n    and function level.\n*/\nexports.padBase64 = \"=\";\n\n/*** characterSize\n    bits per input character. 8 - ASCII; 16 - Unicode\n    This value can be overridden on the module\n    and function level.\n*/\nexports.characterSize = 8; \n\n/*** ord\n    Returns the character code ordinal (offset in the ASCII or Unicode tables)\n    for a given single character. \n\n     - inverse: `chr`\n\n*/\nexports.ord = function (chr) {\n    return chr.charCodeAt();\n};\n\n/*** chr\n    Returns the character for a given character code ordinal (offset in the\n    ASCII or Unicode tables).\n\n     - inverse: `ord`\n\n*/\nexports.chr = function (ord) {\n    return String.fromCharCode(ord);\n};\n\n/* undocumented addU32\n    Add integers, wrapping at 2**32. This uses 16-bit operations internally\n    to work around bugs in some JavaScript interpreters.\n\n    - `variadic`\n*/\nexports.addU32 = function (/* ... */) {\n    var acc = 0;\n    for (var i = 0; i < arguments.length; i++) {\n        var x = arguments[i];\n        var lsw = (acc & 0xFFFF) + (x & 0xFFFF);\n        var msw = (acc >> 16) + (x >> 16) + (lsw >> 16);\n        acc = (msw << 16) | (lsw & 0xFFFF);\n    }\n    return acc;\n};\n\n/* undocumented rolU32\n    Bitwise rotate a 32-bit number to the left.\n*/\nexports.rolU32 = function (num, cnt) {\n    return (num << cnt) | (num >>> (32 - cnt));\n};\n\n/* undocumented str2binl\n    Convert a string to an array of little-endian words\n    If characterSize is ASCII, characters >255 have their hi-byte silently ignored.\n*/\nexports.str2binl = function (str, _characterSize) {\n    if (util.no(_characterSize))\n        _characterSize = exports.characterSize;\n    var bin = [];\n    var mask = (1 << _characterSize) - 1;\n    for (var i = 0; i < str.length * _characterSize; i += _characterSize)\n        bin[i>>5] |= (str.charCodeAt(i / _characterSize) & mask) << (i % 32);\n    return bin;\n};\n\n/* undocumented str2binb\n    Convert an 8-bit or 16-bit string to an array of big-endian words\n    In 8-bit function, characters >255 have their hi-byte silently ignored.\n*/\nexports.str2binb = function (str, _characterSize) {\n    if (util.no(_characterSize))\n        _characterSize = exports.characterSize;\n    var bin = [];\n    var mask = (1 << _characterSize) - 1;\n    for (var i = 0; i < str.length * _characterSize; i += _characterSize)\n        bin[i>>5] |= (\n            (str.charCodeAt(i / _characterSize) & mask) <<\n            (32 - _characterSize - i % 32)\n        );\n    return bin;\n};\n\n/* undocumented binl2str\n    Convert an array of little-endian words to a string\n*/\nexports.binl2str = function (bin, _characterSize) {\n    return exports.binl2bin(bin, _characterSize).decodeToString('ascii');\n};\n\n/* undocumented binl2bin\n    Convert an array of little-endian words to a string\n*/\nexports.binl2bin = function (bin, _characterSize) {\n    if (util.no(_characterSize)) \n        _characterSize = exports.characterSize;\n    var str = [];\n    var mask = (1 << _characterSize) - 1;\n    for (var i = 0; i < bin.length * 32; i += _characterSize)\n        str.push((bin[i>>5] >>> (i % 32)) & mask);\n    return binary.ByteString(str);\n};\n\n/* undocumented binb2str\n    Convert an array of big-endian words to a string\n*/\nexports.binb2str = function (bin, _characterSize) {\n    return exports.binb2bin(bin, _characterSize).decodeToString('ascii');\n};\n\n/* undocumented binb2bin\n    Convert an array of big-endian words to a string\n*/\nexports.binb2bin = function (bin, _characterSize) {\n    if (util.no(_characterSize)) \n        _characterSize = exports.characterSize;\n    var str = [];\n    var mask = (1 << _characterSize) - 1;\n    for (var i = 0; i < bin.length * 32; i += _characterSize)\n        str.push((bin[i>>5] >>> (32 - _characterSize - i % 32)) & mask);\n    return binary.ByteString(str);\n};\n\n/* undocumented binl2hex\n    Convert an array of little-endian words to a hex string.\n*/\nexports.binl2hex = function (binarray, _alphabet16) {\n    if (util.no(_alphabet16))\n        _alphabet16 = exports.alphabet16;\n    var str = \"\";\n    for (var i = 0; i < binarray.length * 4; i++) {\n        str += _alphabet16.charAt((binarray[i>>2] >> ((i % 4) * 8 + 4)) & 0xF) +\n               _alphabet16.charAt((binarray[i>>2] >> ((i % 4) * 8)) & 0xF);\n    }\n    return str;\n};\n\n/* undocumented binb2hex\n    Convert an array of big-endian words to a hex string.\n*/\nexports.binb2hex = function (binarray, _alphabet16) {\n    if (util.no(_alphabet16))\n        _alphabet16 = exports.alphabet16;\n    var str = \"\";\n    for (var i = 0; i < binarray.length * 4; i++) {\n        str += _alphabet16.charAt((binarray[i>>2] >> ((3 - i % 4)*8+4)) & 0xF) +\n               _alphabet16.charAt((binarray[i>>2] >> ((3 - i % 4) * 8)) & 0xF);\n    }\n    return str;\n};\n\n/* undocumented binl2base64\n    Convert an array of little-endian words to a base-64 string\n*/\nexports.binl2base64 = function (binarray) {\n    var str = \"\";\n    for (var i = 0; i < binarray.length * 4; i += 3) {\n        var triplet = (\n            (((binarray[i >> 2] >> 8 * (i % 4)) & 0xFF) << 16) |\n            (((binarray[i+1 >> 2] >> 8 * ((i+1)%4)) & 0xFF) << 8) |\n            ((binarray[i+2 >> 2] >> 8 * ((i+2)%4)) & 0xFF)\n        );\n        for (var j = 0; j < 4; j++) {\n            if (i * 8 + j * 6 > binarray.length * 32)\n                str += exports.padBase64;\n            else str += exports.alphabet64.charAt((triplet >> 6*(3-j)) & 0x3F);\n        }\n    }\n    return str;\n};\n\n/* undocumented binb2base64\n    Convert an array of big-endian words to a base-64 string\n*/\nexports.binb2base64 = function (binarray) {\n    var str = \"\";\n    for (var i = 0; i < binarray.length * 4; i += 3) {\n        var triplet = (\n            (((binarray[i >> 2] >> 8 * (3 - i % 4)) & 0xFF) << 16) |\n            (((binarray[i+1 >> 2] >> 8 * (3 - (i+1)%4)) & 0xFF) << 8 ) |\n            ((binarray[i+2 >> 2] >> 8 * (3 - (i+2)%4)) & 0xFF)\n        );\n        for (var j = 0; j < 4; j++) {\n            if (i * 8 + j * 6 > binarray.length * 32)\n                str += exports.padBase64;\n            else str += exports.alphabet64.charAt((triplet >> 6*(3-j)) & 0x3F);\n        }\n    }\n    return str;\n};\n\n/* undocumented bin2hex\n    Convert a string to a hex string.\n */\nexports.bin2hex = function (bin) {\n    \n    function convert(num) {\n        if (num > 65535) throw \"error\";\n        var first = Math.round(num/4096 - .5),\n            temp1 = (num - first * 4096),\n            second = Math.round(temp1/256 -.5),\n            temp2 = (temp1 - second * 256),\n            third = Math.round(temp2/16 - .5),\n            fourth = (temp2 - third * 16);\n        return String(letter(third) + letter(fourth));\n    }\n    \n    function letter(num) {\n        if (num < 10) return \"\"+num;\n        else {\n            if (num == 10) return \"A\";\n            if (num == 11) return \"B\";\n            if (num == 12) return \"C\";\n            if (num == 13) return \"D\";\n            if (num == 14) return \"E\";\n            if (num == 15) return \"F\";\n        }\n    }\n    \n    var str = \"\";\n    for (var i = 0; i < bin.length; i++) {\n        str += convert(bin.charCodeAt(i));\n    }\n    return str;\n}\n",
              "globals": {
                "util": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "binary": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                },
                "String": {
                  "type": "reference"
                },
                "Math": {
                  "type": "reference"
                },
                "i": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "./util": {
                    "where": "inline"
                  },
                  "./binary": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../pinf-bridgelib-js/lib';",
              "code": "function(require, exports, module) {var __dirname = '../../pinf-bridgelib-js/lib';\n\n// -- kriskowal Kris Kowal Copyright (C) 2009-2010 MIT License\n\nvar util = require(\"./util\");\nvar binary = require(\"./binary\");\n\n/*** alphabet16Upper\n*/\nexports.alphabet16Upper = \"0123456789ABCDEF\";\n\n/*** alphabet16Lower\n*/\nexports.alphabet16Lower = \"0123456789abcdef\";\n\n/*** alphabet16\n    ``alphabet16Lower`` is the default hexadecimal alphabet.\n    This value can be overridden on the module\n    and function level.\n*/\n\nexports.alphabet16 = exports.alphabet16Lower;\n\n/*** alphabet36\n*/\nexports.alphabet36 = \"0123456789abcdefghijklmnopqrstuvwxyz\";\n\n/*** alphabet64\n*/\nexports.alphabet64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n/*** padBase64 \n    base-64 pad character. \"=\" for strict RFC compliance, \"\" for brevity\n    \"=\" by default.\n    This value can be overridden on the module\n    and function level.\n*/\nexports.padBase64 = \"=\";\n\n/*** characterSize\n    bits per input character. 8 - ASCII; 16 - Unicode\n    This value can be overridden on the module\n    and function level.\n*/\nexports.characterSize = 8; \n\n/*** ord\n    Returns the character code ordinal (offset in the ASCII or Unicode tables)\n    for a given single character. \n\n     - inverse: `chr`\n\n*/\nexports.ord = function (chr) {\n    return chr.charCodeAt();\n};\n\n/*** chr\n    Returns the character for a given character code ordinal (offset in the\n    ASCII or Unicode tables).\n\n     - inverse: `ord`\n\n*/\nexports.chr = function (ord) {\n    return String.fromCharCode(ord);\n};\n\n/* undocumented addU32\n    Add integers, wrapping at 2**32. This uses 16-bit operations internally\n    to work around bugs in some JavaScript interpreters.\n\n    - `variadic`\n*/\nexports.addU32 = function (/* ... */) {\n    var acc = 0;\n    for (var i = 0; i < arguments.length; i++) {\n        var x = arguments[i];\n        var lsw = (acc & 0xFFFF) + (x & 0xFFFF);\n        var msw = (acc >> 16) + (x >> 16) + (lsw >> 16);\n        acc = (msw << 16) | (lsw & 0xFFFF);\n    }\n    return acc;\n};\n\n/* undocumented rolU32\n    Bitwise rotate a 32-bit number to the left.\n*/\nexports.rolU32 = function (num, cnt) {\n    return (num << cnt) | (num >>> (32 - cnt));\n};\n\n/* undocumented str2binl\n    Convert a string to an array of little-endian words\n    If characterSize is ASCII, characters >255 have their hi-byte silently ignored.\n*/\nexports.str2binl = function (str, _characterSize) {\n    if (util.no(_characterSize))\n        _characterSize = exports.characterSize;\n    var bin = [];\n    var mask = (1 << _characterSize) - 1;\n    for (var i = 0; i < str.length * _characterSize; i += _characterSize)\n        bin[i>>5] |= (str.charCodeAt(i / _characterSize) & mask) << (i % 32);\n    return bin;\n};\n\n/* undocumented str2binb\n    Convert an 8-bit or 16-bit string to an array of big-endian words\n    In 8-bit function, characters >255 have their hi-byte silently ignored.\n*/\nexports.str2binb = function (str, _characterSize) {\n    if (util.no(_characterSize))\n        _characterSize = exports.characterSize;\n    var bin = [];\n    var mask = (1 << _characterSize) - 1;\n    for (var i = 0; i < str.length * _characterSize; i += _characterSize)\n        bin[i>>5] |= (\n            (str.charCodeAt(i / _characterSize) & mask) <<\n            (32 - _characterSize - i % 32)\n        );\n    return bin;\n};\n\n/* undocumented binl2str\n    Convert an array of little-endian words to a string\n*/\nexports.binl2str = function (bin, _characterSize) {\n    return exports.binl2bin(bin, _characterSize).decodeToString('ascii');\n};\n\n/* undocumented binl2bin\n    Convert an array of little-endian words to a string\n*/\nexports.binl2bin = function (bin, _characterSize) {\n    if (util.no(_characterSize)) \n        _characterSize = exports.characterSize;\n    var str = [];\n    var mask = (1 << _characterSize) - 1;\n    for (var i = 0; i < bin.length * 32; i += _characterSize)\n        str.push((bin[i>>5] >>> (i % 32)) & mask);\n    return binary.ByteString(str);\n};\n\n/* undocumented binb2str\n    Convert an array of big-endian words to a string\n*/\nexports.binb2str = function (bin, _characterSize) {\n    return exports.binb2bin(bin, _characterSize).decodeToString('ascii');\n};\n\n/* undocumented binb2bin\n    Convert an array of big-endian words to a string\n*/\nexports.binb2bin = function (bin, _characterSize) {\n    if (util.no(_characterSize)) \n        _characterSize = exports.characterSize;\n    var str = [];\n    var mask = (1 << _characterSize) - 1;\n    for (var i = 0; i < bin.length * 32; i += _characterSize)\n        str.push((bin[i>>5] >>> (32 - _characterSize - i % 32)) & mask);\n    return binary.ByteString(str);\n};\n\n/* undocumented binl2hex\n    Convert an array of little-endian words to a hex string.\n*/\nexports.binl2hex = function (binarray, _alphabet16) {\n    if (util.no(_alphabet16))\n        _alphabet16 = exports.alphabet16;\n    var str = \"\";\n    for (var i = 0; i < binarray.length * 4; i++) {\n        str += _alphabet16.charAt((binarray[i>>2] >> ((i % 4) * 8 + 4)) & 0xF) +\n               _alphabet16.charAt((binarray[i>>2] >> ((i % 4) * 8)) & 0xF);\n    }\n    return str;\n};\n\n/* undocumented binb2hex\n    Convert an array of big-endian words to a hex string.\n*/\nexports.binb2hex = function (binarray, _alphabet16) {\n    if (util.no(_alphabet16))\n        _alphabet16 = exports.alphabet16;\n    var str = \"\";\n    for (var i = 0; i < binarray.length * 4; i++) {\n        str += _alphabet16.charAt((binarray[i>>2] >> ((3 - i % 4)*8+4)) & 0xF) +\n               _alphabet16.charAt((binarray[i>>2] >> ((3 - i % 4) * 8)) & 0xF);\n    }\n    return str;\n};\n\n/* undocumented binl2base64\n    Convert an array of little-endian words to a base-64 string\n*/\nexports.binl2base64 = function (binarray) {\n    var str = \"\";\n    for (var i = 0; i < binarray.length * 4; i += 3) {\n        var triplet = (\n            (((binarray[i >> 2] >> 8 * (i % 4)) & 0xFF) << 16) |\n            (((binarray[i+1 >> 2] >> 8 * ((i+1)%4)) & 0xFF) << 8) |\n            ((binarray[i+2 >> 2] >> 8 * ((i+2)%4)) & 0xFF)\n        );\n        for (var j = 0; j < 4; j++) {\n            if (i * 8 + j * 6 > binarray.length * 32)\n                str += exports.padBase64;\n            else str += exports.alphabet64.charAt((triplet >> 6*(3-j)) & 0x3F);\n        }\n    }\n    return str;\n};\n\n/* undocumented binb2base64\n    Convert an array of big-endian words to a base-64 string\n*/\nexports.binb2base64 = function (binarray) {\n    var str = \"\";\n    for (var i = 0; i < binarray.length * 4; i += 3) {\n        var triplet = (\n            (((binarray[i >> 2] >> 8 * (3 - i % 4)) & 0xFF) << 16) |\n            (((binarray[i+1 >> 2] >> 8 * (3 - (i+1)%4)) & 0xFF) << 8 ) |\n            ((binarray[i+2 >> 2] >> 8 * (3 - (i+2)%4)) & 0xFF)\n        );\n        for (var j = 0; j < 4; j++) {\n            if (i * 8 + j * 6 > binarray.length * 32)\n                str += exports.padBase64;\n            else str += exports.alphabet64.charAt((triplet >> 6*(3-j)) & 0x3F);\n        }\n    }\n    return str;\n};\n\n/* undocumented bin2hex\n    Convert a string to a hex string.\n */\nexports.bin2hex = function (bin) {\n    \n    function convert(num) {\n        if (num > 65535) throw \"error\";\n        var first = Math.round(num/4096 - .5),\n            temp1 = (num - first * 4096),\n            second = Math.round(temp1/256 -.5),\n            temp2 = (temp1 - second * 256),\n            third = Math.round(temp2/16 - .5),\n            fourth = (temp2 - third * 16);\n        return String(letter(third) + letter(fourth));\n    }\n    \n    function letter(num) {\n        if (num < 10) return \"\"+num;\n        else {\n            if (num == 10) return \"A\";\n            if (num == 11) return \"B\";\n            if (num == 12) return \"C\";\n            if (num == 13) return \"D\";\n            if (num == 14) return \"E\";\n            if (num == 15) return \"F\";\n        }\n    }\n    \n    var str = \"\";\n    for (var i = 0; i < bin.length; i++) {\n        str += convert(bin.charCodeAt(i));\n    }\n    return str;\n}\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "./util": {
                  "where": "inline"
                },
                "./binary": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/binary.js": {
            "requireId": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/binary",
            "memoizeId": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/binary.js",
            "descriptor": {
              "filename": "binary.js",
              "filepath": "../../pinf-bridgelib-js/lib/binary.js",
              "mtime": 1420262622,
              "code": "\n/* Binary */\n// -- tlrobinson Tom Robinson\n// -- gozala Irakli Gozalishvili\n// -- tschaub\n// -- nrstott Nathan Stott\n\n//var engine = require(\"./platform/{platform}/binary\"),\nvar engine = require(\"./platform/node/binary\"),\n    B_ALLOC = engine.B_ALLOC,\n    B_LENGTH = engine.B_LENGTH,\n    B_GET = engine.B_GET,\n    B_SET = engine.B_SET,\n    B_FILL = engine.B_FILL,\n    B_COPY = engine.B_COPY,\n    B_DECODE = engine.B_DECODE,\n    B_ENCODE = engine.B_ENCODE,\n    B_DECODE_DEFAULT = engine.B_DECODE_DEFAULT,\n    B_ENCODE_DEFAULT = engine.B_ENCODE_DEFAULT,\n    B_TRANSCODE = engine.B_TRANSCODE;\n    \nvar Binary = exports.Binary = function() {\n    // this._bytes\n    // this._offset\n    // this._length\n};\n/*\nObject.defineProperty(Binary.prototype, \"length\", {\n    \"get\": function () {\n        return this._length;\n    },\n    \"enumerable\": false,\n    \"configurable\": false\n});\n*/\n// toArray() - n array of the byte values\n// toArray(charset) - an array of the code points, decoded\nBinary.prototype.toArray = function(charset) {\n    if (arguments.length === 0) {\n        var array = new Array(this._length);\n        \n        for (var i = 0; i < this._length; i++)\n            array[i] = this.get(i);\n        \n        return array;\n    }\n    else if (arguments.length === 1) {\n        var string = B_DECODE(this._bytes, this._offset, this._length, charset),\n            length = string.length,\n            array = new Array(length);\n        \n        for (var i = 0; i < length; i++)\n            array[i] = string.charCodeAt(i);\n        \n        return array;\n    }\n    else\n        throw new Error(\"Illegal arguments to toArray()\");\n};\n\n// toByteArray() - just a copy\n// toByteArray(sourceCharset, targetCharset) - transcoded\nBinary.prototype.toByteArray = function(sourceCodec, targetCodec) {\n    if (arguments.length < 2)\n        return new ByteArray(this);\n    else if (arguments.length === 2 && typeof sourceCodec === \"string\" && typeof targetCodec === \"string\") {\n        var bytes = B_TRANSCODE(this._bytes, this._offset, this._length, sourceCodec, targetCodec);\n        return new ByteArray(bytes, 0, B_LENGTH(bytes));\n    }\n    \n    throw new Error(\"Illegal arguments to ByteArray toByteArray\");\n};\n\n// toByteString() - byte for byte copy\n// toByteString(sourceCharset, targetCharset) - transcoded\nBinary.prototype.toByteString = function(sourceCodec, targetCodec) {\n    if (arguments.length < 2)\n        return new ByteString(this);\n    else if (arguments.length === 2 && typeof sourceCodec === \"string\" && typeof targetCodec === \"string\") {\n        var bytes = B_TRANSCODE(this._bytes, this._offset, this._length, sourceCodec, targetCodec);\n        return new ByteString(bytes, 0, B_LENGTH(bytes));\n    }\n    \n    throw new Error(\"Illegal arguments to ByteArray toByteString\");\n};\n\n// decodeToString()\n// decodeToString(charset) - returns a String from its decoded bytes in a given charset. If no charset is provided, or if the charset is \"undefined\", assumes the default system encoding.\n// decodeToString(number) - returns a String from its decoded bytes in a given base, like 64, 32, 16, 8, 2\nBinary.prototype.decodeToString = function(charset) {\n    if (charset) {\n        if (typeof charset == \"number\")\n            return require(\"./base\" + charset).encode(this);\n        else if (/^base/.test(charset))\n            return require(charset).encode(this);\n        else\n            return B_DECODE(this._bytes, this._offset, this._length, charset);\n    }\n    return B_DECODE_DEFAULT(this._bytes, this._offset, this._length);\n};\n\n// get(offset) - Return the byte at offset as a Number.\nBinary.prototype.get = function(offset) {\n    if (offset < 0 || offset >= this._length)\n        return NaN;\n    \n    //var b = this._bytes[this._offset + offset];\n    //return (b >= 0) ? b : -1 * ((b ^ 0xFF) + 1);\n    return B_GET(this._bytes, this._offset + offset)\n};\n\nBinary.prototype.indexOf = function(byteValue, start, stop) {\n    // HACK: use ByteString's slice since we know we won't be modifying result\n    var array = ByteString.prototype.slice.apply(this, [start, stop]).toArray(),\n        result = array.indexOf(byteValue);\n    return (result < 0) ? -1 : result + (start || 0);\n};\n\nBinary.prototype.lastIndexOf = function(byteValue, start, stop) {\n    // HACK: use ByteString's slice since we know we won't be modifying result\n    var array = ByteString.prototype.slice.apply(this, [start, stop]).toArray(),\n        result = array.lastIndexOf(byteValue);\n    return (result < 0) ? -1 : result + (start || 0);\n};\n\n// valueOf()\nBinary.prototype.valueOf = function() {\n    return this;\n};\n\n/* ByteString */\n\nvar ByteString = exports.ByteString = function() {\n    if (!(this instanceof ByteString)) {\n        if (arguments.length == 0)\n            return new ByteString();\n        if (arguments.length == 1)\n            return new ByteString(arguments[0]);\n        if (arguments.length == 2)\n            return new ByteString(arguments[0], arguments[1]);\n        if (arguments.length == 3)\n            return new ByteString(arguments[0], arguments[1], arguments[2]);\n    }\n\n    // ByteString() - Construct an empty byte string.\n    if (arguments.length === 0) {\n        this._bytes     = B_ALLOC(0); // null;\n        this._offset    = 0;\n        this._length    = 0;\n    }\n    // ByteString(byteString) - Copies byteString.\n    else if (arguments.length === 1 && arguments[0] instanceof ByteString) {\n        return arguments[0];\n    }\n    // ByteString(byteArray) - Use the contents of byteArray.\n    else if (arguments.length === 1 && arguments[0] instanceof ByteArray) {\n        var copy = arguments[0].toByteArray();\n        this._bytes     = copy._bytes;\n        this._offset    = copy._offset;\n        this._length    = copy._length;\n    }\n    // ByteString(arrayOfNumbers) - Use the numbers in arrayOfNumbers as the bytes.\n    else if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        var array = arguments[0];\n        this._bytes = B_ALLOC(array.length);\n        for (var i = 0; i < array.length; i++) {\n            var b = array[i];\n            // If any element is outside the range 0...255, an exception (TODO) is thrown.\n            if (b < -0x80 || b > 0xFF)\n                throw new Error(\"ByteString constructor argument Array of integers must be -128 - 255 (\"+b+\")\");\n            // Java \"bytes\" are interpreted as 2's complement\n            //this._bytes[i] = (b < 128) ? b : -1 * ((b ^ 0xFF) + 1);\n            B_SET(this._bytes, i, b);\n        }\n        this._offset = 0;\n        this._length = B_LENGTH(this._bytes);\n    }\n    // ByteString(string, charset) - Convert a string. The ByteString will contain string encoded with charset.\n    else if ((arguments.length === 1 || (arguments.length === 2 && arguments[1] === undefined)) && typeof arguments[0] === \"string\") {\n        this._bytes     = B_ENCODE_DEFAULT(arguments[0]);\n        this._offset    = 0;\n        this._length    = B_LENGTH(this._bytes);\n    }\n    else if (arguments.length === 2 && typeof arguments[0] === \"string\" && typeof arguments[1] === \"string\") {\n        this._bytes     = B_ENCODE(arguments[0], arguments[1]);\n        this._offset    = 0;\n        this._length    = B_LENGTH(this._bytes);\n    }\n    // private: ByteString(bytes, offset, length)\n    else if (arguments.length === 3 && typeof arguments[1] === \"number\" && typeof arguments[2] === \"number\") {\n        this._bytes     = arguments[0];\n        this._offset    = arguments[1];\n        this._length    = arguments[2];\n    }\n    else {\n        var util = require(\"./util\");\n        throw new Error(\"Illegal arguments to ByteString constructor: \" + util.repr(arguments));\n    }\n    \n    if (engine.ByteStringWrapper)\n        return engine.ByteStringWrapper(this);\n    else\n        return this;\n};\n\nByteString.prototype = new Binary();\n\nByteString.prototype.__defineGetter__(\"length\", function() {\n    return this._length;\n});\nByteString.prototype.__defineSetter__(\"length\", function(length) {\n});\n\n// toByteArray() - Returns a byte for byte copy in a ByteArray.\n// toByteArray(sourceCharset, targetCharset) - Returns a transcoded copy in a ByteArray.\n//  - implemented on Binary\n\n// toByteString() - Returns itself, since there's no need to copy an immutable ByteString.\n// toByteString(sourceCharset, targetCharset) - Returns a transcoded copy.\n//  - implemented on Binary\n\n// toArray() - Returns an array containing the bytes as numbers.\n// toArray(charset) - Returns an array containing the decoded Unicode code points.\n//  - implemented on Binary\n\n// toString()\nByteString.prototype.toString = function(charset) {\n    if (charset)\n        return this.decodeToString(charset);\n        \n    return \"[ByteString \"+this._length+\"]\";\n};\n\n// decodeToString(charset) - Returns the decoded ByteArray as a string.\n//  - implemented on Binary\n\nByteString.prototype.byteAt =\nByteString.prototype.charAt = function(offset) {\n    var byteValue = this.get(offset);\n    \n    if (isNaN(byteValue))\n        return new ByteString();\n        \n    return new ByteString([byteValue]);\n};\n\n// indexOf() - implemented on Binary\n// lastIndexOf() - implemented on Binary\n\n// charCodeAt(offset)\nByteString.prototype.charCodeAt = Binary.prototype.get;\n\n// get(offset) - implemented on Binary\n\n// byteAt(offset) ByteString - implemented on Binary\n// charAt(offset) ByteString - implemented on Binary\n\n// split(delimiter, [options])\nByteString.prototype.split = function(delimiters, options) {\n    var options = options || {},\n        count = options.count === undefined ? -1 : options.count,\n        includeDelimiter = options.includeDelimiter || false;\n    \n    // standardize delimiters into an array of ByteStrings:\n    if (!Array.isArray(delimiters))\n        delimiters = [delimiters];\n        \n    delimiters = delimiters.map(function(delimiter) {\n        if (typeof delimiter === \"number\")\n            delimiter = [delimiter];\n        return new ByteString(delimiter);\n    });\n    \n    var components = [],\n        startOffset = this._offset,\n        currentOffset = this._offset;\n    \n    // loop until there's no more bytes to consume\n    bytes_loop :\n    while (currentOffset < this._offset + this._length) {\n        \n        // try each delimiter until we find a match\n        delimiters_loop :\n        for (var i = 0; i < delimiters.length; i++) {\n            var d = delimiters[i];\n            \n            for (var j = 0; j < d._length; j++) {\n                // reached the end of the bytes, OR bytes not equal\n                if (currentOffset + j > this._offset + this._length ||\n                    B_GET(this._bytes, currentOffset + j) !== B_GET(d._bytes, d._offset + j)) {\n                    continue delimiters_loop;\n                }\n            }\n            \n            // push the part before the delimiter\n            components.push(new ByteString(this._bytes, startOffset, currentOffset - startOffset));\n            \n            // optionally push the delimiter\n            if (includeDelimiter)\n                components.push(new ByteString(this._bytes, currentOffset, d._length))\n            \n            // reset the offsets\n            startOffset = currentOffset = currentOffset + d._length;\n            \n            continue bytes_loop;\n        }\n        \n        // if there was no match, increment currentOffset to try the next one\n        currentOffset++;\n    }\n    \n    // push the remaining part, if any\n    if (currentOffset > startOffset)\n        components.push(new ByteString(this._bytes, startOffset, currentOffset - startOffset));\n    \n    return components;\n};\n\n// slice()\n// slice(begin)\n// slice(begin, end)\nByteString.prototype.slice = function(begin, end) {\n    if (begin === undefined)\n        begin = 0;\n    else if (begin < 0)\n        begin = this._length + begin;\n        \n    if (end === undefined)\n        end = this._length;\n    else if (end < 0)\n        end = this._length + end;\n    \n    begin = Math.min(this._length, Math.max(0, begin));\n    end = Math.min(this._length, Math.max(0, end));\n    \n    return new ByteString(this._bytes, this._offset + begin, end - begin);\n};\n\n// substr(start)\n// substr(start, length)\nByteString.prototype.substr = function(start, length) {\n    if (start !== undefined) {\n        if (length !== undefined)\n            return this.slice(start);\n        else\n            return this.slice(start, start + length);\n    }\n    return this.slice();\n};\n\n// substring(first)\n// substring(first, last)\nByteString.prototype.substring = function(from, to) {\n    if (from !== undefined) {\n        if (to !== undefined)\n            return this.slice(Math.max(Math.min(from, this._length), 0));\n        else\n            return this.slice(Math.max(Math.min(from, this._length), 0),\n                              Math.max(Math.min(to, this._length), 0));\n    }\n    return this.slice();\n};\n\n// [] ByteString - TODO\n\n// toSource()\nByteString.prototype.toSource = function() {\n    return \"ByteString([\"+this.toArray().join(\",\")+\"])\";\n};\n\n/* ByteArray */\n\n// ByteArray() - New, empty ByteArray.\n// ByteArray(length) - New ByteArray filled with length zero bytes.\n// ByteArray(byteArray) - Copy byteArray.\n// ByteArray(byteString) - Copy contents of byteString.\n// ByteArray(arrayOfBytes) - Use numbers in arrayOfBytes as contents.\n//     Throws an exception if any element is outside the range 0...255 (TODO).\n// ByteArray(string, charset) - Create a ByteArray from a Javascript string, the result being encoded with charset.\nvar ByteArray = exports.ByteArray = function() {\n    if (!this instanceof ByteArray) {\n        if (arguments.length == 0)\n            return new ByteArray();\n        if (arguments.length == 1)\n            return new ByteArray(arguments[0]);\n        if (arguments.length == 2)\n            return new ByteArray(arguments[0], arguments[1]);\n        if (arguments.length == 3)\n            return new ByteArray(arguments[0], arguments[1], arguments[2]);\n    }\n\n    // ByteArray() - New, empty ByteArray.\n    if (arguments.length === 0) {\n        this._bytes     = B_ALLOC(0); // null;\n        this._offset    = 0;\n        this._length    = 0;\n    }\n    // ByteArray(length) - New ByteArray filled with length zero bytes.\n    else if (arguments.length === 1 && typeof arguments[0] === \"number\") {\n        this._bytes     = B_ALLOC(arguments[0]); // null;\n        this._offset    = 0;\n        this._length    = B_LENGTH(this._bytes);\n    }\n    // ByteArray(byteArray) - Copy byteArray.\n    // ByteArray(byteString) - Copy contents of byteString.\n    else if (arguments.length === 1 && (arguments[0] instanceof ByteArray || arguments[0] instanceof ByteString)) {\n        var byteArray = new ByteArray(arguments[0]._length);\n        B_COPY(arguments[0]._bytes, arguments[0]._offset, byteArray._bytes, byteArray._offset, byteArray._length);\n        return byteArray;\n    }\n    // ByteArray(arrayOfBytes) - Use numbers in arrayOfBytes as contents.\n    // Throws an exception if any element is outside the range 0...255 (TODO).\n    else if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        var array = arguments[0];\n        this._bytes = B_ALLOC(array.length);\n        for (var i = 0; i < array.length; i++) {\n            var b = array[i];\n            // If any element is outside the range 0...255, an exception (TODO) is thrown.\n            if (b < 0 || b > 0xFF)\n                throw new Error(\"ByteString constructor argument Array of integers must be 0 - 255 (\"+b+\")\");\n            // Java \"bytes\" are interpreted as 2's complement\n            //this._bytes[i] = (b < 128) ? b : -1 * ((b ^ 0xFF) + 1);\n            B_SET(this._bytes, i, b);\n        }\n        this._offset = 0;\n        this._length = B_LENGTH(this._bytes);\n    }\n    // ByteArray(string, charset) - Create a ByteArray from a Javascript string, the result being encoded with charset.\n    else if ((arguments.length === 1 || (arguments.length === 2 && arguments[1] === undefined)) && typeof arguments[0] === \"string\") {\n        this._bytes     = B_ENCODE_DEFAULT(arguments[0]);\n        this._offset    = 0;\n        this._length    = B_LENGTH(this._bytes);\n    }\n    else if (arguments.length === 2 && typeof arguments[0] === \"string\" && typeof arguments[1] === \"string\") {\n        this._bytes     = B_ENCODE(arguments[0], arguments[1]);\n        this._offset    = 0;\n        this._length    = B_LENGTH(this._bytes);\n    }\n    // private: ByteArray(bytes, offset, length)\n    else if (arguments.length === 3 && typeof arguments[1] === \"number\" && typeof arguments[2] === \"number\") {\n        this._bytes     = arguments[0];\n        this._offset    = arguments[1];\n        this._length    = arguments[2];\n    }\n    else\n        throw new Error(\"Illegal arguments to ByteString constructor: [\" +\n            Array.prototype.join.apply(arguments, [\",\"]) + \"] (\"+arguments.length+\")\");\n    \n    if (engine.ByteArrayWrapper)\n        return engine.ByteArrayWrapper(this);\n    else\n        return this;\n};\n\nByteArray.prototype = new Binary();\n\nByteArray.prototype.__defineGetter__(\"length\", function() {\n    return this._length;\n});\nByteArray.prototype.__defineSetter__(\"length\", function(length) {\n    if (typeof length !== \"number\")\n        return;\n    \n    // same length\n    if (length === this._length) {\n        return;\n    }\n    // new length is less, truncate\n    else if (length < this._length) {\n        this._length = length;\n    }\n    // new length is more, but fits without moving, just clear new bytes\n    else if (this._offset + length <= B_LENGTH(this._bytes)) {\n        B_FILL(this._bytes, this._length, this._offset + length - 1, 0);\n        this._length = length;\n    }\n    // new length is more, but fits if we shift to bottom, so do that.\n    else if (length <= B_LENGTH(this._bytes)) {\n        B_COPY(this._bytes, this._offset, this._bytes, 0, this._length);\n        this._offset = 0;\n        B_FILL(this._bytes, this._length, this._offset + length - 1, 0);\n        this._length = length;\n    }\n    // new length is more than the allocated bytes array, allocate a new one and copy the data\n    else {\n        var newBytes = B_ALLOC(length);\n        B_COPY(this._bytes, this._offset, newBytes, 0, this._length);\n        this._bytes = newBytes;\n        this._offset = 0;\n        this._length = length;\n    }\n});\n\n// FIXME: array notation for set and get\nByteArray.prototype.set = function(index, b) {\n    // If any element is outside the range 0...255, an exception (TODO) is thrown.\n    if (b < 0 || b > 0xFF)\n        throw new Error(\"ByteString constructor argument Array of integers must be 0 - 255 (\"+b+\")\");\n        \n    if (index < 0 || index >= this._length)\n        throw new Error(\"Out of range\");\n    \n    // Java \"bytes\" are interpreted as 2's complement\n    //this._bytes[this._offset + index] = (b < 128) ? b : -1 * ((b ^ 0xFF) + 1);\n    B_SET(this._bytes, this._offset + index, b);\n};\n\n// toArray()\n// toArray(charset)\n//  - implemented on Binary\n\n// toByteArray() - just a copy\n// toByteArray(sourceCharset, targetCharset) - transcoded\n//  - implemented on Binary\n\n// toByteString() - byte for byte copy\n// toByteString(sourceCharset, targetCharset) - transcoded\n//  - implemented on Binary\n\n// toString() - a string representation like \"[ByteArray 10]\"\n// toString(charset) - an alias for decodeToString(charset)\nByteArray.prototype.toString = function(charset) {\n    if (charset)\n        return this.decodeToString(charset);\n    \n    return \"[ByteArray \"+this._length+\"]\"; \n};\n\n// decodeToString(charset) - implemented on Binary\n\n// byteAt(offset) ByteString - Return the byte at offset as a ByteString.\n//  - implemented on Binary\n\n// get(offset) Number - Return the byte at offset as a Number.\n//  - implemented on Binary\n\n// concat(other ByteArray|ByteString|Array)\n// TODO: I'm assuming Array means an array of ByteStrings/ByteArrays, not an array of integers.\nByteArray.prototype.concat = function() {\n    var components = [this],\n        totalLength = this._length;\n    \n    for (var i = 0; i < arguments.length; i++) {\n        var component = Array.isArray(arguments[i]) ? arguments[i] : [arguments[i]];\n        \n        for (var j = 0; j < component.length; j++) {\n            var subcomponent = component[j];\n            if (!(subcomponent instanceof ByteString) && !(subcomponent instanceof ByteArray))\n                throw \"Arguments to ByteArray.concat() must be ByteStrings, ByteArrays, or Arrays of those.\";\n            \n            components.push(subcomponent);\n            totalLength += subcomponent.length;\n        }\n    }\n    \n    var result = new ByteArray(totalLength),\n        offset = 0;\n    \n    components.forEach(function(component) {\n        B_COPY(component._bytes, component._offset, result._bytes, offset, component._length);\n        offset += component._length;\n    });\n    \n    return result;\n};\n\n// pop() -> byte Number\nByteArray.prototype.pop = function() {\n    if (this._length === 0)\n        return undefined;\n    \n    this._length--;\n    \n    return B_GET(this._bytes, this._offset + this._length);\n};\n\n// push(...variadic Numbers...)-> count Number\nByteArray.prototype.push = function() {\n    var length, newLength = this.length += length = arguments.length;\n    try {\n        for (var i = 0; i < length; i++)\n            this.set(newLength - length + i, arguments[i]);\n    } catch (e) {\n        this.length -= length;\n        throw e;\n    }\n    return newLength;\n};\n\n// extendRight(...variadic Numbers / Arrays / ByteArrays / ByteStrings ...)\nByteArray.prototype.extendRight = function() {\n    throw \"NYI\";\n};\n\n// shift() -> byte Number\nByteArray.prototype.shift = function() {\n    if (this._length === 0)\n        return undefined;\n    \n    this._length--;\n    this._offset++;\n    \n    return B_GET(this._bytes, this._offset - 1);\n};\n\n// unshift(...variadic Numbers...) -> count Number\nByteArray.prototype.unshift = function() {\n    var copy = this.slice();\n    this.length = 0;\n    try {\n        this.push.apply(this, arguments);\n        this.push.apply(this, copy.toArray());\n        return this.length;\n    } catch(e) {\n        B_COPY(copy._bytes, copy._offset, this._bytes, this._offset, copy.length);\n        this.length = copy.length;\n        throw e;\n    }\n};\n\n// extendLeft(...variadic Numbers / Arrays / ByteArrays / ByteStrings ...)\nByteArray.prototype.extendLeft = function() {\n    throw \"NYI\";\n};\n\n// reverse() in place reversal\nByteArray.prototype.reverse = function() {\n    // \"limit\" is halfway, rounded down. \"top\" is the last index.\n    var limit = Math.floor(this._length/2) + this._offset,\n        top = this._length - 1;\n        \n    // swap each pair of bytes, up to the halfway point\n    for (var i = this._offset; i < limit; i++) {\n        var tmp = B_GET(this._bytes, i);\n        B_SET(this._bytes, i, B_GET(this._bytes, top - i));\n        B_SET(this._bytes, top - i, tmp);\n    }\n    \n    return this;\n};\n\n// slice()\nByteArray.prototype.slice = function() {\n    return new ByteArray(ByteString.prototype.slice.apply(this, arguments));\n};\n\nvar numericCompareFunction = function(o1, o2) { return o1 - o2; };\n\n// sort([compareFunction])\nByteArray.prototype.sort = function(compareFunction) {\n    // FIXME: inefficient?\n    \n    var array = this.toArray();\n    \n    if (arguments.length)\n        array.sort(compareFunction);\n    else\n        array.sort(numericCompareFunction);\n    \n    for (var i = 0; i < array.length; i++)\n        this.set(i, array[i]);\n};\n\n// splice()\nByteArray.prototype.splice = function(index, howMany /*, elem1, elem2 */) {\n    if (index === undefined) return;\n    if (index < 0) index += this.length;\n    if (howMany === undefined) howMany = this._length - index;\n    var end = index + howMany;\n    var remove = this.slice(index, end);\n    var keep = this.slice(end);\n    var inject = Array.prototype.slice.call(arguments, 2);\n    this._length = index;\n    this.push.apply(this, inject);\n    this.push.apply(this, keep.toArray());\n    return remove;\n};\n\n// indexOf() - implemented on Binary\n// lastIndexOf() - implemented on Binary\n\n// split() Returns an array of ByteArrays instead of ByteStrings.\nByteArray.prototype.split = function() {\n    var components = ByteString.prototype.split.apply(this.toByteString(), arguments);\n    \n    // convert ByteStrings to ByteArrays\n    for (var i = 0; i < components.length; i++) {\n        // we know we can use these byte buffers directly since we copied them above\n        components[i] = new ByteArray(components[i]._bytes, components[i]._offset, components[i]._length);\n    }\n    \n    return components;\n};\n\n// filter(callback[, thisObject])\nByteArray.prototype.filter = function(callback, thisObject) {\n    var result = new ByteArray(this._length);\n    for (var i = 0, length = this._length; i < length; i++) {\n        var value = this.get(i);\n        if (callback.apply(thisObject, [value, i, this]))\n            result.push(value);\n    }\n    return result;\n};\n\n// forEach(callback[, thisObject]);\nByteArray.prototype.forEach = function(callback, thisObject) {\n    for (var i = 0, length = this._length; i < length; i++)\n        callback.apply(thisObject, [this.get(i), i, this]);\n};\n\n// every(callback[, thisObject])\nByteArray.prototype.every = function(callback, thisObject) {\n    for (var i = 0, length = this._length; i < length; i++)\n        if (!callback.apply(thisObject, [this.get(i), i, this]))\n            return false;\n    return true;\n};\n\n// some(callback[, thisObject])\nByteArray.prototype.some = function(callback, thisObject) {\n    for (var i = 0, length = this._length; i < length; i++)\n        if (callback.apply(thisObject, [this.get(i), i, this]))\n            return true;\n    return false;\n};\n\n// map(callback[, thisObject]);\nByteArray.prototype.map = function(callback, thisObject) {\n    var result = new ByteArray(this._length);\n    for (var i = 0, length = this._length; i < length; i++)\n        result.set(i, callback.apply(thisObject, [this.get(i), i, this]));\n    return result;\n};\n\n// reduce(callback[, initialValue])\nByteArray.prototype.reduce = function(callback, initialValue) {\n    var value = initialValue;\n    for (var i = 0, length = this._length; i < length; i++)\n        value = callback(value, this.get(i), i, this);\n    return value;\n};\n\n// reduceRight(callback[, initialValue])\nByteArray.prototype.reduceRight = function(callback, initialValue) {\n    var value = initialValue;\n    for (var i = this._length-1; i > 0; i--)\n        value = callback(value, this.get(i), i, this);\n    return value;\n};\n\n// displace(begin, end, values/ByteStrings/ByteArrays/Arrays...) -> length\n//     begin/end are specified like for slice. Can be used like splice but does not return the removed elements.\nByteArray.prototype.displace = function(begin, end) {\n    throw \"NYI\";\n};\n\n// toSource() returns a string like \"ByteArray([])\" for a null byte-array.\nByteArray.prototype.toSource = function() {\n    return \"ByteArray([\"+this.toArray().join(\",\")+\"])\";\n};\n\n",
              "globals": {
                "engine": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "B_ALLOC": {
                  "type": "assign"
                },
                "B_LENGTH": {
                  "type": "assign"
                },
                "B_GET": {
                  "type": "assign"
                },
                "B_SET": {
                  "type": "assign"
                },
                "B_FILL": {
                  "type": "assign"
                },
                "B_COPY": {
                  "type": "assign"
                },
                "B_DECODE": {
                  "type": "assign"
                },
                "B_ENCODE": {
                  "type": "assign"
                },
                "B_DECODE_DEFAULT": {
                  "type": "assign"
                },
                "B_ENCODE_DEFAULT": {
                  "type": "assign"
                },
                "B_TRANSCODE": {
                  "type": "assign"
                },
                "Binary": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                },
                "i": {
                  "type": "reference"
                },
                "ByteString": {
                  "type": "reference"
                },
                "Array": {
                  "type": "reference"
                },
                "isNaN": {
                  "type": "call"
                },
                "Math": {
                  "type": "reference"
                },
                "ByteArray": {
                  "type": "assign"
                },
                "numericCompareFunction": {
                  "type": "assign"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "./platform/node/binary": {
                    "where": "inline"
                  },
                  "./util": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../pinf-bridgelib-js/lib';",
              "code": "function(require, exports, module) {var __dirname = '../../pinf-bridgelib-js/lib';\n\n/* Binary */\n// -- tlrobinson Tom Robinson\n// -- gozala Irakli Gozalishvili\n// -- tschaub\n// -- nrstott Nathan Stott\n\n//var engine = require(\"./platform/{platform}/binary\"),\nvar engine = require(\"./platform/node/binary\"),\n    B_ALLOC = engine.B_ALLOC,\n    B_LENGTH = engine.B_LENGTH,\n    B_GET = engine.B_GET,\n    B_SET = engine.B_SET,\n    B_FILL = engine.B_FILL,\n    B_COPY = engine.B_COPY,\n    B_DECODE = engine.B_DECODE,\n    B_ENCODE = engine.B_ENCODE,\n    B_DECODE_DEFAULT = engine.B_DECODE_DEFAULT,\n    B_ENCODE_DEFAULT = engine.B_ENCODE_DEFAULT,\n    B_TRANSCODE = engine.B_TRANSCODE;\n    \nvar Binary = exports.Binary = function() {\n    // this._bytes\n    // this._offset\n    // this._length\n};\n/*\nObject.defineProperty(Binary.prototype, \"length\", {\n    \"get\": function () {\n        return this._length;\n    },\n    \"enumerable\": false,\n    \"configurable\": false\n});\n*/\n// toArray() - n array of the byte values\n// toArray(charset) - an array of the code points, decoded\nBinary.prototype.toArray = function(charset) {\n    if (arguments.length === 0) {\n        var array = new Array(this._length);\n        \n        for (var i = 0; i < this._length; i++)\n            array[i] = this.get(i);\n        \n        return array;\n    }\n    else if (arguments.length === 1) {\n        var string = B_DECODE(this._bytes, this._offset, this._length, charset),\n            length = string.length,\n            array = new Array(length);\n        \n        for (var i = 0; i < length; i++)\n            array[i] = string.charCodeAt(i);\n        \n        return array;\n    }\n    else\n        throw new Error(\"Illegal arguments to toArray()\");\n};\n\n// toByteArray() - just a copy\n// toByteArray(sourceCharset, targetCharset) - transcoded\nBinary.prototype.toByteArray = function(sourceCodec, targetCodec) {\n    if (arguments.length < 2)\n        return new ByteArray(this);\n    else if (arguments.length === 2 && typeof sourceCodec === \"string\" && typeof targetCodec === \"string\") {\n        var bytes = B_TRANSCODE(this._bytes, this._offset, this._length, sourceCodec, targetCodec);\n        return new ByteArray(bytes, 0, B_LENGTH(bytes));\n    }\n    \n    throw new Error(\"Illegal arguments to ByteArray toByteArray\");\n};\n\n// toByteString() - byte for byte copy\n// toByteString(sourceCharset, targetCharset) - transcoded\nBinary.prototype.toByteString = function(sourceCodec, targetCodec) {\n    if (arguments.length < 2)\n        return new ByteString(this);\n    else if (arguments.length === 2 && typeof sourceCodec === \"string\" && typeof targetCodec === \"string\") {\n        var bytes = B_TRANSCODE(this._bytes, this._offset, this._length, sourceCodec, targetCodec);\n        return new ByteString(bytes, 0, B_LENGTH(bytes));\n    }\n    \n    throw new Error(\"Illegal arguments to ByteArray toByteString\");\n};\n\n// decodeToString()\n// decodeToString(charset) - returns a String from its decoded bytes in a given charset. If no charset is provided, or if the charset is \"undefined\", assumes the default system encoding.\n// decodeToString(number) - returns a String from its decoded bytes in a given base, like 64, 32, 16, 8, 2\nBinary.prototype.decodeToString = function(charset) {\n    if (charset) {\n        if (typeof charset == \"number\")\n            return require(\"./base\" + charset).encode(this);\n        else if (/^base/.test(charset))\n            return require(charset).encode(this);\n        else\n            return B_DECODE(this._bytes, this._offset, this._length, charset);\n    }\n    return B_DECODE_DEFAULT(this._bytes, this._offset, this._length);\n};\n\n// get(offset) - Return the byte at offset as a Number.\nBinary.prototype.get = function(offset) {\n    if (offset < 0 || offset >= this._length)\n        return NaN;\n    \n    //var b = this._bytes[this._offset + offset];\n    //return (b >= 0) ? b : -1 * ((b ^ 0xFF) + 1);\n    return B_GET(this._bytes, this._offset + offset)\n};\n\nBinary.prototype.indexOf = function(byteValue, start, stop) {\n    // HACK: use ByteString's slice since we know we won't be modifying result\n    var array = ByteString.prototype.slice.apply(this, [start, stop]).toArray(),\n        result = array.indexOf(byteValue);\n    return (result < 0) ? -1 : result + (start || 0);\n};\n\nBinary.prototype.lastIndexOf = function(byteValue, start, stop) {\n    // HACK: use ByteString's slice since we know we won't be modifying result\n    var array = ByteString.prototype.slice.apply(this, [start, stop]).toArray(),\n        result = array.lastIndexOf(byteValue);\n    return (result < 0) ? -1 : result + (start || 0);\n};\n\n// valueOf()\nBinary.prototype.valueOf = function() {\n    return this;\n};\n\n/* ByteString */\n\nvar ByteString = exports.ByteString = function() {\n    if (!(this instanceof ByteString)) {\n        if (arguments.length == 0)\n            return new ByteString();\n        if (arguments.length == 1)\n            return new ByteString(arguments[0]);\n        if (arguments.length == 2)\n            return new ByteString(arguments[0], arguments[1]);\n        if (arguments.length == 3)\n            return new ByteString(arguments[0], arguments[1], arguments[2]);\n    }\n\n    // ByteString() - Construct an empty byte string.\n    if (arguments.length === 0) {\n        this._bytes     = B_ALLOC(0); // null;\n        this._offset    = 0;\n        this._length    = 0;\n    }\n    // ByteString(byteString) - Copies byteString.\n    else if (arguments.length === 1 && arguments[0] instanceof ByteString) {\n        return arguments[0];\n    }\n    // ByteString(byteArray) - Use the contents of byteArray.\n    else if (arguments.length === 1 && arguments[0] instanceof ByteArray) {\n        var copy = arguments[0].toByteArray();\n        this._bytes     = copy._bytes;\n        this._offset    = copy._offset;\n        this._length    = copy._length;\n    }\n    // ByteString(arrayOfNumbers) - Use the numbers in arrayOfNumbers as the bytes.\n    else if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        var array = arguments[0];\n        this._bytes = B_ALLOC(array.length);\n        for (var i = 0; i < array.length; i++) {\n            var b = array[i];\n            // If any element is outside the range 0...255, an exception (TODO) is thrown.\n            if (b < -0x80 || b > 0xFF)\n                throw new Error(\"ByteString constructor argument Array of integers must be -128 - 255 (\"+b+\")\");\n            // Java \"bytes\" are interpreted as 2's complement\n            //this._bytes[i] = (b < 128) ? b : -1 * ((b ^ 0xFF) + 1);\n            B_SET(this._bytes, i, b);\n        }\n        this._offset = 0;\n        this._length = B_LENGTH(this._bytes);\n    }\n    // ByteString(string, charset) - Convert a string. The ByteString will contain string encoded with charset.\n    else if ((arguments.length === 1 || (arguments.length === 2 && arguments[1] === undefined)) && typeof arguments[0] === \"string\") {\n        this._bytes     = B_ENCODE_DEFAULT(arguments[0]);\n        this._offset    = 0;\n        this._length    = B_LENGTH(this._bytes);\n    }\n    else if (arguments.length === 2 && typeof arguments[0] === \"string\" && typeof arguments[1] === \"string\") {\n        this._bytes     = B_ENCODE(arguments[0], arguments[1]);\n        this._offset    = 0;\n        this._length    = B_LENGTH(this._bytes);\n    }\n    // private: ByteString(bytes, offset, length)\n    else if (arguments.length === 3 && typeof arguments[1] === \"number\" && typeof arguments[2] === \"number\") {\n        this._bytes     = arguments[0];\n        this._offset    = arguments[1];\n        this._length    = arguments[2];\n    }\n    else {\n        var util = require(\"./util\");\n        throw new Error(\"Illegal arguments to ByteString constructor: \" + util.repr(arguments));\n    }\n    \n    if (engine.ByteStringWrapper)\n        return engine.ByteStringWrapper(this);\n    else\n        return this;\n};\n\nByteString.prototype = new Binary();\n\nByteString.prototype.__defineGetter__(\"length\", function() {\n    return this._length;\n});\nByteString.prototype.__defineSetter__(\"length\", function(length) {\n});\n\n// toByteArray() - Returns a byte for byte copy in a ByteArray.\n// toByteArray(sourceCharset, targetCharset) - Returns a transcoded copy in a ByteArray.\n//  - implemented on Binary\n\n// toByteString() - Returns itself, since there's no need to copy an immutable ByteString.\n// toByteString(sourceCharset, targetCharset) - Returns a transcoded copy.\n//  - implemented on Binary\n\n// toArray() - Returns an array containing the bytes as numbers.\n// toArray(charset) - Returns an array containing the decoded Unicode code points.\n//  - implemented on Binary\n\n// toString()\nByteString.prototype.toString = function(charset) {\n    if (charset)\n        return this.decodeToString(charset);\n        \n    return \"[ByteString \"+this._length+\"]\";\n};\n\n// decodeToString(charset) - Returns the decoded ByteArray as a string.\n//  - implemented on Binary\n\nByteString.prototype.byteAt =\nByteString.prototype.charAt = function(offset) {\n    var byteValue = this.get(offset);\n    \n    if (isNaN(byteValue))\n        return new ByteString();\n        \n    return new ByteString([byteValue]);\n};\n\n// indexOf() - implemented on Binary\n// lastIndexOf() - implemented on Binary\n\n// charCodeAt(offset)\nByteString.prototype.charCodeAt = Binary.prototype.get;\n\n// get(offset) - implemented on Binary\n\n// byteAt(offset) ByteString - implemented on Binary\n// charAt(offset) ByteString - implemented on Binary\n\n// split(delimiter, [options])\nByteString.prototype.split = function(delimiters, options) {\n    var options = options || {},\n        count = options.count === undefined ? -1 : options.count,\n        includeDelimiter = options.includeDelimiter || false;\n    \n    // standardize delimiters into an array of ByteStrings:\n    if (!Array.isArray(delimiters))\n        delimiters = [delimiters];\n        \n    delimiters = delimiters.map(function(delimiter) {\n        if (typeof delimiter === \"number\")\n            delimiter = [delimiter];\n        return new ByteString(delimiter);\n    });\n    \n    var components = [],\n        startOffset = this._offset,\n        currentOffset = this._offset;\n    \n    // loop until there's no more bytes to consume\n    bytes_loop :\n    while (currentOffset < this._offset + this._length) {\n        \n        // try each delimiter until we find a match\n        delimiters_loop :\n        for (var i = 0; i < delimiters.length; i++) {\n            var d = delimiters[i];\n            \n            for (var j = 0; j < d._length; j++) {\n                // reached the end of the bytes, OR bytes not equal\n                if (currentOffset + j > this._offset + this._length ||\n                    B_GET(this._bytes, currentOffset + j) !== B_GET(d._bytes, d._offset + j)) {\n                    continue delimiters_loop;\n                }\n            }\n            \n            // push the part before the delimiter\n            components.push(new ByteString(this._bytes, startOffset, currentOffset - startOffset));\n            \n            // optionally push the delimiter\n            if (includeDelimiter)\n                components.push(new ByteString(this._bytes, currentOffset, d._length))\n            \n            // reset the offsets\n            startOffset = currentOffset = currentOffset + d._length;\n            \n            continue bytes_loop;\n        }\n        \n        // if there was no match, increment currentOffset to try the next one\n        currentOffset++;\n    }\n    \n    // push the remaining part, if any\n    if (currentOffset > startOffset)\n        components.push(new ByteString(this._bytes, startOffset, currentOffset - startOffset));\n    \n    return components;\n};\n\n// slice()\n// slice(begin)\n// slice(begin, end)\nByteString.prototype.slice = function(begin, end) {\n    if (begin === undefined)\n        begin = 0;\n    else if (begin < 0)\n        begin = this._length + begin;\n        \n    if (end === undefined)\n        end = this._length;\n    else if (end < 0)\n        end = this._length + end;\n    \n    begin = Math.min(this._length, Math.max(0, begin));\n    end = Math.min(this._length, Math.max(0, end));\n    \n    return new ByteString(this._bytes, this._offset + begin, end - begin);\n};\n\n// substr(start)\n// substr(start, length)\nByteString.prototype.substr = function(start, length) {\n    if (start !== undefined) {\n        if (length !== undefined)\n            return this.slice(start);\n        else\n            return this.slice(start, start + length);\n    }\n    return this.slice();\n};\n\n// substring(first)\n// substring(first, last)\nByteString.prototype.substring = function(from, to) {\n    if (from !== undefined) {\n        if (to !== undefined)\n            return this.slice(Math.max(Math.min(from, this._length), 0));\n        else\n            return this.slice(Math.max(Math.min(from, this._length), 0),\n                              Math.max(Math.min(to, this._length), 0));\n    }\n    return this.slice();\n};\n\n// [] ByteString - TODO\n\n// toSource()\nByteString.prototype.toSource = function() {\n    return \"ByteString([\"+this.toArray().join(\",\")+\"])\";\n};\n\n/* ByteArray */\n\n// ByteArray() - New, empty ByteArray.\n// ByteArray(length) - New ByteArray filled with length zero bytes.\n// ByteArray(byteArray) - Copy byteArray.\n// ByteArray(byteString) - Copy contents of byteString.\n// ByteArray(arrayOfBytes) - Use numbers in arrayOfBytes as contents.\n//     Throws an exception if any element is outside the range 0...255 (TODO).\n// ByteArray(string, charset) - Create a ByteArray from a Javascript string, the result being encoded with charset.\nvar ByteArray = exports.ByteArray = function() {\n    if (!this instanceof ByteArray) {\n        if (arguments.length == 0)\n            return new ByteArray();\n        if (arguments.length == 1)\n            return new ByteArray(arguments[0]);\n        if (arguments.length == 2)\n            return new ByteArray(arguments[0], arguments[1]);\n        if (arguments.length == 3)\n            return new ByteArray(arguments[0], arguments[1], arguments[2]);\n    }\n\n    // ByteArray() - New, empty ByteArray.\n    if (arguments.length === 0) {\n        this._bytes     = B_ALLOC(0); // null;\n        this._offset    = 0;\n        this._length    = 0;\n    }\n    // ByteArray(length) - New ByteArray filled with length zero bytes.\n    else if (arguments.length === 1 && typeof arguments[0] === \"number\") {\n        this._bytes     = B_ALLOC(arguments[0]); // null;\n        this._offset    = 0;\n        this._length    = B_LENGTH(this._bytes);\n    }\n    // ByteArray(byteArray) - Copy byteArray.\n    // ByteArray(byteString) - Copy contents of byteString.\n    else if (arguments.length === 1 && (arguments[0] instanceof ByteArray || arguments[0] instanceof ByteString)) {\n        var byteArray = new ByteArray(arguments[0]._length);\n        B_COPY(arguments[0]._bytes, arguments[0]._offset, byteArray._bytes, byteArray._offset, byteArray._length);\n        return byteArray;\n    }\n    // ByteArray(arrayOfBytes) - Use numbers in arrayOfBytes as contents.\n    // Throws an exception if any element is outside the range 0...255 (TODO).\n    else if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        var array = arguments[0];\n        this._bytes = B_ALLOC(array.length);\n        for (var i = 0; i < array.length; i++) {\n            var b = array[i];\n            // If any element is outside the range 0...255, an exception (TODO) is thrown.\n            if (b < 0 || b > 0xFF)\n                throw new Error(\"ByteString constructor argument Array of integers must be 0 - 255 (\"+b+\")\");\n            // Java \"bytes\" are interpreted as 2's complement\n            //this._bytes[i] = (b < 128) ? b : -1 * ((b ^ 0xFF) + 1);\n            B_SET(this._bytes, i, b);\n        }\n        this._offset = 0;\n        this._length = B_LENGTH(this._bytes);\n    }\n    // ByteArray(string, charset) - Create a ByteArray from a Javascript string, the result being encoded with charset.\n    else if ((arguments.length === 1 || (arguments.length === 2 && arguments[1] === undefined)) && typeof arguments[0] === \"string\") {\n        this._bytes     = B_ENCODE_DEFAULT(arguments[0]);\n        this._offset    = 0;\n        this._length    = B_LENGTH(this._bytes);\n    }\n    else if (arguments.length === 2 && typeof arguments[0] === \"string\" && typeof arguments[1] === \"string\") {\n        this._bytes     = B_ENCODE(arguments[0], arguments[1]);\n        this._offset    = 0;\n        this._length    = B_LENGTH(this._bytes);\n    }\n    // private: ByteArray(bytes, offset, length)\n    else if (arguments.length === 3 && typeof arguments[1] === \"number\" && typeof arguments[2] === \"number\") {\n        this._bytes     = arguments[0];\n        this._offset    = arguments[1];\n        this._length    = arguments[2];\n    }\n    else\n        throw new Error(\"Illegal arguments to ByteString constructor: [\" +\n            Array.prototype.join.apply(arguments, [\",\"]) + \"] (\"+arguments.length+\")\");\n    \n    if (engine.ByteArrayWrapper)\n        return engine.ByteArrayWrapper(this);\n    else\n        return this;\n};\n\nByteArray.prototype = new Binary();\n\nByteArray.prototype.__defineGetter__(\"length\", function() {\n    return this._length;\n});\nByteArray.prototype.__defineSetter__(\"length\", function(length) {\n    if (typeof length !== \"number\")\n        return;\n    \n    // same length\n    if (length === this._length) {\n        return;\n    }\n    // new length is less, truncate\n    else if (length < this._length) {\n        this._length = length;\n    }\n    // new length is more, but fits without moving, just clear new bytes\n    else if (this._offset + length <= B_LENGTH(this._bytes)) {\n        B_FILL(this._bytes, this._length, this._offset + length - 1, 0);\n        this._length = length;\n    }\n    // new length is more, but fits if we shift to bottom, so do that.\n    else if (length <= B_LENGTH(this._bytes)) {\n        B_COPY(this._bytes, this._offset, this._bytes, 0, this._length);\n        this._offset = 0;\n        B_FILL(this._bytes, this._length, this._offset + length - 1, 0);\n        this._length = length;\n    }\n    // new length is more than the allocated bytes array, allocate a new one and copy the data\n    else {\n        var newBytes = B_ALLOC(length);\n        B_COPY(this._bytes, this._offset, newBytes, 0, this._length);\n        this._bytes = newBytes;\n        this._offset = 0;\n        this._length = length;\n    }\n});\n\n// FIXME: array notation for set and get\nByteArray.prototype.set = function(index, b) {\n    // If any element is outside the range 0...255, an exception (TODO) is thrown.\n    if (b < 0 || b > 0xFF)\n        throw new Error(\"ByteString constructor argument Array of integers must be 0 - 255 (\"+b+\")\");\n        \n    if (index < 0 || index >= this._length)\n        throw new Error(\"Out of range\");\n    \n    // Java \"bytes\" are interpreted as 2's complement\n    //this._bytes[this._offset + index] = (b < 128) ? b : -1 * ((b ^ 0xFF) + 1);\n    B_SET(this._bytes, this._offset + index, b);\n};\n\n// toArray()\n// toArray(charset)\n//  - implemented on Binary\n\n// toByteArray() - just a copy\n// toByteArray(sourceCharset, targetCharset) - transcoded\n//  - implemented on Binary\n\n// toByteString() - byte for byte copy\n// toByteString(sourceCharset, targetCharset) - transcoded\n//  - implemented on Binary\n\n// toString() - a string representation like \"[ByteArray 10]\"\n// toString(charset) - an alias for decodeToString(charset)\nByteArray.prototype.toString = function(charset) {\n    if (charset)\n        return this.decodeToString(charset);\n    \n    return \"[ByteArray \"+this._length+\"]\"; \n};\n\n// decodeToString(charset) - implemented on Binary\n\n// byteAt(offset) ByteString - Return the byte at offset as a ByteString.\n//  - implemented on Binary\n\n// get(offset) Number - Return the byte at offset as a Number.\n//  - implemented on Binary\n\n// concat(other ByteArray|ByteString|Array)\n// TODO: I'm assuming Array means an array of ByteStrings/ByteArrays, not an array of integers.\nByteArray.prototype.concat = function() {\n    var components = [this],\n        totalLength = this._length;\n    \n    for (var i = 0; i < arguments.length; i++) {\n        var component = Array.isArray(arguments[i]) ? arguments[i] : [arguments[i]];\n        \n        for (var j = 0; j < component.length; j++) {\n            var subcomponent = component[j];\n            if (!(subcomponent instanceof ByteString) && !(subcomponent instanceof ByteArray))\n                throw \"Arguments to ByteArray.concat() must be ByteStrings, ByteArrays, or Arrays of those.\";\n            \n            components.push(subcomponent);\n            totalLength += subcomponent.length;\n        }\n    }\n    \n    var result = new ByteArray(totalLength),\n        offset = 0;\n    \n    components.forEach(function(component) {\n        B_COPY(component._bytes, component._offset, result._bytes, offset, component._length);\n        offset += component._length;\n    });\n    \n    return result;\n};\n\n// pop() -> byte Number\nByteArray.prototype.pop = function() {\n    if (this._length === 0)\n        return undefined;\n    \n    this._length--;\n    \n    return B_GET(this._bytes, this._offset + this._length);\n};\n\n// push(...variadic Numbers...)-> count Number\nByteArray.prototype.push = function() {\n    var length, newLength = this.length += length = arguments.length;\n    try {\n        for (var i = 0; i < length; i++)\n            this.set(newLength - length + i, arguments[i]);\n    } catch (e) {\n        this.length -= length;\n        throw e;\n    }\n    return newLength;\n};\n\n// extendRight(...variadic Numbers / Arrays / ByteArrays / ByteStrings ...)\nByteArray.prototype.extendRight = function() {\n    throw \"NYI\";\n};\n\n// shift() -> byte Number\nByteArray.prototype.shift = function() {\n    if (this._length === 0)\n        return undefined;\n    \n    this._length--;\n    this._offset++;\n    \n    return B_GET(this._bytes, this._offset - 1);\n};\n\n// unshift(...variadic Numbers...) -> count Number\nByteArray.prototype.unshift = function() {\n    var copy = this.slice();\n    this.length = 0;\n    try {\n        this.push.apply(this, arguments);\n        this.push.apply(this, copy.toArray());\n        return this.length;\n    } catch(e) {\n        B_COPY(copy._bytes, copy._offset, this._bytes, this._offset, copy.length);\n        this.length = copy.length;\n        throw e;\n    }\n};\n\n// extendLeft(...variadic Numbers / Arrays / ByteArrays / ByteStrings ...)\nByteArray.prototype.extendLeft = function() {\n    throw \"NYI\";\n};\n\n// reverse() in place reversal\nByteArray.prototype.reverse = function() {\n    // \"limit\" is halfway, rounded down. \"top\" is the last index.\n    var limit = Math.floor(this._length/2) + this._offset,\n        top = this._length - 1;\n        \n    // swap each pair of bytes, up to the halfway point\n    for (var i = this._offset; i < limit; i++) {\n        var tmp = B_GET(this._bytes, i);\n        B_SET(this._bytes, i, B_GET(this._bytes, top - i));\n        B_SET(this._bytes, top - i, tmp);\n    }\n    \n    return this;\n};\n\n// slice()\nByteArray.prototype.slice = function() {\n    return new ByteArray(ByteString.prototype.slice.apply(this, arguments));\n};\n\nvar numericCompareFunction = function(o1, o2) { return o1 - o2; };\n\n// sort([compareFunction])\nByteArray.prototype.sort = function(compareFunction) {\n    // FIXME: inefficient?\n    \n    var array = this.toArray();\n    \n    if (arguments.length)\n        array.sort(compareFunction);\n    else\n        array.sort(numericCompareFunction);\n    \n    for (var i = 0; i < array.length; i++)\n        this.set(i, array[i]);\n};\n\n// splice()\nByteArray.prototype.splice = function(index, howMany /*, elem1, elem2 */) {\n    if (index === undefined) return;\n    if (index < 0) index += this.length;\n    if (howMany === undefined) howMany = this._length - index;\n    var end = index + howMany;\n    var remove = this.slice(index, end);\n    var keep = this.slice(end);\n    var inject = Array.prototype.slice.call(arguments, 2);\n    this._length = index;\n    this.push.apply(this, inject);\n    this.push.apply(this, keep.toArray());\n    return remove;\n};\n\n// indexOf() - implemented on Binary\n// lastIndexOf() - implemented on Binary\n\n// split() Returns an array of ByteArrays instead of ByteStrings.\nByteArray.prototype.split = function() {\n    var components = ByteString.prototype.split.apply(this.toByteString(), arguments);\n    \n    // convert ByteStrings to ByteArrays\n    for (var i = 0; i < components.length; i++) {\n        // we know we can use these byte buffers directly since we copied them above\n        components[i] = new ByteArray(components[i]._bytes, components[i]._offset, components[i]._length);\n    }\n    \n    return components;\n};\n\n// filter(callback[, thisObject])\nByteArray.prototype.filter = function(callback, thisObject) {\n    var result = new ByteArray(this._length);\n    for (var i = 0, length = this._length; i < length; i++) {\n        var value = this.get(i);\n        if (callback.apply(thisObject, [value, i, this]))\n            result.push(value);\n    }\n    return result;\n};\n\n// forEach(callback[, thisObject]);\nByteArray.prototype.forEach = function(callback, thisObject) {\n    for (var i = 0, length = this._length; i < length; i++)\n        callback.apply(thisObject, [this.get(i), i, this]);\n};\n\n// every(callback[, thisObject])\nByteArray.prototype.every = function(callback, thisObject) {\n    for (var i = 0, length = this._length; i < length; i++)\n        if (!callback.apply(thisObject, [this.get(i), i, this]))\n            return false;\n    return true;\n};\n\n// some(callback[, thisObject])\nByteArray.prototype.some = function(callback, thisObject) {\n    for (var i = 0, length = this._length; i < length; i++)\n        if (callback.apply(thisObject, [this.get(i), i, this]))\n            return true;\n    return false;\n};\n\n// map(callback[, thisObject]);\nByteArray.prototype.map = function(callback, thisObject) {\n    var result = new ByteArray(this._length);\n    for (var i = 0, length = this._length; i < length; i++)\n        result.set(i, callback.apply(thisObject, [this.get(i), i, this]));\n    return result;\n};\n\n// reduce(callback[, initialValue])\nByteArray.prototype.reduce = function(callback, initialValue) {\n    var value = initialValue;\n    for (var i = 0, length = this._length; i < length; i++)\n        value = callback(value, this.get(i), i, this);\n    return value;\n};\n\n// reduceRight(callback[, initialValue])\nByteArray.prototype.reduceRight = function(callback, initialValue) {\n    var value = initialValue;\n    for (var i = this._length-1; i > 0; i--)\n        value = callback(value, this.get(i), i, this);\n    return value;\n};\n\n// displace(begin, end, values/ByteStrings/ByteArrays/Arrays...) -> length\n//     begin/end are specified like for slice. Can be used like splice but does not return the removed elements.\nByteArray.prototype.displace = function(begin, end) {\n    throw \"NYI\";\n};\n\n// toSource() returns a string like \"ByteArray([])\" for a null byte-array.\nByteArray.prototype.toSource = function() {\n    return \"ByteArray([\"+this.toArray().join(\",\")+\"])\";\n};\n\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "./platform/node/binary": {
                  "where": "inline"
                },
                "./util": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/platform/node/binary.js": {
            "requireId": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/platform/node/binary",
            "memoizeId": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/platform/node/binary.js",
            "descriptor": {
              "filename": "binary.js",
              "filepath": "../../pinf-bridgelib-js/lib/platform/node/binary.js",
              "mtime": 1375341060,
              "code": "\n//var Buffer = require(\"../../buffer\").Buffer;\n\nexports.B_LENGTH = function (bytes) {\n    return bytes.length;\n};\n\nexports.B_ALLOC = function (length) {\n//    throw new Error(\"NYI - exports.B_ALLOC in \" + module.id);\n    return new Buffer(length);\n};\n\nexports.B_FILL = function(bytes, length, offset, value) {\n    bytes.fill(value, offset, offset + length);\n};\n\nexports.B_COPY = function(src, srcOffset, dst, dstOffset, length) {\n    src.copy(dst, srcOffset, srcOffset + length, dstOffset);\n};\n\nexports.B_GET = function(bytes, index) {\n    return bytes[index];\n};\n\nexports.B_SET = function(bytes, index, value) {\n    bytes[index] = value;\n};\n\nexports.B_DECODE = function(bytes, offset, length, charset) {\n    return bytes.toString(charset, offset, offset + length);\n};\n\nexports.B_DECODE_DEFAULT = function(bytes, offset, length) {\n    return bytes.utf8Slice(offset, length);\n};\n\nexports.B_ENCODE = function(string, charset) {\n    throw new Error(\"NYI - exports.B_ENCODE in \" + module.id);\n//    return Buffer.fromStringCharset(string, charset);\n};\n\nexports.B_ENCODE_DEFAULT = function(string) {\n    return exports.B_ENCODE(string, 'utf-8');\n};\n\nexports.B_TRANSCODE = function(bytes, offset, length, sourceCharset, targetCharset) {\n    var raw = exports.B_DECODE(bytes, offset, length, sourceCharset);\n    return exports.B_ENCODE(bytes, 0, raw.length, targetCharset);\n};\n",
              "globals": {
                "exports": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {},
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../pinf-bridgelib-js/lib/platform/node';",
              "code": "function(require, exports, module) {var __dirname = '../../pinf-bridgelib-js/lib/platform/node';\n\n//var Buffer = require(\"../../buffer\").Buffer;\n\nexports.B_LENGTH = function (bytes) {\n    return bytes.length;\n};\n\nexports.B_ALLOC = function (length) {\n//    throw new Error(\"NYI - exports.B_ALLOC in \" + module.id);\n    return new Buffer(length);\n};\n\nexports.B_FILL = function(bytes, length, offset, value) {\n    bytes.fill(value, offset, offset + length);\n};\n\nexports.B_COPY = function(src, srcOffset, dst, dstOffset, length) {\n    src.copy(dst, srcOffset, srcOffset + length, dstOffset);\n};\n\nexports.B_GET = function(bytes, index) {\n    return bytes[index];\n};\n\nexports.B_SET = function(bytes, index, value) {\n    bytes[index] = value;\n};\n\nexports.B_DECODE = function(bytes, offset, length, charset) {\n    return bytes.toString(charset, offset, offset + length);\n};\n\nexports.B_DECODE_DEFAULT = function(bytes, offset, length) {\n    return bytes.utf8Slice(offset, length);\n};\n\nexports.B_ENCODE = function(string, charset) {\n    throw new Error(\"NYI - exports.B_ENCODE in \" + module.id);\n//    return Buffer.fromStringCharset(string, charset);\n};\n\nexports.B_ENCODE_DEFAULT = function(string) {\n    return exports.B_ENCODE(string, 'utf-8');\n};\n\nexports.B_TRANSCODE = function(bytes, offset, length, sourceCharset, targetCharset) {\n    var raw = exports.B_DECODE(bytes, offset, length, sourceCharset);\n    return exports.B_ENCODE(bytes, 0, raw.length, targetCharset);\n};\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {},
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/pack-helper.js": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/pack-helper.js",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/pack-helper.js",
            "descriptor": {
              "filename": "pack-helper.js",
              "filepath": "../../insight.renderers.default/lib/pack-helper.js",
              "mtime": 1420349576,
              "code": "\nvar DOMPLATE = require(\"domplate/lib/domplate\");\n\n\nexports.init = function(packExports, packModule, packOptions) {\n    var templates;\n\n    packExports.__NS__ = \"__\" + packModule.id.replace(/[\\.-\\/]/g, \"_\") + \"__\";\n    packExports.getTemplateForNode = function(node) {\n        if (!templates) {\n            templates = packOptions.getTemplates();\n        }\n\n        var found;\n        templates.forEach(function(template) {\n            if (found)\n                return;\n            if (template.supportsObjectGraphNode(node))\n                found = template;\n        });\n        if (!found)\n            return false;\n        return found;\n    }\n    \n    var cssImported = false;\n    function importCss(helpers) {\n        if (!cssImported) {\n            cssImported = true;\n\n            var css = packOptions.css;\n\n            css = css.replace(/__NS__/g, packExports.__NS__);\n            css = css.replace(/__RESOURCE__/g, helpers.getResourceBaseUrl(packModule));\n\n            helpers.importCssString(packModule.id, css, helpers.document);\n        }\n    }\n    \n    packExports.initTemplate = function(require, exports, module, template) {\n        exports.getTemplatePack = function() {\n            return packExports;\n        };\n        exports.getTemplateLocator = function() {\n            var m = module.id.split(\"/\");\n            return {\n                id: \"github.com/insight/insight.renderers.default/\",\n                module: m.splice(m.length-3,3).join(\"/\")\n            };\n        };\n        if (typeof exports.supportsObjectGraphNode == \"undefined\") {\n            exports.supportsObjectGraphNode = function(node) {\n                return (node.type == template.type);\n            };\n        }\n\n        exports.getTemplate = function(helpers, subclass) {\n            var rep;\n// NOTE: This needs to go as this gets called multiple times with different 'subclass'            \n//            if (typeof rep == \"undefined\")\n//            {\n                importCss(helpers);\n                rep = template.initRep({\n                    tags: DOMPLATE.tags,\n                    domplate: function(tpl) {\n                        if (subclass) {\n                            tpl = helpers.util.merge(tpl, subclass);\n                        }\n                        if (tpl.inherits) {\n                            var inherits = tpl.inherits;\n                            delete tpl.inherits;\n                            return inherits.getTemplate(helpers, tpl);\n                        } else {                            \n                            return DOMPLATE.domplate(tpl);\n                        }\n                    }\n                }, helpers);\n                rep.getTemplate = function() {\n                    return exports;\n                };\n//            }\n            return rep;\n        }\n\n        exports.renderObjectGraphToNode = function(ogNode, domNode, options, helpers) {\n            var tpl = exports.getTemplate(helpers);\n            for (var i=0, ic=options.view.length ; i<ic ; i++) {\n                var tag;\n                switch(options.view[i]) {\n                    case \"detail\":\n                        tag = \"tag\";\n                        break;\n                    default:\n                    case \"summary\":\n                        tag = \"shortTag\";\n                        break;\n                }\n                if (typeof tpl[tag] != \"undefined\") {\n                    tpl[tag].replace({\"node\": ogNode}, domNode);\n                    return;\n                }\n            }\n        };\n    }\n}\n",
              "globals": {
                "DOMPLATE": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "exports": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "domplate/lib/domplate": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib';",
              "code": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib';\n\nvar DOMPLATE = require(\"domplate/lib/domplate\");\n\n\nexports.init = function(packExports, packModule, packOptions) {\n    var templates;\n\n    packExports.__NS__ = \"__\" + packModule.id.replace(/[\\.-\\/]/g, \"_\") + \"__\";\n    packExports.getTemplateForNode = function(node) {\n        if (!templates) {\n            templates = packOptions.getTemplates();\n        }\n\n        var found;\n        templates.forEach(function(template) {\n            if (found)\n                return;\n            if (template.supportsObjectGraphNode(node))\n                found = template;\n        });\n        if (!found)\n            return false;\n        return found;\n    }\n    \n    var cssImported = false;\n    function importCss(helpers) {\n        if (!cssImported) {\n            cssImported = true;\n\n            var css = packOptions.css;\n\n            css = css.replace(/__NS__/g, packExports.__NS__);\n            css = css.replace(/__RESOURCE__/g, helpers.getResourceBaseUrl(packModule));\n\n            helpers.importCssString(packModule.id, css, helpers.document);\n        }\n    }\n    \n    packExports.initTemplate = function(require, exports, module, template) {\n        exports.getTemplatePack = function() {\n            return packExports;\n        };\n        exports.getTemplateLocator = function() {\n            var m = module.id.split(\"/\");\n            return {\n                id: \"github.com/insight/insight.renderers.default/\",\n                module: m.splice(m.length-3,3).join(\"/\")\n            };\n        };\n        if (typeof exports.supportsObjectGraphNode == \"undefined\") {\n            exports.supportsObjectGraphNode = function(node) {\n                return (node.type == template.type);\n            };\n        }\n\n        exports.getTemplate = function(helpers, subclass) {\n            var rep;\n// NOTE: This needs to go as this gets called multiple times with different 'subclass'            \n//            if (typeof rep == \"undefined\")\n//            {\n                importCss(helpers);\n                rep = template.initRep({\n                    tags: DOMPLATE.tags,\n                    domplate: function(tpl) {\n                        if (subclass) {\n                            tpl = helpers.util.merge(tpl, subclass);\n                        }\n                        if (tpl.inherits) {\n                            var inherits = tpl.inherits;\n                            delete tpl.inherits;\n                            return inherits.getTemplate(helpers, tpl);\n                        } else {                            \n                            return DOMPLATE.domplate(tpl);\n                        }\n                    }\n                }, helpers);\n                rep.getTemplate = function() {\n                    return exports;\n                };\n//            }\n            return rep;\n        }\n\n        exports.renderObjectGraphToNode = function(ogNode, domNode, options, helpers) {\n            var tpl = exports.getTemplate(helpers);\n            for (var i=0, ic=options.view.length ; i<ic ; i++) {\n                var tag;\n                switch(options.view[i]) {\n                    case \"detail\":\n                        tag = \"tag\";\n                        break;\n                    default:\n                    case \"summary\":\n                        tag = \"shortTag\";\n                        break;\n                }\n                if (typeof tpl[tag] != \"undefined\") {\n                    tpl[tag].replace({\"node\": ogNode}, domNode);\n                    return;\n                }\n            }\n        };\n    }\n}\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "domplate/lib/domplate": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "2754ddc900eb3f95fb9d551504837cd4f4fb44a7-domplate/lib/domplate.js": {
            "requireId": "2754ddc900eb3f95fb9d551504837cd4f4fb44a7-domplate/lib/domplate",
            "memoizeId": "2754ddc900eb3f95fb9d551504837cd4f4fb44a7-domplate/lib/domplate.js",
            "descriptor": {
              "filename": "domplate.js",
              "filepath": "../../insight.renderers.default/node_modules/domplate/lib/domplate.js",
              "mtime": 1375574575,
              "code": "\n((function() {\n\n    function Domplate(exports) {\n\n/**\n * Original source by Joe Hewitt (http://joehewitt.com/).\n * @see http://code.google.com/p/fbug/source/browse/branches/firebug1.4/content/firebug/domplate.js\n */\n\n/**\n * Modifications by Christoph Dorn <christoph@christophdorn.com>:\n * \n * Sep  7, 2008: Added DomplateDebug logging\n * Sep 10, 2008: Added support for multiple function arguments\n * Sep 16, 2008: Removed calls to FBTrace as DomplateDebug does that now\n *               Removed requirement for FBL\n *               Removed use of top. scope\n *               Started work on IF support\n * \n * \n */\n\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\nexports.tags = {};\nexports.tags._domplate_ = exports;\n\n\nvar DomplateTag = exports.DomplateTag = function DomplateTag(tagName)\n{\n    this.tagName = tagName;\n}\n\nfunction DomplateEmbed()\n{\n}\n\nfunction DomplateLoop()\n{\n}\n\nfunction DomplateIf()\n{\n}\n\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\n\n\nfunction copyArray(oldArray)\n{\n    var ary = [];\n    if (oldArray)\n        for (var i = 0; i < oldArray.length; ++i)\n            ary.push(oldArray[i]);\n   return ary;\n}\n\nfunction copyObject(l, r)\n{\n    var m = {};\n    extend(m, l);\n    extend(m, r);\n    return m;\n}\n\nfunction extend(l, r)\n{\n    for (var n in r)\n        l[n] = r[n];\n}\n\n\n// * DEBUG * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\nvar DomplateDebug\nDomplateDebug = exports.DomplateDebug = {\n  \n  enabled: false,\n  console: null,\n  \n  replaceInstance: function(instance) {\n      DomplateDebug = instance;\n  },\n  \n  setEnabled: function(enabled)\n  {\n      this.enabled = enabled;\n  },\n  \n  setConsole: function(console)\n  {\n      this.console = console;\n  },\n  \n  log: function(label, value)\n  {\n      if(!this.enabled) return;\n      if(arguments.length==2) {\n        this.console.log(label+': ',value);\n      } else {\n        this.console.log(label);\n      }\n  },\n  logVar: function(label, value)\n  {\n      if(!this.enabled) return;\n      this.console.log(label+': ',[value]);\n  },\n  logInfo: function(message)\n  {\n      if(!this.enabled) return;\n      this.console.info(message);\n  },\n  logWarn: function(message)\n  {\n      if(!this.enabled) return;\n      this.console.warn(message);\n  },\n  logJs: function(label, value)\n  {\n      if(!this.enabled) return;\n      value = value.replace(/;/g,';\\n');\n      value = value.replace(/{/g,'{\\n');\n      this.console.info(value);\n  },\n  reformatArguments: function(args)\n  {\n      if(!this.enabled) return;\n      var returnVar = new Array();\n      for (var i = 0; i < args.length; ++i)\n      {\n          var index = args[i];\n          returnVar.push([index]);\n      }\n      return {'arguments':returnVar}; \n  },\n  startGroup: function(label,args)\n  {\n      if(!this.enabled) return;\n      if(this.isArray(label)) {\n        label.splice(1,0,' - ');\n        this.console.group.apply(this,label);\n      }  else {\n        this.console.group(label);\n      } \n      if(args!=null) {\n          this.logVar('ARGUMENTS',DomplateDebug.reformatArguments(args));\n      }  \n  },\n  endGroup: function()\n  {\n      if(!this.enabled) return;\n      this.console.groupEnd();\n  },\n  isArray: function(obj) {\n      if (obj.constructor.toString().indexOf(\"Array\") != -1) {\n          return true;\n      }\n      return false;\n  }\n}\n// * DEBUG * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\n\n\n\n\n\nvar womb = null;\n\nvar domplate = exports.domplate = function()\n{\n    var lastSubject;\n    for (var i = 0; i < arguments.length; ++i)\n        lastSubject = lastSubject ? copyObject(lastSubject, arguments[i]) : arguments[i];\n\n    for (var name in lastSubject)\n    {\n        var val = lastSubject[name];\n        if (isTag(val))\n            val.tag.subject = lastSubject;\n    }\n\n    return lastSubject;\n};\n\n\ndomplate.context = function(context, fn)\n{\n    var lastContext = domplate.lastContext;\n    domplate.topContext = context;\n    fn.apply(context);\n    domplate.topContext = lastContext;\n};\n\nexports.tags.TAG = function()\n//domplate.TAG = function()\n{\n    var embed = new DomplateEmbed();\n    return embed.merge(arguments);\n};\n\nexports.tags.FOR = domplate.FOR = function()\n{\n    var loop = new DomplateLoop();\n    return loop.merge(arguments);\n};\n\nexports.tags.IF = domplate.IF = function()\n{\n    var loop = new DomplateIf();\n    return loop.merge(arguments);\n};\n\nDomplateTag.prototype =\n{\n    merge: function(args, oldTag)\n    {\n        if (oldTag)\n            this.tagName = oldTag.tagName;\n\n        this.context = oldTag ? oldTag.context : null;\n        this.subject = oldTag ? oldTag.subject : null;\n        this.attrs = oldTag ? copyObject(oldTag.attrs) : {};\n        this.classes = oldTag ? copyObject(oldTag.classes) : {};\n        this.props = oldTag ? copyObject(oldTag.props) : null;\n        this.listeners = oldTag ? copyArray(oldTag.listeners) : null;\n        this.children = oldTag ? copyArray(oldTag.children) : [];\n        this.vars = oldTag ? copyArray(oldTag.vars) : [];\n\n        var attrs = args.length ? args[0] : null;\n        var hasAttrs = typeof(attrs) == \"object\" && !isTag(attrs);\n\n        this.resources = {};\n        this.children = [];\n\n        if (domplate.topContext)\n            this.context = domplate.topContext;\n\n        if (args.length)\n            parseChildren(args, hasAttrs ? 1 : 0, this.vars, this.children);\n\n        if (hasAttrs)\n            this.parseAttrs(attrs);\n\n        return creator(this, DomplateTag);\n    },\n\n    parseAttrs: function(args)\n    {\n        DomplateDebug.startGroup('DomplateTag.parseAttrs',arguments);\n\n        for (var name in args)\n        {\n            DomplateDebug.logVar('name',name);\n            DomplateDebug.logVar('args[name]',args[name]);\n\n            var val = parseValue(args[name]);\n            readPartNames(val, this.vars);\n\n            if (name.indexOf(\"on\") == 0)\n            {\n                var eventName = name.substr(2);\n                if (!this.listeners)\n                    this.listeners = [];\n                this.listeners.push(eventName, val);\n            }\n            else if (name[0] == \"_\")\n            {\n                var propName = name.substr(1);\n                if (!this.props)\n                    this.props = {};\n                this.props[propName] = val;\n            }\n            else if (name[0] == \"$\")\n            {\n                var className = name.substr(1);\n                if (!this.classes)\n                    this.classes = {};\n                this.classes[className] = val;\n            }\n            else\n            {\n                if (name == \"class\" && this.attrs.hasOwnProperty(name) )\n                    this.attrs[name] += \" \" + val;\n                else\n                    this.attrs[name] = val;\n            }\n        }\n\n        DomplateDebug.endGroup();\n    },\n\n    compile: function()\n    {\n        DomplateDebug.startGroup(['DomplateTag.compile',this.tagName]);\n\n        if (this.renderMarkup) {\n    \n            DomplateDebug.log('ALREADY COMPILED');\n\n            DomplateDebug.endGroup();\n            return;\n        }\n\n        if(this.subject._resources) {\n            this.resources = this.subject._resources();     \n        }\n\n        this.compileMarkup();\n        this.compileDOM();\n\n        DomplateDebug.endGroup();\n    },\n\n    compileMarkup: function()\n    {\n        DomplateDebug.startGroup('DomplateTag.compileMarkup');\n\n        this.markupArgs = [];\n        var topBlock = [], topOuts = [], blocks = [], info = {args: this.markupArgs, argIndex: 0};\n         \n        this.generateMarkup(topBlock, topOuts, blocks, info);\n        this.addCode(topBlock, topOuts, blocks);\n\n        var fnBlock = ['(function (__code__, __context__, __in__, __out__'];\n        for (var i = 0; i < info.argIndex; ++i)\n            fnBlock.push(', s', i);\n        fnBlock.push(') {');\n\n        fnBlock.push('  DomplateDebug.startGroup([\\' .. Run Markup .. \\',\\''+this.tagName+'\\'],arguments);');\n        fnBlock.push('  DomplateDebug.logJs(\\'js\\',\\'__SELF__JS__\\');');\n\n        if (this.subject)\n            fnBlock.push('  with (this) {');\n        if (this.context) \n            fnBlock.push('  with (__context__) {');\n        fnBlock.push('  with (__in__) {');\n\n        fnBlock.push.apply(fnBlock, blocks);\n\n        if (this.subject)\n            fnBlock.push('  }');\n        if (this.context)\n            fnBlock.push('  }');\n\n        fnBlock.push('DomplateDebug.endGroup();');\n\n        fnBlock.push('}})');\n\n        var self = this;\n        function __link__(tag, code, outputs, args)\n        {\n            if (!tag) {\n                DomplateDebug.logWarn('tag not defined');\n                return;\n            }\n            if (!tag.tag) {\n                DomplateDebug.logVar('tag', tag);\n                DomplateDebug.logWarn('tag.tag not defined');\n                return;\n            }\n\n            tag.tag.compile();\n\n            // merge resources from sub-tags\n            if(self.resources && tag.tag.resources && tag.tag.resources!==self.resources) {\n                for( var key in tag.tag.resources ) {\n                    self.resources[key] = tag.tag.resources[key];\n                }\n            }\n\n            var tagOutputs = [];\n            var markupArgs = [code, (tag.tag.context)?tag.tag.context:null, args, tagOutputs];\n            markupArgs.push.apply(markupArgs, tag.tag.markupArgs);\n            tag.tag.renderMarkup.apply(tag.tag.subject, markupArgs);\n\n            outputs.push(tag);\n            outputs.push(tagOutputs);\n        }\n\n        function __escape__(value)\n        {\n            function replaceChars(ch)\n            {\n                switch (ch)\n                {\n                    case \"<\":\n                        return \"&lt;\";\n                    case \">\":\n                        return \"&gt;\";\n                    case \"&\":\n                        return \"&amp;\";\n                    case \"'\":\n                        return \"&#39;\";\n                    case '\"':\n                        return \"&quot;\";\n                }\n                return \"?\";\n            };\n            return String(value).replace(/[<>&\"']/g, replaceChars);\n        }\n\n        function __loop__(iter, outputs, fn)\n        {\n            var iterOuts = [];\n            outputs.push(iterOuts);\n\n            if (iter instanceof Array)\n                iter = new ArrayIterator(iter);\n\n            try\n            {\n                while (1)\n                {\n                    var value = iter.next();\n                    var itemOuts = [0,0];\n                    iterOuts.push(itemOuts);\n                    fn.apply(this, [value, itemOuts]);\n                }\n            }\n            catch (exc)\n            {\n                if (exc != StopIteration)\n                    throw exc;\n            }\n        }\n\n        function __if__(booleanVar, outputs, fn)\n        {\n            // \"outputs\" is what gets passed to the compiled DOM when it runs.\n            // It is used by the dom to make decisions as to how many times to\n            // run children for FOR loops etc ...\n            // For the IF feature we set a 1 or 0 depending on whether\n            // the sub template ran or not. If it did not run then no HTML\n            // markup was generated and accordingly the DOM elements should and\n            // can not be traversed.\n          \n            var ifControl = [];\n            outputs.push(ifControl);\n\n\n            DomplateDebug.logVar('j  .. booleanVar',booleanVar);\n\n            if(booleanVar) {\n              ifControl.push(1);\n              fn.apply(this, [ifControl]);\n            } else {\n              ifControl.push(0);\n            }\n        }\n\n        var js = fnBlock.join(\"\");\n        \n        DomplateDebug.logVar('js',js);\n\n        // Inject the compiled JS so we can view it later in the console when the code runs     \n        js = js.replace('__SELF__JS__',js.replace(/\\'/g,'\\\\\\''));\n        \n//system.print(js,'JS');\n        \n        this.renderMarkup = eval(js);\n\n        DomplateDebug.endGroup();\n    },\n\n    getVarNames: function(args)\n    {\n        if (this.vars)\n            args.push.apply(args, this.vars);\n\n        for (var i = 0; i < this.children.length; ++i)\n        {\n            var child = this.children[i];\n            if (isTag(child))\n                child.tag.getVarNames(args);\n            else if (child instanceof Parts)\n            {\n                for (var i = 0; i < child.parts.length; ++i)\n                {\n                    if (child.parts[i] instanceof Variables)\n                    {\n                        var name = child.parts[i].names[0];\n                        var names = name.split(\".\");\n                        args.push(names[0]);\n                    }\n                }\n            }\n        }\n    },\n\n    generateMarkup: function(topBlock, topOuts, blocks, info)\n    {\n        topBlock.push(',\"<', this.tagName, '\"');\n\n        for (var name in this.attrs)\n        {\n            if (name != \"class\")\n            {\n                var val = this.attrs[name];\n                topBlock.push(', \" ', name, '=\\\\\"\"');\n                addParts(val, ',', topBlock, info, true);\n                topBlock.push(', \"\\\\\"\"');\n            }\n        }\n\n        if (this.listeners)\n        {\n            for (var i = 0; i < this.listeners.length; i += 2)\n                readPartNames(this.listeners[i+1], topOuts);\n        }\n\n        if (this.props)\n        {\n            for (var name in this.props)\n                readPartNames(this.props[name], topOuts);\n        }\n\n        if ( this.attrs.hasOwnProperty(\"class\") || this.classes)\n        {\n            topBlock.push(', \" class=\\\\\"\"');\n            if (this.attrs.hasOwnProperty(\"class\"))\n                addParts(this.attrs[\"class\"], ',', topBlock, info, true);\n              topBlock.push(', \" \"');\n            for (var name in this.classes)\n            {\n                topBlock.push(', (');\n                addParts(this.classes[name], '', topBlock, info);\n                topBlock.push(' ? \"', name, '\" + \" \" : \"\")');\n            }\n            topBlock.push(', \"\\\\\"\"');\n        }\n        if(this.tagName==\"br\") {\n            topBlock.push(',\"/>\"');\n        } else {\n            topBlock.push(',\">\"');\n            this.generateChildMarkup(topBlock, topOuts, blocks, info);\n    \n            topBlock.push(',\"</', this.tagName, '>\"');\n        }\n    },\n\n    generateChildMarkup: function(topBlock, topOuts, blocks, info)\n    {\n        for (var i = 0; i < this.children.length; ++i)\n        {\n            var child = this.children[i];\n            if (isTag(child))\n                child.tag.generateMarkup(topBlock, topOuts, blocks, info);\n            else\n                addParts(child, ',', topBlock, info, true);\n        }\n    },\n\n    addCode: function(topBlock, topOuts, blocks)\n    {\n        if (topBlock.length)\n            blocks.push('    __code__.push(\"\"', topBlock.join(\"\"), ');');\n        if (topOuts.length)\n            blocks.push('__out__.push(', topOuts.join(\",\"), ');');\n        topBlock.splice(0, topBlock.length);\n        topOuts.splice(0, topOuts.length);\n    },\n\n    addLocals: function(blocks)\n    {\n        var varNames = [];\n        this.getVarNames(varNames);\n\n        var map = {};\n        for (var i = 0; i < varNames.length; ++i)\n        {\n            var name = varNames[i];\n            if ( map.hasOwnProperty(name) )\n                continue;\n\n            map[name] = 1;\n            var names = name.split(\".\");\n            blocks.push('var ', names[0] + ' = ' + '__in__.' + names[0] + ';');\n        }\n    },\n\n    compileDOM: function()\n    {\n        DomplateDebug.startGroup('DomplateTag.compileDOM');\n      \n        var path = [];\n        var blocks = [];\n        this.domArgs = [];\n        path.embedIndex = 0;\n        path.loopIndex = 0;\n        path.ifIndex = 0;\n        path.staticIndex = 0;\n        path.renderIndex = 0;\n        var nodeCount = this.generateDOM(path, blocks, this.domArgs);\n\n        var fnBlock = ['(function (root, context, o'];\n        for (var i = 0; i < path.staticIndex; ++i)\n            fnBlock.push(', ', 's'+i);\n        for (var i = 0; i < path.renderIndex; ++i)\n            fnBlock.push(', ', 'd'+i);\n        fnBlock.push(') {');\n\n        fnBlock.push('  DomplateDebug.startGroup([\\' .. Run DOM .. \\',\\''+this.tagName+'\\'],arguments);');\n\n        fnBlock.push('  DomplateDebug.logJs(\\'js\\',\\'__SELF__JS__\\');');\n\n        \n        for (var i = 0; i < path.loopIndex; ++i)\n            fnBlock.push('  var l', i, ' = 0;');\n        for (var i = 0; i < path.ifIndex; ++i)\n            fnBlock.push('  var if_', i, ' = 0;');\n        for (var i = 0; i < path.embedIndex; ++i)\n            fnBlock.push('  var e', i, ' = 0;');\n\n        if (this.subject) {\n            fnBlock.push('  with (this) {');\n        }\n        if (this.context) {\n            fnBlock.push('    with (context) {');\n            fnBlock.push('      DomplateDebug.logVar(\\'context\\',context);');\n        }\n\n        fnBlock.push(blocks.join(\"\"));\n\n        if (this.context)\n            fnBlock.push('    }');\n        if (this.subject)\n            fnBlock.push('  }');\n\n        fnBlock.push('  DomplateDebug.endGroup();');\n\n        fnBlock.push('  return ', nodeCount, ';');\n        fnBlock.push('})');\n\n        function __bind__(object, fn)\n        {\n            return function(event) { return fn.apply(object, [event]); }\n        }\n\n        function __link__(node, tag, args)\n        {\n            DomplateDebug.startGroup('__link__',arguments);\n\n            if (!tag) {\n                DomplateDebug.logWarn('tag not defined');\n                return;\n            }\n            if (!tag.tag) {\n                DomplateDebug.logVar('tag', tag);\n                DomplateDebug.logWarn('tag.tag not defined');\n                return;\n            }\n            \n            tag.tag.compile();\n\n            var domArgs = [node, (tag.tag.context)?tag.tag.context:null, 0];\n            domArgs.push.apply(domArgs, tag.tag.domArgs);\n            domArgs.push.apply(domArgs, args);\n\n            var oo =tag.tag.renderDOM.apply(tag.tag.subject, domArgs);\n            \n            DomplateDebug.endGroup();\n            \n            return oo;\n        }\n\n        var self = this;\n        function __loop__(iter, fn)\n        {\n            DomplateDebug.startGroup('__loop__',arguments);\n            DomplateDebug.logVar('iter',iter);\n            DomplateDebug.logVar('fn',fn);\n\n            var nodeCount = 0;\n            for (var i = 0; i < iter.length; ++i)\n            {\n                iter[i][0] = i;\n                iter[i][1] = nodeCount;\n                nodeCount += fn.apply(this, iter[i]);\n    \n                DomplateDebug.logVar(' .. nodeCount',nodeCount);\n            }\n\n            DomplateDebug.logVar('iter',iter);\n\n            DomplateDebug.endGroup();\n            \n            return nodeCount;\n        }\n\n        function __if__(control, fn)\n        {\n            DomplateDebug.startGroup('__if__',arguments);\n\n            DomplateDebug.logVar('control', control);\n            DomplateDebug.logVar('fn',fn);\n\n            // Check the control structure to see if we should run the IF\n            if(control && control[0]) {\n              // Lets run it\n              // TODO: If in debug mode add info about the IF expression that caused the running\n              DomplateDebug.logInfo('Running IF');\n              fn.apply(this, [0,control[1]]);\n            } else {\n              // We need to skip it\n              // TODO: If in debug mode add info about the IF expression that caused the skip\n              DomplateDebug.logInfo('Skipping IF');\n            }\n    \n            DomplateDebug.endGroup();\n        }\n\n        function __path__(parent, offset)\n        {\n            DomplateDebug.startGroup('__path__',arguments);\n            DomplateDebug.logVar('parent',parent);\n\n            var root = parent;\n\n            for (var i = 2; i < arguments.length; ++i)\n            {\n                var index = arguments[i];\n\n                if (i == 3)\n                    index += offset;\n\n                if (index == -1) {\n                    parent = parent.parentNode;\n                } else {\n                    parent = parent.childNodes[index];\n                }    \n            }\n\n            DomplateDebug.endGroup();\n\n            return parent;\n        }\n\n        var js = fnBlock.join(\"\");\n        \n        DomplateDebug.logVar('js',js);\n        \n        // Inject the compiled JS so we can view it later in the console when the code runs     \n        js = js.replace('__SELF__JS__',js.replace(/\\'/g,'\\\\\\''));\n\n        this.renderDOM = eval(js);\n        \n        DomplateDebug.endGroup();\n    },\n\n    generateDOM: function(path, blocks, args)\n    {\n        DomplateDebug.startGroup(['DomplateTag.generateDOM',this.tagName],arguments);\n\n        if (this.listeners || this.props)\n            this.generateNodePath(path, blocks);\n\n        if (this.listeners)\n        {\n            for (var i = 0; i < this.listeners.length; i += 2)\n            {\n                var val = this.listeners[i+1];\n                var arg = generateArg(val, path, args);\n                blocks.push('node.addEventListener(\"', this.listeners[i], '\", __bind__(this, ', arg, '), false);');\n            }\n        }\n\n        if (this.props)\n        {\n            for (var name in this.props)\n            {\n                var val = this.props[name];\n                var arg = generateArg(val, path, args);\n                blocks.push('node.', name, ' = ', arg, ';');\n            }\n        }\n\n        this.generateChildDOM(path, blocks, args);\n        DomplateDebug.endGroup();        \n        return 1;\n    },\n\n    generateNodePath: function(path, blocks)\n    {\n        DomplateDebug.startGroup('DomplateTag.generateNodePath',arguments);\n\n        blocks.push(\"        node = __path__(root, o\");\n        for (var i = 0; i < path.length; ++i)\n            blocks.push(\",\", path[i]);\n        blocks.push(\");\");\n        \n        DomplateDebug.endGroup();\n    },\n\n    generateChildDOM: function(path, blocks, args)\n    {\n        path.push(0);\n        for (var i = 0; i < this.children.length; ++i)\n        {\n            var child = this.children[i];\n            if (isTag(child))\n                path[path.length-1] += '+' + child.tag.generateDOM(path, blocks, args);\n            else\n                path[path.length-1] += '+1';\n        }\n        path.pop();\n    }\n};\n\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\nDomplateEmbed.prototype = copyObject(DomplateTag.prototype,\n{\n    merge: function(args, oldTag)\n    {\n        DomplateDebug.startGroup('DomplateEmbed.merge',arguments);\n\n        this.value = oldTag ? oldTag.value : parseValue(args[0]);\n        this.attrs = oldTag ? oldTag.attrs : {};\n        this.vars = oldTag ? copyArray(oldTag.vars) : [];\n\n        var attrs = args[1];\n        for (var name in attrs)\n        {\n            var val = parseValue(attrs[name]);\n            this.attrs[name] = val;\n            readPartNames(val, this.vars);\n        }\n\n        var retval = creator(this, DomplateEmbed);\n        \n        DomplateDebug.endGroup();\n\n        return retval;        \n    },\n\n    // Used for locales only\n    getVarNames: function(names)\n    {\n        if (this.value instanceof Parts)\n            names.push(this.value.parts[0].name);\n\n        if (this.vars)\n            names.push.apply(names, this.vars);\n    },\n\n    generateMarkup: function(topBlock, topOuts, blocks, info)\n    {\n        DomplateDebug.startGroup('DomplateEmbed.generateMarkup',arguments);\n\n        this.addCode(topBlock, topOuts, blocks);\n\n        blocks.push('__link__(');\n        addParts(this.value, '', blocks, info);\n        blocks.push(', __code__, __out__, {');\n\n        var lastName = null;\n        for (var name in this.attrs)\n        {\n            if (lastName)\n                blocks.push(',');\n            lastName = name;\n\n            var val = this.attrs[name];\n            blocks.push('\"', name, '\":');\n            addParts(val, '', blocks, info);\n        }\n\n        blocks.push('});');\n        //this.generateChildMarkup(topBlock, topOuts, blocks, info);\n\n        DomplateDebug.endGroup();\n    },\n\n    generateDOM: function(path, blocks, args)\n    {\n        DomplateDebug.startGroup('DomplateEmbed.generateDOM',arguments);\n\n        var embedName = 'e'+path.embedIndex++;\n\n        this.generateNodePath(path, blocks);\n\n        var valueName = 'd' + path.renderIndex++;\n        var argsName = 'd' + path.renderIndex++;\n        \n        blocks.push('        ',embedName + ' = __link__(node, ', valueName, ', ', argsName, ');');\n        \n        DomplateDebug.endGroup();\n\n        return embedName;\n    }\n});\n\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\nDomplateLoop.prototype = copyObject(DomplateTag.prototype,\n{\n    merge: function(args, oldTag)\n    {\n        DomplateDebug.startGroup('DomplateLoop.merge',arguments);\n\n        this.varName = oldTag ? oldTag.varName : args[0];\n        this.iter = oldTag ? oldTag.iter : parseValue(args[1]);\n        this.vars = [];\n\n        this.children = oldTag ? copyArray(oldTag.children) : [];\n\n        var offset = Math.min(args.length, 2);\n        parseChildren(args, offset, this.vars, this.children);\n\n        var retval = creator(this, DomplateLoop);\n\n        DomplateDebug.endGroup();\n        \n        return retval;\n    },\n\n    // Used for locales only\n    getVarNames: function(names)\n    {\n        if (this.iter instanceof Parts)\n            names.push(this.iter.parts[0].name);\n\n        DomplateTag.prototype.getVarNames.apply(this, [names]);\n    },\n\n    generateMarkup: function(topBlock, topOuts, blocks, info)\n    {\n        DomplateDebug.startGroup('DomplateLoop.generateMarkup',arguments);\n\n        this.addCode(topBlock, topOuts, blocks);\n\n        DomplateDebug.logVar('this.iter',this.iter);\n\n        // We are in a FOR loop and our this.iter property contains\n        // either a simple function name as a string or a Parts object\n        // with only ONE Variables object. There is only one variables object\n        // as the FOR argument can contain only ONE valid function callback\n        // with optional arguments or just one variable. Allowed arguments are\n        // func or $var or $var.sub or $var|func or $var1,$var2|func or $var|func1|func2 or $var1,$var2|func1|func2\n        var iterName;\n        if (this.iter instanceof Parts)\n        {\n            // We have a function with optional aruments or just one variable\n            var part = this.iter.parts[0];\n            \n            // Join our function arguments or variables\n            // If the user has supplied multiple variables without a function\n            // this will create an invalid result and we should probably add an\n            // error message here or just take the first variable\n            iterName = part.names.join(',');\n\n            // Nest our functions\n            if (part.format)\n            {\n                DomplateDebug.logVar('part.format',part.format);\n        \n                for (var i = 0; i < part.format.length; ++i)\n                    iterName = part.format[i] + \"(\" + iterName + \")\";\n            }\n        } else {\n            // We have just a simple function name without any arguments\n            iterName = this.iter;\n        }\n        \n        DomplateDebug.logVar('iterName',iterName);\n\n        blocks.push('    __loop__.apply(this, [', iterName, ', __out__, function(', this.varName, ', __out__) {');\n        this.generateChildMarkup(topBlock, topOuts, blocks, info);\n        this.addCode(topBlock, topOuts, blocks);\n        blocks.push('    }]);');\n\n        DomplateDebug.endGroup();\n    },\n\n    generateDOM: function(path, blocks, args)\n    {\n        DomplateDebug.startGroup('DomplateLoop.generateDOM',arguments);\n\n        var iterName = 'd'+path.renderIndex++;\n        var counterName = 'i'+path.loopIndex;\n        var loopName = 'l'+path.loopIndex++;\n\n        if (!path.length)\n            path.push(-1, 0);\n\n        var preIndex = path.renderIndex;\n        path.renderIndex = 0;\n\n        var nodeCount = 0;\n\n        var subBlocks = [];\n        var basePath = path[path.length-1];\n        for (var i = 0; i < this.children.length; ++i)\n        {\n            path[path.length-1] = basePath+'+'+loopName+'+'+nodeCount;\n\n            var child = this.children[i];\n            if (isTag(child))\n                nodeCount += '+' + child.tag.generateDOM(path, subBlocks, args);\n            else\n                nodeCount += '+1';\n        }\n\n        path[path.length-1] = basePath+'+'+loopName;\n\n        blocks.push('      ',loopName,' = __loop__.apply(this, [', iterName, ', function(', counterName,',',loopName);\n        for (var i = 0; i < path.renderIndex; ++i)\n            blocks.push(',d'+i);\n        blocks.push(') {');\n        \n        blocks.push('       DomplateDebug.logVar(\\'  .. '+counterName+' (counterName)\\','+counterName+');');\n        blocks.push('       DomplateDebug.logVar(\\'  .. '+loopName+' (loopName)\\','+loopName+');');\n        \n        blocks.push(subBlocks.join(\"\"));\n        blocks.push('        return ', nodeCount, ';');\n        blocks.push('      }]);');\n\n        path.renderIndex = preIndex;\n\n        DomplateDebug.endGroup();\n\n        return loopName;\n    }\n});\n\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\nDomplateIf.prototype = copyObject(DomplateTag.prototype,\n{\n    merge: function(args, oldTag)\n    {\n        DomplateDebug.startGroup('DomplateIf.merge',arguments);\n\n        // This is the first argument to IF() which needs to evaluate to TRUE or FALSE\n        // It can be a plain variable or a variable with formatters chained to it\n        this.booleanVar = oldTag ? oldTag.booleanVar : parseValue(args[0]);\n        this.vars = [];\n\n        this.children = oldTag ? copyArray(oldTag.children) : [];\n\n        var offset = Math.min(args.length, 1);\n        parseChildren(args, offset, this.vars, this.children);\n\n        var retval = creator(this, DomplateIf);\n\n        DomplateDebug.endGroup();\n        \n        return retval;\n    },\n\n    // Used for locales only\n    getVarNames: function(names)\n    {\n        if (this.booleanVar instanceof Parts)\n            names.push(this.booleanVar.parts[0].name);\n\n        DomplateTag.prototype.getVarNames.apply(this, [names]);\n    },\n\n    generateMarkup: function(topBlock, topOuts, blocks, info)\n    {\n        DomplateDebug.startGroup('DomplateIf.generateMarkup',arguments);\n\n        this.addCode(topBlock, topOuts, blocks);\n\n        DomplateDebug.logVar('this.booleanVar',this.booleanVar);\n\n\n        // Generate the expression to be used for the if(expr) { ... }\n        var expr;\n        if (this.booleanVar instanceof Parts)\n        {\n            // We have a function with optional aruments or just one variable\n            var part = this.booleanVar.parts[0];\n            \n            // Join our function arguments or variables\n            // If the user has supplied multiple variables without a function\n            // this will create an invalid result and we should probably add an\n            // error message here or just take the first variable\n            expr = part.names.join(',');\n\n            // Nest our functions\n            if (part.format)\n            {\n                DomplateDebug.logVar('part.format',part.format);\n        \n                for (var i = 0; i < part.format.length; ++i)\n                    expr = part.format[i] + \"(\" + expr + \")\";\n            }\n        } else {\n            // We have just a simple function name without any arguments\n            expr = this.booleanVar;\n        }\n        \n        DomplateDebug.logVar('expr',expr);\n\n        blocks.push('__if__.apply(this, [', expr, ', __out__, function(__out__) {');\n        this.generateChildMarkup(topBlock, topOuts, blocks, info);\n        this.addCode(topBlock, topOuts, blocks);\n        blocks.push('}]);');\n\n        DomplateDebug.endGroup();\n    },\n\n    generateDOM: function(path, blocks, args)\n    {\n        DomplateDebug.startGroup('DomplateIf.generateDOM',arguments);\n\n        var controlName = 'd'+path.renderIndex++;\n        var ifName = 'if_'+path.ifIndex++;\n\n        if (!path.length)\n            path.push(-1, 0);\n\n        var preIndex = path.renderIndex;\n        path.renderIndex = 0;\n\n        var nodeCount = 0;\n\n        var subBlocks = [];\n//        var basePath = path[path.length-1];\n\n        for (var i = 0; i < this.children.length; ++i)\n        {\n//            path[path.length-1] = basePath+'+'+ifName+'+'+nodeCount;\n\n            var child = this.children[i];\n            if (isTag(child))\n                nodeCount += '+' + child.tag.generateDOM(path, subBlocks, args);\n            else\n                nodeCount += '+1';\n        }\n\n//        path[path.length-1] = basePath+'+'+ifName;\n\n        blocks.push('      ',ifName,' = __if__.apply(this, [', controlName, ', function(',ifName);\n        for (var i = 0; i < path.renderIndex; ++i)\n            blocks.push(',d'+i);\n        blocks.push(') {');\n        \n        blocks.push('       DomplateDebug.logVar(\\'  .. d0\\',d0);');\n        blocks.push('       DomplateDebug.logVar(\\'  .. '+ifName+' (ifName)\\','+ifName+');');\n        \n        blocks.push(subBlocks.join(\"\"));\n//        blocks.push('        return ', nodeCount, ';');\n        blocks.push('      }]);');\n\n        path.renderIndex = preIndex;\n\n        DomplateDebug.endGroup();\n\n        return controlName;\n    }\n});\n\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\nfunction Variables(names,format)\n{\n    this.names = names;\n    this.format = format;\n}\n\nfunction Parts(parts)\n{\n    this.parts = parts;\n}\n\n// ************************************************************************************************\n\nfunction parseParts(str)\n{\n    DomplateDebug.startGroup('parseParts',arguments);\n    \n    var index = 0;\n    var parts = [];\n    var m;\n\n    // Match $var or $var.sub or $var|func or $var1,$var2|func or $var|func1|func2 or $var1,$var2|func1|func2\n    var re = /\\$([_A-Za-z][$_A-Za-z0-9.,|]*)/g;\n    while (m = re.exec(str))\n    {\n        DomplateDebug.logVar('m',m);\n\n        var pre = str.substr(index, (re.lastIndex-m[0].length)-index);\n        if (pre)\n            parts.push(pre);\n\n        var segs = m[1].split(\"|\");\n        var vars = segs[0].split(\",$\");\n\n        // Assemble the variables object and append to buffer\n        parts.push(new Variables(vars,segs.splice(1)));\n        \n        index = re.lastIndex;\n    }\n\n    // No matches found at all so we return the whole string\n    if (!index) {\n\n        DomplateDebug.logVar('str',str);\n        \n        DomplateDebug.endGroup();\n    \n        return str;\n    }\n\n    // If we have data after our last matched index we append it here as the final step\n    var post = str.substr(index);\n    if (post)\n        parts.push(post);\n\n\n    var retval = new Parts(parts);\n    \n    DomplateDebug.logVar('retval',retval);\n    \n    DomplateDebug.endGroup();\n    \n    return retval;\n}\n\nfunction parseValue(val)\n{\n    return typeof(val) == 'string' ? parseParts(val) : val;\n}\n\nfunction parseChildren(args, offset, vars, children)\n{\n    DomplateDebug.startGroup('parseChildren',arguments);\n\n    for (var i = offset; i < args.length; ++i)\n    {\n        var val = parseValue(args[i]);\n        children.push(val);\n        readPartNames(val, vars);\n    }\n    DomplateDebug.endGroup();\n}\n\nfunction readPartNames(val, vars)\n{\n    if (val instanceof Parts)\n    {\n        for (var i = 0; i < val.parts.length; ++i)\n        {\n            var part = val.parts[i];\n            if (part instanceof Variables)\n                vars.push(part.names[0]);\n        }\n    }\n}\n\nfunction generateArg(val, path, args)\n{\n    if (val instanceof Parts)\n    {\n        var vals = [];\n        for (var i = 0; i < val.parts.length; ++i)\n        {\n            var part = val.parts[i];\n            if (part instanceof Variables)\n            {\n                var varName = 'd'+path.renderIndex++;\n                if (part.format)\n                {\n                    for (var j = 0; j < part.format.length; ++j)\n                        varName = part.format[j] + '(' + varName + ')';\n                }\n\n                vals.push(varName);\n            }\n            else\n                vals.push('\"'+part.replace(/\"/g, '\\\\\"')+'\"');\n        }\n\n        return vals.join('+');\n    }\n    else\n    {\n        args.push(val);\n        return 's' + path.staticIndex++;\n    }\n}\n\nfunction addParts(val, delim, block, info, escapeIt)\n{\n    var vals = [];\n    if (val instanceof Parts)\n    {\n        for (var i = 0; i < val.parts.length; ++i)\n        {\n            var part = val.parts[i];\n            if (part instanceof Variables)\n            {\n                var partName = part.names.join(\",\");\n                if (part.format)\n                {\n                    for (var j = 0; j < part.format.length; ++j)\n                        partName = part.format[j] + \"(\" + partName + \")\";\n                }\n\n                if (escapeIt)\n                    vals.push(\"__escape__(\" + partName + \")\");\n                else\n                    vals.push(partName);\n            }\n            else\n                vals.push('\"'+ part + '\"');\n        }\n    }\n    else if (isTag(val))\n    {\n        info.args.push(val);\n        vals.push('s'+info.argIndex++);\n    }\n    else\n        vals.push('\"'+ val + '\"');\n\n    var parts = vals.join(delim);\n    if (parts)\n        block.push(delim, parts);\n}\n\nfunction isTag(obj)\n{\n    return (typeof(obj) == \"function\" || obj instanceof Function) && !!obj.tag;\n}\n\nfunction creator(tag, cons)\n{\n    var fn = new Function(\n        \"var tag = arguments.callee.tag;\" +\n        \"var cons = arguments.callee.cons;\" +\n        \"var newTag = new cons();\" +\n        \"return newTag.merge(arguments, tag);\");\n\n    fn.tag = tag;\n    fn.cons = cons;\n    extend(fn, Renderer);\n\n    return fn;\n}\n\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\n\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\nfunction ArrayIterator(array)\n{\n    var index = -1;\n\n    this.next = function()\n    {\n        if (++index >= array.length)\n            throw StopIteration;\n\n        return array[index];\n    };\n}\n\nfunction StopIteration() {}\n\ndomplate.$break = function()\n{\n    throw StopIteration;\n};\n\n// ************************************************************************************************\n\nvar Renderer =\n{\n    checkDebug: function()\n    {\n        DomplateDebug.enabled = this.tag.subject._debug || false;\n    },\n    \n    renderHTML: function(args, outputs, self)\n    {\n        this.checkDebug();\n        \n        DomplateDebug.startGroup('Renderer.renderHTML',arguments);\n\n        var code = [];\n        var markupArgs = [code, (this.tag.context)?this.tag.context:null, args, outputs];\n        markupArgs.push.apply(markupArgs, this.tag.markupArgs);\n        this.tag.renderMarkup.apply(self ? self : this.tag.subject, markupArgs);\n\n        if(this.tag.resources && this.tag.subject._resourceListener) {\n            this.tag.subject._resourceListener.register(this.tag.resources);\n        }\n\n        DomplateDebug.endGroup();\n        return code.join(\"\");\n    },\n\n    insertRows: function(args, before, self)\n    {\n        this.checkDebug();\n\n        DomplateDebug.startGroup('Renderer.insertRows',arguments);\n\n        this.tag.compile();\n\n        var outputs = [];\n        var html = this.renderHTML(args, outputs, self);\n\n        var doc = before.ownerDocument;\n        var table = doc.createElement(\"table\");\n        table.innerHTML = html;\n\n        var tbody = table.firstChild;\n        var parent = before.localName == \"TR\" ? before.parentNode : before;\n        var after = before.localName == \"TR\" ? before.nextSibling : null;\n\n        var firstRow = tbody.firstChild, lastRow;\n        while (tbody.firstChild)\n        {\n            lastRow = tbody.firstChild;\n            if (after)\n                parent.insertBefore(lastRow, after);\n            else\n                parent.appendChild(lastRow);\n        }\n\n        var offset = 0;\n        if (before.localName == \"TR\")\n        {\n            var node = firstRow.parentNode.firstChild;\n            for (; node && node != firstRow; node = node.nextSibling)\n                ++offset;\n        }\n\n        var domArgs = [firstRow, this.tag.context, offset];\n        domArgs.push.apply(domArgs, this.tag.domArgs);\n        domArgs.push.apply(domArgs, outputs);\n\n        this.tag.renderDOM.apply(self ? self : this.tag.subject, domArgs);\n\n        DomplateDebug.endGroup();\n        return [firstRow, lastRow];\n    },\n\n    insertAfter: function(args, before, self)\n    {\n        this.checkDebug();\n\n        DomplateDebug.startGroup('Renderer.insertAfter',arguments);\n\n        this.tag.compile();\n\n        var outputs = [];\n        var html = this.renderHTML(args, outputs, self);\n\n        var doc = before.ownerDocument;\n        var range = doc.createRange();\n        range.selectNode(doc.body);\n        var frag = range.createContextualFragment(html);\n\n        var root = frag.firstChild;\n        if (before.nextSibling)\n            before.parentNode.insertBefore(frag, before.nextSibling);\n        else\n            before.parentNode.appendChild(frag);\n\n        var domArgs = [root, this.tag.context, 0];\n        domArgs.push.apply(domArgs, this.tag.domArgs);\n        domArgs.push.apply(domArgs, outputs);\n\n        this.tag.renderDOM.apply(self ? self : (this.tag.subject ? this.tag.subject : null),\n            domArgs);\n\n        DomplateDebug.endGroup();\n\n        return root;\n    },\n\n    replace: function(args, parent, self)\n    {\n        this.checkDebug();\n\n        DomplateDebug.startGroup('Renderer.replace',arguments);\n\n        this.tag.compile();\n\n        var outputs = [];\n        var html = this.renderHTML(args, outputs, self);\n\n        var root;\n        if (parent.nodeType == 1)\n        {\n            parent.innerHTML = html;\n            root = parent.firstChild;\n        }\n        else\n        {\n            if (!parent || parent.nodeType != 9)\n                parent = document;\n\n            if (!womb || womb.ownerDocument != parent)\n                womb = parent.createElement(\"div\");\n            womb.innerHTML = html;\n\n            root = womb.firstChild;\n            //womb.removeChild(root);\n        }\n\n        var domArgs = [root, (this.tag.context)?this.tag.context:null, 0];\n        domArgs.push.apply(domArgs, this.tag.domArgs);\n        domArgs.push.apply(domArgs, outputs);\n        this.tag.renderDOM.apply(self ? self : this.tag.subject, domArgs);\n\n        DomplateDebug.endGroup();\n\n        return root;\n    },\n\n    append: function(args, parent, self)\n    {\n        this.checkDebug();\n\n        DomplateDebug.startGroup('Renderer.append',arguments);\n\n        this.tag.compile();\n\n        var outputs = [];\n        var html = this.renderHTML(args, outputs, self);\n\n        DomplateDebug.logVar('outputs',outputs);\n\n        DomplateDebug.logVar('html',html);\n        \n        if (!womb || womb.ownerDocument != parent.ownerDocument)\n            womb = parent.ownerDocument.createElement(\"div\");\n\n        DomplateDebug.logVar('womb',womb);\n        womb.innerHTML = html;\n\n        root = womb.firstChild;\n        while (womb.firstChild)\n            parent.appendChild(womb.firstChild);\n\n        var domArgs = [root, this.tag.context, 0];\n        domArgs.push.apply(domArgs, this.tag.domArgs);\n        domArgs.push.apply(domArgs, outputs);\n\n        DomplateDebug.logVar('this.tag.subject',this.tag.subject);\n        DomplateDebug.logVar('self',self);\n        DomplateDebug.logVar('domArgs',domArgs);\n        \n        this.tag.renderDOM.apply(self ? self : this.tag.subject, domArgs);\n\n        DomplateDebug.endGroup();\n\n        return root;\n    },\n\n    render: function(args, self)\n    {\n        this.checkDebug();\n\n        DomplateDebug.startGroup('Renderer.render',arguments);\n\n        this.tag.compile();\n\n        var outputs = [];\n        var html = this.renderHTML(args, outputs, self);\n\n        DomplateDebug.endGroup();\n\n        return html;\n    }  \n};\n\n// ************************************************************************************************\n\n\nfunction defineTags()\n{\n        \n    for (var i = 0; i < arguments.length; ++i)\n    {\n        var tagName = arguments[i];\n        var fn = new Function(\"var newTag = new this._domplate_.DomplateTag('\"+tagName+\"'); return newTag.merge(arguments);\");\n\n        var fnName = tagName.toUpperCase();\n        exports.tags[fnName] = fn;\n    }\n}\n\ndefineTags(\n    \"a\", \"button\", \"br\", \"canvas\", \"col\", \"colgroup\", \"div\", \"fieldset\", \"form\", \"h1\", \"h2\", \"h3\", \"hr\",\n     \"img\", \"input\", \"label\", \"legend\", \"li\", \"ol\", \"optgroup\", \"option\", \"p\", \"pre\", \"select\",\n    \"span\", \"strong\", \"table\", \"tbody\", \"td\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"tr\", \"tt\", \"ul\"\n);\n\n    }\n\n    // Check for AMD\n    if (typeof define === \"function\") {\n        define(function() {\n            var exports = {};\n            Domplate(exports);\n            return exports;\n        });\n    } else\n    // Assume NodeJS\n    if (typeof exports === \"object\") {\n        Domplate(exports);\n    }\n\n})());\n\n",
              "globals": {
                "i": {
                  "type": "reference"
                },
                "String": {
                  "type": "call"
                },
                "eval": {
                  "type": "call"
                },
                "Math": {
                  "type": "reference"
                },
                "root": {
                  "type": "assign"
                },
                "define": {
                  "type": "typeof"
                },
                "exports": {
                  "type": "typeof"
                }
              },
              "syntax": "javascript",
              "format": "amd-ish",
              "undefine": [
                "exports"
              ],
              "uses": {},
              "dependencies": {
                "static": {},
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "amd-ish",
              "top": "wrapAMD(function(require, define) {",
              "code": "wrapAMD(function(require, define) {\n\n((function() {\n\n    function Domplate(exports) {\n\n/**\n * Original source by Joe Hewitt (http://joehewitt.com/).\n * @see http://code.google.com/p/fbug/source/browse/branches/firebug1.4/content/firebug/domplate.js\n */\n\n/**\n * Modifications by Christoph Dorn <christoph@christophdorn.com>:\n * \n * Sep  7, 2008: Added DomplateDebug logging\n * Sep 10, 2008: Added support for multiple function arguments\n * Sep 16, 2008: Removed calls to FBTrace as DomplateDebug does that now\n *               Removed requirement for FBL\n *               Removed use of top. scope\n *               Started work on IF support\n * \n * \n */\n\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\nexports.tags = {};\nexports.tags._domplate_ = exports;\n\n\nvar DomplateTag = exports.DomplateTag = function DomplateTag(tagName)\n{\n    this.tagName = tagName;\n}\n\nfunction DomplateEmbed()\n{\n}\n\nfunction DomplateLoop()\n{\n}\n\nfunction DomplateIf()\n{\n}\n\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\n\n\nfunction copyArray(oldArray)\n{\n    var ary = [];\n    if (oldArray)\n        for (var i = 0; i < oldArray.length; ++i)\n            ary.push(oldArray[i]);\n   return ary;\n}\n\nfunction copyObject(l, r)\n{\n    var m = {};\n    extend(m, l);\n    extend(m, r);\n    return m;\n}\n\nfunction extend(l, r)\n{\n    for (var n in r)\n        l[n] = r[n];\n}\n\n\n// * DEBUG * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\nvar DomplateDebug\nDomplateDebug = exports.DomplateDebug = {\n  \n  enabled: false,\n  console: null,\n  \n  replaceInstance: function(instance) {\n      DomplateDebug = instance;\n  },\n  \n  setEnabled: function(enabled)\n  {\n      this.enabled = enabled;\n  },\n  \n  setConsole: function(console)\n  {\n      this.console = console;\n  },\n  \n  log: function(label, value)\n  {\n      if(!this.enabled) return;\n      if(arguments.length==2) {\n        this.console.log(label+': ',value);\n      } else {\n        this.console.log(label);\n      }\n  },\n  logVar: function(label, value)\n  {\n      if(!this.enabled) return;\n      this.console.log(label+': ',[value]);\n  },\n  logInfo: function(message)\n  {\n      if(!this.enabled) return;\n      this.console.info(message);\n  },\n  logWarn: function(message)\n  {\n      if(!this.enabled) return;\n      this.console.warn(message);\n  },\n  logJs: function(label, value)\n  {\n      if(!this.enabled) return;\n      value = value.replace(/;/g,';\\n');\n      value = value.replace(/{/g,'{\\n');\n      this.console.info(value);\n  },\n  reformatArguments: function(args)\n  {\n      if(!this.enabled) return;\n      var returnVar = new Array();\n      for (var i = 0; i < args.length; ++i)\n      {\n          var index = args[i];\n          returnVar.push([index]);\n      }\n      return {'arguments':returnVar}; \n  },\n  startGroup: function(label,args)\n  {\n      if(!this.enabled) return;\n      if(this.isArray(label)) {\n        label.splice(1,0,' - ');\n        this.console.group.apply(this,label);\n      }  else {\n        this.console.group(label);\n      } \n      if(args!=null) {\n          this.logVar('ARGUMENTS',DomplateDebug.reformatArguments(args));\n      }  \n  },\n  endGroup: function()\n  {\n      if(!this.enabled) return;\n      this.console.groupEnd();\n  },\n  isArray: function(obj) {\n      if (obj.constructor.toString().indexOf(\"Array\") != -1) {\n          return true;\n      }\n      return false;\n  }\n}\n// * DEBUG * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\n\n\n\n\n\nvar womb = null;\n\nvar domplate = exports.domplate = function()\n{\n    var lastSubject;\n    for (var i = 0; i < arguments.length; ++i)\n        lastSubject = lastSubject ? copyObject(lastSubject, arguments[i]) : arguments[i];\n\n    for (var name in lastSubject)\n    {\n        var val = lastSubject[name];\n        if (isTag(val))\n            val.tag.subject = lastSubject;\n    }\n\n    return lastSubject;\n};\n\n\ndomplate.context = function(context, fn)\n{\n    var lastContext = domplate.lastContext;\n    domplate.topContext = context;\n    fn.apply(context);\n    domplate.topContext = lastContext;\n};\n\nexports.tags.TAG = function()\n//domplate.TAG = function()\n{\n    var embed = new DomplateEmbed();\n    return embed.merge(arguments);\n};\n\nexports.tags.FOR = domplate.FOR = function()\n{\n    var loop = new DomplateLoop();\n    return loop.merge(arguments);\n};\n\nexports.tags.IF = domplate.IF = function()\n{\n    var loop = new DomplateIf();\n    return loop.merge(arguments);\n};\n\nDomplateTag.prototype =\n{\n    merge: function(args, oldTag)\n    {\n        if (oldTag)\n            this.tagName = oldTag.tagName;\n\n        this.context = oldTag ? oldTag.context : null;\n        this.subject = oldTag ? oldTag.subject : null;\n        this.attrs = oldTag ? copyObject(oldTag.attrs) : {};\n        this.classes = oldTag ? copyObject(oldTag.classes) : {};\n        this.props = oldTag ? copyObject(oldTag.props) : null;\n        this.listeners = oldTag ? copyArray(oldTag.listeners) : null;\n        this.children = oldTag ? copyArray(oldTag.children) : [];\n        this.vars = oldTag ? copyArray(oldTag.vars) : [];\n\n        var attrs = args.length ? args[0] : null;\n        var hasAttrs = typeof(attrs) == \"object\" && !isTag(attrs);\n\n        this.resources = {};\n        this.children = [];\n\n        if (domplate.topContext)\n            this.context = domplate.topContext;\n\n        if (args.length)\n            parseChildren(args, hasAttrs ? 1 : 0, this.vars, this.children);\n\n        if (hasAttrs)\n            this.parseAttrs(attrs);\n\n        return creator(this, DomplateTag);\n    },\n\n    parseAttrs: function(args)\n    {\n        DomplateDebug.startGroup('DomplateTag.parseAttrs',arguments);\n\n        for (var name in args)\n        {\n            DomplateDebug.logVar('name',name);\n            DomplateDebug.logVar('args[name]',args[name]);\n\n            var val = parseValue(args[name]);\n            readPartNames(val, this.vars);\n\n            if (name.indexOf(\"on\") == 0)\n            {\n                var eventName = name.substr(2);\n                if (!this.listeners)\n                    this.listeners = [];\n                this.listeners.push(eventName, val);\n            }\n            else if (name[0] == \"_\")\n            {\n                var propName = name.substr(1);\n                if (!this.props)\n                    this.props = {};\n                this.props[propName] = val;\n            }\n            else if (name[0] == \"$\")\n            {\n                var className = name.substr(1);\n                if (!this.classes)\n                    this.classes = {};\n                this.classes[className] = val;\n            }\n            else\n            {\n                if (name == \"class\" && this.attrs.hasOwnProperty(name) )\n                    this.attrs[name] += \" \" + val;\n                else\n                    this.attrs[name] = val;\n            }\n        }\n\n        DomplateDebug.endGroup();\n    },\n\n    compile: function()\n    {\n        DomplateDebug.startGroup(['DomplateTag.compile',this.tagName]);\n\n        if (this.renderMarkup) {\n    \n            DomplateDebug.log('ALREADY COMPILED');\n\n            DomplateDebug.endGroup();\n            return;\n        }\n\n        if(this.subject._resources) {\n            this.resources = this.subject._resources();     \n        }\n\n        this.compileMarkup();\n        this.compileDOM();\n\n        DomplateDebug.endGroup();\n    },\n\n    compileMarkup: function()\n    {\n        DomplateDebug.startGroup('DomplateTag.compileMarkup');\n\n        this.markupArgs = [];\n        var topBlock = [], topOuts = [], blocks = [], info = {args: this.markupArgs, argIndex: 0};\n         \n        this.generateMarkup(topBlock, topOuts, blocks, info);\n        this.addCode(topBlock, topOuts, blocks);\n\n        var fnBlock = ['(function (__code__, __context__, __in__, __out__'];\n        for (var i = 0; i < info.argIndex; ++i)\n            fnBlock.push(', s', i);\n        fnBlock.push(') {');\n\n        fnBlock.push('  DomplateDebug.startGroup([\\' .. Run Markup .. \\',\\''+this.tagName+'\\'],arguments);');\n        fnBlock.push('  DomplateDebug.logJs(\\'js\\',\\'__SELF__JS__\\');');\n\n        if (this.subject)\n            fnBlock.push('  with (this) {');\n        if (this.context) \n            fnBlock.push('  with (__context__) {');\n        fnBlock.push('  with (__in__) {');\n\n        fnBlock.push.apply(fnBlock, blocks);\n\n        if (this.subject)\n            fnBlock.push('  }');\n        if (this.context)\n            fnBlock.push('  }');\n\n        fnBlock.push('DomplateDebug.endGroup();');\n\n        fnBlock.push('}})');\n\n        var self = this;\n        function __link__(tag, code, outputs, args)\n        {\n            if (!tag) {\n                DomplateDebug.logWarn('tag not defined');\n                return;\n            }\n            if (!tag.tag) {\n                DomplateDebug.logVar('tag', tag);\n                DomplateDebug.logWarn('tag.tag not defined');\n                return;\n            }\n\n            tag.tag.compile();\n\n            // merge resources from sub-tags\n            if(self.resources && tag.tag.resources && tag.tag.resources!==self.resources) {\n                for( var key in tag.tag.resources ) {\n                    self.resources[key] = tag.tag.resources[key];\n                }\n            }\n\n            var tagOutputs = [];\n            var markupArgs = [code, (tag.tag.context)?tag.tag.context:null, args, tagOutputs];\n            markupArgs.push.apply(markupArgs, tag.tag.markupArgs);\n            tag.tag.renderMarkup.apply(tag.tag.subject, markupArgs);\n\n            outputs.push(tag);\n            outputs.push(tagOutputs);\n        }\n\n        function __escape__(value)\n        {\n            function replaceChars(ch)\n            {\n                switch (ch)\n                {\n                    case \"<\":\n                        return \"&lt;\";\n                    case \">\":\n                        return \"&gt;\";\n                    case \"&\":\n                        return \"&amp;\";\n                    case \"'\":\n                        return \"&#39;\";\n                    case '\"':\n                        return \"&quot;\";\n                }\n                return \"?\";\n            };\n            return String(value).replace(/[<>&\"']/g, replaceChars);\n        }\n\n        function __loop__(iter, outputs, fn)\n        {\n            var iterOuts = [];\n            outputs.push(iterOuts);\n\n            if (iter instanceof Array)\n                iter = new ArrayIterator(iter);\n\n            try\n            {\n                while (1)\n                {\n                    var value = iter.next();\n                    var itemOuts = [0,0];\n                    iterOuts.push(itemOuts);\n                    fn.apply(this, [value, itemOuts]);\n                }\n            }\n            catch (exc)\n            {\n                if (exc != StopIteration)\n                    throw exc;\n            }\n        }\n\n        function __if__(booleanVar, outputs, fn)\n        {\n            // \"outputs\" is what gets passed to the compiled DOM when it runs.\n            // It is used by the dom to make decisions as to how many times to\n            // run children for FOR loops etc ...\n            // For the IF feature we set a 1 or 0 depending on whether\n            // the sub template ran or not. If it did not run then no HTML\n            // markup was generated and accordingly the DOM elements should and\n            // can not be traversed.\n          \n            var ifControl = [];\n            outputs.push(ifControl);\n\n\n            DomplateDebug.logVar('j  .. booleanVar',booleanVar);\n\n            if(booleanVar) {\n              ifControl.push(1);\n              fn.apply(this, [ifControl]);\n            } else {\n              ifControl.push(0);\n            }\n        }\n\n        var js = fnBlock.join(\"\");\n        \n        DomplateDebug.logVar('js',js);\n\n        // Inject the compiled JS so we can view it later in the console when the code runs     \n        js = js.replace('__SELF__JS__',js.replace(/\\'/g,'\\\\\\''));\n        \n//system.print(js,'JS');\n        \n        this.renderMarkup = eval(js);\n\n        DomplateDebug.endGroup();\n    },\n\n    getVarNames: function(args)\n    {\n        if (this.vars)\n            args.push.apply(args, this.vars);\n\n        for (var i = 0; i < this.children.length; ++i)\n        {\n            var child = this.children[i];\n            if (isTag(child))\n                child.tag.getVarNames(args);\n            else if (child instanceof Parts)\n            {\n                for (var i = 0; i < child.parts.length; ++i)\n                {\n                    if (child.parts[i] instanceof Variables)\n                    {\n                        var name = child.parts[i].names[0];\n                        var names = name.split(\".\");\n                        args.push(names[0]);\n                    }\n                }\n            }\n        }\n    },\n\n    generateMarkup: function(topBlock, topOuts, blocks, info)\n    {\n        topBlock.push(',\"<', this.tagName, '\"');\n\n        for (var name in this.attrs)\n        {\n            if (name != \"class\")\n            {\n                var val = this.attrs[name];\n                topBlock.push(', \" ', name, '=\\\\\"\"');\n                addParts(val, ',', topBlock, info, true);\n                topBlock.push(', \"\\\\\"\"');\n            }\n        }\n\n        if (this.listeners)\n        {\n            for (var i = 0; i < this.listeners.length; i += 2)\n                readPartNames(this.listeners[i+1], topOuts);\n        }\n\n        if (this.props)\n        {\n            for (var name in this.props)\n                readPartNames(this.props[name], topOuts);\n        }\n\n        if ( this.attrs.hasOwnProperty(\"class\") || this.classes)\n        {\n            topBlock.push(', \" class=\\\\\"\"');\n            if (this.attrs.hasOwnProperty(\"class\"))\n                addParts(this.attrs[\"class\"], ',', topBlock, info, true);\n              topBlock.push(', \" \"');\n            for (var name in this.classes)\n            {\n                topBlock.push(', (');\n                addParts(this.classes[name], '', topBlock, info);\n                topBlock.push(' ? \"', name, '\" + \" \" : \"\")');\n            }\n            topBlock.push(', \"\\\\\"\"');\n        }\n        if(this.tagName==\"br\") {\n            topBlock.push(',\"/>\"');\n        } else {\n            topBlock.push(',\">\"');\n            this.generateChildMarkup(topBlock, topOuts, blocks, info);\n    \n            topBlock.push(',\"</', this.tagName, '>\"');\n        }\n    },\n\n    generateChildMarkup: function(topBlock, topOuts, blocks, info)\n    {\n        for (var i = 0; i < this.children.length; ++i)\n        {\n            var child = this.children[i];\n            if (isTag(child))\n                child.tag.generateMarkup(topBlock, topOuts, blocks, info);\n            else\n                addParts(child, ',', topBlock, info, true);\n        }\n    },\n\n    addCode: function(topBlock, topOuts, blocks)\n    {\n        if (topBlock.length)\n            blocks.push('    __code__.push(\"\"', topBlock.join(\"\"), ');');\n        if (topOuts.length)\n            blocks.push('__out__.push(', topOuts.join(\",\"), ');');\n        topBlock.splice(0, topBlock.length);\n        topOuts.splice(0, topOuts.length);\n    },\n\n    addLocals: function(blocks)\n    {\n        var varNames = [];\n        this.getVarNames(varNames);\n\n        var map = {};\n        for (var i = 0; i < varNames.length; ++i)\n        {\n            var name = varNames[i];\n            if ( map.hasOwnProperty(name) )\n                continue;\n\n            map[name] = 1;\n            var names = name.split(\".\");\n            blocks.push('var ', names[0] + ' = ' + '__in__.' + names[0] + ';');\n        }\n    },\n\n    compileDOM: function()\n    {\n        DomplateDebug.startGroup('DomplateTag.compileDOM');\n      \n        var path = [];\n        var blocks = [];\n        this.domArgs = [];\n        path.embedIndex = 0;\n        path.loopIndex = 0;\n        path.ifIndex = 0;\n        path.staticIndex = 0;\n        path.renderIndex = 0;\n        var nodeCount = this.generateDOM(path, blocks, this.domArgs);\n\n        var fnBlock = ['(function (root, context, o'];\n        for (var i = 0; i < path.staticIndex; ++i)\n            fnBlock.push(', ', 's'+i);\n        for (var i = 0; i < path.renderIndex; ++i)\n            fnBlock.push(', ', 'd'+i);\n        fnBlock.push(') {');\n\n        fnBlock.push('  DomplateDebug.startGroup([\\' .. Run DOM .. \\',\\''+this.tagName+'\\'],arguments);');\n\n        fnBlock.push('  DomplateDebug.logJs(\\'js\\',\\'__SELF__JS__\\');');\n\n        \n        for (var i = 0; i < path.loopIndex; ++i)\n            fnBlock.push('  var l', i, ' = 0;');\n        for (var i = 0; i < path.ifIndex; ++i)\n            fnBlock.push('  var if_', i, ' = 0;');\n        for (var i = 0; i < path.embedIndex; ++i)\n            fnBlock.push('  var e', i, ' = 0;');\n\n        if (this.subject) {\n            fnBlock.push('  with (this) {');\n        }\n        if (this.context) {\n            fnBlock.push('    with (context) {');\n            fnBlock.push('      DomplateDebug.logVar(\\'context\\',context);');\n        }\n\n        fnBlock.push(blocks.join(\"\"));\n\n        if (this.context)\n            fnBlock.push('    }');\n        if (this.subject)\n            fnBlock.push('  }');\n\n        fnBlock.push('  DomplateDebug.endGroup();');\n\n        fnBlock.push('  return ', nodeCount, ';');\n        fnBlock.push('})');\n\n        function __bind__(object, fn)\n        {\n            return function(event) { return fn.apply(object, [event]); }\n        }\n\n        function __link__(node, tag, args)\n        {\n            DomplateDebug.startGroup('__link__',arguments);\n\n            if (!tag) {\n                DomplateDebug.logWarn('tag not defined');\n                return;\n            }\n            if (!tag.tag) {\n                DomplateDebug.logVar('tag', tag);\n                DomplateDebug.logWarn('tag.tag not defined');\n                return;\n            }\n            \n            tag.tag.compile();\n\n            var domArgs = [node, (tag.tag.context)?tag.tag.context:null, 0];\n            domArgs.push.apply(domArgs, tag.tag.domArgs);\n            domArgs.push.apply(domArgs, args);\n\n            var oo =tag.tag.renderDOM.apply(tag.tag.subject, domArgs);\n            \n            DomplateDebug.endGroup();\n            \n            return oo;\n        }\n\n        var self = this;\n        function __loop__(iter, fn)\n        {\n            DomplateDebug.startGroup('__loop__',arguments);\n            DomplateDebug.logVar('iter',iter);\n            DomplateDebug.logVar('fn',fn);\n\n            var nodeCount = 0;\n            for (var i = 0; i < iter.length; ++i)\n            {\n                iter[i][0] = i;\n                iter[i][1] = nodeCount;\n                nodeCount += fn.apply(this, iter[i]);\n    \n                DomplateDebug.logVar(' .. nodeCount',nodeCount);\n            }\n\n            DomplateDebug.logVar('iter',iter);\n\n            DomplateDebug.endGroup();\n            \n            return nodeCount;\n        }\n\n        function __if__(control, fn)\n        {\n            DomplateDebug.startGroup('__if__',arguments);\n\n            DomplateDebug.logVar('control', control);\n            DomplateDebug.logVar('fn',fn);\n\n            // Check the control structure to see if we should run the IF\n            if(control && control[0]) {\n              // Lets run it\n              // TODO: If in debug mode add info about the IF expression that caused the running\n              DomplateDebug.logInfo('Running IF');\n              fn.apply(this, [0,control[1]]);\n            } else {\n              // We need to skip it\n              // TODO: If in debug mode add info about the IF expression that caused the skip\n              DomplateDebug.logInfo('Skipping IF');\n            }\n    \n            DomplateDebug.endGroup();\n        }\n\n        function __path__(parent, offset)\n        {\n            DomplateDebug.startGroup('__path__',arguments);\n            DomplateDebug.logVar('parent',parent);\n\n            var root = parent;\n\n            for (var i = 2; i < arguments.length; ++i)\n            {\n                var index = arguments[i];\n\n                if (i == 3)\n                    index += offset;\n\n                if (index == -1) {\n                    parent = parent.parentNode;\n                } else {\n                    parent = parent.childNodes[index];\n                }    \n            }\n\n            DomplateDebug.endGroup();\n\n            return parent;\n        }\n\n        var js = fnBlock.join(\"\");\n        \n        DomplateDebug.logVar('js',js);\n        \n        // Inject the compiled JS so we can view it later in the console when the code runs     \n        js = js.replace('__SELF__JS__',js.replace(/\\'/g,'\\\\\\''));\n\n        this.renderDOM = eval(js);\n        \n        DomplateDebug.endGroup();\n    },\n\n    generateDOM: function(path, blocks, args)\n    {\n        DomplateDebug.startGroup(['DomplateTag.generateDOM',this.tagName],arguments);\n\n        if (this.listeners || this.props)\n            this.generateNodePath(path, blocks);\n\n        if (this.listeners)\n        {\n            for (var i = 0; i < this.listeners.length; i += 2)\n            {\n                var val = this.listeners[i+1];\n                var arg = generateArg(val, path, args);\n                blocks.push('node.addEventListener(\"', this.listeners[i], '\", __bind__(this, ', arg, '), false);');\n            }\n        }\n\n        if (this.props)\n        {\n            for (var name in this.props)\n            {\n                var val = this.props[name];\n                var arg = generateArg(val, path, args);\n                blocks.push('node.', name, ' = ', arg, ';');\n            }\n        }\n\n        this.generateChildDOM(path, blocks, args);\n        DomplateDebug.endGroup();        \n        return 1;\n    },\n\n    generateNodePath: function(path, blocks)\n    {\n        DomplateDebug.startGroup('DomplateTag.generateNodePath',arguments);\n\n        blocks.push(\"        node = __path__(root, o\");\n        for (var i = 0; i < path.length; ++i)\n            blocks.push(\",\", path[i]);\n        blocks.push(\");\");\n        \n        DomplateDebug.endGroup();\n    },\n\n    generateChildDOM: function(path, blocks, args)\n    {\n        path.push(0);\n        for (var i = 0; i < this.children.length; ++i)\n        {\n            var child = this.children[i];\n            if (isTag(child))\n                path[path.length-1] += '+' + child.tag.generateDOM(path, blocks, args);\n            else\n                path[path.length-1] += '+1';\n        }\n        path.pop();\n    }\n};\n\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\nDomplateEmbed.prototype = copyObject(DomplateTag.prototype,\n{\n    merge: function(args, oldTag)\n    {\n        DomplateDebug.startGroup('DomplateEmbed.merge',arguments);\n\n        this.value = oldTag ? oldTag.value : parseValue(args[0]);\n        this.attrs = oldTag ? oldTag.attrs : {};\n        this.vars = oldTag ? copyArray(oldTag.vars) : [];\n\n        var attrs = args[1];\n        for (var name in attrs)\n        {\n            var val = parseValue(attrs[name]);\n            this.attrs[name] = val;\n            readPartNames(val, this.vars);\n        }\n\n        var retval = creator(this, DomplateEmbed);\n        \n        DomplateDebug.endGroup();\n\n        return retval;        \n    },\n\n    // Used for locales only\n    getVarNames: function(names)\n    {\n        if (this.value instanceof Parts)\n            names.push(this.value.parts[0].name);\n\n        if (this.vars)\n            names.push.apply(names, this.vars);\n    },\n\n    generateMarkup: function(topBlock, topOuts, blocks, info)\n    {\n        DomplateDebug.startGroup('DomplateEmbed.generateMarkup',arguments);\n\n        this.addCode(topBlock, topOuts, blocks);\n\n        blocks.push('__link__(');\n        addParts(this.value, '', blocks, info);\n        blocks.push(', __code__, __out__, {');\n\n        var lastName = null;\n        for (var name in this.attrs)\n        {\n            if (lastName)\n                blocks.push(',');\n            lastName = name;\n\n            var val = this.attrs[name];\n            blocks.push('\"', name, '\":');\n            addParts(val, '', blocks, info);\n        }\n\n        blocks.push('});');\n        //this.generateChildMarkup(topBlock, topOuts, blocks, info);\n\n        DomplateDebug.endGroup();\n    },\n\n    generateDOM: function(path, blocks, args)\n    {\n        DomplateDebug.startGroup('DomplateEmbed.generateDOM',arguments);\n\n        var embedName = 'e'+path.embedIndex++;\n\n        this.generateNodePath(path, blocks);\n\n        var valueName = 'd' + path.renderIndex++;\n        var argsName = 'd' + path.renderIndex++;\n        \n        blocks.push('        ',embedName + ' = __link__(node, ', valueName, ', ', argsName, ');');\n        \n        DomplateDebug.endGroup();\n\n        return embedName;\n    }\n});\n\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\nDomplateLoop.prototype = copyObject(DomplateTag.prototype,\n{\n    merge: function(args, oldTag)\n    {\n        DomplateDebug.startGroup('DomplateLoop.merge',arguments);\n\n        this.varName = oldTag ? oldTag.varName : args[0];\n        this.iter = oldTag ? oldTag.iter : parseValue(args[1]);\n        this.vars = [];\n\n        this.children = oldTag ? copyArray(oldTag.children) : [];\n\n        var offset = Math.min(args.length, 2);\n        parseChildren(args, offset, this.vars, this.children);\n\n        var retval = creator(this, DomplateLoop);\n\n        DomplateDebug.endGroup();\n        \n        return retval;\n    },\n\n    // Used for locales only\n    getVarNames: function(names)\n    {\n        if (this.iter instanceof Parts)\n            names.push(this.iter.parts[0].name);\n\n        DomplateTag.prototype.getVarNames.apply(this, [names]);\n    },\n\n    generateMarkup: function(topBlock, topOuts, blocks, info)\n    {\n        DomplateDebug.startGroup('DomplateLoop.generateMarkup',arguments);\n\n        this.addCode(topBlock, topOuts, blocks);\n\n        DomplateDebug.logVar('this.iter',this.iter);\n\n        // We are in a FOR loop and our this.iter property contains\n        // either a simple function name as a string or a Parts object\n        // with only ONE Variables object. There is only one variables object\n        // as the FOR argument can contain only ONE valid function callback\n        // with optional arguments or just one variable. Allowed arguments are\n        // func or $var or $var.sub or $var|func or $var1,$var2|func or $var|func1|func2 or $var1,$var2|func1|func2\n        var iterName;\n        if (this.iter instanceof Parts)\n        {\n            // We have a function with optional aruments or just one variable\n            var part = this.iter.parts[0];\n            \n            // Join our function arguments or variables\n            // If the user has supplied multiple variables without a function\n            // this will create an invalid result and we should probably add an\n            // error message here or just take the first variable\n            iterName = part.names.join(',');\n\n            // Nest our functions\n            if (part.format)\n            {\n                DomplateDebug.logVar('part.format',part.format);\n        \n                for (var i = 0; i < part.format.length; ++i)\n                    iterName = part.format[i] + \"(\" + iterName + \")\";\n            }\n        } else {\n            // We have just a simple function name without any arguments\n            iterName = this.iter;\n        }\n        \n        DomplateDebug.logVar('iterName',iterName);\n\n        blocks.push('    __loop__.apply(this, [', iterName, ', __out__, function(', this.varName, ', __out__) {');\n        this.generateChildMarkup(topBlock, topOuts, blocks, info);\n        this.addCode(topBlock, topOuts, blocks);\n        blocks.push('    }]);');\n\n        DomplateDebug.endGroup();\n    },\n\n    generateDOM: function(path, blocks, args)\n    {\n        DomplateDebug.startGroup('DomplateLoop.generateDOM',arguments);\n\n        var iterName = 'd'+path.renderIndex++;\n        var counterName = 'i'+path.loopIndex;\n        var loopName = 'l'+path.loopIndex++;\n\n        if (!path.length)\n            path.push(-1, 0);\n\n        var preIndex = path.renderIndex;\n        path.renderIndex = 0;\n\n        var nodeCount = 0;\n\n        var subBlocks = [];\n        var basePath = path[path.length-1];\n        for (var i = 0; i < this.children.length; ++i)\n        {\n            path[path.length-1] = basePath+'+'+loopName+'+'+nodeCount;\n\n            var child = this.children[i];\n            if (isTag(child))\n                nodeCount += '+' + child.tag.generateDOM(path, subBlocks, args);\n            else\n                nodeCount += '+1';\n        }\n\n        path[path.length-1] = basePath+'+'+loopName;\n\n        blocks.push('      ',loopName,' = __loop__.apply(this, [', iterName, ', function(', counterName,',',loopName);\n        for (var i = 0; i < path.renderIndex; ++i)\n            blocks.push(',d'+i);\n        blocks.push(') {');\n        \n        blocks.push('       DomplateDebug.logVar(\\'  .. '+counterName+' (counterName)\\','+counterName+');');\n        blocks.push('       DomplateDebug.logVar(\\'  .. '+loopName+' (loopName)\\','+loopName+');');\n        \n        blocks.push(subBlocks.join(\"\"));\n        blocks.push('        return ', nodeCount, ';');\n        blocks.push('      }]);');\n\n        path.renderIndex = preIndex;\n\n        DomplateDebug.endGroup();\n\n        return loopName;\n    }\n});\n\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\nDomplateIf.prototype = copyObject(DomplateTag.prototype,\n{\n    merge: function(args, oldTag)\n    {\n        DomplateDebug.startGroup('DomplateIf.merge',arguments);\n\n        // This is the first argument to IF() which needs to evaluate to TRUE or FALSE\n        // It can be a plain variable or a variable with formatters chained to it\n        this.booleanVar = oldTag ? oldTag.booleanVar : parseValue(args[0]);\n        this.vars = [];\n\n        this.children = oldTag ? copyArray(oldTag.children) : [];\n\n        var offset = Math.min(args.length, 1);\n        parseChildren(args, offset, this.vars, this.children);\n\n        var retval = creator(this, DomplateIf);\n\n        DomplateDebug.endGroup();\n        \n        return retval;\n    },\n\n    // Used for locales only\n    getVarNames: function(names)\n    {\n        if (this.booleanVar instanceof Parts)\n            names.push(this.booleanVar.parts[0].name);\n\n        DomplateTag.prototype.getVarNames.apply(this, [names]);\n    },\n\n    generateMarkup: function(topBlock, topOuts, blocks, info)\n    {\n        DomplateDebug.startGroup('DomplateIf.generateMarkup',arguments);\n\n        this.addCode(topBlock, topOuts, blocks);\n\n        DomplateDebug.logVar('this.booleanVar',this.booleanVar);\n\n\n        // Generate the expression to be used for the if(expr) { ... }\n        var expr;\n        if (this.booleanVar instanceof Parts)\n        {\n            // We have a function with optional aruments or just one variable\n            var part = this.booleanVar.parts[0];\n            \n            // Join our function arguments or variables\n            // If the user has supplied multiple variables without a function\n            // this will create an invalid result and we should probably add an\n            // error message here or just take the first variable\n            expr = part.names.join(',');\n\n            // Nest our functions\n            if (part.format)\n            {\n                DomplateDebug.logVar('part.format',part.format);\n        \n                for (var i = 0; i < part.format.length; ++i)\n                    expr = part.format[i] + \"(\" + expr + \")\";\n            }\n        } else {\n            // We have just a simple function name without any arguments\n            expr = this.booleanVar;\n        }\n        \n        DomplateDebug.logVar('expr',expr);\n\n        blocks.push('__if__.apply(this, [', expr, ', __out__, function(__out__) {');\n        this.generateChildMarkup(topBlock, topOuts, blocks, info);\n        this.addCode(topBlock, topOuts, blocks);\n        blocks.push('}]);');\n\n        DomplateDebug.endGroup();\n    },\n\n    generateDOM: function(path, blocks, args)\n    {\n        DomplateDebug.startGroup('DomplateIf.generateDOM',arguments);\n\n        var controlName = 'd'+path.renderIndex++;\n        var ifName = 'if_'+path.ifIndex++;\n\n        if (!path.length)\n            path.push(-1, 0);\n\n        var preIndex = path.renderIndex;\n        path.renderIndex = 0;\n\n        var nodeCount = 0;\n\n        var subBlocks = [];\n//        var basePath = path[path.length-1];\n\n        for (var i = 0; i < this.children.length; ++i)\n        {\n//            path[path.length-1] = basePath+'+'+ifName+'+'+nodeCount;\n\n            var child = this.children[i];\n            if (isTag(child))\n                nodeCount += '+' + child.tag.generateDOM(path, subBlocks, args);\n            else\n                nodeCount += '+1';\n        }\n\n//        path[path.length-1] = basePath+'+'+ifName;\n\n        blocks.push('      ',ifName,' = __if__.apply(this, [', controlName, ', function(',ifName);\n        for (var i = 0; i < path.renderIndex; ++i)\n            blocks.push(',d'+i);\n        blocks.push(') {');\n        \n        blocks.push('       DomplateDebug.logVar(\\'  .. d0\\',d0);');\n        blocks.push('       DomplateDebug.logVar(\\'  .. '+ifName+' (ifName)\\','+ifName+');');\n        \n        blocks.push(subBlocks.join(\"\"));\n//        blocks.push('        return ', nodeCount, ';');\n        blocks.push('      }]);');\n\n        path.renderIndex = preIndex;\n\n        DomplateDebug.endGroup();\n\n        return controlName;\n    }\n});\n\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\nfunction Variables(names,format)\n{\n    this.names = names;\n    this.format = format;\n}\n\nfunction Parts(parts)\n{\n    this.parts = parts;\n}\n\n// ************************************************************************************************\n\nfunction parseParts(str)\n{\n    DomplateDebug.startGroup('parseParts',arguments);\n    \n    var index = 0;\n    var parts = [];\n    var m;\n\n    // Match $var or $var.sub or $var|func or $var1,$var2|func or $var|func1|func2 or $var1,$var2|func1|func2\n    var re = /\\$([_A-Za-z][$_A-Za-z0-9.,|]*)/g;\n    while (m = re.exec(str))\n    {\n        DomplateDebug.logVar('m',m);\n\n        var pre = str.substr(index, (re.lastIndex-m[0].length)-index);\n        if (pre)\n            parts.push(pre);\n\n        var segs = m[1].split(\"|\");\n        var vars = segs[0].split(\",$\");\n\n        // Assemble the variables object and append to buffer\n        parts.push(new Variables(vars,segs.splice(1)));\n        \n        index = re.lastIndex;\n    }\n\n    // No matches found at all so we return the whole string\n    if (!index) {\n\n        DomplateDebug.logVar('str',str);\n        \n        DomplateDebug.endGroup();\n    \n        return str;\n    }\n\n    // If we have data after our last matched index we append it here as the final step\n    var post = str.substr(index);\n    if (post)\n        parts.push(post);\n\n\n    var retval = new Parts(parts);\n    \n    DomplateDebug.logVar('retval',retval);\n    \n    DomplateDebug.endGroup();\n    \n    return retval;\n}\n\nfunction parseValue(val)\n{\n    return typeof(val) == 'string' ? parseParts(val) : val;\n}\n\nfunction parseChildren(args, offset, vars, children)\n{\n    DomplateDebug.startGroup('parseChildren',arguments);\n\n    for (var i = offset; i < args.length; ++i)\n    {\n        var val = parseValue(args[i]);\n        children.push(val);\n        readPartNames(val, vars);\n    }\n    DomplateDebug.endGroup();\n}\n\nfunction readPartNames(val, vars)\n{\n    if (val instanceof Parts)\n    {\n        for (var i = 0; i < val.parts.length; ++i)\n        {\n            var part = val.parts[i];\n            if (part instanceof Variables)\n                vars.push(part.names[0]);\n        }\n    }\n}\n\nfunction generateArg(val, path, args)\n{\n    if (val instanceof Parts)\n    {\n        var vals = [];\n        for (var i = 0; i < val.parts.length; ++i)\n        {\n            var part = val.parts[i];\n            if (part instanceof Variables)\n            {\n                var varName = 'd'+path.renderIndex++;\n                if (part.format)\n                {\n                    for (var j = 0; j < part.format.length; ++j)\n                        varName = part.format[j] + '(' + varName + ')';\n                }\n\n                vals.push(varName);\n            }\n            else\n                vals.push('\"'+part.replace(/\"/g, '\\\\\"')+'\"');\n        }\n\n        return vals.join('+');\n    }\n    else\n    {\n        args.push(val);\n        return 's' + path.staticIndex++;\n    }\n}\n\nfunction addParts(val, delim, block, info, escapeIt)\n{\n    var vals = [];\n    if (val instanceof Parts)\n    {\n        for (var i = 0; i < val.parts.length; ++i)\n        {\n            var part = val.parts[i];\n            if (part instanceof Variables)\n            {\n                var partName = part.names.join(\",\");\n                if (part.format)\n                {\n                    for (var j = 0; j < part.format.length; ++j)\n                        partName = part.format[j] + \"(\" + partName + \")\";\n                }\n\n                if (escapeIt)\n                    vals.push(\"__escape__(\" + partName + \")\");\n                else\n                    vals.push(partName);\n            }\n            else\n                vals.push('\"'+ part + '\"');\n        }\n    }\n    else if (isTag(val))\n    {\n        info.args.push(val);\n        vals.push('s'+info.argIndex++);\n    }\n    else\n        vals.push('\"'+ val + '\"');\n\n    var parts = vals.join(delim);\n    if (parts)\n        block.push(delim, parts);\n}\n\nfunction isTag(obj)\n{\n    return (typeof(obj) == \"function\" || obj instanceof Function) && !!obj.tag;\n}\n\nfunction creator(tag, cons)\n{\n    var fn = new Function(\n        \"var tag = arguments.callee.tag;\" +\n        \"var cons = arguments.callee.cons;\" +\n        \"var newTag = new cons();\" +\n        \"return newTag.merge(arguments, tag);\");\n\n    fn.tag = tag;\n    fn.cons = cons;\n    extend(fn, Renderer);\n\n    return fn;\n}\n\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\n\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\nfunction ArrayIterator(array)\n{\n    var index = -1;\n\n    this.next = function()\n    {\n        if (++index >= array.length)\n            throw StopIteration;\n\n        return array[index];\n    };\n}\n\nfunction StopIteration() {}\n\ndomplate.$break = function()\n{\n    throw StopIteration;\n};\n\n// ************************************************************************************************\n\nvar Renderer =\n{\n    checkDebug: function()\n    {\n        DomplateDebug.enabled = this.tag.subject._debug || false;\n    },\n    \n    renderHTML: function(args, outputs, self)\n    {\n        this.checkDebug();\n        \n        DomplateDebug.startGroup('Renderer.renderHTML',arguments);\n\n        var code = [];\n        var markupArgs = [code, (this.tag.context)?this.tag.context:null, args, outputs];\n        markupArgs.push.apply(markupArgs, this.tag.markupArgs);\n        this.tag.renderMarkup.apply(self ? self : this.tag.subject, markupArgs);\n\n        if(this.tag.resources && this.tag.subject._resourceListener) {\n            this.tag.subject._resourceListener.register(this.tag.resources);\n        }\n\n        DomplateDebug.endGroup();\n        return code.join(\"\");\n    },\n\n    insertRows: function(args, before, self)\n    {\n        this.checkDebug();\n\n        DomplateDebug.startGroup('Renderer.insertRows',arguments);\n\n        this.tag.compile();\n\n        var outputs = [];\n        var html = this.renderHTML(args, outputs, self);\n\n        var doc = before.ownerDocument;\n        var table = doc.createElement(\"table\");\n        table.innerHTML = html;\n\n        var tbody = table.firstChild;\n        var parent = before.localName == \"TR\" ? before.parentNode : before;\n        var after = before.localName == \"TR\" ? before.nextSibling : null;\n\n        var firstRow = tbody.firstChild, lastRow;\n        while (tbody.firstChild)\n        {\n            lastRow = tbody.firstChild;\n            if (after)\n                parent.insertBefore(lastRow, after);\n            else\n                parent.appendChild(lastRow);\n        }\n\n        var offset = 0;\n        if (before.localName == \"TR\")\n        {\n            var node = firstRow.parentNode.firstChild;\n            for (; node && node != firstRow; node = node.nextSibling)\n                ++offset;\n        }\n\n        var domArgs = [firstRow, this.tag.context, offset];\n        domArgs.push.apply(domArgs, this.tag.domArgs);\n        domArgs.push.apply(domArgs, outputs);\n\n        this.tag.renderDOM.apply(self ? self : this.tag.subject, domArgs);\n\n        DomplateDebug.endGroup();\n        return [firstRow, lastRow];\n    },\n\n    insertAfter: function(args, before, self)\n    {\n        this.checkDebug();\n\n        DomplateDebug.startGroup('Renderer.insertAfter',arguments);\n\n        this.tag.compile();\n\n        var outputs = [];\n        var html = this.renderHTML(args, outputs, self);\n\n        var doc = before.ownerDocument;\n        var range = doc.createRange();\n        range.selectNode(doc.body);\n        var frag = range.createContextualFragment(html);\n\n        var root = frag.firstChild;\n        if (before.nextSibling)\n            before.parentNode.insertBefore(frag, before.nextSibling);\n        else\n            before.parentNode.appendChild(frag);\n\n        var domArgs = [root, this.tag.context, 0];\n        domArgs.push.apply(domArgs, this.tag.domArgs);\n        domArgs.push.apply(domArgs, outputs);\n\n        this.tag.renderDOM.apply(self ? self : (this.tag.subject ? this.tag.subject : null),\n            domArgs);\n\n        DomplateDebug.endGroup();\n\n        return root;\n    },\n\n    replace: function(args, parent, self)\n    {\n        this.checkDebug();\n\n        DomplateDebug.startGroup('Renderer.replace',arguments);\n\n        this.tag.compile();\n\n        var outputs = [];\n        var html = this.renderHTML(args, outputs, self);\n\n        var root;\n        if (parent.nodeType == 1)\n        {\n            parent.innerHTML = html;\n            root = parent.firstChild;\n        }\n        else\n        {\n            if (!parent || parent.nodeType != 9)\n                parent = document;\n\n            if (!womb || womb.ownerDocument != parent)\n                womb = parent.createElement(\"div\");\n            womb.innerHTML = html;\n\n            root = womb.firstChild;\n            //womb.removeChild(root);\n        }\n\n        var domArgs = [root, (this.tag.context)?this.tag.context:null, 0];\n        domArgs.push.apply(domArgs, this.tag.domArgs);\n        domArgs.push.apply(domArgs, outputs);\n        this.tag.renderDOM.apply(self ? self : this.tag.subject, domArgs);\n\n        DomplateDebug.endGroup();\n\n        return root;\n    },\n\n    append: function(args, parent, self)\n    {\n        this.checkDebug();\n\n        DomplateDebug.startGroup('Renderer.append',arguments);\n\n        this.tag.compile();\n\n        var outputs = [];\n        var html = this.renderHTML(args, outputs, self);\n\n        DomplateDebug.logVar('outputs',outputs);\n\n        DomplateDebug.logVar('html',html);\n        \n        if (!womb || womb.ownerDocument != parent.ownerDocument)\n            womb = parent.ownerDocument.createElement(\"div\");\n\n        DomplateDebug.logVar('womb',womb);\n        womb.innerHTML = html;\n\n        root = womb.firstChild;\n        while (womb.firstChild)\n            parent.appendChild(womb.firstChild);\n\n        var domArgs = [root, this.tag.context, 0];\n        domArgs.push.apply(domArgs, this.tag.domArgs);\n        domArgs.push.apply(domArgs, outputs);\n\n        DomplateDebug.logVar('this.tag.subject',this.tag.subject);\n        DomplateDebug.logVar('self',self);\n        DomplateDebug.logVar('domArgs',domArgs);\n        \n        this.tag.renderDOM.apply(self ? self : this.tag.subject, domArgs);\n\n        DomplateDebug.endGroup();\n\n        return root;\n    },\n\n    render: function(args, self)\n    {\n        this.checkDebug();\n\n        DomplateDebug.startGroup('Renderer.render',arguments);\n\n        this.tag.compile();\n\n        var outputs = [];\n        var html = this.renderHTML(args, outputs, self);\n\n        DomplateDebug.endGroup();\n\n        return html;\n    }  \n};\n\n// ************************************************************************************************\n\n\nfunction defineTags()\n{\n        \n    for (var i = 0; i < arguments.length; ++i)\n    {\n        var tagName = arguments[i];\n        var fn = new Function(\"var newTag = new this._domplate_.DomplateTag('\"+tagName+\"'); return newTag.merge(arguments);\");\n\n        var fnName = tagName.toUpperCase();\n        exports.tags[fnName] = fn;\n    }\n}\n\ndefineTags(\n    \"a\", \"button\", \"br\", \"canvas\", \"col\", \"colgroup\", \"div\", \"fieldset\", \"form\", \"h1\", \"h2\", \"h3\", \"hr\",\n     \"img\", \"input\", \"label\", \"legend\", \"li\", \"ol\", \"optgroup\", \"option\", \"p\", \"pre\", \"select\",\n    \"span\", \"strong\", \"table\", \"tbody\", \"td\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"tr\", \"tt\", \"ul\"\n);\n\n    }\n\n    // Check for AMD\n    if (typeof define === \"function\") {\n        define(function() {\n            var exports = {};\n            Domplate(exports);\n            return exports;\n        });\n    } else\n    // Assume NodeJS\n    if (typeof exports === \"object\") {\n        Domplate(exports);\n    }\n\n})());\n\n\n})",
              "bottom": "})"
            },
            "dependencies": {
              "static": {},
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/pack.js": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/pack",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/pack.js",
            "descriptor": {
              "filename": "pack.js",
              "filepath": "../../insight.renderers.default/lib/php/pack.js",
              "mtime": 1420329340,
              "code": "\nrequire(\"../pack-helper\").init(exports, module, {\n    css: require(\"./pack.css\"),\n    getTemplates: function()\n    {\n        return [\n\n            // Second: Utility messages matched by various specific criteria\n            require(\"../insight/util/trimmed\"),\n\n            require(\"./primitives/array-indexed\"),\n            require(\"./primitives/array-associative\"),\n            require(\"./primitives/boolean\"),\n            require(\"./primitives/exception\"),\n            require(\"./primitives/float\"),\n            require(\"./primitives/integer\"),\n            require(\"./primitives/null\"),\n            require(\"./primitives/object\"),\n            require(\"./primitives/object-reference\"),\n            require(\"./primitives/resource\"),\n            require(\"./primitives/string\"),\n            require(\"./primitives/unknown\")\n        ];\n    }\n});\n",
              "globals": {
                "exports": {
                  "type": "reference"
                },
                "module": {
                  "type": "reference"
                },
                "require": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "./pack.css": {
                    "where": "inline"
                  },
                  "../insight/util/trimmed": {
                    "where": "inline"
                  },
                  "./primitives/array-indexed": {
                    "where": "inline"
                  },
                  "./primitives/array-associative": {
                    "where": "inline"
                  },
                  "./primitives/boolean": {
                    "where": "inline"
                  },
                  "./primitives/exception": {
                    "where": "inline"
                  },
                  "./primitives/float": {
                    "where": "inline"
                  },
                  "./primitives/integer": {
                    "where": "inline"
                  },
                  "./primitives/null": {
                    "where": "inline"
                  },
                  "./primitives/object": {
                    "where": "inline"
                  },
                  "./primitives/object-reference": {
                    "where": "inline"
                  },
                  "./primitives/resource": {
                    "where": "inline"
                  },
                  "./primitives/string": {
                    "where": "inline"
                  },
                  "./primitives/unknown": {
                    "where": "inline"
                  },
                  "../pack-helper": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/php';",
              "code": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/php';\n\nrequire(\"../pack-helper\").init(exports, module, {\n    css: require(\"./pack.css\"),\n    getTemplates: function()\n    {\n        return [\n\n            // Second: Utility messages matched by various specific criteria\n            require(\"../insight/util/trimmed\"),\n\n            require(\"./primitives/array-indexed\"),\n            require(\"./primitives/array-associative\"),\n            require(\"./primitives/boolean\"),\n            require(\"./primitives/exception\"),\n            require(\"./primitives/float\"),\n            require(\"./primitives/integer\"),\n            require(\"./primitives/null\"),\n            require(\"./primitives/object\"),\n            require(\"./primitives/object-reference\"),\n            require(\"./primitives/resource\"),\n            require(\"./primitives/string\"),\n            require(\"./primitives/unknown\")\n        ];\n    }\n});\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "./pack.css": {
                  "where": "inline"
                },
                "../insight/util/trimmed": {
                  "where": "inline"
                },
                "./primitives/array-indexed": {
                  "where": "inline"
                },
                "./primitives/array-associative": {
                  "where": "inline"
                },
                "./primitives/boolean": {
                  "where": "inline"
                },
                "./primitives/exception": {
                  "where": "inline"
                },
                "./primitives/float": {
                  "where": "inline"
                },
                "./primitives/integer": {
                  "where": "inline"
                },
                "./primitives/null": {
                  "where": "inline"
                },
                "./primitives/object": {
                  "where": "inline"
                },
                "./primitives/object-reference": {
                  "where": "inline"
                },
                "./primitives/resource": {
                  "where": "inline"
                },
                "./primitives/string": {
                  "where": "inline"
                },
                "./primitives/unknown": {
                  "where": "inline"
                },
                "../pack-helper": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/pack.css": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/pack.css",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/pack.css",
            "descriptor": {
              "filename": "pack.css",
              "filepath": "../../insight.renderers.default/lib/php/pack.css",
              "mtime": 1375341042,
              "code": "/*######################################################################\n#   primitives/array\n#####################################################################*/\n\nSPAN.__NS__map > SPAN {\n  color: green;\n  font-weight: normal;\n}\n\nSPAN.__NS__map > .pair > SPAN.delimiter,\nSPAN.__NS__map > .pair > SPAN.separator {\n  color: green;\n}\n\nSPAN.__NS__array > SPAN {\n  color: green;\n  font-weight: normal;\n}\n\nSPAN.__NS__array > .element > SPAN.separator {\n  color: green;\n}\n\n/*######################################################################\n#   primitives/boolean\n#####################################################################*/\n\nSPAN.__NS__boolean {\n  color: navy;\n}\n\n/*######################################################################\n#   primitives/exception\n#####################################################################*/\n\nSPAN.__NS__exception {\n  font-weight: bold;\n  color: red;\n}\n\n/*######################################################################\n#   primitives/float\n#####################################################################*/\n\nSPAN.__NS__float {\n  color: green;\n}\n\n/*######################################################################\n#   primitives/integer\n#####################################################################*/\n\nSPAN.__NS__integer {\n  color: green;\n}\n\n/*######################################################################\n#   primitives/null\n#####################################################################*/\n\nSPAN.__NS__null {\n  color: navy;\n}\n\n/*######################################################################\n#   primitives/object\n#####################################################################*/\n\nSPAN.__NS__dictionary > SPAN {\n  color: brown;\n  font-weight: bold;\n}\n\nSPAN.__NS__dictionary > DIV.member {\n  display: block;\n  padding-left: 20px;\n}\n\nSPAN.__NS__dictionary > .member > SPAN.name {\n  color: black;\n  padding-left: 12px;\n}\n\nSPAN.__NS__dictionary > .member > SPAN.name[decorator=private-static] {\n  background: url(__RESOURCE__images/object-member-visibility-sprite.png) no-repeat -4px -2px;\n}\n\nSPAN.__NS__dictionary > .member > SPAN.name[decorator=protected-static] {\n  background: url(__RESOURCE__images/object-member-visibility-sprite.png) no-repeat -4px -18px;\n}\n\nSPAN.__NS__dictionary > .member > SPAN.name[decorator=public-static] {\n  background: url(__RESOURCE__images/object-member-visibility-sprite.png) no-repeat -4px -34px;\n}\n\nSPAN.__NS__dictionary > .member > SPAN.name[decorator=undeclared-static] {\n  background: url(__RESOURCE__images/object-member-visibility-sprite.png) no-repeat -4px -50px;\n}\n\nSPAN.__NS__dictionary > .member > SPAN.name[decorator=private] {\n  background: url(__RESOURCE__images/object-member-visibility-sprite.png) no-repeat -4px -66px;\n}\n\nSPAN.__NS__dictionary > .member > SPAN.name[decorator=protected] {\n  background: url(__RESOURCE__images/object-member-visibility-sprite.png) no-repeat -4px -82px;\n}\n\nSPAN.__NS__dictionary > .member > SPAN.name[decorator=public] {\n  background: url(__RESOURCE__images/object-member-visibility-sprite.png) no-repeat -4px -98px;\n}\n\nSPAN.__NS__dictionary > .member > SPAN.name[decorator=undeclared] {\n  background: url(__RESOURCE__images/object-member-visibility-sprite.png) no-repeat -4px -114px;\n}\n\nSPAN.__NS__dictionary > .member > SPAN.delimiter,\nSPAN.__NS__dictionary > .member > SPAN.separator,\nSPAN.__NS__dictionary > .member SPAN.more {\n  color: brown;\n}\n\n/*######################################################################\n#   primitives/resource\n#####################################################################*/\n\nSPAN.__NS__resource {\n  color: navy;\n}\n\n/*######################################################################\n#   primitives/string\n#####################################################################*/\n\nSPAN.__NS__string {\n  color: black;\n}\n\nSPAN.__NS__string[wrapped=true] {\n  color: red;\n}\n\nSPAN.__NS__string > SPAN.special {\n  color: gray;\n  font-weight: bold;\n  padding-left: 3px;\n  padding-right: 3px;\n}\n\nSPAN.__NS__string > SPAN.trimmed {\n  color: #FFFFFF;\n  background-color: blue;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin-left: 5px;\n}",
              "globals": {},
              "syntax": null,
              "format": "utf8",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {},
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "url-encoded",
              "top": null,
              "code": "'%2F*%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%0A%23%20%20%20primitives%2Farray%0A%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23*%2F%0A%0ASPAN.__NS__map%20%3E%20SPAN%20%7B%0A%20%20color%3A%20green%3B%0A%20%20font-weight%3A%20normal%3B%0A%7D%0A%0ASPAN.__NS__map%20%3E%20.pair%20%3E%20SPAN.delimiter%2C%0ASPAN.__NS__map%20%3E%20.pair%20%3E%20SPAN.separator%20%7B%0A%20%20color%3A%20green%3B%0A%7D%0A%0ASPAN.__NS__array%20%3E%20SPAN%20%7B%0A%20%20color%3A%20green%3B%0A%20%20font-weight%3A%20normal%3B%0A%7D%0A%0ASPAN.__NS__array%20%3E%20.element%20%3E%20SPAN.separator%20%7B%0A%20%20color%3A%20green%3B%0A%7D%0A%0A%2F*%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%0A%23%20%20%20primitives%2Fboolean%0A%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23*%2F%0A%0ASPAN.__NS__boolean%20%7B%0A%20%20color%3A%20navy%3B%0A%7D%0A%0A%2F*%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%0A%23%20%20%20primitives%2Fexception%0A%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23*%2F%0A%0ASPAN.__NS__exception%20%7B%0A%20%20font-weight%3A%20bold%3B%0A%20%20color%3A%20red%3B%0A%7D%0A%0A%2F*%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%0A%23%20%20%20primitives%2Ffloat%0A%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23*%2F%0A%0ASPAN.__NS__float%20%7B%0A%20%20color%3A%20green%3B%0A%7D%0A%0A%2F*%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%0A%23%20%20%20primitives%2Finteger%0A%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23*%2F%0A%0ASPAN.__NS__integer%20%7B%0A%20%20color%3A%20green%3B%0A%7D%0A%0A%2F*%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%0A%23%20%20%20primitives%2Fnull%0A%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23*%2F%0A%0ASPAN.__NS__null%20%7B%0A%20%20color%3A%20navy%3B%0A%7D%0A%0A%2F*%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%0A%23%20%20%20primitives%2Fobject%0A%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23*%2F%0A%0ASPAN.__NS__dictionary%20%3E%20SPAN%20%7B%0A%20%20color%3A%20brown%3B%0A%20%20font-weight%3A%20bold%3B%0A%7D%0A%0ASPAN.__NS__dictionary%20%3E%20DIV.member%20%7B%0A%20%20display%3A%20block%3B%0A%20%20padding-left%3A%2020px%3B%0A%7D%0A%0ASPAN.__NS__dictionary%20%3E%20.member%20%3E%20SPAN.name%20%7B%0A%20%20color%3A%20black%3B%0A%20%20padding-left%3A%2012px%3B%0A%7D%0A%0ASPAN.__NS__dictionary%20%3E%20.member%20%3E%20SPAN.name%5Bdecorator%3Dprivate-static%5D%20%7B%0A%20%20background%3A%20url(__RESOURCE__images%2Fobject-member-visibility-sprite.png)%20no-repeat%20-4px%20-2px%3B%0A%7D%0A%0ASPAN.__NS__dictionary%20%3E%20.member%20%3E%20SPAN.name%5Bdecorator%3Dprotected-static%5D%20%7B%0A%20%20background%3A%20url(__RESOURCE__images%2Fobject-member-visibility-sprite.png)%20no-repeat%20-4px%20-18px%3B%0A%7D%0A%0ASPAN.__NS__dictionary%20%3E%20.member%20%3E%20SPAN.name%5Bdecorator%3Dpublic-static%5D%20%7B%0A%20%20background%3A%20url(__RESOURCE__images%2Fobject-member-visibility-sprite.png)%20no-repeat%20-4px%20-34px%3B%0A%7D%0A%0ASPAN.__NS__dictionary%20%3E%20.member%20%3E%20SPAN.name%5Bdecorator%3Dundeclared-static%5D%20%7B%0A%20%20background%3A%20url(__RESOURCE__images%2Fobject-member-visibility-sprite.png)%20no-repeat%20-4px%20-50px%3B%0A%7D%0A%0ASPAN.__NS__dictionary%20%3E%20.member%20%3E%20SPAN.name%5Bdecorator%3Dprivate%5D%20%7B%0A%20%20background%3A%20url(__RESOURCE__images%2Fobject-member-visibility-sprite.png)%20no-repeat%20-4px%20-66px%3B%0A%7D%0A%0ASPAN.__NS__dictionary%20%3E%20.member%20%3E%20SPAN.name%5Bdecorator%3Dprotected%5D%20%7B%0A%20%20background%3A%20url(__RESOURCE__images%2Fobject-member-visibility-sprite.png)%20no-repeat%20-4px%20-82px%3B%0A%7D%0A%0ASPAN.__NS__dictionary%20%3E%20.member%20%3E%20SPAN.name%5Bdecorator%3Dpublic%5D%20%7B%0A%20%20background%3A%20url(__RESOURCE__images%2Fobject-member-visibility-sprite.png)%20no-repeat%20-4px%20-98px%3B%0A%7D%0A%0ASPAN.__NS__dictionary%20%3E%20.member%20%3E%20SPAN.name%5Bdecorator%3Dundeclared%5D%20%7B%0A%20%20background%3A%20url(__RESOURCE__images%2Fobject-member-visibility-sprite.png)%20no-repeat%20-4px%20-114px%3B%0A%7D%0A%0ASPAN.__NS__dictionary%20%3E%20.member%20%3E%20SPAN.delimiter%2C%0ASPAN.__NS__dictionary%20%3E%20.member%20%3E%20SPAN.separator%2C%0ASPAN.__NS__dictionary%20%3E%20.member%20SPAN.more%20%7B%0A%20%20color%3A%20brown%3B%0A%7D%0A%0A%2F*%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%0A%23%20%20%20primitives%2Fresource%0A%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23*%2F%0A%0ASPAN.__NS__resource%20%7B%0A%20%20color%3A%20navy%3B%0A%7D%0A%0A%2F*%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%0A%23%20%20%20primitives%2Fstring%0A%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23*%2F%0A%0ASPAN.__NS__string%20%7B%0A%20%20color%3A%20black%3B%0A%7D%0A%0ASPAN.__NS__string%5Bwrapped%3Dtrue%5D%20%7B%0A%20%20color%3A%20red%3B%0A%7D%0A%0ASPAN.__NS__string%20%3E%20SPAN.special%20%7B%0A%20%20color%3A%20gray%3B%0A%20%20font-weight%3A%20bold%3B%0A%20%20padding-left%3A%203px%3B%0A%20%20padding-right%3A%203px%3B%0A%7D%0A%0ASPAN.__NS__string%20%3E%20SPAN.trimmed%20%7B%0A%20%20color%3A%20%23FFFFFF%3B%0A%20%20background-color%3A%20blue%3B%0A%20%20padding-left%3A%205px%3B%0A%20%20padding-right%3A%205px%3B%0A%20%20margin-left%3A%205px%3B%0A%7D'",
              "bottom": null
            },
            "dependencies": {
              "static": {},
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/util/trimmed.js": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/util/trimmed",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/util/trimmed.js",
            "descriptor": {
              "filename": "trimmed.js",
              "filepath": "../../insight.renderers.default/lib/insight/util/trimmed.js",
              "mtime": 1375341042,
              "code": "\nvar PACK = require(\"../pack\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.meta && node.meta[\"encoder.trimmed\"] && !node.meta[\"encoder.trimmed.partial\"]);\n};\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n        \n                tag:\n                    SPAN({\"class\": PACK.__NS__+\"util-trimmed\"},\n                        \"$node|getNotice\"\n                    ),\n\n                collapsedTag: \n                    SPAN({\"class\": PACK.__NS__+\"util-trimmed\"},\n                        \"$node|getNotice\"\n                    ),\n\n                getNotice: function(node) {\n                    return node.meta[\"encoder.notice\"];\n                }\n            });\n        }        \n    }\n});\n",
              "globals": {
                "PACK": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "exports": {
                  "type": "reference"
                },
                "module": {
                  "type": "reference"
                },
                "SPAN": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "../pack": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/insight/util';",
              "code": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/insight/util';\n\nvar PACK = require(\"../pack\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.meta && node.meta[\"encoder.trimmed\"] && !node.meta[\"encoder.trimmed.partial\"]);\n};\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n        \n                tag:\n                    SPAN({\"class\": PACK.__NS__+\"util-trimmed\"},\n                        \"$node|getNotice\"\n                    ),\n\n                collapsedTag: \n                    SPAN({\"class\": PACK.__NS__+\"util-trimmed\"},\n                        \"$node|getNotice\"\n                    ),\n\n                getNotice: function(node) {\n                    return node.meta[\"encoder.notice\"];\n                }\n            });\n        }        \n    }\n});\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "../pack": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/pack.js": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/pack",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/pack.js",
            "descriptor": {
              "filename": "pack.js",
              "filepath": "../../insight.renderers.default/lib/insight/pack.js",
              "mtime": 1420339338,
              "code": "\nrequire(\"../pack-helper\").init(exports, module, {\n    css: require(\"./pack.css\"),\n    getTemplates: function()\n    {\n        require(\"./wrappers/console\");\n        require(\"./wrappers/viewer\");\n\n        return [\n            // First: Match by node.meta.renderer\n            require(\"./structures/trace\"),\n            require(\"./structures/table\"),\n\n            // Second: Utility messages matched by various specific criteria\n            require(\"./util/trimmed\"),\n\n            // Third: Match by node.type\n            require(\"./primitives/text\"),\n            require(\"./primitives/constant\"),\n            require(\"./primitives/array\"),\n            require(\"./primitives/map\"),\n            require(\"./primitives/reference\"),\n            require(\"./primitives/dictionary\"),\n\n            // Last: Catch any nodes that did not match above\n            require(\"./primitives/unknown\")\n        ];\n    }\n});\n",
              "globals": {
                "exports": {
                  "type": "reference"
                },
                "module": {
                  "type": "reference"
                },
                "require": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "./pack.css": {
                    "where": "inline"
                  },
                  "./wrappers/console": {
                    "where": "inline"
                  },
                  "./wrappers/viewer": {
                    "where": "inline"
                  },
                  "./structures/trace": {
                    "where": "inline"
                  },
                  "./structures/table": {
                    "where": "inline"
                  },
                  "./util/trimmed": {
                    "where": "inline"
                  },
                  "./primitives/text": {
                    "where": "inline"
                  },
                  "./primitives/constant": {
                    "where": "inline"
                  },
                  "./primitives/array": {
                    "where": "inline"
                  },
                  "./primitives/map": {
                    "where": "inline"
                  },
                  "./primitives/reference": {
                    "where": "inline"
                  },
                  "./primitives/dictionary": {
                    "where": "inline"
                  },
                  "./primitives/unknown": {
                    "where": "inline"
                  },
                  "../pack-helper": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/insight';",
              "code": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/insight';\n\nrequire(\"../pack-helper\").init(exports, module, {\n    css: require(\"./pack.css\"),\n    getTemplates: function()\n    {\n        require(\"./wrappers/console\");\n        require(\"./wrappers/viewer\");\n\n        return [\n            // First: Match by node.meta.renderer\n            require(\"./structures/trace\"),\n            require(\"./structures/table\"),\n\n            // Second: Utility messages matched by various specific criteria\n            require(\"./util/trimmed\"),\n\n            // Third: Match by node.type\n            require(\"./primitives/text\"),\n            require(\"./primitives/constant\"),\n            require(\"./primitives/array\"),\n            require(\"./primitives/map\"),\n            require(\"./primitives/reference\"),\n            require(\"./primitives/dictionary\"),\n\n            // Last: Catch any nodes that did not match above\n            require(\"./primitives/unknown\")\n        ];\n    }\n});\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "./pack.css": {
                  "where": "inline"
                },
                "./wrappers/console": {
                  "where": "inline"
                },
                "./wrappers/viewer": {
                  "where": "inline"
                },
                "./structures/trace": {
                  "where": "inline"
                },
                "./structures/table": {
                  "where": "inline"
                },
                "./util/trimmed": {
                  "where": "inline"
                },
                "./primitives/text": {
                  "where": "inline"
                },
                "./primitives/constant": {
                  "where": "inline"
                },
                "./primitives/array": {
                  "where": "inline"
                },
                "./primitives/map": {
                  "where": "inline"
                },
                "./primitives/reference": {
                  "where": "inline"
                },
                "./primitives/dictionary": {
                  "where": "inline"
                },
                "./primitives/unknown": {
                  "where": "inline"
                },
                "../pack-helper": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/pack.css": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/pack.css",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/pack.css",
            "descriptor": {
              "filename": "pack.css",
              "filepath": "../../insight.renderers.default/lib/insight/pack.css",
              "mtime": 1375341042,
              "code": "/*######################################################################\n#   primitives/text\n#####################################################################*/\n\n/*######################################################################\n#   primitives/constant\n#####################################################################*/\n\nSPAN.__NS__constant {\n  color: #0000FF;\n}\n\n/*######################################################################\n#   primitives/array\n#####################################################################*/\n\nSPAN.__NS__array > SPAN {\n  color: #9C9C9C;\n  font-weight: bold;\n}\n\nSPAN.__NS__array > SPAN.collapsed {\n  color: #0000FF;\n  font-weight: normal;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\nSPAN.__NS__array > SPAN.summary {\n  color: #0000FF;\n  font-weight: normal;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\nSPAN.__NS__array > DIV.element {\n  display: block;\n  padding-left: 20px;\n}\n\nSPAN.__NS__array > SPAN.element {\n  padding-left: 2px;\n}\n\nSPAN.__NS__array > DIV.element.expandable {\n  background-image: url(__RESOURCE__images/twisty-closed.png);\n  background-repeat: no-repeat;\n  background-position: 6px 2px;\n  cursor: pointer;\n}\n\nSPAN.__NS__array > DIV.element.expandable.expanded {\n  background-image: url(__RESOURCE__images/twisty-open.png);\n}\n\nSPAN.__NS__array > .element > SPAN.separator {\n  color: #9C9C9C;\n}\n\n/*######################################################################\n#   primitives/map\n#####################################################################*/\n\nSPAN.__NS__map > SPAN {\n  color: #9C9C9C;\n  font-weight: bold;\n}\n\nSPAN.__NS__map > DIV.pair {\n  display: block;\n  padding-left: 20px;\n}\n\nSPAN.__NS__map > SPAN.pair {\n  padding-left: 2px;\n}\n\nSPAN.__NS__map > .pair > SPAN.delimiter,\nSPAN.__NS__map > .pair > SPAN.separator {\n  color: #9C9C9C;\n  padding-left: 2px;\n  padding-right: 2px;\n}\n\n/*######################################################################\n#   primitives/reference\n#####################################################################*/\n\n/*######################################################################\n#   primitives/dictionary\n#####################################################################*/\n\nSPAN.__NS__dictionary > SPAN {\n  color: #9C9C9C;\n}\n\nSPAN.__NS__dictionary > SPAN.collapsed {\n  color: #0000FF;\n  font-weight: normal;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\nSPAN.__NS__dictionary > SPAN.summary {\n  color: #0000FF;\n  font-weight: normal;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\nSPAN.__NS__dictionary > SPAN.member {\n  color: #9C9C9C;\n}\n\nSPAN.__NS__dictionary > DIV.member {\n  display: block;\n  padding-left: 20px;\n}\n\nSPAN.__NS__dictionary > DIV.member.expandable {\n  background-image: url(__RESOURCE__images/twisty-closed.png);\n  background-repeat: no-repeat;\n  background-position: 6px 2px;\n  cursor: pointer;\n}\n\nSPAN.__NS__dictionary > DIV.member.expandable.expanded {\n  background-image: url(__RESOURCE__images/twisty-open.png);\n}\n\nSPAN.__NS__dictionary > .member > SPAN.name {\n  color: #E59D07;\n  font-weight: normal;\n}\n\nSPAN.__NS__dictionary > .member > SPAN.value {\n  font-weight: normal;\n}\n\nSPAN.__NS__dictionary > .member > SPAN.delimiter,\nSPAN.__NS__dictionary > .member > SPAN.separator,\nSPAN.__NS__dictionary > .member SPAN.more {\n  color: #9C9C9C;\n  padding-left: 2px;\n  padding-right: 2px;\n}\n\n/*######################################################################\n#   primitives/unknown\n#####################################################################*/\n\nSPAN.__NS__unknown {\n  color: #FFFFFF;\n  background-color: red;\n}\n\n/*######################################################################\n#   structures/trace\n#####################################################################*/\n\nSPAN.__NS__structures-trace {\n  background-image: url(__RESOURCE__images/edit-rule.png);\n  background-repeat: no-repeat;\n  background-position: 4px 1px;\n  padding-left: 25px;\n  font-weight: bold;\n}\n\nDIV.__NS__structures-trace {\n  padding: 0px;\n  margin: 0px;\n}\n\nDIV.__NS__structures-trace TABLE {\n  border-bottom: 1px solid #D7D7D7;\n}\n\nDIV.__NS__structures-trace TABLE TBODY TR TH,\nDIV.__NS__structures-trace TABLE TBODY TR TD {\n  padding: 3px;\n  padding-left: 10px;\n  padding-right: 10px;\n}\n\nDIV.__NS__structures-trace TABLE TBODY TR TH.header-file {\n  white-space: nowrap;\n  font-weight: bold;\n  text-align: left;\n}\n\nDIV.__NS__structures-trace TABLE TBODY TR TH.header-line {\n  white-space: nowrap;\n  font-weight: bold;\n  text-align: right;\n}\n\nDIV.__NS__structures-trace TABLE TBODY TR TH.header-inst {\n  white-space: nowrap;\n  font-weight: bold;\n  text-align: left;\n}\n\nDIV.__NS__structures-trace TABLE TBODY TR TD.cell-file {\n  vertical-align: top;\n  border: 1px solid #D7D7D7;\n  border-bottom: 0px;\n  border-right: 0px;\n}\n\nDIV.__NS__structures-trace TABLE TBODY TR TD.cell-line {\n  white-space: nowrap;\n  vertical-align: top;\n  text-align: right;\n  border: 1px solid #D7D7D7;\n  border-bottom: 0px;\n  border-right: 0px;\n}\n\nDIV.__NS__structures-trace TABLE TBODY TR TD.cell-line:hover,\nDIV.__NS__structures-trace TABLE TBODY TR TD.cell-file:hover {\n  background-color: #ffc73d;\n  cursor: pointer;\n}\n\nDIV.__NS__structures-trace TABLE TBODY TR TD.cell-inst {\n  vertical-align: top;\n  padding-left: 10px;\n  font-weight: bold;\n  border: 1px solid #D7D7D7;\n  border-bottom: 0px;\n}\n\nDIV.__NS__structures-trace TABLE TBODY TR TD.cell-inst DIV.arg {\n  font-weight: normal;\n  padding-left: 3px;\n  padding-right: 3px;\n  display: inline-block;\n}\n\nDIV.__NS__structures-trace TABLE TBODY TR TD.cell-inst DIV.arg:hover {\n  background-color: #ffc73d;\n  cursor: pointer;\n}\n\nDIV.__NS__structures-trace TABLE TBODY TR TD.cell-inst .separator {\n  padding-left: 1px;\n  padding-right: 3px;\n}\n\n/*######################################################################\n#   structures/table\n#####################################################################*/\n\nSPAN.__NS__structures-table {\n  background-image: url(__RESOURCE__images/table.png);\n  background-repeat: no-repeat;\n  background-position: 4px -1px;\n  padding-left: 25px;\n}\n\nDIV.__NS__structures-table {\n  padding: 0px;\n  margin: 0px;\n}\n\nDIV.__NS__structures-table TABLE {\n  border-bottom: 1px solid #D7D7D7;\n  border-right: 1px solid #D7D7D7;\n}\n\nDIV.__NS__structures-table TABLE TBODY TR.hide {\n  display: none;\n}\n\nDIV.__NS__structures-table TABLE TBODY TR TH.header {\n  vertical-align: top;\n  font-weight: bold;\n  text-align: center;\n  border: 1px solid #D7D7D7;\n  border-bottom: 0px;\n  border-right: 0px;\n  background-color: #ececec;\n  padding: 2px;\n  padding-left: 10px;\n  padding-right: 10px;\n}\n\nDIV.__NS__structures-table TABLE TBODY TR TD.cell {\n  vertical-align: top;\n  padding-right: 10px;\n  border: 1px solid #D7D7D7;\n  border-bottom: 0px;\n  border-right: 0px;\n  padding: 2px;\n  padding-left: 10px;\n  padding-right: 10px;\n}\n\nDIV.__NS__structures-table TABLE TBODY TR TD.cell:hover {\n  background-color: #ffc73d;\n  cursor: pointer;\n}\n\n/*######################################################################\n#   util/trimmed\n#####################################################################*/\n\nSPAN.__NS__util-trimmed {\n  color: #FFFFFF;\n  background-color: blue;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n/*######################################################################\n#   @anchor wrappers/console\n#####################################################################*/\n\nDIV.__NS__console-message {\n  position: relative;\n  margin: 0;\n  border-bottom: 1px solid #D7D7D7;\n  padding: 0px;\n  background-color: #FFFFFF;\n}\n\nDIV.__NS__console-message.selected {\n  background-color: #35FC03 !important;\n}\n\nDIV.__NS__console-message-group[expanded=true] {\n  background-color: #77CDD9;\n}\n\nDIV.__NS__console-message > DIV.header {\n  position: relative;\n  padding-left: 34px;\n  padding-right: 10px;\n  padding-top: 3px;\n  padding-bottom: 4px;\n  cursor: pointer;\n}\n\nDIV.__NS__console-message[expanded=true] > DIV.header {\n  text-align: right;\n  min-height: 16px;\n}\n\nDIV.__NS__console-message[expanded=false] > DIV.header:hover {\n  background-color: #ffc73d;\n}\n\nDIV.__NS__console-message-group > DIV.header {\n  background: url(__RESOURCE__images/document-page-next.png) no-repeat;\n  background-position: 2px 3px;\n  font-weight: bold;\n  background-color: #77CDD9;\n}\n\nDIV.__NS__console-message > DIV.header-priority-info {\n  background: url(__RESOURCE__images/information.png) no-repeat;\n  background-position: 2px 3px;\n  background-color: #c6eeff;\n}\n\nDIV.__NS__console-message > DIV.header-priority-warn {\n  background: url(__RESOURCE__images/exclamation-diamond.png) no-repeat;\n  background-position: 2px 3px;\n  background-color: #ffe68d;\n}\n\nDIV.__NS__console-message > DIV.header-priority-error {\n  background: url(__RESOURCE__images/exclamation-red.png) no-repeat;\n  background-position: 2px 3px;\n  background-color: #ffa7a7;\n}\n\nDIV.__NS__console-message > DIV.header > DIV.expander {\n  background-color: black;\n  width: 18px;\n  height: 18px;\n  display: inline-block;\n  float: left;\n  position: relative;\n  top: -1px;\n  margin-left: -14px;\n}\n\nDIV.__NS__console-message > DIV.header > DIV.expander:hover {\n  cursor: pointer;\n}\n\nDIV.__NS__console-message[expanded=false] > DIV.header > DIV.expander {\n  background: url(__RESOURCE__images/plus-small-white.png) no-repeat;\n  background-position: 0px 1px;\n}\n\nDIV.__NS__console-message[expanded=true] > DIV.header > DIV.expander {\n  background: url(__RESOURCE__images/minus-small-white.png) no-repeat;\n  background-position: 0px 1px;\n}\n\nDIV.__NS__console-message > DIV.header > SPAN.summary > SPAN.label > SPAN,\nDIV.__NS__console-message > DIV.header > SPAN.fileline > DIV > DIV.label {\n  margin-right: 5px;\n  background-color: rgba(69,68,60,1);\n  padding-left: 5px;\n  padding-right: 5px;\n  color: white;\n  vertical-align: top;\n  margin-top: 1px;\n}\n\nDIV.__NS__console-message > DIV.header > SPAN.fileline > DIV > DIV.label {\n  float: left;\n  margin-top: 0px;\n}\n\nDIV.__NS__console-message > DIV.header > SPAN.summary > SPAN > SPAN.count {\n  color: #8c8c8c;\n}\n\nDIV.__NS__console-message > DIV.header > SPAN.fileline {\n  color: #8c8c8c;\n  word-wrap: break-word;\n}\n\nDIV.__NS__console-message[expanded=true] > DIV.header > SPAN.summary {\n  /* NOTE: This does not work in Google Chrome! */\n  display: none;\n}\n\nDIV.__NS__console-message[keeptitle=true] > DIV.header,\nDIV.__NS__console-message-group > DIV.header {\n  text-align: left !important;\n}\n\nDIV.__NS__console-message[keeptitle=true] > DIV.header > SPAN.fileline,\nDIV.__NS__console-message-group > DIV.header > SPAN.fileline {\n  display: none !important;\n}\n\nDIV.__NS__console-message[keeptitle=true] > DIV.header > SPAN.summary,\nDIV.__NS__console-message-group > DIV.header > SPAN.summary {\n  display: inline !important;\n}\n\nDIV.__NS__console-message-group > DIV.header > DIV.actions {\n  display: none !important;\n}\n\nDIV.__NS__console-message-group > DIV.header > SPAN.summary > SPAN > SPAN.count {\n  color: #ffffff !important;\n}\n\nDIV.__NS__console-message[expanded=false] > DIV.header > SPAN.fileline {\n  display: none;\n}\n\nDIV.__NS__console-message > DIV.header > DIV.actions {\n  display: inline-block;\n  position: relative;\n  top: 0px;\n  left: 10px;\n  float: right;\n  margin-left: 0px;\n  margin-right: 5px;\n}\n\nDIV.__NS__console-message > DIV.header > DIV.actions DIV.inspect {\n  display: inline-block;\n  background: url(__RESOURCE__images/node-magnifier.png) no-repeat;\n  width: 16px;\n  height: 16px;\n  margin-right: 4px;\n}\n\nDIV.__NS__console-message > DIV.header > DIV.actions > DIV.file {\n  display: inline-block;\n  background: url(__RESOURCE__images/document-binary.png) no-repeat;\n  width: 16px;\n  height: 16px;\n  margin-right: 4px;\n}\n\nDIV.__NS__console-message > DIV.header > DIV.actions > DIV.inspect:hover,\nDIV.__NS__console-message > DIV.header > DIV.actions > DIV.file:hover {\n  cursor: pointer;\n}\n\nDIV.__NS__console-message > DIV.body {\n  padding: 6px;\n  margin: 3px;\n  margin-top: 0px;\n}\n\nDIV.__NS__console-message[expanded=false] > DIV.body {\n  display: none;\n}\n\nDIV.__NS__console-message-group > DIV.body {\n  padding: 0px;\n  margin: 0px;\n  margin-left: 20px;\n  border-top: 1px solid #000000;\n  border-left: 1px solid #000000;\n  margin-bottom: -1px;\n}\n\nDIV.__NS__console-message > DIV.body-priority-info {\n  border: 3px solid #c6eeff;\n  margin: 0px;\n  border-top: 0px;\n}\n\nDIV.__NS__console-message > DIV.body-priority-warn {\n  border: 3px solid #ffe68d;\n  margin: 0px;\n  border-top: 0px;\n}\n\nDIV.__NS__console-message > DIV.body-priority-error {\n  border: 3px solid #ffa7a7;\n  margin: 0px;\n  border-top: 0px;\n}\n\nDIV.__NS__console-message > DIV.body > DIV.group-no-messages {\n  background-color: white;\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-top: 3px;\n  padding-bottom: 3px;\n  color: gray;\n}\n\nDIV.__NS__console-message .hidden {\n  display: none !important;\n}\n\n/*######################################################################\n#   wrappers/viewer\n#####################################################################*/\n\nDIV.__NS__viewer-harness {\n  padding: 2px 4px 1px 6px;\n  font-family: Lucida Grande, Tahoma, sans-serif;\n  font-size: 11px;\n}\n\n/*######################################################################\n#   firebug console\n#####################################################################*/\n\nDIV.devcomp-request-group {\n  background: url(__RESOURCE__images/firebug_request_group_bg.png) repeat-x #FFFFFF;\n}\n\nDIV.devcomp-request-group > DIV.logGroupLabel {\n  min-height: 16px !important;\n  background: url(__RESOURCE__images/devcomp_16.png) !important;\n  background-repeat: no-repeat !important;\n  background-position: 3px 1px !important;\n  padding-left: 24px !important;\n}\n\nDIV.devcomp-request-group > DIV.logGroupLabel > SPAN.objectBox {\n  color: #445777;\n  font-family: Lucida Grande, Tahoma, sans-serif;\n  font-size: 11px;\n}\n\nDIV.devcomp-request-group > DIV.logGroupBody > DIV > DIV.title > DIV.actions > DIV {\n  display: none !important;\n}",
              "globals": {},
              "syntax": null,
              "format": "utf8",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {},
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "url-encoded",
              "top": null,
              "code": "'%2F*%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%0A%23%20%20%20primitives%2Ftext%0A%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23*%2F%0A%0A%2F*%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%0A%23%20%20%20primitives%2Fconstant%0A%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23*%2F%0A%0ASPAN.__NS__constant%20%7B%0A%20%20color%3A%20%230000FF%3B%0A%7D%0A%0A%2F*%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%0A%23%20%20%20primitives%2Farray%0A%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23*%2F%0A%0ASPAN.__NS__array%20%3E%20SPAN%20%7B%0A%20%20color%3A%20%239C9C9C%3B%0A%20%20font-weight%3A%20bold%3B%0A%7D%0A%0ASPAN.__NS__array%20%3E%20SPAN.collapsed%20%7B%0A%20%20color%3A%20%230000FF%3B%0A%20%20font-weight%3A%20normal%3B%0A%20%20padding-left%3A%205px%3B%0A%20%20padding-right%3A%205px%3B%0A%7D%0A%0ASPAN.__NS__array%20%3E%20SPAN.summary%20%7B%0A%20%20color%3A%20%230000FF%3B%0A%20%20font-weight%3A%20normal%3B%0A%20%20padding-left%3A%205px%3B%0A%20%20padding-right%3A%205px%3B%0A%7D%0A%0ASPAN.__NS__array%20%3E%20DIV.element%20%7B%0A%20%20display%3A%20block%3B%0A%20%20padding-left%3A%2020px%3B%0A%7D%0A%0ASPAN.__NS__array%20%3E%20SPAN.element%20%7B%0A%20%20padding-left%3A%202px%3B%0A%7D%0A%0ASPAN.__NS__array%20%3E%20DIV.element.expandable%20%7B%0A%20%20background-image%3A%20url(__RESOURCE__images%2Ftwisty-closed.png)%3B%0A%20%20background-repeat%3A%20no-repeat%3B%0A%20%20background-position%3A%206px%202px%3B%0A%20%20cursor%3A%20pointer%3B%0A%7D%0A%0ASPAN.__NS__array%20%3E%20DIV.element.expandable.expanded%20%7B%0A%20%20background-image%3A%20url(__RESOURCE__images%2Ftwisty-open.png)%3B%0A%7D%0A%0ASPAN.__NS__array%20%3E%20.element%20%3E%20SPAN.separator%20%7B%0A%20%20color%3A%20%239C9C9C%3B%0A%7D%0A%0A%2F*%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%0A%23%20%20%20primitives%2Fmap%0A%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23*%2F%0A%0ASPAN.__NS__map%20%3E%20SPAN%20%7B%0A%20%20color%3A%20%239C9C9C%3B%0A%20%20font-weight%3A%20bold%3B%0A%7D%0A%0ASPAN.__NS__map%20%3E%20DIV.pair%20%7B%0A%20%20display%3A%20block%3B%0A%20%20padding-left%3A%2020px%3B%0A%7D%0A%0ASPAN.__NS__map%20%3E%20SPAN.pair%20%7B%0A%20%20padding-left%3A%202px%3B%0A%7D%0A%0ASPAN.__NS__map%20%3E%20.pair%20%3E%20SPAN.delimiter%2C%0ASPAN.__NS__map%20%3E%20.pair%20%3E%20SPAN.separator%20%7B%0A%20%20color%3A%20%239C9C9C%3B%0A%20%20padding-left%3A%202px%3B%0A%20%20padding-right%3A%202px%3B%0A%7D%0A%0A%2F*%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%0A%23%20%20%20primitives%2Freference%0A%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23*%2F%0A%0A%2F*%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%0A%23%20%20%20primitives%2Fdictionary%0A%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23*%2F%0A%0ASPAN.__NS__dictionary%20%3E%20SPAN%20%7B%0A%20%20color%3A%20%239C9C9C%3B%0A%7D%0A%0ASPAN.__NS__dictionary%20%3E%20SPAN.collapsed%20%7B%0A%20%20color%3A%20%230000FF%3B%0A%20%20font-weight%3A%20normal%3B%0A%20%20padding-left%3A%205px%3B%0A%20%20padding-right%3A%205px%3B%0A%7D%0A%0ASPAN.__NS__dictionary%20%3E%20SPAN.summary%20%7B%0A%20%20color%3A%20%230000FF%3B%0A%20%20font-weight%3A%20normal%3B%0A%20%20padding-left%3A%205px%3B%0A%20%20padding-right%3A%205px%3B%0A%7D%0A%0ASPAN.__NS__dictionary%20%3E%20SPAN.member%20%7B%0A%20%20color%3A%20%239C9C9C%3B%0A%7D%0A%0ASPAN.__NS__dictionary%20%3E%20DIV.member%20%7B%0A%20%20display%3A%20block%3B%0A%20%20padding-left%3A%2020px%3B%0A%7D%0A%0ASPAN.__NS__dictionary%20%3E%20DIV.member.expandable%20%7B%0A%20%20background-image%3A%20url(__RESOURCE__images%2Ftwisty-closed.png)%3B%0A%20%20background-repeat%3A%20no-repeat%3B%0A%20%20background-position%3A%206px%202px%3B%0A%20%20cursor%3A%20pointer%3B%0A%7D%0A%0ASPAN.__NS__dictionary%20%3E%20DIV.member.expandable.expanded%20%7B%0A%20%20background-image%3A%20url(__RESOURCE__images%2Ftwisty-open.png)%3B%0A%7D%0A%0ASPAN.__NS__dictionary%20%3E%20.member%20%3E%20SPAN.name%20%7B%0A%20%20color%3A%20%23E59D07%3B%0A%20%20font-weight%3A%20normal%3B%0A%7D%0A%0ASPAN.__NS__dictionary%20%3E%20.member%20%3E%20SPAN.value%20%7B%0A%20%20font-weight%3A%20normal%3B%0A%7D%0A%0ASPAN.__NS__dictionary%20%3E%20.member%20%3E%20SPAN.delimiter%2C%0ASPAN.__NS__dictionary%20%3E%20.member%20%3E%20SPAN.separator%2C%0ASPAN.__NS__dictionary%20%3E%20.member%20SPAN.more%20%7B%0A%20%20color%3A%20%239C9C9C%3B%0A%20%20padding-left%3A%202px%3B%0A%20%20padding-right%3A%202px%3B%0A%7D%0A%0A%2F*%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%0A%23%20%20%20primitives%2Funknown%0A%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23*%2F%0A%0ASPAN.__NS__unknown%20%7B%0A%20%20color%3A%20%23FFFFFF%3B%0A%20%20background-color%3A%20red%3B%0A%7D%0A%0A%2F*%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%0A%23%20%20%20structures%2Ftrace%0A%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23*%2F%0A%0ASPAN.__NS__structures-trace%20%7B%0A%20%20background-image%3A%20url(__RESOURCE__images%2Fedit-rule.png)%3B%0A%20%20background-repeat%3A%20no-repeat%3B%0A%20%20background-position%3A%204px%201px%3B%0A%20%20padding-left%3A%2025px%3B%0A%20%20font-weight%3A%20bold%3B%0A%7D%0A%0ADIV.__NS__structures-trace%20%7B%0A%20%20padding%3A%200px%3B%0A%20%20margin%3A%200px%3B%0A%7D%0A%0ADIV.__NS__structures-trace%20TABLE%20%7B%0A%20%20border-bottom%3A%201px%20solid%20%23D7D7D7%3B%0A%7D%0A%0ADIV.__NS__structures-trace%20TABLE%20TBODY%20TR%20TH%2C%0ADIV.__NS__structures-trace%20TABLE%20TBODY%20TR%20TD%20%7B%0A%20%20padding%3A%203px%3B%0A%20%20padding-left%3A%2010px%3B%0A%20%20padding-right%3A%2010px%3B%0A%7D%0A%0ADIV.__NS__structures-trace%20TABLE%20TBODY%20TR%20TH.header-file%20%7B%0A%20%20white-space%3A%20nowrap%3B%0A%20%20font-weight%3A%20bold%3B%0A%20%20text-align%3A%20left%3B%0A%7D%0A%0ADIV.__NS__structures-trace%20TABLE%20TBODY%20TR%20TH.header-line%20%7B%0A%20%20white-space%3A%20nowrap%3B%0A%20%20font-weight%3A%20bold%3B%0A%20%20text-align%3A%20right%3B%0A%7D%0A%0ADIV.__NS__structures-trace%20TABLE%20TBODY%20TR%20TH.header-inst%20%7B%0A%20%20white-space%3A%20nowrap%3B%0A%20%20font-weight%3A%20bold%3B%0A%20%20text-align%3A%20left%3B%0A%7D%0A%0ADIV.__NS__structures-trace%20TABLE%20TBODY%20TR%20TD.cell-file%20%7B%0A%20%20vertical-align%3A%20top%3B%0A%20%20border%3A%201px%20solid%20%23D7D7D7%3B%0A%20%20border-bottom%3A%200px%3B%0A%20%20border-right%3A%200px%3B%0A%7D%0A%0ADIV.__NS__structures-trace%20TABLE%20TBODY%20TR%20TD.cell-line%20%7B%0A%20%20white-space%3A%20nowrap%3B%0A%20%20vertical-align%3A%20top%3B%0A%20%20text-align%3A%20right%3B%0A%20%20border%3A%201px%20solid%20%23D7D7D7%3B%0A%20%20border-bottom%3A%200px%3B%0A%20%20border-right%3A%200px%3B%0A%7D%0A%0ADIV.__NS__structures-trace%20TABLE%20TBODY%20TR%20TD.cell-line%3Ahover%2C%0ADIV.__NS__structures-trace%20TABLE%20TBODY%20TR%20TD.cell-file%3Ahover%20%7B%0A%20%20background-color%3A%20%23ffc73d%3B%0A%20%20cursor%3A%20pointer%3B%0A%7D%0A%0ADIV.__NS__structures-trace%20TABLE%20TBODY%20TR%20TD.cell-inst%20%7B%0A%20%20vertical-align%3A%20top%3B%0A%20%20padding-left%3A%2010px%3B%0A%20%20font-weight%3A%20bold%3B%0A%20%20border%3A%201px%20solid%20%23D7D7D7%3B%0A%20%20border-bottom%3A%200px%3B%0A%7D%0A%0ADIV.__NS__structures-trace%20TABLE%20TBODY%20TR%20TD.cell-inst%20DIV.arg%20%7B%0A%20%20font-weight%3A%20normal%3B%0A%20%20padding-left%3A%203px%3B%0A%20%20padding-right%3A%203px%3B%0A%20%20display%3A%20inline-block%3B%0A%7D%0A%0ADIV.__NS__structures-trace%20TABLE%20TBODY%20TR%20TD.cell-inst%20DIV.arg%3Ahover%20%7B%0A%20%20background-color%3A%20%23ffc73d%3B%0A%20%20cursor%3A%20pointer%3B%0A%7D%0A%0ADIV.__NS__structures-trace%20TABLE%20TBODY%20TR%20TD.cell-inst%20.separator%20%7B%0A%20%20padding-left%3A%201px%3B%0A%20%20padding-right%3A%203px%3B%0A%7D%0A%0A%2F*%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%0A%23%20%20%20structures%2Ftable%0A%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23*%2F%0A%0ASPAN.__NS__structures-table%20%7B%0A%20%20background-image%3A%20url(__RESOURCE__images%2Ftable.png)%3B%0A%20%20background-repeat%3A%20no-repeat%3B%0A%20%20background-position%3A%204px%20-1px%3B%0A%20%20padding-left%3A%2025px%3B%0A%7D%0A%0ADIV.__NS__structures-table%20%7B%0A%20%20padding%3A%200px%3B%0A%20%20margin%3A%200px%3B%0A%7D%0A%0ADIV.__NS__structures-table%20TABLE%20%7B%0A%20%20border-bottom%3A%201px%20solid%20%23D7D7D7%3B%0A%20%20border-right%3A%201px%20solid%20%23D7D7D7%3B%0A%7D%0A%0ADIV.__NS__structures-table%20TABLE%20TBODY%20TR.hide%20%7B%0A%20%20display%3A%20none%3B%0A%7D%0A%0ADIV.__NS__structures-table%20TABLE%20TBODY%20TR%20TH.header%20%7B%0A%20%20vertical-align%3A%20top%3B%0A%20%20font-weight%3A%20bold%3B%0A%20%20text-align%3A%20center%3B%0A%20%20border%3A%201px%20solid%20%23D7D7D7%3B%0A%20%20border-bottom%3A%200px%3B%0A%20%20border-right%3A%200px%3B%0A%20%20background-color%3A%20%23ececec%3B%0A%20%20padding%3A%202px%3B%0A%20%20padding-left%3A%2010px%3B%0A%20%20padding-right%3A%2010px%3B%0A%7D%0A%0ADIV.__NS__structures-table%20TABLE%20TBODY%20TR%20TD.cell%20%7B%0A%20%20vertical-align%3A%20top%3B%0A%20%20padding-right%3A%2010px%3B%0A%20%20border%3A%201px%20solid%20%23D7D7D7%3B%0A%20%20border-bottom%3A%200px%3B%0A%20%20border-right%3A%200px%3B%0A%20%20padding%3A%202px%3B%0A%20%20padding-left%3A%2010px%3B%0A%20%20padding-right%3A%2010px%3B%0A%7D%0A%0ADIV.__NS__structures-table%20TABLE%20TBODY%20TR%20TD.cell%3Ahover%20%7B%0A%20%20background-color%3A%20%23ffc73d%3B%0A%20%20cursor%3A%20pointer%3B%0A%7D%0A%0A%2F*%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%0A%23%20%20%20util%2Ftrimmed%0A%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23*%2F%0A%0ASPAN.__NS__util-trimmed%20%7B%0A%20%20color%3A%20%23FFFFFF%3B%0A%20%20background-color%3A%20blue%3B%0A%20%20padding-left%3A%205px%3B%0A%20%20padding-right%3A%205px%3B%0A%7D%0A%0A%2F*%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%0A%23%20%20%20%40anchor%20wrappers%2Fconsole%0A%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23*%2F%0A%0ADIV.__NS__console-message%20%7B%0A%20%20position%3A%20relative%3B%0A%20%20margin%3A%200%3B%0A%20%20border-bottom%3A%201px%20solid%20%23D7D7D7%3B%0A%20%20padding%3A%200px%3B%0A%20%20background-color%3A%20%23FFFFFF%3B%0A%7D%0A%0ADIV.__NS__console-message.selected%20%7B%0A%20%20background-color%3A%20%2335FC03%20!important%3B%0A%7D%0A%0ADIV.__NS__console-message-group%5Bexpanded%3Dtrue%5D%20%7B%0A%20%20background-color%3A%20%2377CDD9%3B%0A%7D%0A%0ADIV.__NS__console-message%20%3E%20DIV.header%20%7B%0A%20%20position%3A%20relative%3B%0A%20%20padding-left%3A%2034px%3B%0A%20%20padding-right%3A%2010px%3B%0A%20%20padding-top%3A%203px%3B%0A%20%20padding-bottom%3A%204px%3B%0A%20%20cursor%3A%20pointer%3B%0A%7D%0A%0ADIV.__NS__console-message%5Bexpanded%3Dtrue%5D%20%3E%20DIV.header%20%7B%0A%20%20text-align%3A%20right%3B%0A%20%20min-height%3A%2016px%3B%0A%7D%0A%0ADIV.__NS__console-message%5Bexpanded%3Dfalse%5D%20%3E%20DIV.header%3Ahover%20%7B%0A%20%20background-color%3A%20%23ffc73d%3B%0A%7D%0A%0ADIV.__NS__console-message-group%20%3E%20DIV.header%20%7B%0A%20%20background%3A%20url(__RESOURCE__images%2Fdocument-page-next.png)%20no-repeat%3B%0A%20%20background-position%3A%202px%203px%3B%0A%20%20font-weight%3A%20bold%3B%0A%20%20background-color%3A%20%2377CDD9%3B%0A%7D%0A%0ADIV.__NS__console-message%20%3E%20DIV.header-priority-info%20%7B%0A%20%20background%3A%20url(__RESOURCE__images%2Finformation.png)%20no-repeat%3B%0A%20%20background-position%3A%202px%203px%3B%0A%20%20background-color%3A%20%23c6eeff%3B%0A%7D%0A%0ADIV.__NS__console-message%20%3E%20DIV.header-priority-warn%20%7B%0A%20%20background%3A%20url(__RESOURCE__images%2Fexclamation-diamond.png)%20no-repeat%3B%0A%20%20background-position%3A%202px%203px%3B%0A%20%20background-color%3A%20%23ffe68d%3B%0A%7D%0A%0ADIV.__NS__console-message%20%3E%20DIV.header-priority-error%20%7B%0A%20%20background%3A%20url(__RESOURCE__images%2Fexclamation-red.png)%20no-repeat%3B%0A%20%20background-position%3A%202px%203px%3B%0A%20%20background-color%3A%20%23ffa7a7%3B%0A%7D%0A%0ADIV.__NS__console-message%20%3E%20DIV.header%20%3E%20DIV.expander%20%7B%0A%20%20background-color%3A%20black%3B%0A%20%20width%3A%2018px%3B%0A%20%20height%3A%2018px%3B%0A%20%20display%3A%20inline-block%3B%0A%20%20float%3A%20left%3B%0A%20%20position%3A%20relative%3B%0A%20%20top%3A%20-1px%3B%0A%20%20margin-left%3A%20-14px%3B%0A%7D%0A%0ADIV.__NS__console-message%20%3E%20DIV.header%20%3E%20DIV.expander%3Ahover%20%7B%0A%20%20cursor%3A%20pointer%3B%0A%7D%0A%0ADIV.__NS__console-message%5Bexpanded%3Dfalse%5D%20%3E%20DIV.header%20%3E%20DIV.expander%20%7B%0A%20%20background%3A%20url(__RESOURCE__images%2Fplus-small-white.png)%20no-repeat%3B%0A%20%20background-position%3A%200px%201px%3B%0A%7D%0A%0ADIV.__NS__console-message%5Bexpanded%3Dtrue%5D%20%3E%20DIV.header%20%3E%20DIV.expander%20%7B%0A%20%20background%3A%20url(__RESOURCE__images%2Fminus-small-white.png)%20no-repeat%3B%0A%20%20background-position%3A%200px%201px%3B%0A%7D%0A%0ADIV.__NS__console-message%20%3E%20DIV.header%20%3E%20SPAN.summary%20%3E%20SPAN.label%20%3E%20SPAN%2C%0ADIV.__NS__console-message%20%3E%20DIV.header%20%3E%20SPAN.fileline%20%3E%20DIV%20%3E%20DIV.label%20%7B%0A%20%20margin-right%3A%205px%3B%0A%20%20background-color%3A%20rgba(69%2C68%2C60%2C1)%3B%0A%20%20padding-left%3A%205px%3B%0A%20%20padding-right%3A%205px%3B%0A%20%20color%3A%20white%3B%0A%20%20vertical-align%3A%20top%3B%0A%20%20margin-top%3A%201px%3B%0A%7D%0A%0ADIV.__NS__console-message%20%3E%20DIV.header%20%3E%20SPAN.fileline%20%3E%20DIV%20%3E%20DIV.label%20%7B%0A%20%20float%3A%20left%3B%0A%20%20margin-top%3A%200px%3B%0A%7D%0A%0ADIV.__NS__console-message%20%3E%20DIV.header%20%3E%20SPAN.summary%20%3E%20SPAN%20%3E%20SPAN.count%20%7B%0A%20%20color%3A%20%238c8c8c%3B%0A%7D%0A%0ADIV.__NS__console-message%20%3E%20DIV.header%20%3E%20SPAN.fileline%20%7B%0A%20%20color%3A%20%238c8c8c%3B%0A%20%20word-wrap%3A%20break-word%3B%0A%7D%0A%0ADIV.__NS__console-message%5Bexpanded%3Dtrue%5D%20%3E%20DIV.header%20%3E%20SPAN.summary%20%7B%0A%20%20%2F*%20NOTE%3A%20This%20does%20not%20work%20in%20Google%20Chrome!%20*%2F%0A%20%20display%3A%20none%3B%0A%7D%0A%0ADIV.__NS__console-message%5Bkeeptitle%3Dtrue%5D%20%3E%20DIV.header%2C%0ADIV.__NS__console-message-group%20%3E%20DIV.header%20%7B%0A%20%20text-align%3A%20left%20!important%3B%0A%7D%0A%0ADIV.__NS__console-message%5Bkeeptitle%3Dtrue%5D%20%3E%20DIV.header%20%3E%20SPAN.fileline%2C%0ADIV.__NS__console-message-group%20%3E%20DIV.header%20%3E%20SPAN.fileline%20%7B%0A%20%20display%3A%20none%20!important%3B%0A%7D%0A%0ADIV.__NS__console-message%5Bkeeptitle%3Dtrue%5D%20%3E%20DIV.header%20%3E%20SPAN.summary%2C%0ADIV.__NS__console-message-group%20%3E%20DIV.header%20%3E%20SPAN.summary%20%7B%0A%20%20display%3A%20inline%20!important%3B%0A%7D%0A%0ADIV.__NS__console-message-group%20%3E%20DIV.header%20%3E%20DIV.actions%20%7B%0A%20%20display%3A%20none%20!important%3B%0A%7D%0A%0ADIV.__NS__console-message-group%20%3E%20DIV.header%20%3E%20SPAN.summary%20%3E%20SPAN%20%3E%20SPAN.count%20%7B%0A%20%20color%3A%20%23ffffff%20!important%3B%0A%7D%0A%0ADIV.__NS__console-message%5Bexpanded%3Dfalse%5D%20%3E%20DIV.header%20%3E%20SPAN.fileline%20%7B%0A%20%20display%3A%20none%3B%0A%7D%0A%0ADIV.__NS__console-message%20%3E%20DIV.header%20%3E%20DIV.actions%20%7B%0A%20%20display%3A%20inline-block%3B%0A%20%20position%3A%20relative%3B%0A%20%20top%3A%200px%3B%0A%20%20left%3A%2010px%3B%0A%20%20float%3A%20right%3B%0A%20%20margin-left%3A%200px%3B%0A%20%20margin-right%3A%205px%3B%0A%7D%0A%0ADIV.__NS__console-message%20%3E%20DIV.header%20%3E%20DIV.actions%20DIV.inspect%20%7B%0A%20%20display%3A%20inline-block%3B%0A%20%20background%3A%20url(__RESOURCE__images%2Fnode-magnifier.png)%20no-repeat%3B%0A%20%20width%3A%2016px%3B%0A%20%20height%3A%2016px%3B%0A%20%20margin-right%3A%204px%3B%0A%7D%0A%0ADIV.__NS__console-message%20%3E%20DIV.header%20%3E%20DIV.actions%20%3E%20DIV.file%20%7B%0A%20%20display%3A%20inline-block%3B%0A%20%20background%3A%20url(__RESOURCE__images%2Fdocument-binary.png)%20no-repeat%3B%0A%20%20width%3A%2016px%3B%0A%20%20height%3A%2016px%3B%0A%20%20margin-right%3A%204px%3B%0A%7D%0A%0ADIV.__NS__console-message%20%3E%20DIV.header%20%3E%20DIV.actions%20%3E%20DIV.inspect%3Ahover%2C%0ADIV.__NS__console-message%20%3E%20DIV.header%20%3E%20DIV.actions%20%3E%20DIV.file%3Ahover%20%7B%0A%20%20cursor%3A%20pointer%3B%0A%7D%0A%0ADIV.__NS__console-message%20%3E%20DIV.body%20%7B%0A%20%20padding%3A%206px%3B%0A%20%20margin%3A%203px%3B%0A%20%20margin-top%3A%200px%3B%0A%7D%0A%0ADIV.__NS__console-message%5Bexpanded%3Dfalse%5D%20%3E%20DIV.body%20%7B%0A%20%20display%3A%20none%3B%0A%7D%0A%0ADIV.__NS__console-message-group%20%3E%20DIV.body%20%7B%0A%20%20padding%3A%200px%3B%0A%20%20margin%3A%200px%3B%0A%20%20margin-left%3A%2020px%3B%0A%20%20border-top%3A%201px%20solid%20%23000000%3B%0A%20%20border-left%3A%201px%20solid%20%23000000%3B%0A%20%20margin-bottom%3A%20-1px%3B%0A%7D%0A%0ADIV.__NS__console-message%20%3E%20DIV.body-priority-info%20%7B%0A%20%20border%3A%203px%20solid%20%23c6eeff%3B%0A%20%20margin%3A%200px%3B%0A%20%20border-top%3A%200px%3B%0A%7D%0A%0ADIV.__NS__console-message%20%3E%20DIV.body-priority-warn%20%7B%0A%20%20border%3A%203px%20solid%20%23ffe68d%3B%0A%20%20margin%3A%200px%3B%0A%20%20border-top%3A%200px%3B%0A%7D%0A%0ADIV.__NS__console-message%20%3E%20DIV.body-priority-error%20%7B%0A%20%20border%3A%203px%20solid%20%23ffa7a7%3B%0A%20%20margin%3A%200px%3B%0A%20%20border-top%3A%200px%3B%0A%7D%0A%0ADIV.__NS__console-message%20%3E%20DIV.body%20%3E%20DIV.group-no-messages%20%7B%0A%20%20background-color%3A%20white%3B%0A%20%20padding-left%3A%204px%3B%0A%20%20padding-right%3A%204px%3B%0A%20%20padding-top%3A%203px%3B%0A%20%20padding-bottom%3A%203px%3B%0A%20%20color%3A%20gray%3B%0A%7D%0A%0ADIV.__NS__console-message%20.hidden%20%7B%0A%20%20display%3A%20none%20!important%3B%0A%7D%0A%0A%2F*%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%0A%23%20%20%20wrappers%2Fviewer%0A%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23*%2F%0A%0ADIV.__NS__viewer-harness%20%7B%0A%20%20padding%3A%202px%204px%201px%206px%3B%0A%20%20font-family%3A%20Lucida%20Grande%2C%20Tahoma%2C%20sans-serif%3B%0A%20%20font-size%3A%2011px%3B%0A%7D%0A%0A%2F*%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%0A%23%20%20%20firebug%20console%0A%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23%23*%2F%0A%0ADIV.devcomp-request-group%20%7B%0A%20%20background%3A%20url(__RESOURCE__images%2Ffirebug_request_group_bg.png)%20repeat-x%20%23FFFFFF%3B%0A%7D%0A%0ADIV.devcomp-request-group%20%3E%20DIV.logGroupLabel%20%7B%0A%20%20min-height%3A%2016px%20!important%3B%0A%20%20background%3A%20url(__RESOURCE__images%2Fdevcomp_16.png)%20!important%3B%0A%20%20background-repeat%3A%20no-repeat%20!important%3B%0A%20%20background-position%3A%203px%201px%20!important%3B%0A%20%20padding-left%3A%2024px%20!important%3B%0A%7D%0A%0ADIV.devcomp-request-group%20%3E%20DIV.logGroupLabel%20%3E%20SPAN.objectBox%20%7B%0A%20%20color%3A%20%23445777%3B%0A%20%20font-family%3A%20Lucida%20Grande%2C%20Tahoma%2C%20sans-serif%3B%0A%20%20font-size%3A%2011px%3B%0A%7D%0A%0ADIV.devcomp-request-group%20%3E%20DIV.logGroupBody%20%3E%20DIV%20%3E%20DIV.title%20%3E%20DIV.actions%20%3E%20DIV%20%7B%0A%20%20display%3A%20none%20!important%3B%0A%7D'",
              "bottom": null
            },
            "dependencies": {
              "static": {},
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/wrappers/console.js": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/wrappers/console",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/wrappers/console.js",
            "descriptor": {
              "filename": "console.js",
              "filepath": "../../insight.renderers.default/lib/insight/wrappers/console.js",
              "mtime": 1420350722,
              "code": "\nvar PACK = require(\"../pack\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return false;\n};\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n\n                CONST_Normal: \"tag\",\n                CONST_Short: \"shortTag\",\n        \n                tag:\n                    DIV(\n                        {\n                            \"class\": \"$message|_getMessageClass\",\n                            \"_messageObject\": \"$message\",\n                            \"onmouseover\":\"$onMouseOver\",\n                            \"onmousemove\":\"$onMouseMove\",\n                            \"onmouseout\":\"$onMouseOut\",\n                            \"onclick\":\"$onClick\",\n                            \"expandable\": \"$message|_isExpandable\",\n                            \"expanded\": \"false\",\n                            \"_templateObject\": \"$message|_getTemplateObject\"\n                        },\n                        DIV(\n                            {\n                                \"class\": \"$message|_getHeaderClass\",\n                                \"hideOnExpand\": \"$message|_getHideShortTagOnExpand\"\n                            },\n                            DIV({\"class\": \"expander\"}),\n                            DIV({\"class\": \"actions\"},\n                                DIV({\"class\": \"inspect\", \"onclick\":\"$onClick\"}),\n                                DIV({\"class\": \"file $message|_getFileActionClass\", \"onclick\":\"$onClick\"})\n                            ),\n                            SPAN(\n                                {\"class\": \"summary\"},\n                                SPAN({\"class\": \"label\"},    // WORKAROUND: IF does not work at top level due to a bug\n                                    IF(\"$message|_hasLabel\", SPAN(\"$message|_getLabel\"))\n                                ),\n                                TAG(\"$message,$CONST_Short|_getTag\", {\n                                    \"node\": \"$message|_getValue\",\n                                    \"message\": \"$message\"\n                                })\n                            ),\n                            SPAN({\"class\": \"fileline\"}, \n                                DIV(  // WORKAROUND: IF does not work at top level due to a bug\n                                    IF(\"$message|_hasLabel\", DIV({\"class\": \"label\"}, \"$message|_getLabel\"))\n                                ),\n                                DIV(\"$message|_getFileLine\"))\n                        ),\n                        DIV({\"class\": \"$message|_getBodyClass\"})\n                    ),\n\n                 groupNoMessagesTag:\n                    DIV({\"class\": \"group-no-messages\"}, \"No Messages\"),    \n\n                _getTemplateObject: function() {\n                    return this;\n                },\n        \n                _getMessageClass: function(message) {\n \n                    // TODO: Move this into more of an 'init' method\n                    message.postRender = {};\n                    \n                    if(typeof message.meta[\"group.start\"] != \"undefined\") {\n                        return PACK.__NS__ + \"console-message \" + PACK.__NS__ + \"console-message-group\";\n                    } else {\n                        return PACK.__NS__ + \"console-message\";\n                    }\n                },\n        \n                _getHeaderClass: function(message) {\n                    if(!message.meta || !message.meta[\"priority\"]) {\n                        return \"header\";\n                    }\n                    return \"header header-priority-\" + message.meta[\"priority\"];\n                },\n        \n                _getBodyClass: function(message) {\n                    if(!message.meta || !message.meta[\"priority\"]) {\n                        return \"body\";\n                    }\n                    return \"body body-priority-\" + message.meta[\"priority\"];\n                },\n                \n                _getFileLine: function(message) {\n                    if(!message.meta) {\n                        return \"\";\n                    }\n                    var str = [];\n                    if(message.meta[\"file\"]) {\n                        str.push(helpers.util.cropStringLeft(message.meta[\"file\"], 75));\n                    }\n                    if(message.meta[\"line\"]) {\n                        str.push(\"@\");\n                        str.push(message.meta[\"line\"]);\n                    }\n                    return str.join(\" \");\n                },\n        \n                // TODO: Need better way to set/determine if tag should be hidden\n                _getHideShortTagOnExpand: function(message) {\n                    if(typeof message.meta[\"group.start\"] != \"undefined\") {\n                        return \"false\";\n                    }\n                    var rep = this._getRep(message);\n                    if(rep.VAR_hideShortTagOnExpand===false) {\n                        return \"false\";\n                        \n                    }\n                    var node = message.og.getOrigin();\n                    if(node.type==\"reference\") {\n                        node = node.getInstance();\n                        if(node.meta[\"lang.type\"]==\"exception\") {\n                            return \"false\";\n                        }\n                    }\n                    return \"true\";\n                },\n        \n                _isExpandable: function(message) {\n        /*\n                    switch(message.getObjectGraph().getOrigin().type) {\n                        case \"array\":\n                        case \"reference\":\n                        case \"dictionary\":\n                        case \"map\":\n                        case \"text\":\n                            break;\n                    }\n        */            \n                    return true;\n                },\n                \n                _getFileActionClass: function(message) {\n                    if(message.meta[\"file\"]) return \"\";\n                    return \"hidden\";\n                },\n        \n                _getTag: function(message, type)\n                {\n                    var rep = this._getRep(message);\n                    if(type==this.CONST_Short) {\n                        if(rep.shortTag) {\n                            return rep.shortTag;\n                        }\n                    }\n                    return rep.tag;\n                },\n                \n                _getRep: function(message)\n                {\n                    return message.template;\n/*\n                    var rep;\n                    \n                    if(message.meta && message.meta[\"renderer\"]) {\n                        rep = helpers.getTemplateForId(message.meta[\"renderer\"]);\n                    } else {\n                        rep = helpers.getTemplateForNode(message.getObjectGraph().getOrigin());\n                    }\n                    return rep;\n*/\n                },\n        \n                _hasLabel: function(message)\n                {\n                    if(message.meta && typeof message.meta[\"label\"] != \"undefined\") {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                },\n        \n                _getLabel: function(message)\n                {\n                    if(this._hasLabel(message)) {\n                        return message.meta[\"label\"];\n                    } else {\n                        return \"\";\n                    }\n                },\n        \n                _getValue: function(message)\n                {\n                    if(typeof message.meta[\"group.start\"] != \"undefined\") {\n                        var node = message.og.getOrigin();\n                        node.meta[\"string.trim.enabled\"] = false;\n                        return node;\n                    }\n                    else\n                        return message.og.getOrigin();\n                },\n        \n                onMouseMove: function(event)\n                {\n        /*            \n                    if(activeInfoTip) {\n                        var x = event.clientX, y = event.clientY;\n                        infoTipModule.showInfoTip(activeInfoTip, {\n                            showInfoTip: function() {\n                                return true;\n                            }\n                        }, event.target, x, y, event.rangeParent, event.rangeOffset);\n                    }\n        */            \n                },\n            \n                onMouseOver: function(event)\n                {\n                    // set a class on our logRow parent identifying this log row as fireconsole controlled\n                    // this is used for hover and selected styling\n                    //helpers.util.setClass(this._getMasterRow(event.target).parentNode, \"logRow-\" + PACK.__NS__ + \"console-message\");\n        \n                    if(helpers.util.getChildByClass(this._getMasterRow(event.target), \"__no_inspect\")) {\n                        return;\n                    }\n        \n                    // populate file/line info tip\n        /*            \n                    var meta = this._getMasterRow(event.target).repObject.meta;\n                    if(meta && (meta[\"fc.msg.file\"] || meta[\"fc.msg.line\"])) {\n                        activeInfoTip = event.target.ownerDocument.getElementsByClassName('infoTip')[0];\n                        this.fileLineInfoTipTag.replace({\n                            \"file\": meta[\"fc.msg.file\"] || \"?\",\n                            \"line\": meta[\"fc.msg.line\"] || \"?\"\n                        }, activeInfoTip);\n                    } else {\n                        activeInfoTip = null;\n                    }\n        */            \n                },\n            \n                onMouseOut: function(event)\n                {\n        //            if(activeInfoTip) {\n        //                infoTipModule.hideInfoTip(activeInfoTip);\n        //            }\n                },\n                \n                onClick: function(event)\n                {\n        //            if(this.util.getChildByClass(this._getMasterRow(event.target), \"__no_inspect\")) {\n        //                return;\n        //            }\n                    try {\n                        var masterRow = this._getMasterRow(event.target),\n                            headerTag = helpers.util.getChildByClass(masterRow, \"header\"),\n                            actionsTag = helpers.util.getChildByClass(headerTag, \"actions\"),\n                            summaryTag = helpers.util.getChildByClass(headerTag, \"summary\"),\n                            bodyTag = helpers.util.getChildByClass(masterRow, \"body\");\n\n                        var pointer = {\n                            x: event.clientX,\n                            y: event.clientY\n                        };\n                        var masterRect = {\n                            \"left\": headerTag.getBoundingClientRect().left-2,\n                            \"top\": headerTag.getBoundingClientRect().top-2,\n                            // actionsTag.getBoundingClientRect().left is 0 if actions tag not showing\n                            \"right\": actionsTag.getBoundingClientRect().left || headerTag.getBoundingClientRect().right,\n                            \"bottom\": headerTag.getBoundingClientRect().bottom+1\n                        };\n            \n                        if(pointer.x >= masterRect.left && pointer.x <= masterRect.right && pointer.y >= masterRect.top && pointer.y <= masterRect.bottom) {\n                            event.stopPropagation();\n                            \n                            if(masterRow.getAttribute(\"expanded\")==\"true\") {\n            \n                                masterRow.setAttribute(\"expanded\", \"false\");\n            \n                                helpers.dispatchEvent('contract', [event, {\n                                    \"message\": masterRow.messageObject,\n                                    \"masterTag\": masterRow,\n                                    \"summaryTag\": summaryTag,\n                                    \"bodyTag\": bodyTag\n                                }]);\n            \n                            } else {\n\n                                masterRow.setAttribute(\"expanded\", \"true\");\n\n                                helpers.dispatchEvent('expand', [event, {\n                                    \"message\": masterRow.messageObject,\n                                    \"masterTag\": masterRow,\n                                    \"summaryTag\": summaryTag,\n                                    \"bodyTag\": bodyTag\n                                }]);\n\n                                if(!bodyTag.innerHTML) {\n                                    try {\n                                        if(typeof masterRow.messageObject.meta[\"group.start\"] != \"undefined\") {                                            \n                                            this.groupNoMessagesTag.replace({}, bodyTag, this);\n                                        } else {\n                                            this.expandForMasterRow(masterRow, bodyTag);\n                                        }\n                                        this.postRender(bodyTag);\n                                    } catch(err) {\n                                        bodyTag.innerHTML = \"NOTE: Group expansion here when using DeveloperCompanion is broken beyond repair with Firebug > 1.11. Please downgrade Firebug or use alternate tool such as Companion Console, Companion Window or FirePHP Extension. This feature will be overhauled in a future tool. I apologize for the inconvenience.\";\n                                        //console.log(\"ERR\", err.stack);\n                                    }\n                                }\n                            }\n                        } else\n                        if(helpers.util.hasClass(event.target, \"inspect\")) {\n                            event.stopPropagation();\n                            helpers.dispatchEvent('inspectMessage', [event, {\n                                \"message\": masterRow.messageObject,\n                                \"masterTag\": masterRow,\n                                \"summaryTag\": summaryTag,\n                                \"bodyTag\": bodyTag,\n                                \"args\": {\n                                    \"node\": masterRow.messageObject.og.getOrigin()\n                                }\n                            }]);\n                        } else\n                        if(helpers.util.hasClass(event.target, \"file\")) {\n                            event.stopPropagation();\n                            var args = {\n                                \"file\": masterRow.messageObject.meta.file,\n                                \"line\": masterRow.messageObject.meta.line\n                            };\n                            if(args[\"file\"] && args[\"line\"]) {\n                                helpers.dispatchEvent('inspectFile', [event, {\n                                    \"message\": masterRow.messageObject,\n                                    \"masterTag\": masterRow,\n                                    \"summaryTag\": summaryTag,\n                                    \"bodyTag\": bodyTag,\n                                    \"args\": args\n                                }]);\n                            }\n            /*                \n                        } else {\n                            event.stopPropagation();\n                            helpers.dispatchEvent('click', [event, {\n                                \"message\": masterRow.messageObject,\n                                \"masterTag\": masterRow,\n                                \"valueTag\": valueTag,\n                                \"bodyTag\": bodyTag\n                            }]);\n            */\n                        }\n                    } catch(e) {\n                        helpers.logger.error(e);\n                    }\n                },\n\n                setCount: function(node, count)\n                {\n                    try {\n                        var masterRow = this._getMasterRow(node),\n                            headerTag = helpers.util.getChildByClass(masterRow, \"header\"),\n                            summaryTag = helpers.util.getChildByClass(headerTag, \"summary\");\n\n                        summaryTag.children[1].innerHTML += ' <span class=\"count\">(' + count + ')</span>';\n\n                    } catch(e) {\n                        helpers.logger.error(\"Error setting count for node!: \" + e);\n                    }                                                \n                },\n         \n                postRender: function(node)\n                {\n                    var node = this._getMasterRow(node);\n                    if (node.messageObject && typeof node.messageObject.postRender == \"object\")\n                    {\n                        if (typeof node.messageObject.postRender.keeptitle !== \"undefined\")\n                        {\n                            node.setAttribute(\"keeptitle\", node.messageObject.postRender.keeptitle?\"true\":\"false\");\n                        }\n                    }\n                },\n\n                expandForMasterRow: function(masterRow, bodyTag) {\n                    masterRow.setAttribute(\"expanded\", \"true\");\n\n                    masterRow.messageObject.render(bodyTag, \"detail\");\n\n/*\n                    var rep = this._getRep(masterRow.messageObject, this.CONST_Normal);\n                    rep.tag.replace({\n                        \"node\": masterRow.messageObject.getObjectGraph().getOrigin(),\n                        \"message\": masterRow.messageObject\n                    }, bodyTag, rep);\n*/\n                },\n        \n                _getMasterRow: function(row)\n                {\n                    while(true) {\n                        if(!row.parentNode) {\n                            return null;\n                        }\n                        if(helpers.util.hasClass(row, PACK.__NS__ + \"console-message\")) {\n                            break;\n                        }\n                        row = row.parentNode;\n                    }\n                    return row;\n                }\n            });\n        }        \n    }\n});\n\nexports.renderMessage = function(message, node, options, helpers)\n{\n    exports.getTemplate(helpers).tag.replace({\"message\": message}, node);\n}\n",
              "globals": {
                "PACK": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "exports": {
                  "type": "reference"
                },
                "module": {
                  "type": "reference"
                },
                "DIV": {
                  "type": "call"
                },
                "SPAN": {
                  "type": "call"
                },
                "IF": {
                  "type": "call"
                },
                "TAG": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "../pack": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/insight/wrappers';",
              "code": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/insight/wrappers';\n\nvar PACK = require(\"../pack\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return false;\n};\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n\n                CONST_Normal: \"tag\",\n                CONST_Short: \"shortTag\",\n        \n                tag:\n                    DIV(\n                        {\n                            \"class\": \"$message|_getMessageClass\",\n                            \"_messageObject\": \"$message\",\n                            \"onmouseover\":\"$onMouseOver\",\n                            \"onmousemove\":\"$onMouseMove\",\n                            \"onmouseout\":\"$onMouseOut\",\n                            \"onclick\":\"$onClick\",\n                            \"expandable\": \"$message|_isExpandable\",\n                            \"expanded\": \"false\",\n                            \"_templateObject\": \"$message|_getTemplateObject\"\n                        },\n                        DIV(\n                            {\n                                \"class\": \"$message|_getHeaderClass\",\n                                \"hideOnExpand\": \"$message|_getHideShortTagOnExpand\"\n                            },\n                            DIV({\"class\": \"expander\"}),\n                            DIV({\"class\": \"actions\"},\n                                DIV({\"class\": \"inspect\", \"onclick\":\"$onClick\"}),\n                                DIV({\"class\": \"file $message|_getFileActionClass\", \"onclick\":\"$onClick\"})\n                            ),\n                            SPAN(\n                                {\"class\": \"summary\"},\n                                SPAN({\"class\": \"label\"},    // WORKAROUND: IF does not work at top level due to a bug\n                                    IF(\"$message|_hasLabel\", SPAN(\"$message|_getLabel\"))\n                                ),\n                                TAG(\"$message,$CONST_Short|_getTag\", {\n                                    \"node\": \"$message|_getValue\",\n                                    \"message\": \"$message\"\n                                })\n                            ),\n                            SPAN({\"class\": \"fileline\"}, \n                                DIV(  // WORKAROUND: IF does not work at top level due to a bug\n                                    IF(\"$message|_hasLabel\", DIV({\"class\": \"label\"}, \"$message|_getLabel\"))\n                                ),\n                                DIV(\"$message|_getFileLine\"))\n                        ),\n                        DIV({\"class\": \"$message|_getBodyClass\"})\n                    ),\n\n                 groupNoMessagesTag:\n                    DIV({\"class\": \"group-no-messages\"}, \"No Messages\"),    \n\n                _getTemplateObject: function() {\n                    return this;\n                },\n        \n                _getMessageClass: function(message) {\n \n                    // TODO: Move this into more of an 'init' method\n                    message.postRender = {};\n                    \n                    if(typeof message.meta[\"group.start\"] != \"undefined\") {\n                        return PACK.__NS__ + \"console-message \" + PACK.__NS__ + \"console-message-group\";\n                    } else {\n                        return PACK.__NS__ + \"console-message\";\n                    }\n                },\n        \n                _getHeaderClass: function(message) {\n                    if(!message.meta || !message.meta[\"priority\"]) {\n                        return \"header\";\n                    }\n                    return \"header header-priority-\" + message.meta[\"priority\"];\n                },\n        \n                _getBodyClass: function(message) {\n                    if(!message.meta || !message.meta[\"priority\"]) {\n                        return \"body\";\n                    }\n                    return \"body body-priority-\" + message.meta[\"priority\"];\n                },\n                \n                _getFileLine: function(message) {\n                    if(!message.meta) {\n                        return \"\";\n                    }\n                    var str = [];\n                    if(message.meta[\"file\"]) {\n                        str.push(helpers.util.cropStringLeft(message.meta[\"file\"], 75));\n                    }\n                    if(message.meta[\"line\"]) {\n                        str.push(\"@\");\n                        str.push(message.meta[\"line\"]);\n                    }\n                    return str.join(\" \");\n                },\n        \n                // TODO: Need better way to set/determine if tag should be hidden\n                _getHideShortTagOnExpand: function(message) {\n                    if(typeof message.meta[\"group.start\"] != \"undefined\") {\n                        return \"false\";\n                    }\n                    var rep = this._getRep(message);\n                    if(rep.VAR_hideShortTagOnExpand===false) {\n                        return \"false\";\n                        \n                    }\n                    var node = message.og.getOrigin();\n                    if(node.type==\"reference\") {\n                        node = node.getInstance();\n                        if(node.meta[\"lang.type\"]==\"exception\") {\n                            return \"false\";\n                        }\n                    }\n                    return \"true\";\n                },\n        \n                _isExpandable: function(message) {\n        /*\n                    switch(message.getObjectGraph().getOrigin().type) {\n                        case \"array\":\n                        case \"reference\":\n                        case \"dictionary\":\n                        case \"map\":\n                        case \"text\":\n                            break;\n                    }\n        */            \n                    return true;\n                },\n                \n                _getFileActionClass: function(message) {\n                    if(message.meta[\"file\"]) return \"\";\n                    return \"hidden\";\n                },\n        \n                _getTag: function(message, type)\n                {\n                    var rep = this._getRep(message);\n                    if(type==this.CONST_Short) {\n                        if(rep.shortTag) {\n                            return rep.shortTag;\n                        }\n                    }\n                    return rep.tag;\n                },\n                \n                _getRep: function(message)\n                {\n                    return message.template;\n/*\n                    var rep;\n                    \n                    if(message.meta && message.meta[\"renderer\"]) {\n                        rep = helpers.getTemplateForId(message.meta[\"renderer\"]);\n                    } else {\n                        rep = helpers.getTemplateForNode(message.getObjectGraph().getOrigin());\n                    }\n                    return rep;\n*/\n                },\n        \n                _hasLabel: function(message)\n                {\n                    if(message.meta && typeof message.meta[\"label\"] != \"undefined\") {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                },\n        \n                _getLabel: function(message)\n                {\n                    if(this._hasLabel(message)) {\n                        return message.meta[\"label\"];\n                    } else {\n                        return \"\";\n                    }\n                },\n        \n                _getValue: function(message)\n                {\n                    if(typeof message.meta[\"group.start\"] != \"undefined\") {\n                        var node = message.og.getOrigin();\n                        node.meta[\"string.trim.enabled\"] = false;\n                        return node;\n                    }\n                    else\n                        return message.og.getOrigin();\n                },\n        \n                onMouseMove: function(event)\n                {\n        /*            \n                    if(activeInfoTip) {\n                        var x = event.clientX, y = event.clientY;\n                        infoTipModule.showInfoTip(activeInfoTip, {\n                            showInfoTip: function() {\n                                return true;\n                            }\n                        }, event.target, x, y, event.rangeParent, event.rangeOffset);\n                    }\n        */            \n                },\n            \n                onMouseOver: function(event)\n                {\n                    // set a class on our logRow parent identifying this log row as fireconsole controlled\n                    // this is used for hover and selected styling\n                    //helpers.util.setClass(this._getMasterRow(event.target).parentNode, \"logRow-\" + PACK.__NS__ + \"console-message\");\n        \n                    if(helpers.util.getChildByClass(this._getMasterRow(event.target), \"__no_inspect\")) {\n                        return;\n                    }\n        \n                    // populate file/line info tip\n        /*            \n                    var meta = this._getMasterRow(event.target).repObject.meta;\n                    if(meta && (meta[\"fc.msg.file\"] || meta[\"fc.msg.line\"])) {\n                        activeInfoTip = event.target.ownerDocument.getElementsByClassName('infoTip')[0];\n                        this.fileLineInfoTipTag.replace({\n                            \"file\": meta[\"fc.msg.file\"] || \"?\",\n                            \"line\": meta[\"fc.msg.line\"] || \"?\"\n                        }, activeInfoTip);\n                    } else {\n                        activeInfoTip = null;\n                    }\n        */            \n                },\n            \n                onMouseOut: function(event)\n                {\n        //            if(activeInfoTip) {\n        //                infoTipModule.hideInfoTip(activeInfoTip);\n        //            }\n                },\n                \n                onClick: function(event)\n                {\n        //            if(this.util.getChildByClass(this._getMasterRow(event.target), \"__no_inspect\")) {\n        //                return;\n        //            }\n                    try {\n                        var masterRow = this._getMasterRow(event.target),\n                            headerTag = helpers.util.getChildByClass(masterRow, \"header\"),\n                            actionsTag = helpers.util.getChildByClass(headerTag, \"actions\"),\n                            summaryTag = helpers.util.getChildByClass(headerTag, \"summary\"),\n                            bodyTag = helpers.util.getChildByClass(masterRow, \"body\");\n\n                        var pointer = {\n                            x: event.clientX,\n                            y: event.clientY\n                        };\n                        var masterRect = {\n                            \"left\": headerTag.getBoundingClientRect().left-2,\n                            \"top\": headerTag.getBoundingClientRect().top-2,\n                            // actionsTag.getBoundingClientRect().left is 0 if actions tag not showing\n                            \"right\": actionsTag.getBoundingClientRect().left || headerTag.getBoundingClientRect().right,\n                            \"bottom\": headerTag.getBoundingClientRect().bottom+1\n                        };\n            \n                        if(pointer.x >= masterRect.left && pointer.x <= masterRect.right && pointer.y >= masterRect.top && pointer.y <= masterRect.bottom) {\n                            event.stopPropagation();\n                            \n                            if(masterRow.getAttribute(\"expanded\")==\"true\") {\n            \n                                masterRow.setAttribute(\"expanded\", \"false\");\n            \n                                helpers.dispatchEvent('contract', [event, {\n                                    \"message\": masterRow.messageObject,\n                                    \"masterTag\": masterRow,\n                                    \"summaryTag\": summaryTag,\n                                    \"bodyTag\": bodyTag\n                                }]);\n            \n                            } else {\n\n                                masterRow.setAttribute(\"expanded\", \"true\");\n\n                                helpers.dispatchEvent('expand', [event, {\n                                    \"message\": masterRow.messageObject,\n                                    \"masterTag\": masterRow,\n                                    \"summaryTag\": summaryTag,\n                                    \"bodyTag\": bodyTag\n                                }]);\n\n                                if(!bodyTag.innerHTML) {\n                                    try {\n                                        if(typeof masterRow.messageObject.meta[\"group.start\"] != \"undefined\") {                                            \n                                            this.groupNoMessagesTag.replace({}, bodyTag, this);\n                                        } else {\n                                            this.expandForMasterRow(masterRow, bodyTag);\n                                        }\n                                        this.postRender(bodyTag);\n                                    } catch(err) {\n                                        bodyTag.innerHTML = \"NOTE: Group expansion here when using DeveloperCompanion is broken beyond repair with Firebug > 1.11. Please downgrade Firebug or use alternate tool such as Companion Console, Companion Window or FirePHP Extension. This feature will be overhauled in a future tool. I apologize for the inconvenience.\";\n                                        //console.log(\"ERR\", err.stack);\n                                    }\n                                }\n                            }\n                        } else\n                        if(helpers.util.hasClass(event.target, \"inspect\")) {\n                            event.stopPropagation();\n                            helpers.dispatchEvent('inspectMessage', [event, {\n                                \"message\": masterRow.messageObject,\n                                \"masterTag\": masterRow,\n                                \"summaryTag\": summaryTag,\n                                \"bodyTag\": bodyTag,\n                                \"args\": {\n                                    \"node\": masterRow.messageObject.og.getOrigin()\n                                }\n                            }]);\n                        } else\n                        if(helpers.util.hasClass(event.target, \"file\")) {\n                            event.stopPropagation();\n                            var args = {\n                                \"file\": masterRow.messageObject.meta.file,\n                                \"line\": masterRow.messageObject.meta.line\n                            };\n                            if(args[\"file\"] && args[\"line\"]) {\n                                helpers.dispatchEvent('inspectFile', [event, {\n                                    \"message\": masterRow.messageObject,\n                                    \"masterTag\": masterRow,\n                                    \"summaryTag\": summaryTag,\n                                    \"bodyTag\": bodyTag,\n                                    \"args\": args\n                                }]);\n                            }\n            /*                \n                        } else {\n                            event.stopPropagation();\n                            helpers.dispatchEvent('click', [event, {\n                                \"message\": masterRow.messageObject,\n                                \"masterTag\": masterRow,\n                                \"valueTag\": valueTag,\n                                \"bodyTag\": bodyTag\n                            }]);\n            */\n                        }\n                    } catch(e) {\n                        helpers.logger.error(e);\n                    }\n                },\n\n                setCount: function(node, count)\n                {\n                    try {\n                        var masterRow = this._getMasterRow(node),\n                            headerTag = helpers.util.getChildByClass(masterRow, \"header\"),\n                            summaryTag = helpers.util.getChildByClass(headerTag, \"summary\");\n\n                        summaryTag.children[1].innerHTML += ' <span class=\"count\">(' + count + ')</span>';\n\n                    } catch(e) {\n                        helpers.logger.error(\"Error setting count for node!: \" + e);\n                    }                                                \n                },\n         \n                postRender: function(node)\n                {\n                    var node = this._getMasterRow(node);\n                    if (node.messageObject && typeof node.messageObject.postRender == \"object\")\n                    {\n                        if (typeof node.messageObject.postRender.keeptitle !== \"undefined\")\n                        {\n                            node.setAttribute(\"keeptitle\", node.messageObject.postRender.keeptitle?\"true\":\"false\");\n                        }\n                    }\n                },\n\n                expandForMasterRow: function(masterRow, bodyTag) {\n                    masterRow.setAttribute(\"expanded\", \"true\");\n\n                    masterRow.messageObject.render(bodyTag, \"detail\");\n\n/*\n                    var rep = this._getRep(masterRow.messageObject, this.CONST_Normal);\n                    rep.tag.replace({\n                        \"node\": masterRow.messageObject.getObjectGraph().getOrigin(),\n                        \"message\": masterRow.messageObject\n                    }, bodyTag, rep);\n*/\n                },\n        \n                _getMasterRow: function(row)\n                {\n                    while(true) {\n                        if(!row.parentNode) {\n                            return null;\n                        }\n                        if(helpers.util.hasClass(row, PACK.__NS__ + \"console-message\")) {\n                            break;\n                        }\n                        row = row.parentNode;\n                    }\n                    return row;\n                }\n            });\n        }        \n    }\n});\n\nexports.renderMessage = function(message, node, options, helpers)\n{\n    exports.getTemplate(helpers).tag.replace({\"message\": message}, node);\n}\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "../pack": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/wrappers/viewer.js": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/wrappers/viewer",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/wrappers/viewer.js",
            "descriptor": {
              "filename": "viewer.js",
              "filepath": "../../insight.renderers.default/lib/insight/wrappers/viewer.js",
              "mtime": 1375341042,
              "code": "\nvar PACK = require(\"../pack\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return false;\n};\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n\n                tag:\n                    DIV({\n                        \"class\": PACK.__NS__ + \"viewer-harness\"\n                    }, TAG(\"$message|_getTag\", {\n                        \"node\": \"$message|_getValue\",\n                        \"message\": \"$message\"\n                    })),\n\n                _getTag: function(message)\n                {\n                    return message.template.tag;\n                },\n\n                _getValue: function(message)\n                {\n                    if (typeof message.og != \"undefined\")\n                        return message.og.getOrigin();\n                    else\n                    if (typeof message.node != \"undefined\")\n                    {\n                        return message.node;\n                    }\n                    else\n                        helpers.logger.error(\"Unknown message format in \" + module.id);\n                }\n            });\n        }        \n    }\n});\n\nexports.renderMessage = function(message, node, options, helpers)\n{\n    exports.getTemplate(helpers).tag.replace({\"message\": message}, node);\n}\n",
              "globals": {
                "PACK": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "exports": {
                  "type": "reference"
                },
                "module": {
                  "type": "reference"
                },
                "DIV": {
                  "type": "call"
                },
                "TAG": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "../pack": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/insight/wrappers';",
              "code": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/insight/wrappers';\n\nvar PACK = require(\"../pack\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return false;\n};\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n\n                tag:\n                    DIV({\n                        \"class\": PACK.__NS__ + \"viewer-harness\"\n                    }, TAG(\"$message|_getTag\", {\n                        \"node\": \"$message|_getValue\",\n                        \"message\": \"$message\"\n                    })),\n\n                _getTag: function(message)\n                {\n                    return message.template.tag;\n                },\n\n                _getValue: function(message)\n                {\n                    if (typeof message.og != \"undefined\")\n                        return message.og.getOrigin();\n                    else\n                    if (typeof message.node != \"undefined\")\n                    {\n                        return message.node;\n                    }\n                    else\n                        helpers.logger.error(\"Unknown message format in \" + module.id);\n                }\n            });\n        }        \n    }\n});\n\nexports.renderMessage = function(message, node, options, helpers)\n{\n    exports.getTemplate(helpers).tag.replace({\"message\": message}, node);\n}\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "../pack": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/structures/trace.js": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/structures/trace",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/structures/trace.js",
            "descriptor": {
              "filename": "trace.js",
              "filepath": "../../insight.renderers.default/lib/insight/structures/trace.js",
              "mtime": 1375341042,
              "code": "\nvar PACK = require(\"../pack\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.meta && typeof node.meta.renderer !== \"undefined\" && node.meta.renderer === \"structures/trace\")?true:false;\n};\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n                \n                VAR_hideShortTagOnExpand: false,\n        \n                tag:\n                    DIV({\"class\": PACK.__NS__+\"structures-trace\"},\n                        TABLE({\"cellpadding\": 3, \"cellspacing\": 0},\n                            TBODY(\n                                TR(\n                                    TH({\"class\": \"header-file\"}, \"File\"),\n                                    TH({\"class\": \"header-line\"}, \"Line\"),\n                                    TH({\"class\": \"header-inst\"}, \"Instruction\")\n                                ),\n                                FOR(\"frame\", \"$node|getCallList\",\n                                    TR({\"_frameNodeObj\": \"$frame.node\"},\n                                        TD({\"class\": \"cell-file\", \"onclick\":\"$onFileClick\"}, \"$frame.file\"),\n                                        TD({\"class\": \"cell-line\", \"onclick\":\"$onFileClick\"}, \"$frame.line\"),\n                                        TD({\"class\": \"cell-inst\"},\n                                            DIV(\"$frame|getFrameLabel(\",\n                                                FOR(\"arg\", \"$frame|argIterator\",\n                                                    DIV({\"class\": \"arg\", \"_argNodeObj\": \"$arg.node\", \"onclick\":\"$onArgClick\"},\n                                                        TAG(\"$arg.tag\", {\"node\": \"$arg.node\"}),\n                                                        IF(\"$arg.more\", SPAN({\"class\": \"separator\"}, \",\"))\n                                                    )\n                                                ),\n                                            \")\")\n                                        )\n                                    )\n                                )\n                            )\n                        )\n                    ),\n        \n                shortTag:\n                    SPAN({\"class\": PACK.__NS__+\"structures-trace\"}, TAG(\"$node|getCaptionTag\", {\"node\": \"$node|getCaptionNode\"})),\n        \n        \n                onFileClick: function(event) {\n                    event.stopPropagation();\n                    var node = event.target.parentNode.frameNodeObj,\n                        frame = node.compact();\n                    if(!frame.file || !frame.line) {\n                        return;\n                    }\n                    var args = {\n                        \"file\": frame.file.value,\n                        \"line\": frame.line.value\n                    };\n                    if(args[\"file\"] && args[\"line\"]) {\n                        helpers.dispatchEvent('inspectFile', [event, {\n                            \"message\": node.getObjectGraph().message,\n                            \"args\": args\n                        }]);\n                    }\n                },\n        \n                onArgClick: function(event) {\n                    event.stopPropagation();\n                    var tag = event.target;\n                    while(tag.parentNode) {\n                        if(tag.argNodeObj) {\n                            break;\n                        }\n                        tag = tag.parentNode;\n                    }\n                    helpers.dispatchEvent('inspectNode', [event, {\n                        \"message\": tag.argNodeObj.getObjectGraph().message,\n                        \"args\": {\"node\": tag.argNodeObj}\n                    }]);\n                },\n        \n                getCaptionTag: function(node) {\n                    var rep = helpers.getTemplateForNode(this.getCaptionNode(node));\n                    return rep.shortTag || rep.tag;\n                },\n        \n                getCaptionNode: function(node) {\n                    if (node.type == \"map\")\n                        return helpers.util.merge(node.compact().title, {\"wrapped\": false});\n                    if (node.type == \"dictionary\")\n                        return helpers.util.merge(node.value.title, {\"wrapped\": false});\n                },\n\n                getTrace: function(node) {\n                    if (node.type == \"map\")\n                       return node.compact().trace.value;\n                    if (node.type == \"dictionary\")\n                       return node.value.trace.value;\n                    helpers.logger.error(\"Cannot get trace from node\", node);\n                },\n                \n                getCallList: function(node) {\n\n                    // TODO: Do this in an init method\n                    node.getObjectGraph().message.postRender.keeptitle = true;\n\n                    try {\n                        var list = [];\n                        this.getTrace(node).forEach(function(node) {\n                            frame = node.compact();\n                            list.push({\n                                'node': node,\n                                'file': (frame.file)?frame.file.value:\"\",\n                                'line': (frame.line)?frame.line.value:\"\",\n                                'class': (frame[\"class\"])?frame[\"class\"].value:\"\",\n                                'function': (frame[\"function\"])?frame[\"function\"].value:\"\",\n                                'type': (frame.type)?frame.type.value:\"\",\n                                'args': (frame.args)?frame.args.value:false\n                            });\n                        });\n        \n                        // Now that we have all call events, lets see if we can shorten the filenames.\n                        // This only works for unix filepaths for now.\n                        // TODO: Get this working for windows filepaths as well.\n                        try {\n                            if (list[0].file.substr(0, 1) == '/') {\n                                var file_shortest = list[0].file.split('/');\n                                var file_original_length = file_shortest.length;\n                                for (var i = 1; i < list.length; i++) {\n                                    var file = list[i].file.split('/');\n                                    for (var j = 0; j < file_shortest.length; j++) {\n                                        if (file_shortest[j] != file[j]) {\n                                            file_shortest.splice(j, file_shortest.length - j);\n                                            break;\n                                        }\n                                    }\n                                }\n                                if (file_shortest.length > 2) {\n                                    if (file_shortest.length == file_original_length) {\n                                        file_shortest.pop();\n                                    }\n                                    file_shortest = file_shortest.join('/');\n                                    for (var i = 0; i < list.length; i++) {\n                                        list[i].file = '...' + list[i].file.substr(file_shortest.length);\n                                    }\n                                }\n                            }\n                        } catch (e) {}\n        \n                        return list;\n                    } catch(e) {\n                        helpers.logger.error(e);\n                    }\n                },\n        \n                getFrameLabel: function(frame)\n                {\n                    try {\n                        if (frame['class']) {\n                            if (frame['type'] == 'throw') {\n                                return 'throw ' + frame['class'];\n                            } else\n                            if (frame['type'] == 'trigger') {\n                                return 'trigger_error';\n                            } else {\n                                return frame['class'] + frame['type'] + frame['function'];\n                            }\n                        }\n                        return frame['function'];\n                    } catch(e) {\n                        helpers.logger.error(e);\n                    }\n                },\n        \n                argIterator: function(frame)\n                {\n                    try {\n                        if(!frame.args) {\n                            return [];\n                        }\n                        var items = [];\n                        for (var i = 0; i < frame.args.length; i++) {\n                            items.push({\n                                \"node\": helpers.util.merge(frame.args[i], {\"wrapped\": true}),\n                                \"tag\": helpers.getTemplateForNode(frame.args[i]).shortTag,\n                                \"more\": (i < frame.args.length-1)\n                            });\n                        }\n                        return items;\n                    } catch(e) {\n                        helpers.logger.error(e);\n                    }\n                }\n            });\n        }        \n    }\n});\n",
              "globals": {
                "PACK": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "exports": {
                  "type": "reference"
                },
                "module": {
                  "type": "reference"
                },
                "DIV": {
                  "type": "call"
                },
                "TABLE": {
                  "type": "call"
                },
                "TBODY": {
                  "type": "call"
                },
                "TR": {
                  "type": "call"
                },
                "TH": {
                  "type": "call"
                },
                "FOR": {
                  "type": "call"
                },
                "TD": {
                  "type": "call"
                },
                "TAG": {
                  "type": "call"
                },
                "IF": {
                  "type": "call"
                },
                "SPAN": {
                  "type": "call"
                },
                "frame": {
                  "type": "assign"
                },
                "j": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "../pack": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/insight/structures';",
              "code": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/insight/structures';\n\nvar PACK = require(\"../pack\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.meta && typeof node.meta.renderer !== \"undefined\" && node.meta.renderer === \"structures/trace\")?true:false;\n};\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n                \n                VAR_hideShortTagOnExpand: false,\n        \n                tag:\n                    DIV({\"class\": PACK.__NS__+\"structures-trace\"},\n                        TABLE({\"cellpadding\": 3, \"cellspacing\": 0},\n                            TBODY(\n                                TR(\n                                    TH({\"class\": \"header-file\"}, \"File\"),\n                                    TH({\"class\": \"header-line\"}, \"Line\"),\n                                    TH({\"class\": \"header-inst\"}, \"Instruction\")\n                                ),\n                                FOR(\"frame\", \"$node|getCallList\",\n                                    TR({\"_frameNodeObj\": \"$frame.node\"},\n                                        TD({\"class\": \"cell-file\", \"onclick\":\"$onFileClick\"}, \"$frame.file\"),\n                                        TD({\"class\": \"cell-line\", \"onclick\":\"$onFileClick\"}, \"$frame.line\"),\n                                        TD({\"class\": \"cell-inst\"},\n                                            DIV(\"$frame|getFrameLabel(\",\n                                                FOR(\"arg\", \"$frame|argIterator\",\n                                                    DIV({\"class\": \"arg\", \"_argNodeObj\": \"$arg.node\", \"onclick\":\"$onArgClick\"},\n                                                        TAG(\"$arg.tag\", {\"node\": \"$arg.node\"}),\n                                                        IF(\"$arg.more\", SPAN({\"class\": \"separator\"}, \",\"))\n                                                    )\n                                                ),\n                                            \")\")\n                                        )\n                                    )\n                                )\n                            )\n                        )\n                    ),\n        \n                shortTag:\n                    SPAN({\"class\": PACK.__NS__+\"structures-trace\"}, TAG(\"$node|getCaptionTag\", {\"node\": \"$node|getCaptionNode\"})),\n        \n        \n                onFileClick: function(event) {\n                    event.stopPropagation();\n                    var node = event.target.parentNode.frameNodeObj,\n                        frame = node.compact();\n                    if(!frame.file || !frame.line) {\n                        return;\n                    }\n                    var args = {\n                        \"file\": frame.file.value,\n                        \"line\": frame.line.value\n                    };\n                    if(args[\"file\"] && args[\"line\"]) {\n                        helpers.dispatchEvent('inspectFile', [event, {\n                            \"message\": node.getObjectGraph().message,\n                            \"args\": args\n                        }]);\n                    }\n                },\n        \n                onArgClick: function(event) {\n                    event.stopPropagation();\n                    var tag = event.target;\n                    while(tag.parentNode) {\n                        if(tag.argNodeObj) {\n                            break;\n                        }\n                        tag = tag.parentNode;\n                    }\n                    helpers.dispatchEvent('inspectNode', [event, {\n                        \"message\": tag.argNodeObj.getObjectGraph().message,\n                        \"args\": {\"node\": tag.argNodeObj}\n                    }]);\n                },\n        \n                getCaptionTag: function(node) {\n                    var rep = helpers.getTemplateForNode(this.getCaptionNode(node));\n                    return rep.shortTag || rep.tag;\n                },\n        \n                getCaptionNode: function(node) {\n                    if (node.type == \"map\")\n                        return helpers.util.merge(node.compact().title, {\"wrapped\": false});\n                    if (node.type == \"dictionary\")\n                        return helpers.util.merge(node.value.title, {\"wrapped\": false});\n                },\n\n                getTrace: function(node) {\n                    if (node.type == \"map\")\n                       return node.compact().trace.value;\n                    if (node.type == \"dictionary\")\n                       return node.value.trace.value;\n                    helpers.logger.error(\"Cannot get trace from node\", node);\n                },\n                \n                getCallList: function(node) {\n\n                    // TODO: Do this in an init method\n                    node.getObjectGraph().message.postRender.keeptitle = true;\n\n                    try {\n                        var list = [];\n                        this.getTrace(node).forEach(function(node) {\n                            frame = node.compact();\n                            list.push({\n                                'node': node,\n                                'file': (frame.file)?frame.file.value:\"\",\n                                'line': (frame.line)?frame.line.value:\"\",\n                                'class': (frame[\"class\"])?frame[\"class\"].value:\"\",\n                                'function': (frame[\"function\"])?frame[\"function\"].value:\"\",\n                                'type': (frame.type)?frame.type.value:\"\",\n                                'args': (frame.args)?frame.args.value:false\n                            });\n                        });\n        \n                        // Now that we have all call events, lets see if we can shorten the filenames.\n                        // This only works for unix filepaths for now.\n                        // TODO: Get this working for windows filepaths as well.\n                        try {\n                            if (list[0].file.substr(0, 1) == '/') {\n                                var file_shortest = list[0].file.split('/');\n                                var file_original_length = file_shortest.length;\n                                for (var i = 1; i < list.length; i++) {\n                                    var file = list[i].file.split('/');\n                                    for (var j = 0; j < file_shortest.length; j++) {\n                                        if (file_shortest[j] != file[j]) {\n                                            file_shortest.splice(j, file_shortest.length - j);\n                                            break;\n                                        }\n                                    }\n                                }\n                                if (file_shortest.length > 2) {\n                                    if (file_shortest.length == file_original_length) {\n                                        file_shortest.pop();\n                                    }\n                                    file_shortest = file_shortest.join('/');\n                                    for (var i = 0; i < list.length; i++) {\n                                        list[i].file = '...' + list[i].file.substr(file_shortest.length);\n                                    }\n                                }\n                            }\n                        } catch (e) {}\n        \n                        return list;\n                    } catch(e) {\n                        helpers.logger.error(e);\n                    }\n                },\n        \n                getFrameLabel: function(frame)\n                {\n                    try {\n                        if (frame['class']) {\n                            if (frame['type'] == 'throw') {\n                                return 'throw ' + frame['class'];\n                            } else\n                            if (frame['type'] == 'trigger') {\n                                return 'trigger_error';\n                            } else {\n                                return frame['class'] + frame['type'] + frame['function'];\n                            }\n                        }\n                        return frame['function'];\n                    } catch(e) {\n                        helpers.logger.error(e);\n                    }\n                },\n        \n                argIterator: function(frame)\n                {\n                    try {\n                        if(!frame.args) {\n                            return [];\n                        }\n                        var items = [];\n                        for (var i = 0; i < frame.args.length; i++) {\n                            items.push({\n                                \"node\": helpers.util.merge(frame.args[i], {\"wrapped\": true}),\n                                \"tag\": helpers.getTemplateForNode(frame.args[i]).shortTag,\n                                \"more\": (i < frame.args.length-1)\n                            });\n                        }\n                        return items;\n                    } catch(e) {\n                        helpers.logger.error(e);\n                    }\n                }\n            });\n        }        \n    }\n});\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "../pack": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/structures/table.js": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/structures/table",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/structures/table.js",
            "descriptor": {
              "filename": "table.js",
              "filepath": "../../insight.renderers.default/lib/insight/structures/table.js",
              "mtime": 1375341042,
              "code": "\nvar PACK = require(\"../pack\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.meta && typeof node.meta.renderer !== \"undefined\" && node.meta.renderer === \"structures/table\")?true:false;\n};\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n\n                VAR_hideShortTagOnExpand: false,\n\n                tag:\n                    DIV({\"class\": PACK.__NS__+\"structures-table\"},\n                        TABLE({\"cellpadding\": 3, \"cellspacing\": 0},\n                            TBODY(\n                                TR({\"class\":\"$node|getHeaderClass\"},\n                                    FOR(\"column\", \"$node|getHeaders\",\n                                        TH({\"class\": \"header\"}, TAG(\"$column.tag\", {\"node\": \"$column.node\"}))\n                                    ),\n                                    IF(\"$node|hasNoHeader\",\n                                        TH()    // needed to fix gecko bug that does not render table border if empty <tr/> in table\n                                    )\n                                ),\n                                FOR(\"row\", \"$node|getRows\",\n                                    TR(\n                                        FOR(\"cell\", \"$row|getCells\",\n                                            TD({\"class\": \"cell\", \"_cellNodeObj\": \"$cell.node\", \"onclick\":\"$onCellClick\"},\n                                                TAG(\"$cell.tag\", {\"node\": \"$cell.node\"}))\n                                        )\n                                    )\n                                )\n                            )\n                        )\n                    ),\n\n                shortTag:\n                    SPAN({\"class\": PACK.__NS__+\"structures-table\"}, TAG(\"$node|getTitleTag\", {\"node\": \"$node|getTitleNode\"})),\n\n                getTitleTag: function(node) {\n                    var rep = helpers.getTemplateForNode(this.getTitleNode(node));\n                    return rep.shortTag || rep.tag;\n                },\n\n                getTitleNode: function(node) {\n                    return helpers.util.merge(node.compact().title, {\"wrapped\": false});\n                },\n                \n                getHeaderClass: function(node)\n                {\n                    if (this.hasNoHeader(node)) {\n                        return \"hide\";\n                    } else {\n                        return \"\";\n                    }\n                },\n\n                hasNoHeader: function(node) {\n                    var header = node.compact().header;\n                    if(!header || header.type!=\"array\") {\n                        return true;\n                    }\n                    return false;\n                },\n\n                getHeaders: function(node) {\n                    var header = node.compact().header;\n                    if(!header || header.type!=\"array\") {\n                        return [];\n                    }\n                    var items = [];\n                    for (var i = 0; i < header.value.length; i++) {\n                        var rep = helpers.getTemplateForNode(header.value[i]);\n                        items.push({\n                            \"node\": helpers.util.merge(header.value[i], {\"wrapped\": false}),\n                            \"tag\": rep.shortTag || rep.tag\n                        });\n                    }\n                    return items;\n                },\n        \n                getRows: function(node) {\n                    var data = node.compact().data;\n                    if(!data || data.type!=\"array\") {\n                        return [];\n                    }\n                    return data.value;\n                },\n        \n                getCells: function(node) {\n                    var items = [];\n                    if(node.value) {\n                        for (var i = 0; i < node.value.length; i++) {\n                            var rep = helpers.getTemplateForNode(node.value[i]);\n                            items.push({\n                                \"node\": helpers.util.merge(node.value[i], {\"wrapped\": false}),\n                                \"tag\": rep.shortTag || rep.tag\n                            });\n                        }\n                    } else\n                    if(node.meta && node.meta['encoder.trimmed']) {\n                        var rep = helpers.getTemplateForNode(node);\n                        items.push({\n                            \"node\": helpers.util.merge(node, {\"wrapped\": false}),\n                            \"tag\": rep.shortTag || rep.tag\n                        });\n                    }\n                    return items;\n                },\n        \n                onCellClick: function(event) {\n                    event.stopPropagation();\n                    var tag = event.target;\n                    while(tag.parentNode) {\n                        if(tag.cellNodeObj) {\n                            break;\n                        }\n                        tag = tag.parentNode;\n                    }\n                    helpers.dispatchEvent('inspectNode', [event, {\n                        \"message\": tag.cellNodeObj.getObjectGraph().message,\n                        \"args\": {\"node\": tag.cellNodeObj}\n                    }]);\n                }\n            });\n        }        \n    }\n});\n",
              "globals": {
                "PACK": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "exports": {
                  "type": "reference"
                },
                "module": {
                  "type": "reference"
                },
                "DIV": {
                  "type": "call"
                },
                "TABLE": {
                  "type": "call"
                },
                "TBODY": {
                  "type": "call"
                },
                "TR": {
                  "type": "call"
                },
                "FOR": {
                  "type": "call"
                },
                "TH": {
                  "type": "call"
                },
                "TAG": {
                  "type": "call"
                },
                "IF": {
                  "type": "call"
                },
                "TD": {
                  "type": "call"
                },
                "SPAN": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "../pack": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/insight/structures';",
              "code": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/insight/structures';\n\nvar PACK = require(\"../pack\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.meta && typeof node.meta.renderer !== \"undefined\" && node.meta.renderer === \"structures/table\")?true:false;\n};\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n\n                VAR_hideShortTagOnExpand: false,\n\n                tag:\n                    DIV({\"class\": PACK.__NS__+\"structures-table\"},\n                        TABLE({\"cellpadding\": 3, \"cellspacing\": 0},\n                            TBODY(\n                                TR({\"class\":\"$node|getHeaderClass\"},\n                                    FOR(\"column\", \"$node|getHeaders\",\n                                        TH({\"class\": \"header\"}, TAG(\"$column.tag\", {\"node\": \"$column.node\"}))\n                                    ),\n                                    IF(\"$node|hasNoHeader\",\n                                        TH()    // needed to fix gecko bug that does not render table border if empty <tr/> in table\n                                    )\n                                ),\n                                FOR(\"row\", \"$node|getRows\",\n                                    TR(\n                                        FOR(\"cell\", \"$row|getCells\",\n                                            TD({\"class\": \"cell\", \"_cellNodeObj\": \"$cell.node\", \"onclick\":\"$onCellClick\"},\n                                                TAG(\"$cell.tag\", {\"node\": \"$cell.node\"}))\n                                        )\n                                    )\n                                )\n                            )\n                        )\n                    ),\n\n                shortTag:\n                    SPAN({\"class\": PACK.__NS__+\"structures-table\"}, TAG(\"$node|getTitleTag\", {\"node\": \"$node|getTitleNode\"})),\n\n                getTitleTag: function(node) {\n                    var rep = helpers.getTemplateForNode(this.getTitleNode(node));\n                    return rep.shortTag || rep.tag;\n                },\n\n                getTitleNode: function(node) {\n                    return helpers.util.merge(node.compact().title, {\"wrapped\": false});\n                },\n                \n                getHeaderClass: function(node)\n                {\n                    if (this.hasNoHeader(node)) {\n                        return \"hide\";\n                    } else {\n                        return \"\";\n                    }\n                },\n\n                hasNoHeader: function(node) {\n                    var header = node.compact().header;\n                    if(!header || header.type!=\"array\") {\n                        return true;\n                    }\n                    return false;\n                },\n\n                getHeaders: function(node) {\n                    var header = node.compact().header;\n                    if(!header || header.type!=\"array\") {\n                        return [];\n                    }\n                    var items = [];\n                    for (var i = 0; i < header.value.length; i++) {\n                        var rep = helpers.getTemplateForNode(header.value[i]);\n                        items.push({\n                            \"node\": helpers.util.merge(header.value[i], {\"wrapped\": false}),\n                            \"tag\": rep.shortTag || rep.tag\n                        });\n                    }\n                    return items;\n                },\n        \n                getRows: function(node) {\n                    var data = node.compact().data;\n                    if(!data || data.type!=\"array\") {\n                        return [];\n                    }\n                    return data.value;\n                },\n        \n                getCells: function(node) {\n                    var items = [];\n                    if(node.value) {\n                        for (var i = 0; i < node.value.length; i++) {\n                            var rep = helpers.getTemplateForNode(node.value[i]);\n                            items.push({\n                                \"node\": helpers.util.merge(node.value[i], {\"wrapped\": false}),\n                                \"tag\": rep.shortTag || rep.tag\n                            });\n                        }\n                    } else\n                    if(node.meta && node.meta['encoder.trimmed']) {\n                        var rep = helpers.getTemplateForNode(node);\n                        items.push({\n                            \"node\": helpers.util.merge(node, {\"wrapped\": false}),\n                            \"tag\": rep.shortTag || rep.tag\n                        });\n                    }\n                    return items;\n                },\n        \n                onCellClick: function(event) {\n                    event.stopPropagation();\n                    var tag = event.target;\n                    while(tag.parentNode) {\n                        if(tag.cellNodeObj) {\n                            break;\n                        }\n                        tag = tag.parentNode;\n                    }\n                    helpers.dispatchEvent('inspectNode', [event, {\n                        \"message\": tag.cellNodeObj.getObjectGraph().message,\n                        \"args\": {\"node\": tag.cellNodeObj}\n                    }]);\n                }\n            });\n        }        \n    }\n});\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "../pack": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/primitives/text.js": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/primitives/text",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/primitives/text.js",
            "descriptor": {
              "filename": "text.js",
              "filepath": "../../insight.renderers.default/lib/insight/primitives/text.js",
              "mtime": 1375341042,
              "code": "\nvar PACK = require(\"../pack\");\n\nPACK.initTemplate(require, exports, module, {\n\n    type: \"text\",\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n        \n                tag: SPAN({\"class\": PACK.__NS__+\"text\"},\n                          FOR(\"line\", \"$node.value|lineIterator\", \"$line.value\",\n                              IF(\"$line.more\", BR())\n                          )\n                     ),\n                \n                shortTag: SPAN({\"class\": PACK.__NS__+\"text\"}, \"$node|getValue\"),\n        \n\n                getValue: function(node) {\n                    if (!node.parentNode || (node.meta && typeof node.meta[\"string.trim.enabled\"] !== \"undefined\" && node.meta[\"string.trim.enabled\"]===false))\n                        return node.value;\n                    else\n                        return this.cropString(node.value);\n                },\n\n                cropString: function(text, limit){\n                    text = text + \"\";\n                    limit = limit || 50;\n                    var halfLimit = limit / 2;\n                    if (text.length > limit) {\n                        return this.escapeNewLines(text.substr(0, halfLimit) + \"...\" + text.substr(text.length - halfLimit));\n                    } else {\n                        return this.escapeNewLines(text);\n                    }\n                },\n                \n                escapeNewLines: function(value) {\n                    return value.replace(/\\r/g, \"\\\\r\").replace(/\\n/g, \"\\\\n\");\n                },\n                \n                lineIterator: function(value) {\n                    var parts = (\"\"+value).replace(/\\r/g, \"\\\\r\").split(\"\\n\");\n                    var lines = [];\n                    for( var i=0 ; i<parts.length ; i++ ) {\n                        lines.push({\"value\": parts[i], \"more\": (i<parts.length-1)});\n                    }\n                    return lines;\n                }\n            });\n        }        \n    }\n});\n",
              "globals": {
                "PACK": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "exports": {
                  "type": "reference"
                },
                "module": {
                  "type": "reference"
                },
                "SPAN": {
                  "type": "call"
                },
                "FOR": {
                  "type": "call"
                },
                "IF": {
                  "type": "call"
                },
                "BR": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "../pack": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/insight/primitives';",
              "code": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/insight/primitives';\n\nvar PACK = require(\"../pack\");\n\nPACK.initTemplate(require, exports, module, {\n\n    type: \"text\",\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n        \n                tag: SPAN({\"class\": PACK.__NS__+\"text\"},\n                          FOR(\"line\", \"$node.value|lineIterator\", \"$line.value\",\n                              IF(\"$line.more\", BR())\n                          )\n                     ),\n                \n                shortTag: SPAN({\"class\": PACK.__NS__+\"text\"}, \"$node|getValue\"),\n        \n\n                getValue: function(node) {\n                    if (!node.parentNode || (node.meta && typeof node.meta[\"string.trim.enabled\"] !== \"undefined\" && node.meta[\"string.trim.enabled\"]===false))\n                        return node.value;\n                    else\n                        return this.cropString(node.value);\n                },\n\n                cropString: function(text, limit){\n                    text = text + \"\";\n                    limit = limit || 50;\n                    var halfLimit = limit / 2;\n                    if (text.length > limit) {\n                        return this.escapeNewLines(text.substr(0, halfLimit) + \"...\" + text.substr(text.length - halfLimit));\n                    } else {\n                        return this.escapeNewLines(text);\n                    }\n                },\n                \n                escapeNewLines: function(value) {\n                    return value.replace(/\\r/g, \"\\\\r\").replace(/\\n/g, \"\\\\n\");\n                },\n                \n                lineIterator: function(value) {\n                    var parts = (\"\"+value).replace(/\\r/g, \"\\\\r\").split(\"\\n\");\n                    var lines = [];\n                    for( var i=0 ; i<parts.length ; i++ ) {\n                        lines.push({\"value\": parts[i], \"more\": (i<parts.length-1)});\n                    }\n                    return lines;\n                }\n            });\n        }        \n    }\n});\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "../pack": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/primitives/constant.js": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/primitives/constant",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/primitives/constant.js",
            "descriptor": {
              "filename": "constant.js",
              "filepath": "../../insight.renderers.default/lib/insight/primitives/constant.js",
              "mtime": 1375341042,
              "code": "\nvar PACK = require(\"../pack\");\n\nPACK.initTemplate(require, exports, module, {\n\n    type: \"constant\",\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n\n                tag: SPAN({\"class\": PACK.__NS__+\"constant\"},\n                          \"$node.value\"),\n\n                shortTag: SPAN({\"class\": PACK.__NS__+\"constant\"},\n                               \"$node.value\")\n            });\n        }        \n    }\n});\n",
              "globals": {
                "PACK": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "exports": {
                  "type": "reference"
                },
                "module": {
                  "type": "reference"
                },
                "SPAN": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "../pack": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/insight/primitives';",
              "code": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/insight/primitives';\n\nvar PACK = require(\"../pack\");\n\nPACK.initTemplate(require, exports, module, {\n\n    type: \"constant\",\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n\n                tag: SPAN({\"class\": PACK.__NS__+\"constant\"},\n                          \"$node.value\"),\n\n                shortTag: SPAN({\"class\": PACK.__NS__+\"constant\"},\n                               \"$node.value\")\n            });\n        }        \n    }\n});\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "../pack": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/primitives/array.js": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/primitives/array",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/primitives/array.js",
            "descriptor": {
              "filename": "array.js",
              "filepath": "../../insight.renderers.default/lib/insight/primitives/array.js",
              "mtime": 1375341042,
              "code": "\nvar PACK = require(\"../pack\");\n\nPACK.initTemplate(require, exports, module, {\n\n    type: \"array\",\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n    \n                VAR_label: \"array\",\n    \n                CONST_Normal: \"tag\",\n                CONST_Short: \"shortTag\",\n                CONST_Collapsed: \"collapsedTag\",\n        \n                tag:\n                    SPAN({\"class\": PACK.__NS__+\"array\"}, SPAN(\"$VAR_label(\"),\n                        FOR(\"element\", \"$node,$CONST_Normal|elementIterator\",\n                            DIV({\"class\": \"element\", \"$expandable\":\"$element.expandable\", \"_elementObject\": \"$element\", \"onclick\": \"$onClick\"},\n                                SPAN({\"class\": \"value\"},\n                                    TAG(\"$element.tag\", {\"element\": \"$element\", \"node\": \"$element.node\"})\n                                ),\n                                IF(\"$element.more\", SPAN({\"class\": \"separator\"}, \",\"))\n                            )\n                        ),\n                    SPAN(\")\")),\n        \n                collapsedTag:\n                    SPAN({\"class\": PACK.__NS__+\"array\"}, SPAN(\"$VAR_label(\"),\n                        SPAN({\"class\": \"collapsed\"}, \"... $node|getElementCount ...\"),\n                    SPAN(\")\")),\n        \n                shortTag:\n                    SPAN({\"class\": PACK.__NS__+\"array\"}, SPAN(\"$VAR_label(\"),\n                        FOR(\"element\", \"$node,$CONST_Short|elementIterator\",\n                            SPAN({\"class\": \"element\"},\n                                SPAN({\"class\": \"value\"},\n                                    TAG(\"$element.tag\", {\"element\": \"$element\", \"node\": \"$element.node\"})\n                                ),\n                                IF(\"$element.more\", SPAN({\"class\": \"separator\"}, \",\"))\n                            )\n                        ),\n                    SPAN(\")\")),\n        \n                expandableStub:\n                    TAG(\"$element,$CONST_Collapsed|getTag\", {\"node\": \"$element.node\"}),\n                    \n                expandedStub:\n                    TAG(\"$tag\", {\"node\": \"$node\", \"element\": \"$element\"}),\n        \n                moreTag:\n                    SPAN(\" ... \"),\n        \n                getElementCount: function(node) {\n                    if(!node.value) return 0;\n                    return node.value.length || 0;\n                },\n        \n                getTag: function(element, type) {\n                    if(type===this.CONST_Short) {\n                        return helpers.getTemplateForNode(element.node).shortTag;\n                    } else\n                    if(type===this.CONST_Normal) {\n                        if(element.expandable) {\n                            return this.expandableStub;\n                        } else {\n                            return helpers.getTemplateForNode(element.node).tag;\n                        }\n                    } else\n                    if(type===this.CONST_Collapsed) {\n                        var rep = helpers.getTemplateForNode(element.node);\n                        if(!rep.collapsedTag) {\n                            throw \"no 'collapsedTag' property in rep: \" + rep.toString();\n                        }\n                        return rep.collapsedTag;\n                    }\n                },\n        \n                elementIterator: function(node, type) {\n                    var elements = [];\n                    if(!node.value) return elements;\n                    for( var i=0 ; i<node.value.length ; i++ ) {\n                        \n                        var element = {\n                            \"node\": helpers.util.merge(node.value[i], {\"wrapped\": true}),\n                            \"more\": (i<node.value.length-1),\n                            \"expandable\": this.isExpandable(node.value[i])\n                        };\n        \n                        if(i>2 && type==this.CONST_Short) {\n                            element[\"tag\"] = this.moreTag;\n                        } else {\n                            element[\"tag\"] = this.getTag(element, type);\n                        }\n        \n                        elements.push(element);\n        \n                        if(i>2 && type==this.CONST_Short) {\n                            elements[elements.length-1].more = false;\n                            break;\n                        }\n                    }\n                    return elements;\n                },\n        \n                isExpandable: function(node) {\n                    return (node.type==\"reference\" ||\n                            node.type==\"dictionary\" ||\n                            node.type==\"map\" ||\n                            node.type==\"array\");\n                },\n                \n                onClick: function(event) {\n                    if (!helpers.util.isLeftClick(event)) {\n                        return;\n                    }\n                    var row = helpers.util.getAncestorByClass(event.target, \"element\");\n                    if(helpers.util.hasClass(row, \"expandable\")) {\n                        this.toggleRow(row);\n                    }\n                    event.stopPropagation();\n                },\n                \n                toggleRow: function(row)\n                {\n                    var valueElement = helpers.util.getElementByClass(row, \"value\");\n                    if (helpers.util.hasClass(row, \"expanded\"))\n                    {\n                        helpers.util.removeClass(row, \"expanded\");\n                        this.expandedStub.replace({\n                            \"tag\": this.expandableStub,\n                            \"element\": row.elementObject,\n                            \"node\": row.elementObject.node\n                        }, valueElement);\n                    } else {\n                        helpers.util.setClass(row, \"expanded\");\n                        this.expandedStub.replace({\n                            \"tag\": helpers.getTemplateForNode(row.elementObject.node).tag,\n                            \"element\": row.elementObject,\n                            \"node\": row.elementObject.node\n                        }, valueElement);\n                    }\n                }        \n            });\n        }  \n    }\n});\n",
              "globals": {
                "PACK": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "exports": {
                  "type": "reference"
                },
                "module": {
                  "type": "reference"
                },
                "SPAN": {
                  "type": "call"
                },
                "FOR": {
                  "type": "call"
                },
                "DIV": {
                  "type": "call"
                },
                "TAG": {
                  "type": "call"
                },
                "IF": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "../pack": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/insight/primitives';",
              "code": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/insight/primitives';\n\nvar PACK = require(\"../pack\");\n\nPACK.initTemplate(require, exports, module, {\n\n    type: \"array\",\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n    \n                VAR_label: \"array\",\n    \n                CONST_Normal: \"tag\",\n                CONST_Short: \"shortTag\",\n                CONST_Collapsed: \"collapsedTag\",\n        \n                tag:\n                    SPAN({\"class\": PACK.__NS__+\"array\"}, SPAN(\"$VAR_label(\"),\n                        FOR(\"element\", \"$node,$CONST_Normal|elementIterator\",\n                            DIV({\"class\": \"element\", \"$expandable\":\"$element.expandable\", \"_elementObject\": \"$element\", \"onclick\": \"$onClick\"},\n                                SPAN({\"class\": \"value\"},\n                                    TAG(\"$element.tag\", {\"element\": \"$element\", \"node\": \"$element.node\"})\n                                ),\n                                IF(\"$element.more\", SPAN({\"class\": \"separator\"}, \",\"))\n                            )\n                        ),\n                    SPAN(\")\")),\n        \n                collapsedTag:\n                    SPAN({\"class\": PACK.__NS__+\"array\"}, SPAN(\"$VAR_label(\"),\n                        SPAN({\"class\": \"collapsed\"}, \"... $node|getElementCount ...\"),\n                    SPAN(\")\")),\n        \n                shortTag:\n                    SPAN({\"class\": PACK.__NS__+\"array\"}, SPAN(\"$VAR_label(\"),\n                        FOR(\"element\", \"$node,$CONST_Short|elementIterator\",\n                            SPAN({\"class\": \"element\"},\n                                SPAN({\"class\": \"value\"},\n                                    TAG(\"$element.tag\", {\"element\": \"$element\", \"node\": \"$element.node\"})\n                                ),\n                                IF(\"$element.more\", SPAN({\"class\": \"separator\"}, \",\"))\n                            )\n                        ),\n                    SPAN(\")\")),\n        \n                expandableStub:\n                    TAG(\"$element,$CONST_Collapsed|getTag\", {\"node\": \"$element.node\"}),\n                    \n                expandedStub:\n                    TAG(\"$tag\", {\"node\": \"$node\", \"element\": \"$element\"}),\n        \n                moreTag:\n                    SPAN(\" ... \"),\n        \n                getElementCount: function(node) {\n                    if(!node.value) return 0;\n                    return node.value.length || 0;\n                },\n        \n                getTag: function(element, type) {\n                    if(type===this.CONST_Short) {\n                        return helpers.getTemplateForNode(element.node).shortTag;\n                    } else\n                    if(type===this.CONST_Normal) {\n                        if(element.expandable) {\n                            return this.expandableStub;\n                        } else {\n                            return helpers.getTemplateForNode(element.node).tag;\n                        }\n                    } else\n                    if(type===this.CONST_Collapsed) {\n                        var rep = helpers.getTemplateForNode(element.node);\n                        if(!rep.collapsedTag) {\n                            throw \"no 'collapsedTag' property in rep: \" + rep.toString();\n                        }\n                        return rep.collapsedTag;\n                    }\n                },\n        \n                elementIterator: function(node, type) {\n                    var elements = [];\n                    if(!node.value) return elements;\n                    for( var i=0 ; i<node.value.length ; i++ ) {\n                        \n                        var element = {\n                            \"node\": helpers.util.merge(node.value[i], {\"wrapped\": true}),\n                            \"more\": (i<node.value.length-1),\n                            \"expandable\": this.isExpandable(node.value[i])\n                        };\n        \n                        if(i>2 && type==this.CONST_Short) {\n                            element[\"tag\"] = this.moreTag;\n                        } else {\n                            element[\"tag\"] = this.getTag(element, type);\n                        }\n        \n                        elements.push(element);\n        \n                        if(i>2 && type==this.CONST_Short) {\n                            elements[elements.length-1].more = false;\n                            break;\n                        }\n                    }\n                    return elements;\n                },\n        \n                isExpandable: function(node) {\n                    return (node.type==\"reference\" ||\n                            node.type==\"dictionary\" ||\n                            node.type==\"map\" ||\n                            node.type==\"array\");\n                },\n                \n                onClick: function(event) {\n                    if (!helpers.util.isLeftClick(event)) {\n                        return;\n                    }\n                    var row = helpers.util.getAncestorByClass(event.target, \"element\");\n                    if(helpers.util.hasClass(row, \"expandable\")) {\n                        this.toggleRow(row);\n                    }\n                    event.stopPropagation();\n                },\n                \n                toggleRow: function(row)\n                {\n                    var valueElement = helpers.util.getElementByClass(row, \"value\");\n                    if (helpers.util.hasClass(row, \"expanded\"))\n                    {\n                        helpers.util.removeClass(row, \"expanded\");\n                        this.expandedStub.replace({\n                            \"tag\": this.expandableStub,\n                            \"element\": row.elementObject,\n                            \"node\": row.elementObject.node\n                        }, valueElement);\n                    } else {\n                        helpers.util.setClass(row, \"expanded\");\n                        this.expandedStub.replace({\n                            \"tag\": helpers.getTemplateForNode(row.elementObject.node).tag,\n                            \"element\": row.elementObject,\n                            \"node\": row.elementObject.node\n                        }, valueElement);\n                    }\n                }        \n            });\n        }  \n    }\n});\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "../pack": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/primitives/map.js": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/primitives/map",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/primitives/map.js",
            "descriptor": {
              "filename": "map.js",
              "filepath": "../../insight.renderers.default/lib/insight/primitives/map.js",
              "mtime": 1375341042,
              "code": "\nvar PACK = require(\"../pack\");\n\nPACK.initTemplate(require, exports, module, {\n\n    type: \"map\",\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n                \n                VAR_label: \"map\",\n        \n                CONST_Normal: \"tag\",\n                CONST_Short: \"shortTag\",\n        \n                tag:\n                    SPAN({\"class\": PACK.__NS__+\"map\"}, SPAN(\"$VAR_label(\"),\n                        FOR(\"pair\", \"$node,$CONST_Normal|mapIterator\",\n                            DIV({\"class\": \"pair\"},\n                                TAG(\"$pair.key.tag\", {\"node\": \"$pair.key.node\"}),\n                                SPAN({\"class\": \"delimiter\"}, \"=>\"),\n                                TAG(\"$pair.value.tag\", {\"node\": \"$pair.value.node\"}),\n                                IF(\"$pair.more\", SPAN({\"class\": \"separator\"}, \",\"))\n                            )\n                        ),\n                    SPAN(\")\")),\n        \n                shortTag:\n                    SPAN({\"class\": PACK.__NS__+\"map\"}, SPAN(\"$VAR_label(\"),\n                        FOR(\"pair\", \"$node,$CONST_Short|mapIterator\",\n                            SPAN({\"class\": \"pair\"},\n                                TAG(\"$pair.key.tag\", {\"node\": \"$pair.key.node\"}),\n                                SPAN({\"class\": \"delimiter\"}, \"=>\"),\n                                TAG(\"$pair.value.tag\", {\"node\": \"$pair.value.node\"}),\n                                IF(\"$pair.more\", SPAN({\"class\": \"separator\"}, \",\"))\n                            )\n                        ),\n                    SPAN(\")\")),\n        \n                collapsedTag: \n                    SPAN({\"class\": PACK.__NS__+\"map\"}, SPAN(\"$VAR_label(\"),\n                        SPAN({\"class\": \"collapsed\"}, \"... $node|getItemCount ...\"),\n                    SPAN(\")\")),\n        \n                moreTag:\n                    SPAN(\" ... \"),\n        \n                getItemCount: function(node) {\n                    if(!node.value) return 0;\n                    return node.value.length;\n                },\n        \n                mapIterator: function(node, type) {\n                    var pairs = [];\n                    if(!node.value) return pairs;\n                    for( var i=0 ; i<node.value.length ; i++ ) {\n        \n                        var valueRep = getTag(helpers.getTemplateForNode(node.value[i][1]), type);\n        \n                        if(i>2 && type==this.CONST_Short) {\n                            valueRep = this.moreTag;\n                        }\n        \n                        pairs.push({\n                            \"key\": {\n                                \"tag\": getTag(helpers.getTemplateForNode(node.value[i][0]), type),\n                                \"node\": helpers.util.merge(node.value[i][0], {\"wrapped\": true})\n                            },\n                            \"value\": {\n                                \"tag\": valueRep,\n                                \"node\": helpers.util.merge(node.value[i][1], {\"wrapped\": true})\n                            },\n                            \"more\": (i<node.value.length-1)\n                        });\n        \n                        if(i>2 && type==this.CONST_Short) {\n                            pairs[pairs.length-1].more = false;\n                            break;\n                        }\n                    }\n                    return pairs;\n                }\n            });\n        }        \n    }\n});\n\nfunction getTag(rep, type) {\n    if(!rep[type]) {\n        if(type==\"shortTag\") {\n            return rep.tag;\n        }\n        throw new Error(\"Rep does not have tag of type: \" + type);\n    }\n    return rep[type];\n}\n",
              "globals": {
                "PACK": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "exports": {
                  "type": "reference"
                },
                "module": {
                  "type": "reference"
                },
                "SPAN": {
                  "type": "call"
                },
                "FOR": {
                  "type": "call"
                },
                "DIV": {
                  "type": "call"
                },
                "TAG": {
                  "type": "call"
                },
                "IF": {
                  "type": "call"
                },
                "getTag": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "../pack": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/insight/primitives';",
              "code": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/insight/primitives';\n\nvar PACK = require(\"../pack\");\n\nPACK.initTemplate(require, exports, module, {\n\n    type: \"map\",\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n                \n                VAR_label: \"map\",\n        \n                CONST_Normal: \"tag\",\n                CONST_Short: \"shortTag\",\n        \n                tag:\n                    SPAN({\"class\": PACK.__NS__+\"map\"}, SPAN(\"$VAR_label(\"),\n                        FOR(\"pair\", \"$node,$CONST_Normal|mapIterator\",\n                            DIV({\"class\": \"pair\"},\n                                TAG(\"$pair.key.tag\", {\"node\": \"$pair.key.node\"}),\n                                SPAN({\"class\": \"delimiter\"}, \"=>\"),\n                                TAG(\"$pair.value.tag\", {\"node\": \"$pair.value.node\"}),\n                                IF(\"$pair.more\", SPAN({\"class\": \"separator\"}, \",\"))\n                            )\n                        ),\n                    SPAN(\")\")),\n        \n                shortTag:\n                    SPAN({\"class\": PACK.__NS__+\"map\"}, SPAN(\"$VAR_label(\"),\n                        FOR(\"pair\", \"$node,$CONST_Short|mapIterator\",\n                            SPAN({\"class\": \"pair\"},\n                                TAG(\"$pair.key.tag\", {\"node\": \"$pair.key.node\"}),\n                                SPAN({\"class\": \"delimiter\"}, \"=>\"),\n                                TAG(\"$pair.value.tag\", {\"node\": \"$pair.value.node\"}),\n                                IF(\"$pair.more\", SPAN({\"class\": \"separator\"}, \",\"))\n                            )\n                        ),\n                    SPAN(\")\")),\n        \n                collapsedTag: \n                    SPAN({\"class\": PACK.__NS__+\"map\"}, SPAN(\"$VAR_label(\"),\n                        SPAN({\"class\": \"collapsed\"}, \"... $node|getItemCount ...\"),\n                    SPAN(\")\")),\n        \n                moreTag:\n                    SPAN(\" ... \"),\n        \n                getItemCount: function(node) {\n                    if(!node.value) return 0;\n                    return node.value.length;\n                },\n        \n                mapIterator: function(node, type) {\n                    var pairs = [];\n                    if(!node.value) return pairs;\n                    for( var i=0 ; i<node.value.length ; i++ ) {\n        \n                        var valueRep = getTag(helpers.getTemplateForNode(node.value[i][1]), type);\n        \n                        if(i>2 && type==this.CONST_Short) {\n                            valueRep = this.moreTag;\n                        }\n        \n                        pairs.push({\n                            \"key\": {\n                                \"tag\": getTag(helpers.getTemplateForNode(node.value[i][0]), type),\n                                \"node\": helpers.util.merge(node.value[i][0], {\"wrapped\": true})\n                            },\n                            \"value\": {\n                                \"tag\": valueRep,\n                                \"node\": helpers.util.merge(node.value[i][1], {\"wrapped\": true})\n                            },\n                            \"more\": (i<node.value.length-1)\n                        });\n        \n                        if(i>2 && type==this.CONST_Short) {\n                            pairs[pairs.length-1].more = false;\n                            break;\n                        }\n                    }\n                    return pairs;\n                }\n            });\n        }        \n    }\n});\n\nfunction getTag(rep, type) {\n    if(!rep[type]) {\n        if(type==\"shortTag\") {\n            return rep.tag;\n        }\n        throw new Error(\"Rep does not have tag of type: \" + type);\n    }\n    return rep[type];\n}\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "../pack": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/primitives/reference.js": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/primitives/reference",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/primitives/reference.js",
            "descriptor": {
              "filename": "reference.js",
              "filepath": "../../insight.renderers.default/lib/insight/primitives/reference.js",
              "mtime": 1375341042,
              "code": "\nvar PACK = require(\"../pack\");\n\nPACK.initTemplate(require, exports, module, {\n\n    type: \"reference\",\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n        \n                CONST_Normal: \"tag\",\n                CONST_Short: \"shortTag\",\n                CONST_Collapsed: \"collapsedTag\",\n        \n                tag:\n                    SPAN({\"class\": PACK.__NS__+\"reference\"},\n                    TAG(\"$node,$CONST_Normal|getTag\", {\"node\": \"$node|getInstanceNode\"})),\n                \n                shortTag:\n                    SPAN({\"class\": PACK.__NS__+\"reference\"},\n                    TAG(\"$node,$CONST_Collapsed|getTag\", {\"node\": \"$node|getInstanceNode\"})),\n        \n                collapsedTag:\n                    SPAN({\"class\": PACK.__NS__+\"reference\"},\n                    TAG(\"$node,$CONST_Collapsed|getTag\", {\"node\": \"$node|getInstanceNode\"})),\n                    \n                getTag: function(node, type) {\n                    return helpers.getTemplateForNode(this.getInstanceNode(node))[type];\n                },\n\n                getInstanceNode: function(node) {\n                    return node.getInstance();\n                }\n            });\n        }        \n    }\n});\n",
              "globals": {
                "PACK": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "exports": {
                  "type": "reference"
                },
                "module": {
                  "type": "reference"
                },
                "SPAN": {
                  "type": "call"
                },
                "TAG": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "../pack": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/insight/primitives';",
              "code": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/insight/primitives';\n\nvar PACK = require(\"../pack\");\n\nPACK.initTemplate(require, exports, module, {\n\n    type: \"reference\",\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n        \n                CONST_Normal: \"tag\",\n                CONST_Short: \"shortTag\",\n                CONST_Collapsed: \"collapsedTag\",\n        \n                tag:\n                    SPAN({\"class\": PACK.__NS__+\"reference\"},\n                    TAG(\"$node,$CONST_Normal|getTag\", {\"node\": \"$node|getInstanceNode\"})),\n                \n                shortTag:\n                    SPAN({\"class\": PACK.__NS__+\"reference\"},\n                    TAG(\"$node,$CONST_Collapsed|getTag\", {\"node\": \"$node|getInstanceNode\"})),\n        \n                collapsedTag:\n                    SPAN({\"class\": PACK.__NS__+\"reference\"},\n                    TAG(\"$node,$CONST_Collapsed|getTag\", {\"node\": \"$node|getInstanceNode\"})),\n                    \n                getTag: function(node, type) {\n                    return helpers.getTemplateForNode(this.getInstanceNode(node))[type];\n                },\n\n                getInstanceNode: function(node) {\n                    return node.getInstance();\n                }\n            });\n        }        \n    }\n});\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "../pack": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/primitives/dictionary.js": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/primitives/dictionary",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/primitives/dictionary.js",
            "descriptor": {
              "filename": "dictionary.js",
              "filepath": "../../insight.renderers.default/lib/insight/primitives/dictionary.js",
              "mtime": 1375341042,
              "code": "\nvar PACK = require(\"../pack\");\n\nPACK.initTemplate(require, exports, module, {\n\n    type: \"dictionary\",\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n        \n                CONST_Normal: \"tag\",\n                CONST_Short: \"shortTag\",\n                CONST_Collapsed: \"collapsedTag\",\n        \n                tag:\n                    SPAN({\"class\": PACK.__NS__+\"dictionary\"}, SPAN(\"$node|getLabel(\"),\n                        FOR(\"member\", \"$node,$CONST_Normal|dictionaryIterator\",\n                            DIV({\"class\": \"member\", \"$expandable\":\"$member.expandable\", \"_memberObject\": \"$member\", \"onclick\": \"$onClick\"},\n                                SPAN({\"class\": \"name\", \"decorator\": \"$member|getMemberNameDecorator\"}, \"$member.name\"),\n                                SPAN({\"class\": \"delimiter\"}, \":\"),\n                                SPAN({\"class\": \"value\"},\n                                    TAG(\"$member.tag\", {\"member\": \"$member\", \"node\": \"$member.node\"})\n                                ),\n                                IF(\"$member.more\", SPAN({\"class\": \"separator\"}, \",\"))\n                            )\n                        ),\n                    SPAN(\")\")),\n        \n                shortTag:\n                    SPAN({\"class\": PACK.__NS__+\"dictionary\"}, SPAN(\"$node|getLabel(\"),\n                        FOR(\"member\", \"$node,$CONST_Short|dictionaryIterator\",\n                            SPAN({\"class\": \"member\"},\n                                SPAN({\"class\": \"name\"}, \"$member.name\"),\n                                SPAN({\"class\": \"delimiter\"}, \":\"),\n                                SPAN({\"class\": \"value\"},\n                                    TAG(\"$member.tag\", {\"member\": \"$member\", \"node\": \"$member.node\"})\n                                ),\n                                IF(\"$member.more\", SPAN({\"class\": \"separator\"}, \",\"))\n                            )\n                        ),\n                    SPAN(\")\")),\n        \n                collapsedTag:\n                    SPAN({\"class\": PACK.__NS__+\"dictionary\"}, SPAN(\"$node|getLabel(\"),\n                        SPAN({\"class\": \"collapsed\"}, \"... $node|getMemberCount ...\"),\n                    SPAN(\")\")),\n        \n                expandableStub:\n                    TAG(\"$member,$CONST_Collapsed|getTag\", {\"node\": \"$member.node\"}),\n                    \n                expandedStub:\n                    TAG(\"$tag\", {\"node\": \"$node\", \"member\": \"$member\"}),\n        \n                moreTag:\n                    SPAN({\"class\": \"more\"}, \" ... \"),\n                \n                getLabel: function(node) {\n                    return \"dictionary\";\n                },\n                \n                getMemberNameDecorator: function(member) {\n                    return \"\";\n                },\n                \n                getMemberCount: function(node) {\n                    if(!node.value) return 0;\n                    var count = 0;\n                    for( var name in node.value ) {\n                        count++;\n                    }\n                    return count;\n                },\n                \n                getTag: function(member, type) {\n                    if(type===this.CONST_Short) {\n                        return helpers.getTemplateForNode(member.node).shortTag;\n                    } else\n                    if(type===this.CONST_Normal) {\n                        if(member.expandable) {\n                            return this.expandableStub;\n                        } else {\n                            return helpers.getTemplateForNode(member.node).tag;\n                        }\n                    } else\n                    if(type===this.CONST_Collapsed) {\n                        var rep = helpers.getTemplateForNode(member.node);\n                        if(!rep.collapsedTag) {\n                            throw \"no 'collapsedTag' property in rep: \" + rep.toString();\n                        }\n                        return rep.collapsedTag;\n                    }\n                },\n                \n                dictionaryIterator: function(node, type) {\n                    var members = [];\n                    if(!node.value || node.value.length==0) return members;\n                    for( var name in node.value ) {\n        \n                        var member = {\n                            \"name\": name,\n                            \"node\": helpers.util.merge(node.value[name], {\"wrapped\": true}),\n                            \"more\": true,\n                            \"expandable\": this.isExpandable(node.value[name])\n                        };\n        \n                        if(members.length>1 && type==this.CONST_Short) {\n                            member[\"tag\"] = this.moreTag;\n                        } else {\n                            member[\"tag\"] = this.getTag(member, type);\n                        }\n                        \n                        members.push(member);\n        \n                        if(members.length>2 && type==this.CONST_Short) {\n                            break;\n                        }\n                    }\n                    if(members.length>0) {\n                        members[members.length-1][\"more\"] = false;\n                    }\n                    \n                    return members;\n                },\n                \n                isExpandable: function(node) {\n                    return (node.type==\"reference\" ||\n                            node.type==\"dictionary\" ||\n                            node.type==\"map\" ||\n                            node.type==\"array\");\n                },\n                \n                onClick: function(event) {\n                    if (!helpers.util.isLeftClick(event)) {\n                        return;\n                    }\n                    var row = helpers.util.getAncestorByClass(event.target, \"member\");\n                    if(helpers.util.hasClass(row, \"expandable\")) {\n                        this.toggleRow(row);\n                    }\n                    event.stopPropagation();\n                },\n                \n                toggleRow: function(row)\n                {\n                    var valueElement = helpers.util.getElementByClass(row, \"value\");\n                    if (helpers.util.hasClass(row, \"expanded\"))\n                    {\n                        helpers.util.removeClass(row, \"expanded\");\n                        this.expandedStub.replace({\n                            \"tag\": this.expandableStub,\n                            \"member\": row.memberObject,\n                            \"node\": row.memberObject.node\n                        }, valueElement);\n                    } else {\n                        helpers.util.setClass(row, \"expanded\");\n                        this.expandedStub.replace({\n                            \"tag\": helpers.getTemplateForNode(row.memberObject.node).tag,\n                            \"member\": row.memberObject,\n                            \"node\": row.memberObject.node\n                        }, valueElement);\n                    }\n                }\n            });\n        }        \n    }\n});\n",
              "globals": {
                "PACK": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "exports": {
                  "type": "reference"
                },
                "module": {
                  "type": "reference"
                },
                "SPAN": {
                  "type": "call"
                },
                "FOR": {
                  "type": "call"
                },
                "DIV": {
                  "type": "call"
                },
                "TAG": {
                  "type": "call"
                },
                "IF": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "../pack": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/insight/primitives';",
              "code": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/insight/primitives';\n\nvar PACK = require(\"../pack\");\n\nPACK.initTemplate(require, exports, module, {\n\n    type: \"dictionary\",\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n        \n                CONST_Normal: \"tag\",\n                CONST_Short: \"shortTag\",\n                CONST_Collapsed: \"collapsedTag\",\n        \n                tag:\n                    SPAN({\"class\": PACK.__NS__+\"dictionary\"}, SPAN(\"$node|getLabel(\"),\n                        FOR(\"member\", \"$node,$CONST_Normal|dictionaryIterator\",\n                            DIV({\"class\": \"member\", \"$expandable\":\"$member.expandable\", \"_memberObject\": \"$member\", \"onclick\": \"$onClick\"},\n                                SPAN({\"class\": \"name\", \"decorator\": \"$member|getMemberNameDecorator\"}, \"$member.name\"),\n                                SPAN({\"class\": \"delimiter\"}, \":\"),\n                                SPAN({\"class\": \"value\"},\n                                    TAG(\"$member.tag\", {\"member\": \"$member\", \"node\": \"$member.node\"})\n                                ),\n                                IF(\"$member.more\", SPAN({\"class\": \"separator\"}, \",\"))\n                            )\n                        ),\n                    SPAN(\")\")),\n        \n                shortTag:\n                    SPAN({\"class\": PACK.__NS__+\"dictionary\"}, SPAN(\"$node|getLabel(\"),\n                        FOR(\"member\", \"$node,$CONST_Short|dictionaryIterator\",\n                            SPAN({\"class\": \"member\"},\n                                SPAN({\"class\": \"name\"}, \"$member.name\"),\n                                SPAN({\"class\": \"delimiter\"}, \":\"),\n                                SPAN({\"class\": \"value\"},\n                                    TAG(\"$member.tag\", {\"member\": \"$member\", \"node\": \"$member.node\"})\n                                ),\n                                IF(\"$member.more\", SPAN({\"class\": \"separator\"}, \",\"))\n                            )\n                        ),\n                    SPAN(\")\")),\n        \n                collapsedTag:\n                    SPAN({\"class\": PACK.__NS__+\"dictionary\"}, SPAN(\"$node|getLabel(\"),\n                        SPAN({\"class\": \"collapsed\"}, \"... $node|getMemberCount ...\"),\n                    SPAN(\")\")),\n        \n                expandableStub:\n                    TAG(\"$member,$CONST_Collapsed|getTag\", {\"node\": \"$member.node\"}),\n                    \n                expandedStub:\n                    TAG(\"$tag\", {\"node\": \"$node\", \"member\": \"$member\"}),\n        \n                moreTag:\n                    SPAN({\"class\": \"more\"}, \" ... \"),\n                \n                getLabel: function(node) {\n                    return \"dictionary\";\n                },\n                \n                getMemberNameDecorator: function(member) {\n                    return \"\";\n                },\n                \n                getMemberCount: function(node) {\n                    if(!node.value) return 0;\n                    var count = 0;\n                    for( var name in node.value ) {\n                        count++;\n                    }\n                    return count;\n                },\n                \n                getTag: function(member, type) {\n                    if(type===this.CONST_Short) {\n                        return helpers.getTemplateForNode(member.node).shortTag;\n                    } else\n                    if(type===this.CONST_Normal) {\n                        if(member.expandable) {\n                            return this.expandableStub;\n                        } else {\n                            return helpers.getTemplateForNode(member.node).tag;\n                        }\n                    } else\n                    if(type===this.CONST_Collapsed) {\n                        var rep = helpers.getTemplateForNode(member.node);\n                        if(!rep.collapsedTag) {\n                            throw \"no 'collapsedTag' property in rep: \" + rep.toString();\n                        }\n                        return rep.collapsedTag;\n                    }\n                },\n                \n                dictionaryIterator: function(node, type) {\n                    var members = [];\n                    if(!node.value || node.value.length==0) return members;\n                    for( var name in node.value ) {\n        \n                        var member = {\n                            \"name\": name,\n                            \"node\": helpers.util.merge(node.value[name], {\"wrapped\": true}),\n                            \"more\": true,\n                            \"expandable\": this.isExpandable(node.value[name])\n                        };\n        \n                        if(members.length>1 && type==this.CONST_Short) {\n                            member[\"tag\"] = this.moreTag;\n                        } else {\n                            member[\"tag\"] = this.getTag(member, type);\n                        }\n                        \n                        members.push(member);\n        \n                        if(members.length>2 && type==this.CONST_Short) {\n                            break;\n                        }\n                    }\n                    if(members.length>0) {\n                        members[members.length-1][\"more\"] = false;\n                    }\n                    \n                    return members;\n                },\n                \n                isExpandable: function(node) {\n                    return (node.type==\"reference\" ||\n                            node.type==\"dictionary\" ||\n                            node.type==\"map\" ||\n                            node.type==\"array\");\n                },\n                \n                onClick: function(event) {\n                    if (!helpers.util.isLeftClick(event)) {\n                        return;\n                    }\n                    var row = helpers.util.getAncestorByClass(event.target, \"member\");\n                    if(helpers.util.hasClass(row, \"expandable\")) {\n                        this.toggleRow(row);\n                    }\n                    event.stopPropagation();\n                },\n                \n                toggleRow: function(row)\n                {\n                    var valueElement = helpers.util.getElementByClass(row, \"value\");\n                    if (helpers.util.hasClass(row, \"expanded\"))\n                    {\n                        helpers.util.removeClass(row, \"expanded\");\n                        this.expandedStub.replace({\n                            \"tag\": this.expandableStub,\n                            \"member\": row.memberObject,\n                            \"node\": row.memberObject.node\n                        }, valueElement);\n                    } else {\n                        helpers.util.setClass(row, \"expanded\");\n                        this.expandedStub.replace({\n                            \"tag\": helpers.getTemplateForNode(row.memberObject.node).tag,\n                            \"member\": row.memberObject,\n                            \"node\": row.memberObject.node\n                        }, valueElement);\n                    }\n                }\n            });\n        }        \n    }\n});\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "../pack": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/primitives/unknown.js": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/primitives/unknown",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/insight/primitives/unknown.js",
            "descriptor": {
              "filename": "unknown.js",
              "filepath": "../../insight.renderers.default/lib/insight/primitives/unknown.js",
              "mtime": 1375341042,
              "code": "\nvar PACK = require(\"../pack\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return true;\n};\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n        \n                tag: SPAN({\"class\": PACK.__NS__+\"unknown\"},\n                          \"$node.value\"),\n                \n                shortTag: SPAN({\"class\": PACK.__NS__+\"unknown\"},\n                               \"$node.value\")\n\n            });\n        }        \n    }\n});\n",
              "globals": {
                "PACK": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "exports": {
                  "type": "reference"
                },
                "module": {
                  "type": "reference"
                },
                "SPAN": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "../pack": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/insight/primitives';",
              "code": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/insight/primitives';\n\nvar PACK = require(\"../pack\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return true;\n};\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n        \n                tag: SPAN({\"class\": PACK.__NS__+\"unknown\"},\n                          \"$node.value\"),\n                \n                shortTag: SPAN({\"class\": PACK.__NS__+\"unknown\"},\n                               \"$node.value\")\n\n            });\n        }        \n    }\n});\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "../pack": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/array-indexed.js": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/array-indexed",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/array-indexed.js",
            "descriptor": {
              "filename": "array-indexed.js",
              "filepath": "../../insight.renderers.default/lib/php/primitives/array-indexed.js",
              "mtime": 1375341042,
              "code": "\nvar PACK = require(\"../pack\");\nvar ARRAY_TEMPLATE = require(\"../../insight/primitives/array\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.type==\"array\" && node.meta && node.meta[\"lang.type\"]==\"array\");\n}\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n                \n                inherits: ARRAY_TEMPLATE,\n        \n                VAR_label: \"array\"\n            });\n        }        \n    }\n});\n",
              "globals": {
                "PACK": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "ARRAY_TEMPLATE": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                },
                "module": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "../pack": {
                    "where": "inline"
                  },
                  "../../insight/primitives/array": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/php/primitives';",
              "code": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/php/primitives';\n\nvar PACK = require(\"../pack\");\nvar ARRAY_TEMPLATE = require(\"../../insight/primitives/array\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.type==\"array\" && node.meta && node.meta[\"lang.type\"]==\"array\");\n}\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n                \n                inherits: ARRAY_TEMPLATE,\n        \n                VAR_label: \"array\"\n            });\n        }        \n    }\n});\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "../pack": {
                  "where": "inline"
                },
                "../../insight/primitives/array": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/array-associative.js": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/array-associative",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/array-associative.js",
            "descriptor": {
              "filename": "array-associative.js",
              "filepath": "../../insight.renderers.default/lib/php/primitives/array-associative.js",
              "mtime": 1375341042,
              "code": "\nvar PACK = require(\"../pack\");\nvar MAP_TEMPLATE = require(\"../../insight/primitives/map\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.type==\"map\" && node.meta && node.meta[\"lang.type\"]==\"array\");\n}\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n                \n                inherits: MAP_TEMPLATE,\n        \n                VAR_label: \"array\"\n            });\n        }        \n    }\n});\n",
              "globals": {
                "PACK": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "MAP_TEMPLATE": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                },
                "module": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "../pack": {
                    "where": "inline"
                  },
                  "../../insight/primitives/map": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/php/primitives';",
              "code": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/php/primitives';\n\nvar PACK = require(\"../pack\");\nvar MAP_TEMPLATE = require(\"../../insight/primitives/map\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.type==\"map\" && node.meta && node.meta[\"lang.type\"]==\"array\");\n}\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n                \n                inherits: MAP_TEMPLATE,\n        \n                VAR_label: \"array\"\n            });\n        }        \n    }\n});\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "../pack": {
                  "where": "inline"
                },
                "../../insight/primitives/map": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/boolean.js": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/boolean",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/boolean.js",
            "descriptor": {
              "filename": "boolean.js",
              "filepath": "../../insight.renderers.default/lib/php/primitives/boolean.js",
              "mtime": 1375341042,
              "code": "\nvar PACK = require(\"../pack\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.meta && node.meta[\"lang.type\"]==\"boolean\");\n}\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n                \n                tag:\n                    SPAN({\"class\": PACK.__NS__+\"boolean\"}, \"$node|getValue\"),\n        \n                shortTag:\n                    SPAN({\"class\": PACK.__NS__+\"boolean\"}, \"$node|getValue\"),\n        \n                getValue: function(node) {\n                    return node.value.toUpperCase();\n                }  \n            });\n        }        \n    }\n});\n",
              "globals": {
                "PACK": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "exports": {
                  "type": "reference"
                },
                "module": {
                  "type": "reference"
                },
                "SPAN": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "../pack": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/php/primitives';",
              "code": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/php/primitives';\n\nvar PACK = require(\"../pack\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.meta && node.meta[\"lang.type\"]==\"boolean\");\n}\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n                \n                tag:\n                    SPAN({\"class\": PACK.__NS__+\"boolean\"}, \"$node|getValue\"),\n        \n                shortTag:\n                    SPAN({\"class\": PACK.__NS__+\"boolean\"}, \"$node|getValue\"),\n        \n                getValue: function(node) {\n                    return node.value.toUpperCase();\n                }  \n            });\n        }        \n    }\n});\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "../pack": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/exception.js": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/exception",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/exception.js",
            "descriptor": {
              "filename": "exception.js",
              "filepath": "../../insight.renderers.default/lib/php/primitives/exception.js",
              "mtime": 1375341042,
              "code": "\nvar PACK = require(\"../pack\");\nvar TRACE_TEMPLATE = require(\"../../insight/structures/trace\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.type==\"dictionary\" && node.meta && node.meta[\"lang.type\"]==\"exception\");\n}\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n                \n                inherits: TRACE_TEMPLATE,\n        \n                collapsedTag:\n                    SPAN({\"class\": PACK.__NS__+\"exception\"}, \"$node|getCaption\"),\n                \n                getCaption: function(node) {\n                    return node.meta[\"lang.class\"] + \": \" + node.value.message.value;\n                },\n                \n                getTrace: function(node) {\n                    if (node.type==\"map\")\n                        return [].concat(node.compact().trace.value);\n\n                    if (node.type==\"dictionary\")\n                        return [].concat(node.value.trace.value);\n                }  \n            });\n        }        \n    }\n});\n",
              "globals": {
                "PACK": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "TRACE_TEMPLATE": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                },
                "module": {
                  "type": "reference"
                },
                "SPAN": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "../pack": {
                    "where": "inline"
                  },
                  "../../insight/structures/trace": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/php/primitives';",
              "code": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/php/primitives';\n\nvar PACK = require(\"../pack\");\nvar TRACE_TEMPLATE = require(\"../../insight/structures/trace\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.type==\"dictionary\" && node.meta && node.meta[\"lang.type\"]==\"exception\");\n}\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n                \n                inherits: TRACE_TEMPLATE,\n        \n                collapsedTag:\n                    SPAN({\"class\": PACK.__NS__+\"exception\"}, \"$node|getCaption\"),\n                \n                getCaption: function(node) {\n                    return node.meta[\"lang.class\"] + \": \" + node.value.message.value;\n                },\n                \n                getTrace: function(node) {\n                    if (node.type==\"map\")\n                        return [].concat(node.compact().trace.value);\n\n                    if (node.type==\"dictionary\")\n                        return [].concat(node.value.trace.value);\n                }  \n            });\n        }        \n    }\n});\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "../pack": {
                  "where": "inline"
                },
                "../../insight/structures/trace": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/float.js": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/float",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/float.js",
            "descriptor": {
              "filename": "float.js",
              "filepath": "../../insight.renderers.default/lib/php/primitives/float.js",
              "mtime": 1375341042,
              "code": "\nvar PACK = require(\"../pack\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.meta && node.meta[\"lang.type\"]==\"float\");\n}\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n        \n                tag:\n                    SPAN({\"class\": PACK.__NS__+\"float\"}, \"$node|getValue\"),\n        \n                shortTag:\n                    SPAN({\"class\": PACK.__NS__+\"float\"}, \"$node|getValue\"),\n        \n                getValue: function(node) {\n                    return addCommas(node.value);\n                }    \n\n            });\n        }        \n    }\n});\n\n// @see http://www.mredkj.com/javascript/numberFormat.html\nfunction addCommas(nStr)\n{\n    nStr += '';\n    x = nStr.split('.');\n    x1 = x[0];\n    x2 = x.length > 1 ? '.' + x[1] : '';\n    var rgx = /(\\d+)(\\d{3})/;\n    while (rgx.test(x1)) {\n        x1 = x1.replace(rgx, '$1' + ',' + '$2');\n    }\n    return x1 + x2;\n}\n",
              "globals": {
                "PACK": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "exports": {
                  "type": "reference"
                },
                "module": {
                  "type": "reference"
                },
                "SPAN": {
                  "type": "call"
                },
                "addCommas": {
                  "type": "call"
                },
                "x": {
                  "type": "assign"
                },
                "x1": {
                  "type": "assign"
                },
                "x2": {
                  "type": "assign"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "../pack": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/php/primitives';",
              "code": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/php/primitives';\n\nvar PACK = require(\"../pack\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.meta && node.meta[\"lang.type\"]==\"float\");\n}\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n        \n                tag:\n                    SPAN({\"class\": PACK.__NS__+\"float\"}, \"$node|getValue\"),\n        \n                shortTag:\n                    SPAN({\"class\": PACK.__NS__+\"float\"}, \"$node|getValue\"),\n        \n                getValue: function(node) {\n                    return addCommas(node.value);\n                }    \n\n            });\n        }        \n    }\n});\n\n// @see http://www.mredkj.com/javascript/numberFormat.html\nfunction addCommas(nStr)\n{\n    nStr += '';\n    x = nStr.split('.');\n    x1 = x[0];\n    x2 = x.length > 1 ? '.' + x[1] : '';\n    var rgx = /(\\d+)(\\d{3})/;\n    while (rgx.test(x1)) {\n        x1 = x1.replace(rgx, '$1' + ',' + '$2');\n    }\n    return x1 + x2;\n}\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "../pack": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/integer.js": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/integer",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/integer.js",
            "descriptor": {
              "filename": "integer.js",
              "filepath": "../../insight.renderers.default/lib/php/primitives/integer.js",
              "mtime": 1375341042,
              "code": "\nvar PACK = require(\"../pack\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.meta && node.meta[\"lang.type\"]==\"integer\");\n}\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n        \n                tag:\n                    SPAN({\"class\": PACK.__NS__+\"integer\"}, \"$node|getValue\"),\n        \n                shortTag:\n                    SPAN({\"class\": PACK.__NS__+\"integer\"}, \"$node|getValue\"),\n        \n                getValue: function(node) {\n                    return addCommas(node.value);\n                }    \n\n            });\n        }        \n    }\n});\n\n// @see http://www.mredkj.com/javascript/numberFormat.html\nfunction addCommas(nStr)\n{\n    nStr += '';\n    x = nStr.split('.');\n    x1 = x[0];\n    x2 = x.length > 1 ? '.' + x[1] : '';\n    var rgx = /(\\d+)(\\d{3})/;\n    while (rgx.test(x1)) {\n        x1 = x1.replace(rgx, '$1' + ',' + '$2');\n    }\n    return x1 + x2;\n}\n",
              "globals": {
                "PACK": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "exports": {
                  "type": "reference"
                },
                "module": {
                  "type": "reference"
                },
                "SPAN": {
                  "type": "call"
                },
                "addCommas": {
                  "type": "call"
                },
                "x": {
                  "type": "assign"
                },
                "x1": {
                  "type": "assign"
                },
                "x2": {
                  "type": "assign"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "../pack": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/php/primitives';",
              "code": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/php/primitives';\n\nvar PACK = require(\"../pack\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.meta && node.meta[\"lang.type\"]==\"integer\");\n}\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n        \n                tag:\n                    SPAN({\"class\": PACK.__NS__+\"integer\"}, \"$node|getValue\"),\n        \n                shortTag:\n                    SPAN({\"class\": PACK.__NS__+\"integer\"}, \"$node|getValue\"),\n        \n                getValue: function(node) {\n                    return addCommas(node.value);\n                }    \n\n            });\n        }        \n    }\n});\n\n// @see http://www.mredkj.com/javascript/numberFormat.html\nfunction addCommas(nStr)\n{\n    nStr += '';\n    x = nStr.split('.');\n    x1 = x[0];\n    x2 = x.length > 1 ? '.' + x[1] : '';\n    var rgx = /(\\d+)(\\d{3})/;\n    while (rgx.test(x1)) {\n        x1 = x1.replace(rgx, '$1' + ',' + '$2');\n    }\n    return x1 + x2;\n}\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "../pack": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/null.js": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/null",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/null.js",
            "descriptor": {
              "filename": "null.js",
              "filepath": "../../insight.renderers.default/lib/php/primitives/null.js",
              "mtime": 1375341042,
              "code": "\nvar PACK = require(\"../pack\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.meta && node.meta[\"lang.type\"]==\"null\");\n}\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n        \n                tag:\n                    SPAN({\"class\": PACK.__NS__+\"null\"}, \"$node|getValue\"),\n\n                shortTag:\n                    SPAN({\"class\": PACK.__NS__+\"null\"}, \"$node|getValue\"),\n\n                getValue: function(node) {\n                    return node.value.toUpperCase();\n                }\n\n            });\n        }        \n    }\n});\n",
              "globals": {
                "PACK": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "exports": {
                  "type": "reference"
                },
                "module": {
                  "type": "reference"
                },
                "SPAN": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "../pack": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/php/primitives';",
              "code": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/php/primitives';\n\nvar PACK = require(\"../pack\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.meta && node.meta[\"lang.type\"]==\"null\");\n}\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n        \n                tag:\n                    SPAN({\"class\": PACK.__NS__+\"null\"}, \"$node|getValue\"),\n\n                shortTag:\n                    SPAN({\"class\": PACK.__NS__+\"null\"}, \"$node|getValue\"),\n\n                getValue: function(node) {\n                    return node.value.toUpperCase();\n                }\n\n            });\n        }        \n    }\n});\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "../pack": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/object.js": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/object",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/object.js",
            "descriptor": {
              "filename": "object.js",
              "filepath": "../../insight.renderers.default/lib/php/primitives/object.js",
              "mtime": 1375341042,
              "code": "\nvar PACK = require(\"../pack\");\nvar DICTIONARY_TEMPLATE = require(\"../../insight/primitives/dictionary\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.type==\"dictionary\" && node.meta && node.meta[\"lang.type\"]==\"object\");\n}\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n\n                inherits: DICTIONARY_TEMPLATE,\n\n                getLabel: function(node) {\n                    return node.meta[\"lang.class\"];\n                },\n                \n                getMemberNameDecorator: function(member) {\n        \n                    var decorator = [];\n        \n                    if(member.node.meta[\"lang.visibility\"]) {\n                        decorator.push(member.node.meta[\"lang.visibility\"]);\n                    } else\n                    if(member.node.meta[\"lang.undeclared\"]) {\n                        decorator.push(\"undeclared\");\n                    }\n        \n                    if(member.node.meta[\"lang.static\"]) {\n                        decorator.push(\"static\");\n                    }\n        \n                    return decorator.join(\"-\");\n                }\n\n            });\n        }        \n    }\n});\n",
              "globals": {
                "PACK": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "DICTIONARY_TEMPLATE": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                },
                "module": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "../pack": {
                    "where": "inline"
                  },
                  "../../insight/primitives/dictionary": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/php/primitives';",
              "code": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/php/primitives';\n\nvar PACK = require(\"../pack\");\nvar DICTIONARY_TEMPLATE = require(\"../../insight/primitives/dictionary\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.type==\"dictionary\" && node.meta && node.meta[\"lang.type\"]==\"object\");\n}\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n\n                inherits: DICTIONARY_TEMPLATE,\n\n                getLabel: function(node) {\n                    return node.meta[\"lang.class\"];\n                },\n                \n                getMemberNameDecorator: function(member) {\n        \n                    var decorator = [];\n        \n                    if(member.node.meta[\"lang.visibility\"]) {\n                        decorator.push(member.node.meta[\"lang.visibility\"]);\n                    } else\n                    if(member.node.meta[\"lang.undeclared\"]) {\n                        decorator.push(\"undeclared\");\n                    }\n        \n                    if(member.node.meta[\"lang.static\"]) {\n                        decorator.push(\"static\");\n                    }\n        \n                    return decorator.join(\"-\");\n                }\n\n            });\n        }        \n    }\n});\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "../pack": {
                  "where": "inline"
                },
                "../../insight/primitives/dictionary": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/object-reference.js": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/object-reference",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/object-reference.js",
            "descriptor": {
              "filename": "object-reference.js",
              "filepath": "../../insight.renderers.default/lib/php/primitives/object-reference.js",
              "mtime": 1375341042,
              "code": "\nvar PACK = require(\"../pack\");\nvar REFERENCE_TEMPLATE = require(\"../../insight/primitives/reference\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.type==\"reference\");\n}\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n\n                inherits: REFERENCE_TEMPLATE\n        \n            });\n        }        \n    }\n});\n",
              "globals": {
                "PACK": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "REFERENCE_TEMPLATE": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                },
                "module": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "../pack": {
                    "where": "inline"
                  },
                  "../../insight/primitives/reference": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/php/primitives';",
              "code": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/php/primitives';\n\nvar PACK = require(\"../pack\");\nvar REFERENCE_TEMPLATE = require(\"../../insight/primitives/reference\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.type==\"reference\");\n}\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n\n                inherits: REFERENCE_TEMPLATE\n        \n            });\n        }        \n    }\n});\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "../pack": {
                  "where": "inline"
                },
                "../../insight/primitives/reference": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/resource.js": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/resource",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/resource.js",
            "descriptor": {
              "filename": "resource.js",
              "filepath": "../../insight.renderers.default/lib/php/primitives/resource.js",
              "mtime": 1375341042,
              "code": "\nvar PACK = require(\"../pack\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.meta && node.meta[\"lang.type\"]==\"resource\");\n}\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n\n                tag:\n                    SPAN({\"class\": PACK.__NS__+\"resource\"}, \"[$node|getValue]\"),\n        \n                shortTag:\n                    SPAN({\"class\": PACK.__NS__+\"resource\"}, \"[$node|getValue]\"),\n        \n                getValue: function(node) {\n                    return node.value.toUpperCase();\n                }    \n        \n            });\n        }        \n    }\n});\n",
              "globals": {
                "PACK": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "exports": {
                  "type": "reference"
                },
                "module": {
                  "type": "reference"
                },
                "SPAN": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "../pack": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/php/primitives';",
              "code": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/php/primitives';\n\nvar PACK = require(\"../pack\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.meta && node.meta[\"lang.type\"]==\"resource\");\n}\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n\n                tag:\n                    SPAN({\"class\": PACK.__NS__+\"resource\"}, \"[$node|getValue]\"),\n        \n                shortTag:\n                    SPAN({\"class\": PACK.__NS__+\"resource\"}, \"[$node|getValue]\"),\n        \n                getValue: function(node) {\n                    return node.value.toUpperCase();\n                }    \n        \n            });\n        }        \n    }\n});\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "../pack": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/string.js": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/string",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/string.js",
            "descriptor": {
              "filename": "string.js",
              "filepath": "../../insight.renderers.default/lib/php/primitives/string.js",
              "mtime": 1375341042,
              "code": "\nvar PACK = require(\"../pack\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.meta && node.meta[\"lang.type\"]==\"string\");\n}\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n                \n                VAR_wrapped: false,\n        \n                tag:\n                    SPAN({\"class\": PACK.__NS__+\"string\", \"wrapped\": \"$node.wrapped\"},\n                        IF(\"$node.wrapped\", \"'\"),\n                        FOR(\"line\", \"$node|getValue\",\n                            \"$line.value\",\n                            IF(\"$line.special\", SPAN({\"class\": \"special\"}, \"$line.specialvalue\")),\n                            IF(\"$line.more\", BR()),\n                            IF(\"$line.trimmed\", TAG(\"$node|getTrimmedTag\", {\"node\": \"$node\"}))\n                        ),\n                        IF(\"$node.wrapped\", \"'\")),\n        \n                shortTag:\n                    SPAN({\"class\": PACK.__NS__+\"string\", \"wrapped\": \"$node.wrapped\"},\n                        IF(\"$node.wrapped\", \"'\"),\n                        FOR(\"line\", \"$node|getShortValue\",\n                            \"$line.value\",\n                            IF(\"$line.special\", SPAN({\"class\": \"special\"}, \"$line.specialvalue\")),\n                            IF(\"$line.more\", BR()),\n                            IF(\"$line.trimmed\", TAG(\"$node|getTrimmedTag\", {\"node\": \"$node\"}))\n                        ),\n                        IF(\"$node.wrapped\", \"'\")),\n        \n                // TODO: Should be using the insight/util/trimmed tag but the tag is inclusion not working\n                trimmedNoticeTag: \n                    SPAN({\"class\": \"trimmed\"},\n                        \"$node|getNotice\"\n                    ),\n        \n                getNotice: function(node) {\n                    return node.meta[\"encoder.notice\"];\n                },\n                        \n                getTrimmedTag: function() {\n                    return this.trimmedNoticeTag;\n                },\n        \n                getValue: function(node) {\n                    var parts = node.value.split(\"\\n\");\n                    var lines = [];\n                    for( var i=0,c=parts.length ; i<c ; i++ ) {\n                        lines.push({\n                            \"value\": parts[i],\n                            \"more\": (i<c-1)?true:false,\n                            \"special\": false\n                        });\n                    }\n                    if(node.meta[\"encoder.trimmed\"] && node.meta[\"encoder.notice\"]) {\n                        lines.push({\n                            \"value\": \"\",\n                            \"trimmed\": true\n                        });\n                    }\n                    return lines;\n                },\n                \n                getShortValue: function(node) {\n                    var meta = node.getObjectGraph().getMeta();\n\n                    // TODO: This needs to be optimized\n\n                    var trimEnabled = true;\n                    var trimLength = 50;\n                    var trimNewlines = true;\n                    if(!node.parentNode) {\n                        // if a top-level string display 500 chars (but trim newlines)\n                        // but only if we are not asked to specifically trim\n                        if(typeof meta[\"string.trim.enabled\"] == \"undefined\" || !meta[\"string.trim.enabled\"]) {\n                            trimLength = 500;\n                        }\n                    }\n                    if(typeof meta[\"string.trim.enabled\"] != \"undefined\") {\n                        trimEnabled = meta[\"string.trim.enabled\"];\n                    }\n                    if(typeof meta[\"string.trim.length\"] != \"undefined\" && meta[\"string.trim.length\"]>=5) {\n                        trimLength = meta[\"string.trim.length\"];\n                    }\n                    if(typeof meta[\"string.trim.newlines\"] != \"undefined\") {\n                        trimNewlines = meta[\"string.trim.newlines\"];\n                    }\n        \n                    var str = node.value;\n                    if(trimEnabled) {\n                        if(trimLength>-1) {\n                            str = cropString(str, trimLength);\n                        }\n                        if(trimNewlines) {\n                            str = escapeNewLines(str);\n                        }\n                    }\n        \n                    var parts = str.split(\"\\n\");\n                    var lines = [],\n                        parts2;\n                    for( var i=0,ci=parts.length ; i<ci ; i++ ) {\n                        parts2 = parts[i].split(\"|:_!_:|\");\n                        for( var j=0,cj=parts2.length ; j<cj ; j++ ) {\n                            if(parts2[j]==\"STRING_CROP\") {\n                                lines.push({\n                                    \"value\": \"\",\n                                    \"more\": false,\n                                    \"special\": true,\n                                    \"specialvalue\": \"...\"\n                                });\n                            } else\n                            if(parts2[j]==\"STRING_NEWLINE\") {\n                                lines.push({\n                                    \"value\": \"\",\n                                    \"more\": false,\n                                    \"special\": true,\n                                    \"specialvalue\": \"\\\\n\"\n                                });\n                            } else {\n                                lines.push({\n                                    \"value\": parts2[j],\n                                    \"more\": (i<ci-1 && j==cj-1)?true:false\n                                });\n                            }\n                        }\n                    }\n                    if(node.meta[\"encoder.trimmed\"] && node.meta[\"encoder.notice\"]) {\n                        lines.push({\n                            \"value\": \"\",\n                            \"trimmed\": true\n                        });\n                    }\n                    return lines;\n                }\n            });\n        }        \n    }\n});\n\nfunction cropString(value, limit) {\n    limit = limit || 50;\n    if (value.length > limit) {\n        return value.substr(0, limit/2) + \"|:_!_:|STRING_CROP|:_!_:|\" + value.substr(value.length-limit/2);\n    } else {\n        return value;\n    }\n}\n\nfunction escapeNewLines(value) {\n    return (\"\"+value).replace(/\\r/g, \"\\\\r\").replace(/\\n/g, \"|:_!_:|STRING_NEWLINE|:_!_:|\");\n}\n",
              "globals": {
                "PACK": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "exports": {
                  "type": "reference"
                },
                "module": {
                  "type": "reference"
                },
                "SPAN": {
                  "type": "call"
                },
                "IF": {
                  "type": "call"
                },
                "FOR": {
                  "type": "call"
                },
                "BR": {
                  "type": "call"
                },
                "TAG": {
                  "type": "call"
                },
                "cropString": {
                  "type": "call"
                },
                "escapeNewLines": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "../pack": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/php/primitives';",
              "code": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/php/primitives';\n\nvar PACK = require(\"../pack\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.meta && node.meta[\"lang.type\"]==\"string\");\n}\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n                \n                VAR_wrapped: false,\n        \n                tag:\n                    SPAN({\"class\": PACK.__NS__+\"string\", \"wrapped\": \"$node.wrapped\"},\n                        IF(\"$node.wrapped\", \"'\"),\n                        FOR(\"line\", \"$node|getValue\",\n                            \"$line.value\",\n                            IF(\"$line.special\", SPAN({\"class\": \"special\"}, \"$line.specialvalue\")),\n                            IF(\"$line.more\", BR()),\n                            IF(\"$line.trimmed\", TAG(\"$node|getTrimmedTag\", {\"node\": \"$node\"}))\n                        ),\n                        IF(\"$node.wrapped\", \"'\")),\n        \n                shortTag:\n                    SPAN({\"class\": PACK.__NS__+\"string\", \"wrapped\": \"$node.wrapped\"},\n                        IF(\"$node.wrapped\", \"'\"),\n                        FOR(\"line\", \"$node|getShortValue\",\n                            \"$line.value\",\n                            IF(\"$line.special\", SPAN({\"class\": \"special\"}, \"$line.specialvalue\")),\n                            IF(\"$line.more\", BR()),\n                            IF(\"$line.trimmed\", TAG(\"$node|getTrimmedTag\", {\"node\": \"$node\"}))\n                        ),\n                        IF(\"$node.wrapped\", \"'\")),\n        \n                // TODO: Should be using the insight/util/trimmed tag but the tag is inclusion not working\n                trimmedNoticeTag: \n                    SPAN({\"class\": \"trimmed\"},\n                        \"$node|getNotice\"\n                    ),\n        \n                getNotice: function(node) {\n                    return node.meta[\"encoder.notice\"];\n                },\n                        \n                getTrimmedTag: function() {\n                    return this.trimmedNoticeTag;\n                },\n        \n                getValue: function(node) {\n                    var parts = node.value.split(\"\\n\");\n                    var lines = [];\n                    for( var i=0,c=parts.length ; i<c ; i++ ) {\n                        lines.push({\n                            \"value\": parts[i],\n                            \"more\": (i<c-1)?true:false,\n                            \"special\": false\n                        });\n                    }\n                    if(node.meta[\"encoder.trimmed\"] && node.meta[\"encoder.notice\"]) {\n                        lines.push({\n                            \"value\": \"\",\n                            \"trimmed\": true\n                        });\n                    }\n                    return lines;\n                },\n                \n                getShortValue: function(node) {\n                    var meta = node.getObjectGraph().getMeta();\n\n                    // TODO: This needs to be optimized\n\n                    var trimEnabled = true;\n                    var trimLength = 50;\n                    var trimNewlines = true;\n                    if(!node.parentNode) {\n                        // if a top-level string display 500 chars (but trim newlines)\n                        // but only if we are not asked to specifically trim\n                        if(typeof meta[\"string.trim.enabled\"] == \"undefined\" || !meta[\"string.trim.enabled\"]) {\n                            trimLength = 500;\n                        }\n                    }\n                    if(typeof meta[\"string.trim.enabled\"] != \"undefined\") {\n                        trimEnabled = meta[\"string.trim.enabled\"];\n                    }\n                    if(typeof meta[\"string.trim.length\"] != \"undefined\" && meta[\"string.trim.length\"]>=5) {\n                        trimLength = meta[\"string.trim.length\"];\n                    }\n                    if(typeof meta[\"string.trim.newlines\"] != \"undefined\") {\n                        trimNewlines = meta[\"string.trim.newlines\"];\n                    }\n        \n                    var str = node.value;\n                    if(trimEnabled) {\n                        if(trimLength>-1) {\n                            str = cropString(str, trimLength);\n                        }\n                        if(trimNewlines) {\n                            str = escapeNewLines(str);\n                        }\n                    }\n        \n                    var parts = str.split(\"\\n\");\n                    var lines = [],\n                        parts2;\n                    for( var i=0,ci=parts.length ; i<ci ; i++ ) {\n                        parts2 = parts[i].split(\"|:_!_:|\");\n                        for( var j=0,cj=parts2.length ; j<cj ; j++ ) {\n                            if(parts2[j]==\"STRING_CROP\") {\n                                lines.push({\n                                    \"value\": \"\",\n                                    \"more\": false,\n                                    \"special\": true,\n                                    \"specialvalue\": \"...\"\n                                });\n                            } else\n                            if(parts2[j]==\"STRING_NEWLINE\") {\n                                lines.push({\n                                    \"value\": \"\",\n                                    \"more\": false,\n                                    \"special\": true,\n                                    \"specialvalue\": \"\\\\n\"\n                                });\n                            } else {\n                                lines.push({\n                                    \"value\": parts2[j],\n                                    \"more\": (i<ci-1 && j==cj-1)?true:false\n                                });\n                            }\n                        }\n                    }\n                    if(node.meta[\"encoder.trimmed\"] && node.meta[\"encoder.notice\"]) {\n                        lines.push({\n                            \"value\": \"\",\n                            \"trimmed\": true\n                        });\n                    }\n                    return lines;\n                }\n            });\n        }        \n    }\n});\n\nfunction cropString(value, limit) {\n    limit = limit || 50;\n    if (value.length > limit) {\n        return value.substr(0, limit/2) + \"|:_!_:|STRING_CROP|:_!_:|\" + value.substr(value.length-limit/2);\n    } else {\n        return value;\n    }\n}\n\nfunction escapeNewLines(value) {\n    return (\"\"+value).replace(/\\r/g, \"\\\\r\").replace(/\\n/g, \"|:_!_:|STRING_NEWLINE|:_!_:|\");\n}\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "../pack": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/unknown.js": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/unknown",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/php/primitives/unknown.js",
            "descriptor": {
              "filename": "unknown.js",
              "filepath": "../../insight.renderers.default/lib/php/primitives/unknown.js",
              "mtime": 1375341042,
              "code": "\nvar PACK = require(\"../pack\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.type==\"text\" && node.meta && node.meta[\"lang.type\"]==\"unknown\");\n}\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n        \n                tag:\n                    DIV(\"UNKNOWN EXPANDED\"),\n        \n                collapsedTag:\n                    DIV(\"UNKNOWN COLLAPSED\"),\n        \n                shortTag:\n                    DIV(\"UNKNOWN SHORT\")\n\n            });\n        }        \n    }\n});\n",
              "globals": {
                "PACK": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "exports": {
                  "type": "reference"
                },
                "module": {
                  "type": "reference"
                },
                "DIV": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "../pack": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/php/primitives';",
              "code": "function(require, exports, module) {var __dirname = '../../insight.renderers.default/lib/php/primitives';\n\nvar PACK = require(\"../pack\");\n\nexports.supportsObjectGraphNode = function(node)\n{\n    return (node.type==\"text\" && node.meta && node.meta[\"lang.type\"]==\"unknown\");\n}\n\nPACK.initTemplate(require, exports, module, {\n\n    initRep: function(DOMPLATE, helpers)\n    {\n        with(DOMPLATE.tags)\n        {\n            return DOMPLATE.domplate({\n        \n                tag:\n                    DIV(\"UNKNOWN EXPANDED\"),\n        \n                collapsedTag:\n                    DIV(\"UNKNOWN COLLAPSED\"),\n        \n                shortTag:\n                    DIV(\"UNKNOWN SHORT\")\n\n            });\n        }        \n    }\n});\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "../pack": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/0-boot/graph.js": {
            "requireId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/0-boot/graph",
            "memoizeId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/0-boot/graph.js",
            "descriptor": {
              "filename": "graph.js",
              "filepath": "../renderers/0-boot/graph.js",
              "mtime": 1420589236,
              "code": "\n\nexports.init = function (context) {\n\n\tvar Q = context.API.Q;\n\tvar $ = context.API.JQUERY;\n\n\n\tvar menuNode = $('.' + context.cssPrefix + '-menu', context.domNode);\n\tvar graphNode = $('<div class=\"' + context.cssPrefix + '-graph\">graph</div>').appendTo(context.domNode);\n\n\n\tfunction redraw() {\n\n\t\t// TODO: Ignore multiple render calls within x time.\n\t\t// TODO: Wait a short while before issuing render.\n\t\t// TODO: Cascade render event (for resize) down the tree.\n\n\t\tvar height = context.domNode.parent().height();\n\n\t\tif (menuNode.is(\":visible\")) {\n\t\t\tgraphNode.css(\"top\", menuNode.css(\"height\"));\n\t\t\theight = height - menuNode.height() - 4;\n\t\t} else {\n\t\t\tgraphNode.css(\"top\", \"0px\");\n\t\t}\n\n\t\tgraphNode.height(height);\n\n\t\treturn Q.resolve();\n\t}\n\n\n\t$(window).resize(function() {\n\t\treturn redraw();\n\t});\n\t$(window).ready(function () {\n\t\treturn setTimeout(function () {\n\t\t\treturn redraw();\n\t\t}, 100);\n\t});\n\n\tgraphNode.on(\"show\", function () {\n\t\treturn setTimeout(function () {\n\t\t\treturn redraw();\n\t\t}, 100);\n\t});\n\tmenuNode.on(\"show\", function () {\n\t\treturn setTimeout(function () {\n\t\t\treturn redraw();\n\t\t}, 100);\n\t});\n\tmenuNode.on(\"hide\", function () {\n\t\treturn setTimeout(function () {\n\t\t\treturn redraw();\n\t\t}, 100);\n\t});\n\n\n\treturn Q.resolve();\n}\n\n",
              "globals": {
                "exports": {
                  "type": "reference"
                },
                "window": {
                  "type": "reference"
                },
                "setTimeout": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {},
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../renderers/0-boot';",
              "code": "function(require, exports, module) {var __dirname = '../renderers/0-boot';\n\n\nexports.init = function (context) {\n\n\tvar Q = context.API.Q;\n\tvar $ = context.API.JQUERY;\n\n\n\tvar menuNode = $('.' + context.cssPrefix + '-menu', context.domNode);\n\tvar graphNode = $('<div class=\"' + context.cssPrefix + '-graph\">graph</div>').appendTo(context.domNode);\n\n\n\tfunction redraw() {\n\n\t\t// TODO: Ignore multiple render calls within x time.\n\t\t// TODO: Wait a short while before issuing render.\n\t\t// TODO: Cascade render event (for resize) down the tree.\n\n\t\tvar height = context.domNode.parent().height();\n\n\t\tif (menuNode.is(\":visible\")) {\n\t\t\tgraphNode.css(\"top\", menuNode.css(\"height\"));\n\t\t\theight = height - menuNode.height() - 4;\n\t\t} else {\n\t\t\tgraphNode.css(\"top\", \"0px\");\n\t\t}\n\n\t\tgraphNode.height(height);\n\n\t\treturn Q.resolve();\n\t}\n\n\n\t$(window).resize(function() {\n\t\treturn redraw();\n\t});\n\t$(window).ready(function () {\n\t\treturn setTimeout(function () {\n\t\t\treturn redraw();\n\t\t}, 100);\n\t});\n\n\tgraphNode.on(\"show\", function () {\n\t\treturn setTimeout(function () {\n\t\t\treturn redraw();\n\t\t}, 100);\n\t});\n\tmenuNode.on(\"show\", function () {\n\t\treturn setTimeout(function () {\n\t\t\treturn redraw();\n\t\t}, 100);\n\t});\n\tmenuNode.on(\"hide\", function () {\n\t\treturn setTimeout(function () {\n\t\t\treturn redraw();\n\t\t}, 100);\n\t});\n\n\n\treturn Q.resolve();\n}\n\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {},
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/1-insight/1-insight.js": {
            "requireId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/1-insight/1-insight",
            "memoizeId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/1-insight/1-insight.js",
            "descriptor": {
              "filename": "1-insight.js",
              "filepath": "../renderers/1-insight/1-insight.js",
              "mtime": 1420589373,
              "code": "\n\nexports.init = function (context) {\n\n\tvar Q = context.API.Q;\n\n\tvar done = Q.resolve();\n\t[\n\t\trequire(\"./renderer\"),\n\t\trequire(\"./harviewer\")\n\t].forEach(function (renderer) {\n\t\tdone = Q.when(done, function () {\n\t\t\treturn renderer.init(context);\n\t\t});\n\t});\n\treturn done;\n}\n\n",
              "globals": {
                "exports": {
                  "type": "reference"
                },
                "require": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "./renderer": {
                    "where": "inline"
                  },
                  "./harviewer": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../renderers/1-insight';",
              "code": "function(require, exports, module) {var __dirname = '../renderers/1-insight';\n\n\nexports.init = function (context) {\n\n\tvar Q = context.API.Q;\n\n\tvar done = Q.resolve();\n\t[\n\t\trequire(\"./renderer\"),\n\t\trequire(\"./harviewer\")\n\t].forEach(function (renderer) {\n\t\tdone = Q.when(done, function () {\n\t\t\treturn renderer.init(context);\n\t\t});\n\t});\n\treturn done;\n}\n\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "./renderer": {
                  "where": "inline"
                },
                "./harviewer": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/1-insight/renderer.js": {
            "requireId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/1-insight/renderer",
            "memoizeId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/1-insight/renderer.js",
            "descriptor": {
              "filename": "renderer.js",
              "filepath": "../renderers/1-insight/renderer.js",
              "mtime": 1420589341,
              "code": "\n\nexports.init = function (context) {\n\n\tvar Q = context.API.Q;\n\tvar $ = context.API.JQUERY;\n\nconsole.log(\"init insight renderer\");\n\n\treturn Q.resolve();\n}\n\n",
              "globals": {
                "exports": {
                  "type": "reference"
                },
                "console": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {},
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../renderers/1-insight';",
              "code": "function(require, exports, module) {var __dirname = '../renderers/1-insight';\n\n\nexports.init = function (context) {\n\n\tvar Q = context.API.Q;\n\tvar $ = context.API.JQUERY;\n\nconsole.log(\"init insight renderer\");\n\n\treturn Q.resolve();\n}\n\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {},
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/1-insight/harviewer.js": {
            "requireId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/1-insight/harviewer",
            "memoizeId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/1-insight/harviewer.js",
            "descriptor": {
              "filename": "harviewer.js",
              "filepath": "../renderers/1-insight/harviewer.js",
              "mtime": 1421188663,
              "code": "\n\nexports.init = function (context) {\n\n\tvar Q = context.API.Q;\n\tvar $ = context.API.JQUERY;\n\n\n\tvar node = $('<div id=\"content\" previewcols=\"url status size timeline\" class=\"' + context.cssPrefix + '-harviewer\"></div>').appendTo(context.domNode);\n\n\t// TODO: Add layout management code to allow har viewer to be expanded, put into new window etc...\n\n\t// Load and boot harviewer plugin.\n\t//var uri = \"http://fireconsole.github.io/harviewer/fireconsole/bundles/plugin.js\":\n\t//uri = \"/plugins/harviewer/plugin.js\";\n\t// TODO: Swap out module source based on mappings.\n\trequire.sandbox(\"http://fireconsole.github.io/harviewer/fireconsole/bundles/plugin.js\", function (sandbox) {\n\t\tsandbox.main(node[0]);\n\t}, function (err) {\n\t\tconsole.error(\"Error loading plugin!\", err.stack);\n\t});\n\n\n\treturn Q.resolve();\n}\n\n",
              "globals": {
                "exports": {
                  "type": "reference"
                },
                "console": {
                  "type": "reference"
                },
                "require": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {},
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../renderers/1-insight';",
              "code": "function(require, exports, module) {var __dirname = '../renderers/1-insight';\n\n\nexports.init = function (context) {\n\n\tvar Q = context.API.Q;\n\tvar $ = context.API.JQUERY;\n\n\n\tvar node = $('<div id=\"content\" previewcols=\"url status size timeline\" class=\"' + context.cssPrefix + '-harviewer\"></div>').appendTo(context.domNode);\n\n\t// TODO: Add layout management code to allow har viewer to be expanded, put into new window etc...\n\n\t// Load and boot harviewer plugin.\n\t//var uri = \"http://fireconsole.github.io/harviewer/fireconsole/bundles/plugin.js\":\n\t//uri = \"/plugins/harviewer/plugin.js\";\n\t// TODO: Swap out module source based on mappings.\n\trequire.sandbox(\"http://fireconsole.github.io/harviewer/fireconsole/bundles/plugin.js\", function (sandbox) {\n\t\tsandbox.main(node[0]);\n\t}, function (err) {\n\t\tconsole.error(\"Error loading plugin!\", err.stack);\n\t});\n\n\n\treturn Q.resolve();\n}\n\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {},
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "bfbbc67b6690f91ab66716d6e0cec42b3a954a3b-receivers/wildfire.js": {
            "requireId": "bfbbc67b6690f91ab66716d6e0cec42b3a954a3b-receivers/wildfire.js",
            "memoizeId": "bfbbc67b6690f91ab66716d6e0cec42b3a954a3b-receivers/wildfire.js",
            "descriptor": {
              "filename": "wildfire.js",
              "filepath": "../receivers/wildfire.js",
              "mtime": 1420323626,
              "code": "\nvar WILDFIRE = require(\"wildfire\");\n\n\nexports.init = function (context) {\n\n\n    var receiverChannel = WILDFIRE.PostMessageChannel();\n    receiverChannel.addReceiver(require(\"./wildfire/fireconsole\").getWildfireReceiver(context));\n    receiverChannel.addReceiver(require(\"./wildfire/insight/console/random\").getWildfireReceiver(context));\n\n\n    var senders = {\n    \t\"wildfire/fireconsole\": {\n    \t\treceiver: \"http://github.com/fireconsole/@meta/receivers/wildfire/fireconsole/0\"\n    \t},\n    \t\"wildfire/insight/console/random\": {\n    \t\treceiver: \"http://github.com/fireconsole/@meta/receivers/wildfire/insight/console/random/0\"\n    \t}\n    };\n    Object.keys(senders).forEach(function (senderId) {\n\t\tvar channel = senders[senderId].channel = WILDFIRE.PostMessageChannel();\n\t    channel.setPostMessageSender(function (part) {\n\t\t\treceiverChannel.parseReceivedPostMessage(part);       \n\t    });\n\n\t    var dispatcher = senders[senderId].dispatcher = WILDFIRE.Dispatcher();\n\t    dispatcher.setChannel(channel);\n\t    dispatcher.setProtocol('http://registry.pinf.org/cadorn.org/wildfire/@meta/protocol/component/0.1.0');\n\t    dispatcher.setSender(\"internal\");\n\t    dispatcher.setReceiver(senders[senderId].receiver);\n    });\n    function makeSendForSenderId (senderId) {\n\t\treturn function (obj) {\n\t\t\tvar deferred = context.API.Q.defer();\n\t\t\tvar message = WILDFIRE.Message();\n\t\t\tmessage.setData( (typeof obj === \"object\") ? JSON.stringify(obj) : obj);\n\t\t\tdeferred.resolve(senders[senderId].dispatcher.dispatch(message));\n\t\t\treturn deferred.promise;\n\t\t};\n    }\n\n\n    return context.API.Q.resolve({\n    \twildfire: {\n    \t\tfireconsole: {\n\t    \t\tsend: makeSendForSenderId(\"wildfire/fireconsole\")\n\t    \t},\n\t\t\tinsight: {\n\t\t\t\tconsole: {\n\t\t\t\t\trandom: {\n\t\t\t    \t\tsend: makeSendForSenderId(\"wildfire/insight/console/random\")\n\t\t\t    \t}\n\t\t    \t}\n\t    \t}\n    \t}\n    });\n}\n",
              "globals": {
                "WILDFIRE": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "exports": {
                  "type": "reference"
                },
                "Object": {
                  "type": "reference"
                },
                "JSON": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "wildfire": {
                    "where": "inline"
                  },
                  "./wildfire/fireconsole": {
                    "where": "inline"
                  },
                  "./wildfire/insight/console/random": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../receivers';",
              "code": "function(require, exports, module) {var __dirname = '../receivers';\n\nvar WILDFIRE = require(\"wildfire\");\n\n\nexports.init = function (context) {\n\n\n    var receiverChannel = WILDFIRE.PostMessageChannel();\n    receiverChannel.addReceiver(require(\"./wildfire/fireconsole\").getWildfireReceiver(context));\n    receiverChannel.addReceiver(require(\"./wildfire/insight/console/random\").getWildfireReceiver(context));\n\n\n    var senders = {\n    \t\"wildfire/fireconsole\": {\n    \t\treceiver: \"http://github.com/fireconsole/@meta/receivers/wildfire/fireconsole/0\"\n    \t},\n    \t\"wildfire/insight/console/random\": {\n    \t\treceiver: \"http://github.com/fireconsole/@meta/receivers/wildfire/insight/console/random/0\"\n    \t}\n    };\n    Object.keys(senders).forEach(function (senderId) {\n\t\tvar channel = senders[senderId].channel = WILDFIRE.PostMessageChannel();\n\t    channel.setPostMessageSender(function (part) {\n\t\t\treceiverChannel.parseReceivedPostMessage(part);       \n\t    });\n\n\t    var dispatcher = senders[senderId].dispatcher = WILDFIRE.Dispatcher();\n\t    dispatcher.setChannel(channel);\n\t    dispatcher.setProtocol('http://registry.pinf.org/cadorn.org/wildfire/@meta/protocol/component/0.1.0');\n\t    dispatcher.setSender(\"internal\");\n\t    dispatcher.setReceiver(senders[senderId].receiver);\n    });\n    function makeSendForSenderId (senderId) {\n\t\treturn function (obj) {\n\t\t\tvar deferred = context.API.Q.defer();\n\t\t\tvar message = WILDFIRE.Message();\n\t\t\tmessage.setData( (typeof obj === \"object\") ? JSON.stringify(obj) : obj);\n\t\t\tdeferred.resolve(senders[senderId].dispatcher.dispatch(message));\n\t\t\treturn deferred.promise;\n\t\t};\n    }\n\n\n    return context.API.Q.resolve({\n    \twildfire: {\n    \t\tfireconsole: {\n\t    \t\tsend: makeSendForSenderId(\"wildfire/fireconsole\")\n\t    \t},\n\t\t\tinsight: {\n\t\t\t\tconsole: {\n\t\t\t\t\trandom: {\n\t\t\t    \t\tsend: makeSendForSenderId(\"wildfire/insight/console/random\")\n\t\t\t    \t}\n\t\t    \t}\n\t    \t}\n    \t}\n    });\n}\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "wildfire": {
                  "where": "inline"
                },
                "./wildfire/fireconsole": {
                  "where": "inline"
                },
                "./wildfire/insight/console/random": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/wildfire.js": {
            "requireId": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/wildfire.js",
            "memoizeId": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/wildfire.js",
            "descriptor": {
              "filename": "wildfire.js",
              "filepath": "../../wildfire-for-js/lib/wildfire.js",
              "mtime": 1375341064,
              "code": "\nexports.Receiver = function() {\n    return require(\"./receiver\").Receiver();\n}\n\nexports.Dispatcher = function() {\n    return require(\"./dispatcher\").Dispatcher();\n}\n\nexports.Message = function() {\n    return require(\"./message\").Message();\n}\n\nexports.HttpHeaderChannel = function(options) {\n    return require(\"./channel-httpheader\").HttpHeaderChannel(options);\n}\n\nexports.HttpClientChannel = function() {\n    return require(\"./channel/http-client\").HttpClientChannel();\n}\n\nexports.ShellCommandChannel = function() {\n    return require(\"./channel-shellcommand\").ShellCommandChannel();\n}\n\nexports.PostMessageChannel = function() {\n    return require(\"./channel-postmessage\").PostMessageChannel();\n}\n\nexports.CallbackStream = function() {\n    return require(\"./stream/callback\").CallbackStream();\n}\n",
              "globals": {
                "exports": {
                  "type": "reference"
                },
                "require": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "./receiver": {
                    "where": "inline"
                  },
                  "./dispatcher": {
                    "where": "inline"
                  },
                  "./message": {
                    "where": "inline"
                  },
                  "./channel-httpheader": {
                    "where": "inline"
                  },
                  "./channel/http-client": {
                    "where": "inline"
                  },
                  "./channel-shellcommand": {
                    "where": "inline"
                  },
                  "./channel-postmessage": {
                    "where": "inline"
                  },
                  "./stream/callback": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../wildfire-for-js/lib';",
              "code": "function(require, exports, module) {var __dirname = '../../wildfire-for-js/lib';\n\nexports.Receiver = function() {\n    return require(\"./receiver\").Receiver();\n}\n\nexports.Dispatcher = function() {\n    return require(\"./dispatcher\").Dispatcher();\n}\n\nexports.Message = function() {\n    return require(\"./message\").Message();\n}\n\nexports.HttpHeaderChannel = function(options) {\n    return require(\"./channel-httpheader\").HttpHeaderChannel(options);\n}\n\nexports.HttpClientChannel = function() {\n    return require(\"./channel/http-client\").HttpClientChannel();\n}\n\nexports.ShellCommandChannel = function() {\n    return require(\"./channel-shellcommand\").ShellCommandChannel();\n}\n\nexports.PostMessageChannel = function() {\n    return require(\"./channel-postmessage\").PostMessageChannel();\n}\n\nexports.CallbackStream = function() {\n    return require(\"./stream/callback\").CallbackStream();\n}\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "./receiver": {
                  "where": "inline"
                },
                "./dispatcher": {
                  "where": "inline"
                },
                "./message": {
                  "where": "inline"
                },
                "./channel-httpheader": {
                  "where": "inline"
                },
                "./channel/http-client": {
                  "where": "inline"
                },
                "./channel-shellcommand": {
                  "where": "inline"
                },
                "./channel-postmessage": {
                  "where": "inline"
                },
                "./stream/callback": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/receiver.js": {
            "requireId": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/receiver",
            "memoizeId": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/receiver.js",
            "descriptor": {
              "filename": "receiver.js",
              "filepath": "../../wildfire-for-js/lib/receiver.js",
              "mtime": 1375341064,
              "code": "\nvar Receiver = exports.Receiver = function () {\n    if (!(this instanceof exports.Receiver))\n        return new exports.Receiver();\n\n    this.listeners = [];\n    this.ids = [];\n}\n    \nReceiver.prototype.setId = function(id) {\n    if(this.ids.length > 0) {\n        throw new Error(\"ID already set for receiver!\");\n    }\n    this.ids.push(id);\n}\n\nReceiver.prototype.addId = function(id) {\n    this.ids.push(id);\n}\n\n/**\n * @deprecated\n */\nReceiver.prototype.getId = function() {\n    if(this.ids.length > 1) {\n        throw new Error(\"DEPRECATED: Multiple IDs for receiver. Cannot use getId(). Use getIds() instead!\");\n    }\n    return this.ids[0];\n}\n\nReceiver.prototype.getIds = function() {\n    return this.ids;\n}\n\nReceiver.prototype.hasId = function(id) {\n    for( var i=0 ; i<this.ids.length ; i++ ) {\n        if(this.ids[i]==id) {\n            return true;\n        }\n    }\n    return false;\n}\n\nReceiver.prototype.onChannelOpen = function(context) {\n    this._dispatch(\"onChannelOpen\", [context]);\n}\n\nReceiver.prototype.onChannelClose = function(context) {\n    this._dispatch(\"onChannelClose\", [context]);\n}\n\nReceiver.prototype.onMessageGroupStart = function(context) {\n    this._dispatch(\"onMessageGroupStart\", [context]);\n}\n\nReceiver.prototype.onMessageGroupEnd = function(context) {\n    this._dispatch(\"onMessageGroupEnd\", [context]);\n}\n\nReceiver.prototype.onMessageReceived = function(message, context) {\n    return this._dispatch(\"onMessageReceived\", [message, context]);\n}\n\nReceiver.prototype.addListener = function(listener) {\n    this.listeners.push(listener);\n}\n\nReceiver.prototype._dispatch = function(event, arguments) {\n    if(this.listeners.length==0) {\n        return;\n    }\n    var returnOptions,\n        opt;\n    for( var i=0 ; i<this.listeners.length ; i++ ) {\n        if(this.listeners[i][event]) {\n            opt = this.listeners[i][event].apply(this.listeners[i], arguments);\n            if(opt) {\n                if(!returnOptions) {\n                    returnOptions = opt;\n                } else {\n                    for( var key in opt ) {\n                        returnOptions[key] = opt[key];\n                    }\n                }\n            }\n        }\n    }\n    return returnOptions;\n}\n",
              "globals": {
                "Receiver": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {},
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../wildfire-for-js/lib';",
              "code": "function(require, exports, module) {var __dirname = '../../wildfire-for-js/lib';\n\nvar Receiver = exports.Receiver = function () {\n    if (!(this instanceof exports.Receiver))\n        return new exports.Receiver();\n\n    this.listeners = [];\n    this.ids = [];\n}\n    \nReceiver.prototype.setId = function(id) {\n    if(this.ids.length > 0) {\n        throw new Error(\"ID already set for receiver!\");\n    }\n    this.ids.push(id);\n}\n\nReceiver.prototype.addId = function(id) {\n    this.ids.push(id);\n}\n\n/**\n * @deprecated\n */\nReceiver.prototype.getId = function() {\n    if(this.ids.length > 1) {\n        throw new Error(\"DEPRECATED: Multiple IDs for receiver. Cannot use getId(). Use getIds() instead!\");\n    }\n    return this.ids[0];\n}\n\nReceiver.prototype.getIds = function() {\n    return this.ids;\n}\n\nReceiver.prototype.hasId = function(id) {\n    for( var i=0 ; i<this.ids.length ; i++ ) {\n        if(this.ids[i]==id) {\n            return true;\n        }\n    }\n    return false;\n}\n\nReceiver.prototype.onChannelOpen = function(context) {\n    this._dispatch(\"onChannelOpen\", [context]);\n}\n\nReceiver.prototype.onChannelClose = function(context) {\n    this._dispatch(\"onChannelClose\", [context]);\n}\n\nReceiver.prototype.onMessageGroupStart = function(context) {\n    this._dispatch(\"onMessageGroupStart\", [context]);\n}\n\nReceiver.prototype.onMessageGroupEnd = function(context) {\n    this._dispatch(\"onMessageGroupEnd\", [context]);\n}\n\nReceiver.prototype.onMessageReceived = function(message, context) {\n    return this._dispatch(\"onMessageReceived\", [message, context]);\n}\n\nReceiver.prototype.addListener = function(listener) {\n    this.listeners.push(listener);\n}\n\nReceiver.prototype._dispatch = function(event, arguments) {\n    if(this.listeners.length==0) {\n        return;\n    }\n    var returnOptions,\n        opt;\n    for( var i=0 ; i<this.listeners.length ; i++ ) {\n        if(this.listeners[i][event]) {\n            opt = this.listeners[i][event].apply(this.listeners[i], arguments);\n            if(opt) {\n                if(!returnOptions) {\n                    returnOptions = opt;\n                } else {\n                    for( var key in opt ) {\n                        returnOptions[key] = opt[key];\n                    }\n                }\n            }\n        }\n    }\n    return returnOptions;\n}\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {},
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/dispatcher.js": {
            "requireId": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/dispatcher",
            "memoizeId": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/dispatcher.js",
            "descriptor": {
              "filename": "dispatcher.js",
              "filepath": "../../wildfire-for-js/lib/dispatcher.js",
              "mtime": 1375341064,
              "code": "\nvar Dispatcher = exports.Dispatcher = function () {\n    if (!(this instanceof exports.Dispatcher))\n        return new exports.Dispatcher();\n    this.channel = null;\n}\n\nDispatcher.prototype.setChannel = function(channel) {\n    return this._setChannel(channel);\n}\n\nDispatcher.prototype._setChannel = function(channel) {\n    this.channel = channel;\n}\n\nDispatcher.prototype.setProtocol = function(protocol) {\n    this.protocol = protocol;\n}\n\nDispatcher.prototype.setSender = function(sender) {\n    this.sender = sender;\n}\n\nDispatcher.prototype.setReceiver = function(receiver) {\n    this.receiver = receiver;\n}\n\nDispatcher.prototype.dispatch = function(message, bypassReceivers) {\n    return this._dispatch(message, bypassReceivers);\n}\n    \nDispatcher.prototype._dispatch = function(message, bypassReceivers) {\n    if(!message.getProtocol()) message.setProtocol(this.protocol);\n    if(!message.getSender()) message.setSender(this.sender);\n    if(!message.getReceiver()) message.setReceiver(this.receiver);\n    this.channel.enqueueOutgoing(message, bypassReceivers);\n}\n",
              "globals": {
                "Dispatcher": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {},
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../wildfire-for-js/lib';",
              "code": "function(require, exports, module) {var __dirname = '../../wildfire-for-js/lib';\n\nvar Dispatcher = exports.Dispatcher = function () {\n    if (!(this instanceof exports.Dispatcher))\n        return new exports.Dispatcher();\n    this.channel = null;\n}\n\nDispatcher.prototype.setChannel = function(channel) {\n    return this._setChannel(channel);\n}\n\nDispatcher.prototype._setChannel = function(channel) {\n    this.channel = channel;\n}\n\nDispatcher.prototype.setProtocol = function(protocol) {\n    this.protocol = protocol;\n}\n\nDispatcher.prototype.setSender = function(sender) {\n    this.sender = sender;\n}\n\nDispatcher.prototype.setReceiver = function(receiver) {\n    this.receiver = receiver;\n}\n\nDispatcher.prototype.dispatch = function(message, bypassReceivers) {\n    return this._dispatch(message, bypassReceivers);\n}\n    \nDispatcher.prototype._dispatch = function(message, bypassReceivers) {\n    if(!message.getProtocol()) message.setProtocol(this.protocol);\n    if(!message.getSender()) message.setSender(this.sender);\n    if(!message.getReceiver()) message.setReceiver(this.receiver);\n    this.channel.enqueueOutgoing(message, bypassReceivers);\n}\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {},
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/message.js": {
            "requireId": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/message",
            "memoizeId": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/message.js",
            "descriptor": {
              "filename": "message.js",
              "filepath": "../../wildfire-for-js/lib/message.js",
              "mtime": 1375341064,
              "code": "\nvar Message = exports.Message = function (dispatcher) {\n    if (!(this instanceof exports.Message))\n        return new exports.Message(dispatcher);\n    \n    this.meta = null;\n    this.data = null;\n\n    var self = this;\n    self.dispatch = function() {\n        if(!dispatcher) {\n            throw new Error(\"dispatcher not set\");\n        }\n        return dispatcher.dispatch(self);\n    }\n}\n\nMessage.prototype.setProtocol = function(protocol) {\n    this.protocol = protocol;\n}\n\nMessage.prototype.getProtocol = function() {\n    return this.protocol;\n}\n\nMessage.prototype.setSender = function(sender) {\n    this.sender = sender;\n}\n\nMessage.prototype.getSender = function() {\n    return this.sender;\n}\n\nMessage.prototype.setReceiver = function(receiver) {\n    this.receiver = receiver;\n}\n\nMessage.prototype.getReceiver = function() {\n    return this.receiver;\n}\n\nMessage.prototype.setMeta = function(meta) {\n    this.meta = meta;\n}\n\nMessage.prototype.getMeta = function() {\n    return this.meta;\n}\n\nMessage.prototype.setData = function(data) {\n    this.data = data;\n}\n\nMessage.prototype.getData = function() {\n    return this.data;\n}\n",
              "globals": {
                "Message": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {},
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../wildfire-for-js/lib';",
              "code": "function(require, exports, module) {var __dirname = '../../wildfire-for-js/lib';\n\nvar Message = exports.Message = function (dispatcher) {\n    if (!(this instanceof exports.Message))\n        return new exports.Message(dispatcher);\n    \n    this.meta = null;\n    this.data = null;\n\n    var self = this;\n    self.dispatch = function() {\n        if(!dispatcher) {\n            throw new Error(\"dispatcher not set\");\n        }\n        return dispatcher.dispatch(self);\n    }\n}\n\nMessage.prototype.setProtocol = function(protocol) {\n    this.protocol = protocol;\n}\n\nMessage.prototype.getProtocol = function() {\n    return this.protocol;\n}\n\nMessage.prototype.setSender = function(sender) {\n    this.sender = sender;\n}\n\nMessage.prototype.getSender = function() {\n    return this.sender;\n}\n\nMessage.prototype.setReceiver = function(receiver) {\n    this.receiver = receiver;\n}\n\nMessage.prototype.getReceiver = function() {\n    return this.receiver;\n}\n\nMessage.prototype.setMeta = function(meta) {\n    this.meta = meta;\n}\n\nMessage.prototype.getMeta = function() {\n    return this.meta;\n}\n\nMessage.prototype.setData = function(data) {\n    this.data = data;\n}\n\nMessage.prototype.getData = function() {\n    return this.data;\n}\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {},
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/channel-httpheader.js": {
            "requireId": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/channel-httpheader",
            "memoizeId": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/channel-httpheader.js",
            "descriptor": {
              "filename": "channel-httpheader.js",
              "filepath": "../../wildfire-for-js/lib/channel-httpheader.js",
              "mtime": 1375341064,
              "code": "\n\nvar CHANNEL = require(\"./channel\");\n\nconst HEADER_PREFIX = 'x-wf-';\n\nvar requestIndex = 0;\n\n\nvar HttpHeaderChannel = exports.HttpHeaderChannel = function(options) {\n    if (!(this instanceof exports.HttpHeaderChannel))\n        return new exports.HttpHeaderChannel(options);\n\n    this.__construct(options);\n\n    this.HEADER_PREFIX = HEADER_PREFIX;\n}\n\nHttpHeaderChannel.prototype = CHANNEL.Channel();\n\nHttpHeaderChannel.prototype.getFirebugNetMonitorListener = function() {\n    if(!this.firebugNetMonitorListener) {\n        var self = this;\n        this.firebugNetMonitorListener = {\n            onResponseBody: function(context, file)\n            {\n                if(file) {\n                    try {\n                        \n                        var requestId = false;\n                        for( var i=file.requestHeaders.length-1 ; i>=0 ; i-- ) {\n                            if(file.requestHeaders[i].name==\"x-request-id\") {\n                                requestId = file.requestHeaders[i].value;\n                                break;\n                            }\n                        }\n\n                        self.parseReceived(file.responseHeaders, {\n                            \"FirebugNetMonitorListener\": {\n                                \"context\": context,\n                                \"file\": file\n                            },\n                            \"id\": requestId || \"id:\" + file.href + \":\" + requestIndex++,\n                            \"url\": file.href,\n                            // TODO: add \"hostname\" (file.request.URI.host?)\n                            // TODO: add \"port\" (file.request.URI.port?)\n                            \"method\": file.method,\n                            \"requestHeaders\": file.requestHeaders\n                        });\n                    } catch(e) {\n                        console.error(e);\n                    }\n                }\n            }\n        }\n    }\n    return this.firebugNetMonitorListener;\n}\n\nHttpHeaderChannel.prototype.getMozillaRequestObserverListener = function(globals) {\n    if(!this.mozillaRequestObserverListener) {\n        var self = this;\n        this.mozillaRequestObserverListener = {\n            observe: function(subject, topic, data)\n            {\n                if (topic == \"http-on-examine-response\") {\n\n                    var httpChannel = subject.QueryInterface(globals.Ci.nsIHttpChannel);\n\n                    try {\n                        var requestHeaders = [];\n                        var requestId;\n                        httpChannel.visitRequestHeaders({\n                            visitHeader: function(name, value)\n                            {\n                                requestHeaders.push({name: name, value: value});\n                                if(name.toLowerCase()==\"x-request-id\") {\n                                    requestId = value;\n                                }\n                            }\n                        });\n                        var responseHeaders = [],\n                            contentType = false;\n                        httpChannel.visitResponseHeaders({\n                            visitHeader: function(name, value)\n                            {\n                                responseHeaders.push({name: name, value: value});\n                                if (name.toLowerCase() == \"content-type\")\n                                    contentType = value;\n                            }\n                        });\n                        self.parseReceived(responseHeaders, {\n                            \"MozillaRequestObserverListener\": {\n                                \"httpChannel\": httpChannel\n                            },\n                            \"id\": requestId || \"id:\" + httpChannel.URI.spec + \":\" + requestIndex++,\n                            \"url\": httpChannel.URI.spec,\n                            \"hostname\": httpChannel.URI.host,\n                            \"port\": httpChannel.URI.port,\n                            \"method\": httpChannel.requestMethod,\n                            \"status\": httpChannel.responseStatus,\n                            \"contentType\": contentType,\n                            \"requestHeaders\": requestHeaders\n                        });\n                    } catch(e) {\n                        console.error(e);\n                    }\n                }\n            }                \n        }\n    }\n    return this.mozillaRequestObserverListener;\n}\n",
              "globals": {
                "CHANNEL": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "HEADER_PREFIX": {
                  "type": "assign"
                },
                "requestIndex": {
                  "type": "assign"
                },
                "HttpHeaderChannel": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                },
                "console": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "./channel": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../wildfire-for-js/lib';",
              "code": "function(require, exports, module) {var __dirname = '../../wildfire-for-js/lib';\n\n\nvar CHANNEL = require(\"./channel\");\n\nconst HEADER_PREFIX = 'x-wf-';\n\nvar requestIndex = 0;\n\n\nvar HttpHeaderChannel = exports.HttpHeaderChannel = function(options) {\n    if (!(this instanceof exports.HttpHeaderChannel))\n        return new exports.HttpHeaderChannel(options);\n\n    this.__construct(options);\n\n    this.HEADER_PREFIX = HEADER_PREFIX;\n}\n\nHttpHeaderChannel.prototype = CHANNEL.Channel();\n\nHttpHeaderChannel.prototype.getFirebugNetMonitorListener = function() {\n    if(!this.firebugNetMonitorListener) {\n        var self = this;\n        this.firebugNetMonitorListener = {\n            onResponseBody: function(context, file)\n            {\n                if(file) {\n                    try {\n                        \n                        var requestId = false;\n                        for( var i=file.requestHeaders.length-1 ; i>=0 ; i-- ) {\n                            if(file.requestHeaders[i].name==\"x-request-id\") {\n                                requestId = file.requestHeaders[i].value;\n                                break;\n                            }\n                        }\n\n                        self.parseReceived(file.responseHeaders, {\n                            \"FirebugNetMonitorListener\": {\n                                \"context\": context,\n                                \"file\": file\n                            },\n                            \"id\": requestId || \"id:\" + file.href + \":\" + requestIndex++,\n                            \"url\": file.href,\n                            // TODO: add \"hostname\" (file.request.URI.host?)\n                            // TODO: add \"port\" (file.request.URI.port?)\n                            \"method\": file.method,\n                            \"requestHeaders\": file.requestHeaders\n                        });\n                    } catch(e) {\n                        console.error(e);\n                    }\n                }\n            }\n        }\n    }\n    return this.firebugNetMonitorListener;\n}\n\nHttpHeaderChannel.prototype.getMozillaRequestObserverListener = function(globals) {\n    if(!this.mozillaRequestObserverListener) {\n        var self = this;\n        this.mozillaRequestObserverListener = {\n            observe: function(subject, topic, data)\n            {\n                if (topic == \"http-on-examine-response\") {\n\n                    var httpChannel = subject.QueryInterface(globals.Ci.nsIHttpChannel);\n\n                    try {\n                        var requestHeaders = [];\n                        var requestId;\n                        httpChannel.visitRequestHeaders({\n                            visitHeader: function(name, value)\n                            {\n                                requestHeaders.push({name: name, value: value});\n                                if(name.toLowerCase()==\"x-request-id\") {\n                                    requestId = value;\n                                }\n                            }\n                        });\n                        var responseHeaders = [],\n                            contentType = false;\n                        httpChannel.visitResponseHeaders({\n                            visitHeader: function(name, value)\n                            {\n                                responseHeaders.push({name: name, value: value});\n                                if (name.toLowerCase() == \"content-type\")\n                                    contentType = value;\n                            }\n                        });\n                        self.parseReceived(responseHeaders, {\n                            \"MozillaRequestObserverListener\": {\n                                \"httpChannel\": httpChannel\n                            },\n                            \"id\": requestId || \"id:\" + httpChannel.URI.spec + \":\" + requestIndex++,\n                            \"url\": httpChannel.URI.spec,\n                            \"hostname\": httpChannel.URI.host,\n                            \"port\": httpChannel.URI.port,\n                            \"method\": httpChannel.requestMethod,\n                            \"status\": httpChannel.responseStatus,\n                            \"contentType\": contentType,\n                            \"requestHeaders\": requestHeaders\n                        });\n                    } catch(e) {\n                        console.error(e);\n                    }\n                }\n            }                \n        }\n    }\n    return this.mozillaRequestObserverListener;\n}\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "./channel": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/channel.js": {
            "requireId": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/channel.js",
            "memoizeId": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/channel.js",
            "descriptor": {
              "filename": "channel.js",
              "filepath": "../../wildfire-for-js/lib/channel.js",
              "mtime": 1420318043,
              "code": "\nvar UTIL = require(\"modules/util\");\nvar PROTOCOL = require(\"./protocol\");\nvar TRANSPORT = require(\"./transport\");\n\nvar Channel = exports.Channel = function () {\n    if (!(this instanceof exports.Channel))\n        return new exports.Channel();\n}\n\nChannel.prototype.__construct = function(options) {\n    options = options || {};\n    this.status = \"closed\";\n    this.receivers = [];\n    this.listeners = [];\n    this.options = {\n        \"messagePartMaxLength\": 5000\n    }\n    this.outgoingQueue = [];\n    \n    if(typeof options.enableTransport != \"undefined\" && options.enableTransport===false) {\n        // do not add transport\n    } else {\n        this.addReceiver(TRANSPORT.newReceiver(this));\n    }\n}\n\nChannel.prototype.enqueueOutgoing = function(message, bypassReceivers) {\n    return this._enqueueOutgoing(message, bypassReceivers);\n}\n\nChannel.prototype._enqueueOutgoing = function(message, bypassReceivers) {\n    if(!bypassReceivers) {\n        // If a receiver with a matching ID is present on the channel we don't\n        // enqueue the message if receiver.onMessageReceived returns FALSE.\n        var enqueue = true;\n        for( var i=0 ; i<this.receivers.length ; i++ ) {\n            if(this.receivers[i].hasId(message.getReceiver())) {\n                if(!this.receivers[i].onMessageReceived(null, message)) enqueue = false;\n            }\n        }\n        if(!enqueue) return true;\n    }\n    this.outgoingQueue.push(this.encode(message));\n    return true;\n}\n\nChannel.prototype.getOutgoing = function() {\n    return this.outgoingQueue;\n}\n\nChannel.prototype.clearOutgoing = function() {\n    this.outgoingQueue = [];\n}\n\nChannel.prototype.setMessagePartMaxLength = function(length) {\n    this.options.messagePartMaxLength = length;\n}\n\nChannel.prototype.flush = function(applicator, bypassTransport) {\n    return this._flush(applicator, bypassTransport);\n}\n\nChannel.prototype._flush = function(applicator, bypassTransport) {\n    // set request ID if not set\n    if(!applicator.getMessagePart(\"x-request-id\")) {\n        applicator.setMessagePart(\"x-request-id\", \"\"+(new Date().getTime()) + \"\" + Math.floor(Math.random()*1000+1) );\n    }\n\n    var messages = this.getOutgoing();\n    if(messages.length==0) {\n        return 0;\n    }\n\n    var util = {\n        \"applicator\": applicator,\n        \"HEADER_PREFIX\": this.HEADER_PREFIX\n    };\n\n    if(this.transport && !bypassTransport) {\n        util.applicator = this.transport.newApplicator(applicator);\n    }\n\n    for( var i=0 ; i<messages.length ; i++ ) {\n        var headers = messages[i];\n        for( var j=0 ; j<headers.length ; j++ ) {\n            util.applicator.setMessagePart(\n                PROTOCOL.factory(headers[j][0]).encodeKey(util, headers[j][1], headers[j][2]),\n                headers[j][3]\n            );\n        }\n    }\n    \n    var count = messages.length;\n\n    this.clearOutgoing();\n\n    if(util.applicator.flush) {\n        util.applicator.flush(this);\n    }\n\n    return count;\n}\n\n\nChannel.prototype.setMessagePart = function(key, value) {\n    // overwrite in subclass\n}\n\nChannel.prototype.getMessagePart = function(key) {\n    // overwrite in subclass\n    return null;\n}\n\nChannel.prototype.encode = function(message) {\n    var protocol_id = message.getProtocol();\n    if(!protocol_id) {\n        throw new Error(\"Protocol not set for message\");\n    }\n    return PROTOCOL.factory(protocol_id).encodeMessage(this.options, message);\n}\n\nChannel.prototype.setNoReceiverCallback = function(callback) {\n    this.noReceiverCallback = callback;\n}\n\nChannel.prototype.addReceiver = function(receiver) {\n    // avoid duplicates\n    for( var i=0 ; i<this.receivers.length ; i++ ) {\n        if(this.receivers[i]==receiver) {\n            return;\n        }\n    }\n    this.receivers.push(receiver);\n}\n\nChannel.prototype.addListener = function(listener) {\n    // avoid duplicates\n    for( var i=0 ; i<this.listeners.length ; i++ ) {\n        if(this.listeners[i]==listener) {\n            return;\n        }\n    }\n    this.listeners.push(listener);\n}\n\nfunction dispatch(channel, method, args)\n{\n    args = args || [];\n    for( var i=0 ; i<channel.listeners.length ; i++ ) {\n        if(typeof channel.listeners[i][method] === \"function\") {\n            channel.listeners[i][method].apply(null, args);\n        }\n    }    \n}\n\nChannel.prototype.open = function(context) {\n    this.status = \"open\";\n    \n    dispatch(this, \"beforeChannelOpen\", [context]);\n    \n    for( var i=0 ; i<this.receivers.length ; i++ ) {\n        if(this.receivers[i][\"onChannelOpen\"]) {\n            this.receivers[i].onChannelOpen(context);\n        }\n    }\n    this.sinks = {\n        protocolBuffers: {},\n        buffers: {},\n        protocols: {},\n        receivers: {},\n        senders: {},\n        messages: {}\n    }\n    dispatch(this, \"afterChannelOpen\", [context]);\n}\n\nChannel.prototype.close = function(context) {\n    this.status = \"close\";\n    dispatch(this, \"beforeChannelClose\", [context]);\n    for( var i=0 ; i<this.receivers.length ; i++ ) {\n        if(this.receivers[i][\"onChannelClose\"]) {\n            this.receivers[i].onChannelClose(context);\n        }\n    }\n    dispatch(this, \"afterChannelClose\", [context]);\n}\n\nvar parsing = false;\n\nChannel.prototype.parseReceived = function(rawHeaders, context, options) {\n    var self = this;\n\n    if (parsing)\n    {\n        throw new Error(\"Already parsing!\");\n    }\n    parsing = true;\n\n    options = options || {};\n    options.skipChannelOpen = options.skipChannelOpen || false;\n    options.skipChannelClose = options.skipChannelClose || false;\n    options.enableContinuousParsing = options.enableContinuousParsing || false;\n\n    if(!options.skipChannelOpen) {\n        self.open(context);\n    }\n\n    if(typeof rawHeaders != \"object\") {\n        rawHeaders = text_header_to_object(rawHeaders);\n    }\n\n    // protocol related\n    var protocolBuffers = (options.enableContinuousParsing)?this.sinks.protocolBuffers:{};\n\n    // message related\n    var buffers = (options.enableContinuousParsing)?this.sinks.buffers:{};\n    var protocols = (options.enableContinuousParsing)?this.sinks.protocols:{};\n    var receivers = (options.enableContinuousParsing)?this.sinks.receivers:{};\n    var senders = (options.enableContinuousParsing)?this.sinks.senders:{};\n    var messages = (options.enableContinuousParsing)?this.sinks.messages:{};\n\n    try {\n        // parse the raw headers into messages\n        for( var i in rawHeaders ) {\n            parseHeader(rawHeaders[i].name.toLowerCase(), rawHeaders[i].value);\n        }\n    \n        // empty any remaining buffers in case protocol header was last\n        if(protocolBuffers) {\n            UTIL.forEach(protocolBuffers, function(item) {\n                if(protocols[item[0]]) {\n                    if(typeof buffers[item[0]] == \"undefined\") {\n                        buffers[item[0]] = {};\n                    }\n                    if(typeof receivers[item[0]] == \"undefined\") {\n                        receivers[item[0]] = {};\n                    }\n                    if(typeof senders[item[0]] == \"undefined\") {\n                        senders[item[0]] = {};\n                    }\n                    if(typeof messages[item[0]] == \"undefined\") {\n                        messages[item[0]] = {};\n                    }\n                    item[1].forEach(function(info) {\n                        protocols[item[0]].parse(buffers[item[0]], receivers[item[0]], senders[item[0]], messages[item[0]], info[0], info[1]);\n                    });\n                    delete protocolBuffers[item[0]];\n                }\n            });\n        }\n    } catch(e) {\n//        dump(\"Error parsing raw data: \" + e);\n        // clean up no matter what - a try/catch wrapper above this needs to recover from this properly\n        parsing = false;\n        buffers = {};\n        protocols = {};\n        receivers = {};\n        senders = {};\n        messages = {};\n        console.error(\"Error parsing raw data\", e);\n        throw e;\n    }\n\n    // deliver the messages to the appropriate receivers\n    var deliveries = [];\n    var messageCount = 0;\n    for( var protocolId in protocols ) {\n\n        for( var receiverKey in messages[protocolId] ) {\n\n            // sort messages by index\n            messages[protocolId][receiverKey].sort(function(a, b) {\n                if(parseInt(a[0])>parseInt(b[0])) return 1;\n                if(parseInt(a[0])<parseInt(b[0])) return -1;\n                return 0;\n            });\n\n            // determine receiver\n            var receiverId = receivers[protocolId][receiverKey];\n            // fetch receivers that support ID\n            var targetReceivers = [];\n            for( var i=0 ; i<this.receivers.length ; i++ ) {\n                if(this.receivers[i].hasId(receiverId)) {\n                    if(this.receivers[i][\"onMessageGroupStart\"]) {\n                        this.receivers[i].onMessageGroupStart(context);\n                    }\n                    targetReceivers.push(this.receivers[i]);\n                }\n            }\n            \n            messageCount += messages[protocolId][receiverKey].length;\n            \n            if(targetReceivers.length>0) {\n                for( var j=0 ; j<messages[protocolId][receiverKey].length ; j++ ) {\n                    // re-write sender and receiver keys to IDs\n                    messages[protocolId][receiverKey][j][1].setSender(senders[protocolId][receiverKey+\":\"+messages[protocolId][receiverKey][j][1].getSender()]);\n                    messages[protocolId][receiverKey][j][1].setReceiver(receiverId);\n                    for( var k=0 ; k<targetReceivers.length ; k++ ) {\n                        deliveries.push([targetReceivers[k], messages[protocolId][receiverKey][j][1]]);\n                    }\n                }\n                for( var k=0 ; k<targetReceivers.length ; k++ ) {\n                    if(targetReceivers[k][\"onMessageGroupEnd\"]) {\n                        targetReceivers[k].onMessageGroupEnd(context);\n                    }\n                }\n                if (options.enableContinuousParsing)\n                    delete messages[protocolId][receiverKey];\n            } else\n            if(this.noReceiverCallback) {\n                this.noReceiverCallback(receiverId);\n            }\n        }\n    }\n\n    if (options.enableContinuousParsing)\n    {\n        // TODO: Partial cleanup here or above for things we do not need any more\n    }\n    else\n    {\n        // cleanup - does this help with gc?\n        buffers = {};\n        protocols = {};\n        receivers = {};\n        senders = {};\n        messages = {};\n    }\n\n    parsing = false;\n\n    var onMessageReceivedOptions;\n\n    deliveries.forEach(function(delivery)\n    {\n        try {\n            onMessageReceivedOptions = delivery[0].onMessageReceived(context, delivery[1]);\n        } catch(e) {\n            console.error(\"Error delivering message: \" + e, e.stack);\n            throw e;\n        }\n        if(onMessageReceivedOptions) {\n            if(onMessageReceivedOptions.skipChannelClose) {\n                options.skipChannelClose = true;\n            }\n        }\n    });\n\n    if(!options.skipChannelClose) {\n        this.close(context);\n    }\n\n    return messageCount;\n\n \n    function parseHeader(name, value)\n    {\n        if (name.substr(0, self.HEADER_PREFIX.length) == self.HEADER_PREFIX) {\n            if (name.substring(0,self.HEADER_PREFIX.length + 9) == self.HEADER_PREFIX + 'protocol-') {\n                var id = parseInt(name.substr(self.HEADER_PREFIX.length + 9));\n                protocols[id] = PROTOCOL.factory(value);\n            } else {\n                var index = name.indexOf('-',self.HEADER_PREFIX.length);\n                var id = parseInt(name.substr(self.HEADER_PREFIX.length,index-self.HEADER_PREFIX.length));\n\n                if(protocols[id]) {\n\n                    if(typeof buffers[id] == \"undefined\") {\n                        buffers[id] = {};\n                    }\n                    if(typeof receivers[id] == \"undefined\") {\n                        receivers[id] = {};\n                    }\n                    if(typeof senders[id] == \"undefined\") {\n                        senders[id] = {};\n                    }\n                    if(typeof messages[id] == \"undefined\") {\n                        messages[id] = {};\n                    }\n\n                    if(protocolBuffers[id]) {\n                        protocolBuffers[id].forEach(function(info) {\n                            protocols[id].parse(buffers[id], receivers[id], senders[id], messages[id], info[0], info[1]);\n                        });\n                        delete protocolBuffers[id];\n                    }\n                    protocols[id].parse(buffers[id], receivers[id], senders[id], messages[id], name.substr(index+1), value);\n                } else {\n                    if(!protocolBuffers[id]) {\n                        protocolBuffers[id] = [];\n                    }\n                    protocolBuffers[id].push([name.substr(index+1), value]);\n                }\n            }\n        }\n    }\n    \n    function text_header_to_object(text) {\n        // trim escape sequences \\[...m\n//        text = text.replace(/\\x1B\\x5B[^\\x6D]*\\x6D/g, \"\");\n        \n        if(text.charCodeAt(0)==27 && text.charCodeAt(3)==109) {\n            text = text.substring(4);\n        }\n        var headers = [];\n        var lines = text.replace().split(\"\\n\");\n\n        var expression = new RegExp(\"^.{0,2}(\"+self.HEADER_PREFIX+\"[^:]*): (.*)$\", \"i\");\n        var m, offset, len, fuzzy = false;\n\n        for( var i=0 ; i<lines.length ; i++ ) {\n            if (lines[i])\n            {\n                if(m = expression.exec(lines[i])) {\n                    if (m[1].toLowerCase() === \"x-request-id\")\n                        context.id = m[2];\n\n                    headers.push({\n                        \"name\": m[1],\n                        // prefixing value with '~' indicates approximate message length matching\n                        // the message length has changed due to the newlines being replaced with &!10;\n                        \"value\": m[2]\n                    });\n                }\n            }\n        }\n\n        // This fudges lines together that should not have been split.\n        // This happens if the payload inadvertantly included newline characters that\n        // were not encoded with &!10;\n/*\n        for( var i=0 ; i<lines.length ; i++ ) {\n            if (lines[i])\n            {\n                offset = lines[i].indexOf(self.HEADER_PREFIX);\n                if (offset >=0 && offset <=3)\n                {\n                    len = lines[i].length;\n                    if (i+1 == lines.length) offset = 0;\n                    else offset = lines[i+1].indexOf(self.HEADER_PREFIX);\n                    if (\n                        (offset >=0 && offset <=3) ||\n                        lines[i].charAt(len-1) === \"|\" ||\n                        (lines[i].charAt(len-2) === \"|\" && lines[i].charAt(len-1) === \"\\\\\")\n                    )\n                    {\n                        if(m = expression.exec(lines[i])) {\n                            headers.push({\n                                \"name\": m[1],\n                                // prefixing value with '~' indicates approximate message length matching\n                                // the message length has changed due to the newlines being replaced with &!10;\n                                \"value\": ((true || fuzzy)?\"~\":\"\") + m[2]\n                            });\n                            fuzzy = false;\n                        }\n                    }\n                    else\n                    {\n                        lines[i] = lines[i] + \"&!10;\" + lines[i+1];\n                        lines.splice(i+1, 1);\n                        i--;\n                        fuzzy = true;\n                    }\n                } else\n                if(m = expression.exec(lines[i])) {\n                    headers.push({\n                        \"name\": m[1],\n                        \"value\": m[2]\n                    });\n                    fuzzy = false;\n                }\n            }\n        }\n*/\n        return headers;\n    }\n}\n\nChannel.prototype.setTransport = function(transport) {\n    this.transport = transport;\n}\n\n",
              "globals": {
                "UTIL": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "PROTOCOL": {
                  "type": "assign"
                },
                "TRANSPORT": {
                  "type": "assign"
                },
                "Channel": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                },
                "Math": {
                  "type": "reference"
                },
                "dispatch": {
                  "type": "assign"
                },
                "parsing": {
                  "type": "assign"
                },
                "console": {
                  "type": "reference"
                },
                "parseInt": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "modules/util": {
                    "where": "inline"
                  },
                  "./protocol": {
                    "where": "inline"
                  },
                  "./transport": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../wildfire-for-js/lib';",
              "code": "function(require, exports, module) {var __dirname = '../../wildfire-for-js/lib';\n\nvar UTIL = require(\"modules/util\");\nvar PROTOCOL = require(\"./protocol\");\nvar TRANSPORT = require(\"./transport\");\n\nvar Channel = exports.Channel = function () {\n    if (!(this instanceof exports.Channel))\n        return new exports.Channel();\n}\n\nChannel.prototype.__construct = function(options) {\n    options = options || {};\n    this.status = \"closed\";\n    this.receivers = [];\n    this.listeners = [];\n    this.options = {\n        \"messagePartMaxLength\": 5000\n    }\n    this.outgoingQueue = [];\n    \n    if(typeof options.enableTransport != \"undefined\" && options.enableTransport===false) {\n        // do not add transport\n    } else {\n        this.addReceiver(TRANSPORT.newReceiver(this));\n    }\n}\n\nChannel.prototype.enqueueOutgoing = function(message, bypassReceivers) {\n    return this._enqueueOutgoing(message, bypassReceivers);\n}\n\nChannel.prototype._enqueueOutgoing = function(message, bypassReceivers) {\n    if(!bypassReceivers) {\n        // If a receiver with a matching ID is present on the channel we don't\n        // enqueue the message if receiver.onMessageReceived returns FALSE.\n        var enqueue = true;\n        for( var i=0 ; i<this.receivers.length ; i++ ) {\n            if(this.receivers[i].hasId(message.getReceiver())) {\n                if(!this.receivers[i].onMessageReceived(null, message)) enqueue = false;\n            }\n        }\n        if(!enqueue) return true;\n    }\n    this.outgoingQueue.push(this.encode(message));\n    return true;\n}\n\nChannel.prototype.getOutgoing = function() {\n    return this.outgoingQueue;\n}\n\nChannel.prototype.clearOutgoing = function() {\n    this.outgoingQueue = [];\n}\n\nChannel.prototype.setMessagePartMaxLength = function(length) {\n    this.options.messagePartMaxLength = length;\n}\n\nChannel.prototype.flush = function(applicator, bypassTransport) {\n    return this._flush(applicator, bypassTransport);\n}\n\nChannel.prototype._flush = function(applicator, bypassTransport) {\n    // set request ID if not set\n    if(!applicator.getMessagePart(\"x-request-id\")) {\n        applicator.setMessagePart(\"x-request-id\", \"\"+(new Date().getTime()) + \"\" + Math.floor(Math.random()*1000+1) );\n    }\n\n    var messages = this.getOutgoing();\n    if(messages.length==0) {\n        return 0;\n    }\n\n    var util = {\n        \"applicator\": applicator,\n        \"HEADER_PREFIX\": this.HEADER_PREFIX\n    };\n\n    if(this.transport && !bypassTransport) {\n        util.applicator = this.transport.newApplicator(applicator);\n    }\n\n    for( var i=0 ; i<messages.length ; i++ ) {\n        var headers = messages[i];\n        for( var j=0 ; j<headers.length ; j++ ) {\n            util.applicator.setMessagePart(\n                PROTOCOL.factory(headers[j][0]).encodeKey(util, headers[j][1], headers[j][2]),\n                headers[j][3]\n            );\n        }\n    }\n    \n    var count = messages.length;\n\n    this.clearOutgoing();\n\n    if(util.applicator.flush) {\n        util.applicator.flush(this);\n    }\n\n    return count;\n}\n\n\nChannel.prototype.setMessagePart = function(key, value) {\n    // overwrite in subclass\n}\n\nChannel.prototype.getMessagePart = function(key) {\n    // overwrite in subclass\n    return null;\n}\n\nChannel.prototype.encode = function(message) {\n    var protocol_id = message.getProtocol();\n    if(!protocol_id) {\n        throw new Error(\"Protocol not set for message\");\n    }\n    return PROTOCOL.factory(protocol_id).encodeMessage(this.options, message);\n}\n\nChannel.prototype.setNoReceiverCallback = function(callback) {\n    this.noReceiverCallback = callback;\n}\n\nChannel.prototype.addReceiver = function(receiver) {\n    // avoid duplicates\n    for( var i=0 ; i<this.receivers.length ; i++ ) {\n        if(this.receivers[i]==receiver) {\n            return;\n        }\n    }\n    this.receivers.push(receiver);\n}\n\nChannel.prototype.addListener = function(listener) {\n    // avoid duplicates\n    for( var i=0 ; i<this.listeners.length ; i++ ) {\n        if(this.listeners[i]==listener) {\n            return;\n        }\n    }\n    this.listeners.push(listener);\n}\n\nfunction dispatch(channel, method, args)\n{\n    args = args || [];\n    for( var i=0 ; i<channel.listeners.length ; i++ ) {\n        if(typeof channel.listeners[i][method] === \"function\") {\n            channel.listeners[i][method].apply(null, args);\n        }\n    }    \n}\n\nChannel.prototype.open = function(context) {\n    this.status = \"open\";\n    \n    dispatch(this, \"beforeChannelOpen\", [context]);\n    \n    for( var i=0 ; i<this.receivers.length ; i++ ) {\n        if(this.receivers[i][\"onChannelOpen\"]) {\n            this.receivers[i].onChannelOpen(context);\n        }\n    }\n    this.sinks = {\n        protocolBuffers: {},\n        buffers: {},\n        protocols: {},\n        receivers: {},\n        senders: {},\n        messages: {}\n    }\n    dispatch(this, \"afterChannelOpen\", [context]);\n}\n\nChannel.prototype.close = function(context) {\n    this.status = \"close\";\n    dispatch(this, \"beforeChannelClose\", [context]);\n    for( var i=0 ; i<this.receivers.length ; i++ ) {\n        if(this.receivers[i][\"onChannelClose\"]) {\n            this.receivers[i].onChannelClose(context);\n        }\n    }\n    dispatch(this, \"afterChannelClose\", [context]);\n}\n\nvar parsing = false;\n\nChannel.prototype.parseReceived = function(rawHeaders, context, options) {\n    var self = this;\n\n    if (parsing)\n    {\n        throw new Error(\"Already parsing!\");\n    }\n    parsing = true;\n\n    options = options || {};\n    options.skipChannelOpen = options.skipChannelOpen || false;\n    options.skipChannelClose = options.skipChannelClose || false;\n    options.enableContinuousParsing = options.enableContinuousParsing || false;\n\n    if(!options.skipChannelOpen) {\n        self.open(context);\n    }\n\n    if(typeof rawHeaders != \"object\") {\n        rawHeaders = text_header_to_object(rawHeaders);\n    }\n\n    // protocol related\n    var protocolBuffers = (options.enableContinuousParsing)?this.sinks.protocolBuffers:{};\n\n    // message related\n    var buffers = (options.enableContinuousParsing)?this.sinks.buffers:{};\n    var protocols = (options.enableContinuousParsing)?this.sinks.protocols:{};\n    var receivers = (options.enableContinuousParsing)?this.sinks.receivers:{};\n    var senders = (options.enableContinuousParsing)?this.sinks.senders:{};\n    var messages = (options.enableContinuousParsing)?this.sinks.messages:{};\n\n    try {\n        // parse the raw headers into messages\n        for( var i in rawHeaders ) {\n            parseHeader(rawHeaders[i].name.toLowerCase(), rawHeaders[i].value);\n        }\n    \n        // empty any remaining buffers in case protocol header was last\n        if(protocolBuffers) {\n            UTIL.forEach(protocolBuffers, function(item) {\n                if(protocols[item[0]]) {\n                    if(typeof buffers[item[0]] == \"undefined\") {\n                        buffers[item[0]] = {};\n                    }\n                    if(typeof receivers[item[0]] == \"undefined\") {\n                        receivers[item[0]] = {};\n                    }\n                    if(typeof senders[item[0]] == \"undefined\") {\n                        senders[item[0]] = {};\n                    }\n                    if(typeof messages[item[0]] == \"undefined\") {\n                        messages[item[0]] = {};\n                    }\n                    item[1].forEach(function(info) {\n                        protocols[item[0]].parse(buffers[item[0]], receivers[item[0]], senders[item[0]], messages[item[0]], info[0], info[1]);\n                    });\n                    delete protocolBuffers[item[0]];\n                }\n            });\n        }\n    } catch(e) {\n//        dump(\"Error parsing raw data: \" + e);\n        // clean up no matter what - a try/catch wrapper above this needs to recover from this properly\n        parsing = false;\n        buffers = {};\n        protocols = {};\n        receivers = {};\n        senders = {};\n        messages = {};\n        console.error(\"Error parsing raw data\", e);\n        throw e;\n    }\n\n    // deliver the messages to the appropriate receivers\n    var deliveries = [];\n    var messageCount = 0;\n    for( var protocolId in protocols ) {\n\n        for( var receiverKey in messages[protocolId] ) {\n\n            // sort messages by index\n            messages[protocolId][receiverKey].sort(function(a, b) {\n                if(parseInt(a[0])>parseInt(b[0])) return 1;\n                if(parseInt(a[0])<parseInt(b[0])) return -1;\n                return 0;\n            });\n\n            // determine receiver\n            var receiverId = receivers[protocolId][receiverKey];\n            // fetch receivers that support ID\n            var targetReceivers = [];\n            for( var i=0 ; i<this.receivers.length ; i++ ) {\n                if(this.receivers[i].hasId(receiverId)) {\n                    if(this.receivers[i][\"onMessageGroupStart\"]) {\n                        this.receivers[i].onMessageGroupStart(context);\n                    }\n                    targetReceivers.push(this.receivers[i]);\n                }\n            }\n            \n            messageCount += messages[protocolId][receiverKey].length;\n            \n            if(targetReceivers.length>0) {\n                for( var j=0 ; j<messages[protocolId][receiverKey].length ; j++ ) {\n                    // re-write sender and receiver keys to IDs\n                    messages[protocolId][receiverKey][j][1].setSender(senders[protocolId][receiverKey+\":\"+messages[protocolId][receiverKey][j][1].getSender()]);\n                    messages[protocolId][receiverKey][j][1].setReceiver(receiverId);\n                    for( var k=0 ; k<targetReceivers.length ; k++ ) {\n                        deliveries.push([targetReceivers[k], messages[protocolId][receiverKey][j][1]]);\n                    }\n                }\n                for( var k=0 ; k<targetReceivers.length ; k++ ) {\n                    if(targetReceivers[k][\"onMessageGroupEnd\"]) {\n                        targetReceivers[k].onMessageGroupEnd(context);\n                    }\n                }\n                if (options.enableContinuousParsing)\n                    delete messages[protocolId][receiverKey];\n            } else\n            if(this.noReceiverCallback) {\n                this.noReceiverCallback(receiverId);\n            }\n        }\n    }\n\n    if (options.enableContinuousParsing)\n    {\n        // TODO: Partial cleanup here or above for things we do not need any more\n    }\n    else\n    {\n        // cleanup - does this help with gc?\n        buffers = {};\n        protocols = {};\n        receivers = {};\n        senders = {};\n        messages = {};\n    }\n\n    parsing = false;\n\n    var onMessageReceivedOptions;\n\n    deliveries.forEach(function(delivery)\n    {\n        try {\n            onMessageReceivedOptions = delivery[0].onMessageReceived(context, delivery[1]);\n        } catch(e) {\n            console.error(\"Error delivering message: \" + e, e.stack);\n            throw e;\n        }\n        if(onMessageReceivedOptions) {\n            if(onMessageReceivedOptions.skipChannelClose) {\n                options.skipChannelClose = true;\n            }\n        }\n    });\n\n    if(!options.skipChannelClose) {\n        this.close(context);\n    }\n\n    return messageCount;\n\n \n    function parseHeader(name, value)\n    {\n        if (name.substr(0, self.HEADER_PREFIX.length) == self.HEADER_PREFIX) {\n            if (name.substring(0,self.HEADER_PREFIX.length + 9) == self.HEADER_PREFIX + 'protocol-') {\n                var id = parseInt(name.substr(self.HEADER_PREFIX.length + 9));\n                protocols[id] = PROTOCOL.factory(value);\n            } else {\n                var index = name.indexOf('-',self.HEADER_PREFIX.length);\n                var id = parseInt(name.substr(self.HEADER_PREFIX.length,index-self.HEADER_PREFIX.length));\n\n                if(protocols[id]) {\n\n                    if(typeof buffers[id] == \"undefined\") {\n                        buffers[id] = {};\n                    }\n                    if(typeof receivers[id] == \"undefined\") {\n                        receivers[id] = {};\n                    }\n                    if(typeof senders[id] == \"undefined\") {\n                        senders[id] = {};\n                    }\n                    if(typeof messages[id] == \"undefined\") {\n                        messages[id] = {};\n                    }\n\n                    if(protocolBuffers[id]) {\n                        protocolBuffers[id].forEach(function(info) {\n                            protocols[id].parse(buffers[id], receivers[id], senders[id], messages[id], info[0], info[1]);\n                        });\n                        delete protocolBuffers[id];\n                    }\n                    protocols[id].parse(buffers[id], receivers[id], senders[id], messages[id], name.substr(index+1), value);\n                } else {\n                    if(!protocolBuffers[id]) {\n                        protocolBuffers[id] = [];\n                    }\n                    protocolBuffers[id].push([name.substr(index+1), value]);\n                }\n            }\n        }\n    }\n    \n    function text_header_to_object(text) {\n        // trim escape sequences \\[...m\n//        text = text.replace(/\\x1B\\x5B[^\\x6D]*\\x6D/g, \"\");\n        \n        if(text.charCodeAt(0)==27 && text.charCodeAt(3)==109) {\n            text = text.substring(4);\n        }\n        var headers = [];\n        var lines = text.replace().split(\"\\n\");\n\n        var expression = new RegExp(\"^.{0,2}(\"+self.HEADER_PREFIX+\"[^:]*): (.*)$\", \"i\");\n        var m, offset, len, fuzzy = false;\n\n        for( var i=0 ; i<lines.length ; i++ ) {\n            if (lines[i])\n            {\n                if(m = expression.exec(lines[i])) {\n                    if (m[1].toLowerCase() === \"x-request-id\")\n                        context.id = m[2];\n\n                    headers.push({\n                        \"name\": m[1],\n                        // prefixing value with '~' indicates approximate message length matching\n                        // the message length has changed due to the newlines being replaced with &!10;\n                        \"value\": m[2]\n                    });\n                }\n            }\n        }\n\n        // This fudges lines together that should not have been split.\n        // This happens if the payload inadvertantly included newline characters that\n        // were not encoded with &!10;\n/*\n        for( var i=0 ; i<lines.length ; i++ ) {\n            if (lines[i])\n            {\n                offset = lines[i].indexOf(self.HEADER_PREFIX);\n                if (offset >=0 && offset <=3)\n                {\n                    len = lines[i].length;\n                    if (i+1 == lines.length) offset = 0;\n                    else offset = lines[i+1].indexOf(self.HEADER_PREFIX);\n                    if (\n                        (offset >=0 && offset <=3) ||\n                        lines[i].charAt(len-1) === \"|\" ||\n                        (lines[i].charAt(len-2) === \"|\" && lines[i].charAt(len-1) === \"\\\\\")\n                    )\n                    {\n                        if(m = expression.exec(lines[i])) {\n                            headers.push({\n                                \"name\": m[1],\n                                // prefixing value with '~' indicates approximate message length matching\n                                // the message length has changed due to the newlines being replaced with &!10;\n                                \"value\": ((true || fuzzy)?\"~\":\"\") + m[2]\n                            });\n                            fuzzy = false;\n                        }\n                    }\n                    else\n                    {\n                        lines[i] = lines[i] + \"&!10;\" + lines[i+1];\n                        lines.splice(i+1, 1);\n                        i--;\n                        fuzzy = true;\n                    }\n                } else\n                if(m = expression.exec(lines[i])) {\n                    headers.push({\n                        \"name\": m[1],\n                        \"value\": m[2]\n                    });\n                    fuzzy = false;\n                }\n            }\n        }\n*/\n        return headers;\n    }\n}\n\nChannel.prototype.setTransport = function(transport) {\n    this.transport = transport;\n}\n\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "modules/util": {
                  "where": "inline"
                },
                "./protocol": {
                  "where": "inline"
                },
                "./transport": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/protocol.js": {
            "requireId": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/protocol",
            "memoizeId": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/protocol.js",
            "descriptor": {
              "filename": "protocol.js",
              "filepath": "../../wildfire-for-js/lib/protocol.js",
              "mtime": 1375341064,
              "code": "\nvar MESSAGE = require(\"./message\");\nvar JSON = require(\"modules/json\");\nvar UTIL = require(\"modules/util\");\n\n// Tolerance within which messages must match the declared length\n// This is used to compensate for length differences when messages are put back together\n// because of newlines that were not encoded by sender\nconst FUZZY_MESSAGE_LENGTH_TOLERANCE = 200;\n\nvar instances = {};\nvar protocols = {};\n\nexports.factory = function(uri) {\n    if(instances[uri]) {\n        return instances[uri];\n    }\n    if(protocols[uri]) {\n        return (instances[uri] = protocols[uri](uri));\n    }\n    return null;\n}\n\n\nprotocols[\"http://registry.pinf.org/cadorn.org/wildfire/@meta/protocol/component/0.1.0\"] = \nprotocols[\"__TEST__\"] = function(uri) {\n\n    return {\n        parse: function(buffers, receivers, senders, messages, key, value) {\n\n            var parts = key.split('-');\n            // parts[0] - receiver\n            // parts[1] - sender\n            // parts[2] - message id/index\n            \n            if(parts[0]=='index') {\n                // ignore the index header\n                return;\n            } else\n            if(parts[1]=='receiver') {\n                receivers[parts[0]] = value;\n                return;\n            } else\n            if(parts[2]=='sender') {\n                senders[parts[0] + ':' + parts[1]] = value;\n                return;\n            }\n\n            // 62|...|\\\n            // @previous Did not allow for '|' in meta or data\n            // @  var m = value.match(/^(\\d*)?\\|(.*)\\|(\\\\)?$/);\n            // @  if(!m) throw new Error(\"Error parsing message: \" + value);\n            var m = [], i, j;\n            // TIP: fuzzy matching is not currently used\n            m.push((value.charAt(0)==\"~\")?true:false);\n            i = value.indexOf(\"|\");\n            // TODO: Check for \\ before | and skip to next if present\n    if (value.charAt(i-1) === \"\\\\\")\n        throw new Error(\"Found \\\\ before |! in module \" + module.id);\n            m.push(value.substring((m[0])?1:0, i));\n            if (value.charAt(value.length-1) === \"|\") {    // end in |\n                m.push(value.substring(i+1, value.length-1));\n                m.push(\"\");\n            } else if (value.charAt(value.length-1) === \"\\\\\") {    // end in |\\ (i.e. a continuation)\n                m.push(value.substring(i+1, value.length-2));\n                m.push(\"\\\\\");\n            } else throw new Error(\"Error parsing for trailing '|' in message part: \" + value);\n\n//            m[2] = m[2].replace(/\\\\{2}/g, \"\\\\\");\n\n            // length present and message matches length - complete message\n            if(m[1] && \n               (\n                 (m[0] && Math.abs(m[1]-m[2].length)<FUZZY_MESSAGE_LENGTH_TOLERANCE ) ||\n                 (!m[0] && m[1]==m[2].length)\n               ) && !m[3]) {\n                enqueueMessage(parts[2], parts[0], parts[1], m[2]);\n            } else\n            // message continuation present - message part\n            if( m[3] ) {\n                enqueueBuffer(parts[2], parts[0], parts[1], m[2], (m[1])?'first':'part', m[1], m[0]);\n            } else\n            // no length and no message continuation - last message part\n            if( !m[1] && !m[3] ) {\n                enqueueBuffer(parts[2], parts[0], parts[1], m[2], 'last', void 0, m[0]);\n            } else {\n                throw new Error('Error parsing message: ' + value);\n            }\n            \n            // this supports message parts arriving in any order as fast as possible\n            function enqueueBuffer(index, receiver, sender, value, position, length, fuzzy) {\n                if(!buffers[receiver]) {\n                    buffers[receiver] = {\"firsts\": 0, \"lasts\": 0, \"messages\": []};\n                }\n                if(position==\"first\") buffers[receiver].firsts += 1;\n                else if(position==\"last\") buffers[receiver].lasts += 1;\n                buffers[receiver].messages.push([index, value, position, length, fuzzy]);\n                \n                // if we have a mathching number of first and last parts we assume we have\n                // a complete message so we try and join it\n                if(buffers[receiver].firsts>0 && buffers[receiver].firsts==buffers[receiver].lasts) {\n                    // first we sort all messages\n                    buffers[receiver].messages.sort(\n                        function (a, b) {\n                            return a[0] - b[0];\n                        }\n                    );\n                    // find the first \"first\" part and start collecting parts\n                    // until \"last\" is found\n                    var startIndex = null;\n                    var buffer = null;\n                    fuzzy = false;\n                    for( i=0 ; i<buffers[receiver].messages.length ; i++ ) {\n                        if(buffers[receiver].messages[i][4])\n                            fuzzy = true;\n                        if(buffers[receiver].messages[i][2]==\"first\") {\n                            startIndex = i;\n                            buffer = buffers[receiver].messages[i][1];\n                        } else\n                        if(startIndex!==null) {\n                            buffer += buffers[receiver].messages[i][1];\n                            if(buffers[receiver].messages[i][2]==\"last\") {\n                                // if our buffer matches the message length\n                                // we have a complete message\n                                if(\n                                     (fuzzy && Math.abs(buffers[receiver].messages[startIndex][3]-buffer.length)<FUZZY_MESSAGE_LENGTH_TOLERANCE ) ||\n                                     (!fuzzy && buffer.length==buffers[receiver].messages[startIndex][3])\n                                ) {\n                                    // message is complete\n                                    enqueueMessage(buffers[receiver].messages[startIndex][0], receiver, sender, buffer);\n                                    buffers[receiver].messages.splice(startIndex, i-startIndex+1);\n                                    buffers[receiver].firsts -= 1;\n                                    buffers[receiver].lasts -= 1;\n                                    startIndex = null;\n                                    buffer = null;\n                                    fuzzy = false;\n                                } else {\n                                    // message is not complete\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            function enqueueMessage(index, receiver, sender, value) {\n                \n                if(!messages[receiver]) {\n                    messages[receiver] = [];\n                }\n\n                // Split \"...\\|...|...|.......\n                // by ------------^\n                var m = [ value ], i = 0;\n                while(true) {\n                    i = value.indexOf(\"|\", i);\n                    if (i===-1) throw new Error(\"Error parsing for '|' in message part: \" + value);\n                    if (value.charAt(i-1) != \"\\\\\") break;\n                }\n                m.push(value.substring(0, i));\n                m.push(value.substring(i+1, value.length));\n\n                var message = MESSAGE.Message();\n                message.setReceiver(receiver);\n                message.setSender(sender);\n                // @previous\n                // @  message.setMeta((m[1])?m[1].replace(/&#124;/g, \"|\").replace(/&#10;/g, \"\\n\"):null);\n                // @  message.setData(m[2].replace(/&#124;/g, \"|\").replace(/&#10;/g, \"\\n\"));\n                message.setMeta((m[1])?m[1].replace(/\\\\\\|/g, \"|\").replace(/&!10;/g, \"\\n\"):null);\n                message.setData(m[2].replace(/&!10;/g, \"\\\\n\"));\n                message.setProtocol('http://registry.pinf.org/cadorn.org/wildfire/@meta/protocol/component/0.1.0');\n                \n                messages[receiver].push([index, message]);\n            }\n        },\n\n        encodeMessage: function(options, message) {\n                  \n            var protocol_id = message.getProtocol();\n            if(!protocol_id) {\n                throw new Error(\"Protocol not set for message\");\n            }\n            var receiver_id = message.getReceiver();\n            if(!receiver_id) {\n                throw new Error(\"Receiver not set for message\");\n            }\n            var sender_id = message.getSender();\n            if(!sender_id) {\n                throw new Error(\"Sender not set for message\");\n            }\n\n            var headers = [];\n\n            var meta = message.getMeta();\n            if(!meta)\n                meta = \"\";\n\n            var data = message.getData() || \"\";\n            if (typeof data != \"string\")\n                throw new Error(\"Data in wildfire message is not a string!\");\n\n            data = meta.replace(/\\|/g, \"\\\\|\").replace(/\\n|\\u000a|\\\\u000a/g, \"&!10;\") + '|' + data.replace(/\\n|\\u000a|\\\\u000a/g, \"&!10;\");\n//            var data = meta.replace(/\\|/g, \"&#124;\").replace(/\\n|\\u000a/g, \"&#10;\") + '|' + message.getData().replace(/\\|/g, \"&#124;\").replace(/\\n|\\u000a/g, \"&#10;\");\n\n            var parts = chunk_split(data, options.messagePartMaxLength);\n\n            var part,\n                msg;\n\n            for( var i=0 ; i<parts.length ; i++) {\n                if (part = parts[i]) {\n                    msg = \"\";\n\n                    // escape backslashes\n                    // NOTE: This should probably be done during JSON encoding to ensure we do not double-escape\n                    //       with different encoders, but not sure how different encoders behave yet.\n//                    part = part.replace(/\\\\/g, \"\\\\\\\\\");\n\n                    if (parts.length>1) {\n                        msg = ((i==0)?data.length:'') +\n                              '|' + part + '|' +\n                              ((i<parts.length-1)?\"\\\\\":\"\");\n                    } else {\n                        msg = part.length + '|' + part + '|';\n                    }\n\n                    headers.push([\n                        protocol_id,\n                        receiver_id,\n                        sender_id,\n                        msg\n                    ]);\n                }\n            }\n            return headers;\n        },\n\n        encodeKey: function(util, receiverId, senderId) {\n            \n            if(!util[\"protocols\"]) util[\"protocols\"] = {};\n            if(!util[\"messageIndexes\"]) util[\"messageIndexes\"] = {};\n            if(!util[\"receivers\"]) util[\"receivers\"] = {};\n            if(!util[\"senders\"]) util[\"senders\"] = {};\n\n            var protocol = getProtocolIndex(uri);\n            var messageIndex = getMessageIndex(protocol);\n            var receiver = getReceiverIndex(protocol, receiverId);\n            var sender = getSenderIndex(protocol, receiver, senderId);\n            \n            return util.HEADER_PREFIX + protocol + \"-\" + receiver + \"-\" + sender + \"-\" + messageIndex;\n        \n            function getProtocolIndex(protocolId) {\n                if(util[\"protocols\"][protocolId]) return util[\"protocols\"][protocolId];\n                for( var i=1 ; ; i++ ) {\n                    var value = util.applicator.getMessagePart(util.HEADER_PREFIX + \"protocol-\" + i);\n                    if(!value) {\n                        util[\"protocols\"][protocolId] = i;\n                        util.applicator.setMessagePart(util.HEADER_PREFIX + \"protocol-\" + i, protocolId);\n                        return i;\n                    } else\n                    if(value==protocolId) {\n                        util[\"protocols\"][protocolId] = i;\n                        return i;\n                    }\n                }\n            }\n        \n            function getMessageIndex(protocolIndex) {\n                var value = util[\"messageIndexes\"][protocolIndex] || util.applicator.getMessagePart(util.HEADER_PREFIX + protocolIndex + \"-index\");\n                if(!value) {\n                    value = 0;\n                }\n                value++;\n                util[\"messageIndexes\"][protocolIndex] = value;\n                util.applicator.setMessagePart(util.HEADER_PREFIX + protocolIndex + \"-index\", value);\n                return value;\n            }\n            \n            function getReceiverIndex(protocolIndex, receiverId) {\n                if(util[\"receivers\"][protocolIndex + \":\" + receiverId]) return util[\"receivers\"][protocolIndex + \":\" + receiverId];\n                for( var i=1 ; ; i++ ) {\n                    var value = util.applicator.getMessagePart(util.HEADER_PREFIX + protocolIndex + \"-\" + i + \"-receiver\");\n                    if(!value) {\n                        util[\"receivers\"][protocolIndex + \":\" + receiverId] = i;\n                        util.applicator.setMessagePart(util.HEADER_PREFIX + protocolIndex + \"-\" + i + \"-receiver\", receiverId);\n                        return i;\n                    } else\n                    if(value==receiverId) {\n                        util[\"receivers\"][protocolIndex + \":\" + receiverId] = i;\n                        return i;\n                    }\n                }\n            }\n            \n            function getSenderIndex(protocolIndex, receiverIndex, senderId) {\n                if(util[\"senders\"][protocolIndex + \":\" + receiverIndex + \":\" + senderId]) return util[\"senders\"][protocolIndex + \":\" + receiverIndex + \":\" + senderId];\n                for( var i=1 ; ; i++ ) {\n                    var value = util.applicator.getMessagePart(util.HEADER_PREFIX + protocolIndex + \"-\" + receiverIndex + \"-\" + i + \"-sender\");\n                    if(!value) {\n                        util[\"senders\"][protocolIndex + \":\" + receiverIndex + \":\" + senderId] = i;\n                        util.applicator.setMessagePart(util.HEADER_PREFIX + protocolIndex + \"-\" + receiverIndex + \"-\" + i + \"-sender\", senderId);\n                        return i;\n                    } else\n                    if(value==senderId) {\n                        util[\"senders\"][protocolIndex + \":\" + receiverIndex + \":\" + senderId] = i;\n                        return i;\n                    }\n                }\n            }\n        }        \n    };\n};\n\n\n// @see http://registry.pinf.org/cadorn.org/wildfire/@meta/protocol/json-stream/0.2.0\nprotocols[\"http://meta.wildfirehq.org/Protocol/JsonStream/0.2\"] = function(uri) {\n\n    var groupStack = [];\n    var groupIndex = 0;\n\n    return {\n        parse: function(buffers, receivers, senders, messages, key, value) {\n\n            var parts = key.split('-');\n            // parts[0] - receiver\n            // parts[1] - sender\n            // parts[2] - message id/index\n\n            if(parts[0]=='index') {\n                // ignore the index header\n                return;\n            } else\n            if(parts[0]=='structure') {\n                if(value==\"http://meta.firephp.org/Wildfire/Structure/FirePHP/FirebugConsole/0.1\") {\n                    value = \"http://registry.pinf.org/cadorn.org/insight/@meta/receiver/console/page/0\";\n                } else\n                if(value==\"http://meta.firephp.org/Wildfire/Structure/FirePHP/Dump/0.1\") {\n                    value = \"http://registry.pinf.org/cadorn.org/insight/@meta/receiver/console/page/0\";\n//                    value = \"http://pinf.org/cadorn.org/fireconsole/meta/Receiver/NetServer/0.1\"\n                }\n                receivers[parts[1]] = value;\n                \n                // NOTE: The old protocol specifies senders independent from receivers so we need to add senders for every receiver if senders are already known\n                if(UTIL.len(senders)>0) {\n                    var newSenders = {};\n                    for( var senderKey in senders ) {\n                        var senderParts = senderKey.split(\":\");\n                        newSenders[parts[1] + \":\" + senderParts[1]] = senders[senderKey];\n                    }\n                    UTIL.complete(senders, newSenders);\n                }\n                return;\n            } else\n            if(parts[0]=='plugin') {\n                \n                // NOTE: The old protocol specifies senders independent from receivers so we need to add senders for every receiver\n                //       If no receiver is known yet we assume a receiver key of \"1\"\n                if(UTIL.len(receivers)==0) {\n                    senders[\"1\" + \":\" + parts[1]] = value;\n                } else {\n                    for( var receiverKey in receivers ) {\n                        senders[receiverKey + \":\" + parts[1]] = value;\n                    }\n                }\n                return;\n            }\n            \n            // 62|...|\\\n            var m = value.match(/^(\\d*)?\\|(.*)\\|(\\\\)?$/);\n            if(!m) {\n                throw new Error(\"Error parsing message: \" + value);\n            }\n\n            // length present and message matches length - complete message\n            if(m[1] && m[1]==m[2].length && !m[3]) {\n                enqueueMessage(parts[2], parts[0], parts[1], m[2]);\n            } else\n            // message continuation present - message part\n            if( m[3] ) {\n                enqueueBuffer(parts[2], parts[0], parts[1], m[2], (m[1])?'first':'part', m[1]);\n            } else\n            // no length and no message continuation - last message part\n            if( !m[1] && !m[3] ) {\n                enqueueBuffer(parts[2], parts[0], parts[1], m[2], 'last');\n            } else {\n                throw new Error('Error parsing message: ' + value);\n            }\n            \n            // this supports message parts arriving in any order as fast as possible\n            function enqueueBuffer(index, receiver, sender, value, position, length) {\n                if(!buffers[receiver]) {\n                    buffers[receiver] = {\"firsts\": 0, \"lasts\": 0, \"messages\": []};\n                }\n                if(position==\"first\") buffers[receiver].firsts += 1;\n                else if(position==\"last\") buffers[receiver].lasts += 1;\n                buffers[receiver].messages.push([index, value, position, length]);\n                \n                // if we have a mathching number of first and last parts we assume we have\n                // a complete message so we try and join it\n                if(buffers[receiver].firsts>0 && buffers[receiver].firsts==buffers[receiver].lasts) {\n                    // first we sort all messages\n                    buffers[receiver].messages.sort(\n                        function (a, b) {\n                            return a[0] - b[0];\n                        }\n                    );\n                    // find the first \"first\" part and start collecting parts\n                    // until \"last\" is found\n                    var startIndex = null;\n                    var buffer = null;\n                    for( i=0 ; i<buffers[receiver].messages.length ; i++ ) {\n                        if(buffers[receiver].messages[i][2]==\"first\") {\n                            startIndex = i;\n                            buffer = buffers[receiver].messages[i][1];\n                        } else\n                        if(startIndex!==null) {\n                            buffer += buffers[receiver].messages[i][1];\n                            if(buffers[receiver].messages[i][2]==\"last\") {\n                                // if our buffer matches the message length\n                                // we have a complete message\n                                if(buffer.length==buffers[receiver].messages[startIndex][3]) {\n                                    // message is complete\n                                    enqueueMessage(buffers[receiver].messages[startIndex][0], receiver, sender, buffer);\n                                    buffers[receiver].messages.splice(startIndex, i-startIndex);\n                                    buffers[receiver].firsts -= 1;\n                                    buffers[receiver].lasts -= 1;\n                                    if(buffers[receiver].messages.length==0) delete buffers[receiver];\n                                    startIndex = null;\n                                    buffer = null;\n                                } else {\n                                    // message is not complete\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            function enqueueMessage(index, receiver, sender, value) {\n\n                if(!messages[receiver]) {\n                    messages[receiver] = [];\n                }\n\n                \n                var meta = {\n                        \"msg.preprocessor\": \"FirePHPCoreCompatibility\",\n                        \"target\": \"console\",\n                        \"lang.id\": \"registry.pinf.org/cadorn.org/github/renderers/packages/php/master\"\n                    },\n                    data,\n                    parts;\n\n                try {   \n                    parts = JSON.decode(value);\n                } catch(e) {\n                    console.error(\"Error parsing JsonStream message\", e, value);\n                    throw e;\n                }\n\n                // console\n                if(UTIL.isArrayLike(parts) && parts.length==2 &&\n                    (typeof parts[0] == \"object\") && UTIL.has(parts[0], \"Type\")) {\n                    \n                    data = parts[1];\n\n                    for( var name in parts[0] ) {\n                        if(name==\"Type\") {\n\n                            if(groupStack.length>0) {\n                                meta[\"group\"] = groupStack[groupStack.length-1];\n                            }\n\n                            switch(parts[0][name]) {\n                                case \"LOG\":\n                                    meta[\"priority\"] = \"log\";\n                                    break;\n                                case \"INFO\":\n                                    meta[\"priority\"] = \"info\";\n                                    break;\n                                case \"WARN\":\n                                    meta[\"priority\"] = \"warn\";\n                                    break;\n                                case \"ERROR\":\n                                    meta[\"priority\"] = \"error\";\n                                    break;\n                                case \"EXCEPTION\":\n                                    var originalData = data;\n                                    data = {\n                                        \"__className\": originalData.Class,\n                                        \"__isException\": true,\n                                        \"protected:message\": originalData.Message,\n                                        \"protected:file\": originalData.File,\n                                        \"protected:line\": originalData.Line,\n                                        \"private:trace\": originalData.Trace\n                                    }\n                                    if (data[\"private:trace\"] && data[\"private:trace\"].length > 0) {\n                                        if (data[\"private:trace\"][0].file != originalData.File || data[\"private:trace\"][0].line != originalData.Line) {\n                                            data[\"private:trace\"].unshift({\n                                               \"class\": originalData.Class || \"\",\n                                                \"type\": originalData.Type || \"\",\n                                                \"function\": originalData.Function || \"\",\n                                                \"file\": originalData.File || \"\",\n                                                \"line\": originalData.Line || \"\",\n                                                \"args\": originalData.Args || \"\"\n                                            });\n                                        }\n                                    }\n                                    meta[\"priority\"] = \"error\";\n                                    break;\n                                case \"TRACE\":\n                                    meta[\"renderer\"] = \"http://registry.pinf.org/cadorn.org/renderers/packages/insight/0:structures/trace\";\n                                    var trace = [\n                                        {\n                                            \"class\": data.Class || \"\",\n                                            \"type\": data.Type || \"\",\n                                            \"function\": data.Function || \"\",\n                                            \"file\": data.File || \"\",\n                                            \"line\": data.Line || \"\",\n                                            \"args\": data.Args || \"\"\n                                        }\n                                    ];\n                                    if(data.Trace) {\n                                        trace = trace.concat(data.Trace);\n                                    }\n                                    data = {\n                                        \"title\": data.Message,\n                                        \"trace\": trace\n                                    };\n                                    break;\n                                case \"TABLE\":\n                                    meta[\"renderer\"] = \"http://registry.pinf.org/cadorn.org/renderers/packages/insight/0:structures/table\";\n                                    data = {\"data\": data};\n                                    if(data.data.length==2 && typeof data.data[0] == \"string\") {\n                                        data.header = data.data[1].splice(0,1)[0];\n                                        data.title = data.data[0];\n                                        data.data = data.data[1];\n                                    } else {\n                                        data.header = data.data.splice(0,1)[0];\n                                    }\n                                    break;\n                                case \"GROUP_START\":\n                                    groupIndex++;\n                                    meta[\"group.start\"] = true;\n                                    meta[\"group\"] = \"group-\" + groupIndex;\n                                    groupStack.push(\"group-\" + groupIndex);\n                                    break;\n                                case \"GROUP_END\":\n                                    meta[\"group.end\"] = true;\n                                    if(groupStack.length>0) {\n                                        groupStack.pop();\n                                    }\n                                    break;\n                                default:\n                                    throw new Error(\"Log type '\" + parts[0][name] + \"' not implemented\");\n                                    break;\n                            }\n                        } else\n                        if(name==\"Label\") {\n                            meta[\"label\"] = parts[0][name];\n                        } else\n                        if(name==\"File\") {\n                            meta[\"file\"] = parts[0][name];\n                        } else\n                        if(name==\"Line\") {\n                            meta[\"line\"] = parts[0][name];\n                        } else\n                        if(name==\"Collapsed\") {\n                            meta[\".collapsed\"] = (parts[0][name]=='true')?true:false;\n//                        } else\n//                        if(name==\"Color\") {\n//                            meta[\"fc.group.color\"] = parts[0][name];\n                        }\n                    }                    \n                } else\n                // dump\n                {\n                    data = parts;\n                    meta[\"label\"] = \"Dump\";\n                }\n                \n                if(meta[\"renderer\"] == \"http://registry.pinf.org/cadorn.org/renderers/packages/insight/0:structures/table\") {\n                    if(meta[\"label\"]) {\n                        data.title = meta[\"label\"];\n                        delete meta[\"label\"];\n                    }\n                } else\n                if(meta[\"group.start\"]) {\n                    meta[\"group.title\"] = meta[\"label\"];\n                    delete meta[\"label\"];\n                    if(typeof meta[\".collapsed\"] == \"undefined\" || !meta[\".collapsed\"]) {\n                        meta[\"group.expand\"] = meta[\"group\"];\n                    }\n                    delete meta[\".collapsed\"];\n                }\n\n                var message = MESSAGE.Message();\n                message.setReceiver(receiver);\n                message.setSender(sender);\n\n                try {   \n                    message.setMeta(JSON.encode(meta));\n                } catch(e) {\n                    console.error(\"Error encoding object (JsonStream compatibility)\", e, meta);\n                    throw e;\n                }\n\n                try {   \n                    message.setData(JSON.encode(data));\n                } catch(e) {\n                    console.error(\"Error encoding object (JsonStream compatibility)\", e, data);\n                    throw e;\n                }\n\n                messages[receiver].push([index, message]);\n            }\n        },\n        \n        encodeMessage: function(options, message) {\n            throw new Error(\"Not implemented!\");\n        },\n        \n        encodeKey: function(util, receiverId, senderId) {\n            throw new Error(\"Not implemented!\");\n        }        \n    };\n};\n\n\n\nprotocols[\"http://registry.pinf.org/cadorn.org/wildfire/@meta/protocol/announce/0.1.0\"] = function(uri) {\n\n    return {\n        parse: function(buffers, receivers, senders, messages, key, value) {\n\n            var parts = key.split('-');\n            // parts[0] - message id/index\n\n            if(parts[0]=='index') {\n                // ignore the index header\n                return;\n            }\n                        \n            // 62|...|\\\n            var m = value.match(/^(\\d*)?\\|(.*)\\|(\\\\)?$/);\n            if(!m) {\n                throw new Error(\"Error parsing message: \" + value);\n            }\n    \n            // length present and message matches length - complete message\n            if(m[1] && m[1]==m[2].length && !m[3]) {\n                enqueueMessage(key, m[2]);\n            } else\n            // message continuation present - message part\n            if( m[3] ) {\n                enqueueBuffer(key, m[2], (m[1])?'first':'part', m[1]);\n            } else\n            // no length and no message continuation - last message part\n            if( !m[1] && !m[3] ) {\n                enqueueBuffer(key, m[2], 'last');\n            } else {\n                throw new Error('Error parsing message: ' + value);\n            }\n            \n            // this supports message parts arriving in any order as fast as possible\n            function enqueueBuffer(index, value, position, length) {\n                \n                receiver = \"*\";\n                if(!buffers[receiver]) {\n                    buffers[receiver] = {\"firsts\": 0, \"lasts\": 0, \"messages\": []};\n                }\n                if(position==\"first\") buffers[receiver].firsts += 1;\n                else if(position==\"last\") buffers[receiver].lasts += 1;\n                buffers[receiver].messages.push([index, value, position, length]);\n                \n                // if we have a mathching number of first and last parts we assume we have\n                // a complete message so we try and join it\n                if(buffers[receiver].firsts>0 && buffers[receiver].firsts==buffers[receiver].lasts) {\n                    // first we sort all messages\n                    buffers[receiver].messages.sort(\n                        function (a, b) {\n                            return a[0] - b[0];\n                        }\n                    );\n                    // find the first \"first\" part and start collecting parts\n                    // until \"last\" is found\n                    var startIndex = null;\n                    var buffer = null;\n                    for( i=0 ; i<buffers[receiver].messages.length ; i++ ) {\n                        if(buffers[receiver].messages[i][2]==\"first\") {\n                            startIndex = i;\n                            buffer = buffers[receiver].messages[i][1];\n                        } else\n                        if(startIndex!==null) {\n                            buffer += buffers[receiver].messages[i][1];\n                            if(buffers[receiver].messages[i][2]==\"last\") {\n                                // if our buffer matches the message length\n                                // we have a complete message\n                                if(buffer.length==buffers[receiver].messages[startIndex][3]) {\n                                    // message is complete\n                                    enqueueMessage(buffers[receiver].messages[startIndex][0], buffer);\n                                    buffers[receiver].messages.splice(startIndex, i-startIndex);\n                                    buffers[receiver].firsts -= 1;\n                                    buffers[receiver].lasts -= 1;\n                                    if(buffers[receiver].messages.length==0) delete buffers[receiver];\n                                    startIndex = null;\n                                    buffer = null;\n                                } else {\n                                    // message is not complete\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            \n            function enqueueMessage(index, value) {\n                \n                receiver = \"*\";\n                \n                if(!messages[receiver]) {\n                    messages[receiver] = [];\n                }\n                \n                var m = /^(.*?[^\\\\])?\\|(.*)$/.exec(value);\n\n                var message = MESSAGE.Message();\n                message.setReceiver(receiver);\n                message.setMeta(m[1] || null);\n                message.setData(m[2]);\n                \n                messages[receiver].push([index, message]);\n            }\n        },\n        \n        encodeMessage: function(options, message) {\n                  \n            var protocol_id = message.getProtocol();\n            if(!protocol_id) {\n                throw new Error(\"Protocol not set for message\");\n            }\n            \n            var headers = [];\n            \n            var meta = message.getMeta() || \"\";\n        \n            var data = meta.replace(/\\|/g, \"\\\\|\") + '|' + message.getData().replace(/\\|/g, \"\\\\|\");\n        \n            var parts = chunk_split(data, options.messagePartMaxLength);\n        \n            var part,\n                msg;\n            for( var i=0 ; i<parts.length ; i++) {\n                if (part = parts[i]) {\n        \n                    msg = \"\";\n\n                    // escape backslashes\n                    // NOTE: This should probably be done during JSON encoding to ensure we do not double-escape\n                    //       with different encoders, but not sure how different encoders behave yet.\n                    part = part.replace(/\\\\/g, \"\\\\\\\\\");\n        \n                    if (parts.length>2) {\n                        msg = ((i==0)?data.length:'') +\n                              '|' + part + '|' +\n                              ((i<parts.length-2)?\"\\\\\":\"\");\n                    } else {\n                        msg = part.length + '|' + part + '|';\n                    }\n\n                    headers.push([\n                        protocol_id,\n                        \"\",\n                        \"\",\n                        msg\n                    ]);\n                }\n            }\n            return headers;\n        },\n        \n        encodeKey: function(util) {\n            \n            if(!util[\"protocols\"]) util[\"protocols\"] = {};\n            if(!util[\"messageIndexes\"]) util[\"messageIndexes\"] = {};\n\n            var protocol = getProtocolIndex(uri);\n            var messageIndex = getMessageIndex(protocol);\n            \n            return util.HEADER_PREFIX + protocol + \"-\" + messageIndex;\n        \n            function getProtocolIndex(protocolId) {\n                if(util[\"protocols\"][protocolId]) return util[\"protocols\"][protocolId];\n                for( var i=1 ; ; i++ ) {\n                    var value = util.applicator.getMessagePart(util.HEADER_PREFIX + \"protocol-\" + i);\n                    if(!value) {\n                        util[\"protocols\"][protocolId] = i;\n                        util.applicator.setMessagePart(util.HEADER_PREFIX + \"protocol-\" + i, protocolId);\n                        return i;\n                    } else\n                    if(value==protocolId) {\n                        util[\"protocols\"][protocolId] = i;\n                        return i;\n                    }\n                }\n            }\n\n            function getMessageIndex(protocolIndex) {\n                var value = util[\"messageIndexes\"][protocolIndex] || util.applicator.getMessagePart(util.HEADER_PREFIX + protocolIndex + \"-index\");\n                if(!value) {\n                    value = 0;\n                }\n                value++;\n                util[\"messageIndexes\"][protocolIndex] = value;\n                util.applicator.setMessagePart(util.HEADER_PREFIX + protocolIndex + \"-index\", value);\n                return value;\n            }\n        }        \n    };\n};\n\n\n\n\nfunction chunk_split(value, length) {\n    var parts = [];\n    var part;\n    while( (part = value.substr(0, length)) && part.length > 0 ) {\n        parts.push(part);\n        value = value.substr(length);\n    }\n    return parts;\n}\n\n     ",
              "globals": {
                "MESSAGE": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "JSON": {
                  "type": "assign"
                },
                "UTIL": {
                  "type": "assign"
                },
                "FUZZY_MESSAGE_LENGTH_TOLERANCE": {
                  "type": "assign"
                },
                "instances": {
                  "type": "assign"
                },
                "protocols": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                },
                "Math": {
                  "type": "reference"
                },
                "chunk_split": {
                  "type": "call"
                },
                "console": {
                  "type": "reference"
                },
                "receiver": {
                  "type": "assign"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "./message": {
                    "where": "inline"
                  },
                  "modules/json": {
                    "where": "inline"
                  },
                  "modules/util": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../wildfire-for-js/lib';",
              "code": "function(require, exports, module) {var __dirname = '../../wildfire-for-js/lib';\n\nvar MESSAGE = require(\"./message\");\nvar JSON = require(\"modules/json\");\nvar UTIL = require(\"modules/util\");\n\n// Tolerance within which messages must match the declared length\n// This is used to compensate for length differences when messages are put back together\n// because of newlines that were not encoded by sender\nconst FUZZY_MESSAGE_LENGTH_TOLERANCE = 200;\n\nvar instances = {};\nvar protocols = {};\n\nexports.factory = function(uri) {\n    if(instances[uri]) {\n        return instances[uri];\n    }\n    if(protocols[uri]) {\n        return (instances[uri] = protocols[uri](uri));\n    }\n    return null;\n}\n\n\nprotocols[\"http://registry.pinf.org/cadorn.org/wildfire/@meta/protocol/component/0.1.0\"] = \nprotocols[\"__TEST__\"] = function(uri) {\n\n    return {\n        parse: function(buffers, receivers, senders, messages, key, value) {\n\n            var parts = key.split('-');\n            // parts[0] - receiver\n            // parts[1] - sender\n            // parts[2] - message id/index\n            \n            if(parts[0]=='index') {\n                // ignore the index header\n                return;\n            } else\n            if(parts[1]=='receiver') {\n                receivers[parts[0]] = value;\n                return;\n            } else\n            if(parts[2]=='sender') {\n                senders[parts[0] + ':' + parts[1]] = value;\n                return;\n            }\n\n            // 62|...|\\\n            // @previous Did not allow for '|' in meta or data\n            // @  var m = value.match(/^(\\d*)?\\|(.*)\\|(\\\\)?$/);\n            // @  if(!m) throw new Error(\"Error parsing message: \" + value);\n            var m = [], i, j;\n            // TIP: fuzzy matching is not currently used\n            m.push((value.charAt(0)==\"~\")?true:false);\n            i = value.indexOf(\"|\");\n            // TODO: Check for \\ before | and skip to next if present\n    if (value.charAt(i-1) === \"\\\\\")\n        throw new Error(\"Found \\\\ before |! in module \" + module.id);\n            m.push(value.substring((m[0])?1:0, i));\n            if (value.charAt(value.length-1) === \"|\") {    // end in |\n                m.push(value.substring(i+1, value.length-1));\n                m.push(\"\");\n            } else if (value.charAt(value.length-1) === \"\\\\\") {    // end in |\\ (i.e. a continuation)\n                m.push(value.substring(i+1, value.length-2));\n                m.push(\"\\\\\");\n            } else throw new Error(\"Error parsing for trailing '|' in message part: \" + value);\n\n//            m[2] = m[2].replace(/\\\\{2}/g, \"\\\\\");\n\n            // length present and message matches length - complete message\n            if(m[1] && \n               (\n                 (m[0] && Math.abs(m[1]-m[2].length)<FUZZY_MESSAGE_LENGTH_TOLERANCE ) ||\n                 (!m[0] && m[1]==m[2].length)\n               ) && !m[3]) {\n                enqueueMessage(parts[2], parts[0], parts[1], m[2]);\n            } else\n            // message continuation present - message part\n            if( m[3] ) {\n                enqueueBuffer(parts[2], parts[0], parts[1], m[2], (m[1])?'first':'part', m[1], m[0]);\n            } else\n            // no length and no message continuation - last message part\n            if( !m[1] && !m[3] ) {\n                enqueueBuffer(parts[2], parts[0], parts[1], m[2], 'last', void 0, m[0]);\n            } else {\n                throw new Error('Error parsing message: ' + value);\n            }\n            \n            // this supports message parts arriving in any order as fast as possible\n            function enqueueBuffer(index, receiver, sender, value, position, length, fuzzy) {\n                if(!buffers[receiver]) {\n                    buffers[receiver] = {\"firsts\": 0, \"lasts\": 0, \"messages\": []};\n                }\n                if(position==\"first\") buffers[receiver].firsts += 1;\n                else if(position==\"last\") buffers[receiver].lasts += 1;\n                buffers[receiver].messages.push([index, value, position, length, fuzzy]);\n                \n                // if we have a mathching number of first and last parts we assume we have\n                // a complete message so we try and join it\n                if(buffers[receiver].firsts>0 && buffers[receiver].firsts==buffers[receiver].lasts) {\n                    // first we sort all messages\n                    buffers[receiver].messages.sort(\n                        function (a, b) {\n                            return a[0] - b[0];\n                        }\n                    );\n                    // find the first \"first\" part and start collecting parts\n                    // until \"last\" is found\n                    var startIndex = null;\n                    var buffer = null;\n                    fuzzy = false;\n                    for( i=0 ; i<buffers[receiver].messages.length ; i++ ) {\n                        if(buffers[receiver].messages[i][4])\n                            fuzzy = true;\n                        if(buffers[receiver].messages[i][2]==\"first\") {\n                            startIndex = i;\n                            buffer = buffers[receiver].messages[i][1];\n                        } else\n                        if(startIndex!==null) {\n                            buffer += buffers[receiver].messages[i][1];\n                            if(buffers[receiver].messages[i][2]==\"last\") {\n                                // if our buffer matches the message length\n                                // we have a complete message\n                                if(\n                                     (fuzzy && Math.abs(buffers[receiver].messages[startIndex][3]-buffer.length)<FUZZY_MESSAGE_LENGTH_TOLERANCE ) ||\n                                     (!fuzzy && buffer.length==buffers[receiver].messages[startIndex][3])\n                                ) {\n                                    // message is complete\n                                    enqueueMessage(buffers[receiver].messages[startIndex][0], receiver, sender, buffer);\n                                    buffers[receiver].messages.splice(startIndex, i-startIndex+1);\n                                    buffers[receiver].firsts -= 1;\n                                    buffers[receiver].lasts -= 1;\n                                    startIndex = null;\n                                    buffer = null;\n                                    fuzzy = false;\n                                } else {\n                                    // message is not complete\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            function enqueueMessage(index, receiver, sender, value) {\n                \n                if(!messages[receiver]) {\n                    messages[receiver] = [];\n                }\n\n                // Split \"...\\|...|...|.......\n                // by ------------^\n                var m = [ value ], i = 0;\n                while(true) {\n                    i = value.indexOf(\"|\", i);\n                    if (i===-1) throw new Error(\"Error parsing for '|' in message part: \" + value);\n                    if (value.charAt(i-1) != \"\\\\\") break;\n                }\n                m.push(value.substring(0, i));\n                m.push(value.substring(i+1, value.length));\n\n                var message = MESSAGE.Message();\n                message.setReceiver(receiver);\n                message.setSender(sender);\n                // @previous\n                // @  message.setMeta((m[1])?m[1].replace(/&#124;/g, \"|\").replace(/&#10;/g, \"\\n\"):null);\n                // @  message.setData(m[2].replace(/&#124;/g, \"|\").replace(/&#10;/g, \"\\n\"));\n                message.setMeta((m[1])?m[1].replace(/\\\\\\|/g, \"|\").replace(/&!10;/g, \"\\n\"):null);\n                message.setData(m[2].replace(/&!10;/g, \"\\\\n\"));\n                message.setProtocol('http://registry.pinf.org/cadorn.org/wildfire/@meta/protocol/component/0.1.0');\n                \n                messages[receiver].push([index, message]);\n            }\n        },\n\n        encodeMessage: function(options, message) {\n                  \n            var protocol_id = message.getProtocol();\n            if(!protocol_id) {\n                throw new Error(\"Protocol not set for message\");\n            }\n            var receiver_id = message.getReceiver();\n            if(!receiver_id) {\n                throw new Error(\"Receiver not set for message\");\n            }\n            var sender_id = message.getSender();\n            if(!sender_id) {\n                throw new Error(\"Sender not set for message\");\n            }\n\n            var headers = [];\n\n            var meta = message.getMeta();\n            if(!meta)\n                meta = \"\";\n\n            var data = message.getData() || \"\";\n            if (typeof data != \"string\")\n                throw new Error(\"Data in wildfire message is not a string!\");\n\n            data = meta.replace(/\\|/g, \"\\\\|\").replace(/\\n|\\u000a|\\\\u000a/g, \"&!10;\") + '|' + data.replace(/\\n|\\u000a|\\\\u000a/g, \"&!10;\");\n//            var data = meta.replace(/\\|/g, \"&#124;\").replace(/\\n|\\u000a/g, \"&#10;\") + '|' + message.getData().replace(/\\|/g, \"&#124;\").replace(/\\n|\\u000a/g, \"&#10;\");\n\n            var parts = chunk_split(data, options.messagePartMaxLength);\n\n            var part,\n                msg;\n\n            for( var i=0 ; i<parts.length ; i++) {\n                if (part = parts[i]) {\n                    msg = \"\";\n\n                    // escape backslashes\n                    // NOTE: This should probably be done during JSON encoding to ensure we do not double-escape\n                    //       with different encoders, but not sure how different encoders behave yet.\n//                    part = part.replace(/\\\\/g, \"\\\\\\\\\");\n\n                    if (parts.length>1) {\n                        msg = ((i==0)?data.length:'') +\n                              '|' + part + '|' +\n                              ((i<parts.length-1)?\"\\\\\":\"\");\n                    } else {\n                        msg = part.length + '|' + part + '|';\n                    }\n\n                    headers.push([\n                        protocol_id,\n                        receiver_id,\n                        sender_id,\n                        msg\n                    ]);\n                }\n            }\n            return headers;\n        },\n\n        encodeKey: function(util, receiverId, senderId) {\n            \n            if(!util[\"protocols\"]) util[\"protocols\"] = {};\n            if(!util[\"messageIndexes\"]) util[\"messageIndexes\"] = {};\n            if(!util[\"receivers\"]) util[\"receivers\"] = {};\n            if(!util[\"senders\"]) util[\"senders\"] = {};\n\n            var protocol = getProtocolIndex(uri);\n            var messageIndex = getMessageIndex(protocol);\n            var receiver = getReceiverIndex(protocol, receiverId);\n            var sender = getSenderIndex(protocol, receiver, senderId);\n            \n            return util.HEADER_PREFIX + protocol + \"-\" + receiver + \"-\" + sender + \"-\" + messageIndex;\n        \n            function getProtocolIndex(protocolId) {\n                if(util[\"protocols\"][protocolId]) return util[\"protocols\"][protocolId];\n                for( var i=1 ; ; i++ ) {\n                    var value = util.applicator.getMessagePart(util.HEADER_PREFIX + \"protocol-\" + i);\n                    if(!value) {\n                        util[\"protocols\"][protocolId] = i;\n                        util.applicator.setMessagePart(util.HEADER_PREFIX + \"protocol-\" + i, protocolId);\n                        return i;\n                    } else\n                    if(value==protocolId) {\n                        util[\"protocols\"][protocolId] = i;\n                        return i;\n                    }\n                }\n            }\n        \n            function getMessageIndex(protocolIndex) {\n                var value = util[\"messageIndexes\"][protocolIndex] || util.applicator.getMessagePart(util.HEADER_PREFIX + protocolIndex + \"-index\");\n                if(!value) {\n                    value = 0;\n                }\n                value++;\n                util[\"messageIndexes\"][protocolIndex] = value;\n                util.applicator.setMessagePart(util.HEADER_PREFIX + protocolIndex + \"-index\", value);\n                return value;\n            }\n            \n            function getReceiverIndex(protocolIndex, receiverId) {\n                if(util[\"receivers\"][protocolIndex + \":\" + receiverId]) return util[\"receivers\"][protocolIndex + \":\" + receiverId];\n                for( var i=1 ; ; i++ ) {\n                    var value = util.applicator.getMessagePart(util.HEADER_PREFIX + protocolIndex + \"-\" + i + \"-receiver\");\n                    if(!value) {\n                        util[\"receivers\"][protocolIndex + \":\" + receiverId] = i;\n                        util.applicator.setMessagePart(util.HEADER_PREFIX + protocolIndex + \"-\" + i + \"-receiver\", receiverId);\n                        return i;\n                    } else\n                    if(value==receiverId) {\n                        util[\"receivers\"][protocolIndex + \":\" + receiverId] = i;\n                        return i;\n                    }\n                }\n            }\n            \n            function getSenderIndex(protocolIndex, receiverIndex, senderId) {\n                if(util[\"senders\"][protocolIndex + \":\" + receiverIndex + \":\" + senderId]) return util[\"senders\"][protocolIndex + \":\" + receiverIndex + \":\" + senderId];\n                for( var i=1 ; ; i++ ) {\n                    var value = util.applicator.getMessagePart(util.HEADER_PREFIX + protocolIndex + \"-\" + receiverIndex + \"-\" + i + \"-sender\");\n                    if(!value) {\n                        util[\"senders\"][protocolIndex + \":\" + receiverIndex + \":\" + senderId] = i;\n                        util.applicator.setMessagePart(util.HEADER_PREFIX + protocolIndex + \"-\" + receiverIndex + \"-\" + i + \"-sender\", senderId);\n                        return i;\n                    } else\n                    if(value==senderId) {\n                        util[\"senders\"][protocolIndex + \":\" + receiverIndex + \":\" + senderId] = i;\n                        return i;\n                    }\n                }\n            }\n        }        \n    };\n};\n\n\n// @see http://registry.pinf.org/cadorn.org/wildfire/@meta/protocol/json-stream/0.2.0\nprotocols[\"http://meta.wildfirehq.org/Protocol/JsonStream/0.2\"] = function(uri) {\n\n    var groupStack = [];\n    var groupIndex = 0;\n\n    return {\n        parse: function(buffers, receivers, senders, messages, key, value) {\n\n            var parts = key.split('-');\n            // parts[0] - receiver\n            // parts[1] - sender\n            // parts[2] - message id/index\n\n            if(parts[0]=='index') {\n                // ignore the index header\n                return;\n            } else\n            if(parts[0]=='structure') {\n                if(value==\"http://meta.firephp.org/Wildfire/Structure/FirePHP/FirebugConsole/0.1\") {\n                    value = \"http://registry.pinf.org/cadorn.org/insight/@meta/receiver/console/page/0\";\n                } else\n                if(value==\"http://meta.firephp.org/Wildfire/Structure/FirePHP/Dump/0.1\") {\n                    value = \"http://registry.pinf.org/cadorn.org/insight/@meta/receiver/console/page/0\";\n//                    value = \"http://pinf.org/cadorn.org/fireconsole/meta/Receiver/NetServer/0.1\"\n                }\n                receivers[parts[1]] = value;\n                \n                // NOTE: The old protocol specifies senders independent from receivers so we need to add senders for every receiver if senders are already known\n                if(UTIL.len(senders)>0) {\n                    var newSenders = {};\n                    for( var senderKey in senders ) {\n                        var senderParts = senderKey.split(\":\");\n                        newSenders[parts[1] + \":\" + senderParts[1]] = senders[senderKey];\n                    }\n                    UTIL.complete(senders, newSenders);\n                }\n                return;\n            } else\n            if(parts[0]=='plugin') {\n                \n                // NOTE: The old protocol specifies senders independent from receivers so we need to add senders for every receiver\n                //       If no receiver is known yet we assume a receiver key of \"1\"\n                if(UTIL.len(receivers)==0) {\n                    senders[\"1\" + \":\" + parts[1]] = value;\n                } else {\n                    for( var receiverKey in receivers ) {\n                        senders[receiverKey + \":\" + parts[1]] = value;\n                    }\n                }\n                return;\n            }\n            \n            // 62|...|\\\n            var m = value.match(/^(\\d*)?\\|(.*)\\|(\\\\)?$/);\n            if(!m) {\n                throw new Error(\"Error parsing message: \" + value);\n            }\n\n            // length present and message matches length - complete message\n            if(m[1] && m[1]==m[2].length && !m[3]) {\n                enqueueMessage(parts[2], parts[0], parts[1], m[2]);\n            } else\n            // message continuation present - message part\n            if( m[3] ) {\n                enqueueBuffer(parts[2], parts[0], parts[1], m[2], (m[1])?'first':'part', m[1]);\n            } else\n            // no length and no message continuation - last message part\n            if( !m[1] && !m[3] ) {\n                enqueueBuffer(parts[2], parts[0], parts[1], m[2], 'last');\n            } else {\n                throw new Error('Error parsing message: ' + value);\n            }\n            \n            // this supports message parts arriving in any order as fast as possible\n            function enqueueBuffer(index, receiver, sender, value, position, length) {\n                if(!buffers[receiver]) {\n                    buffers[receiver] = {\"firsts\": 0, \"lasts\": 0, \"messages\": []};\n                }\n                if(position==\"first\") buffers[receiver].firsts += 1;\n                else if(position==\"last\") buffers[receiver].lasts += 1;\n                buffers[receiver].messages.push([index, value, position, length]);\n                \n                // if we have a mathching number of first and last parts we assume we have\n                // a complete message so we try and join it\n                if(buffers[receiver].firsts>0 && buffers[receiver].firsts==buffers[receiver].lasts) {\n                    // first we sort all messages\n                    buffers[receiver].messages.sort(\n                        function (a, b) {\n                            return a[0] - b[0];\n                        }\n                    );\n                    // find the first \"first\" part and start collecting parts\n                    // until \"last\" is found\n                    var startIndex = null;\n                    var buffer = null;\n                    for( i=0 ; i<buffers[receiver].messages.length ; i++ ) {\n                        if(buffers[receiver].messages[i][2]==\"first\") {\n                            startIndex = i;\n                            buffer = buffers[receiver].messages[i][1];\n                        } else\n                        if(startIndex!==null) {\n                            buffer += buffers[receiver].messages[i][1];\n                            if(buffers[receiver].messages[i][2]==\"last\") {\n                                // if our buffer matches the message length\n                                // we have a complete message\n                                if(buffer.length==buffers[receiver].messages[startIndex][3]) {\n                                    // message is complete\n                                    enqueueMessage(buffers[receiver].messages[startIndex][0], receiver, sender, buffer);\n                                    buffers[receiver].messages.splice(startIndex, i-startIndex);\n                                    buffers[receiver].firsts -= 1;\n                                    buffers[receiver].lasts -= 1;\n                                    if(buffers[receiver].messages.length==0) delete buffers[receiver];\n                                    startIndex = null;\n                                    buffer = null;\n                                } else {\n                                    // message is not complete\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            function enqueueMessage(index, receiver, sender, value) {\n\n                if(!messages[receiver]) {\n                    messages[receiver] = [];\n                }\n\n                \n                var meta = {\n                        \"msg.preprocessor\": \"FirePHPCoreCompatibility\",\n                        \"target\": \"console\",\n                        \"lang.id\": \"registry.pinf.org/cadorn.org/github/renderers/packages/php/master\"\n                    },\n                    data,\n                    parts;\n\n                try {   \n                    parts = JSON.decode(value);\n                } catch(e) {\n                    console.error(\"Error parsing JsonStream message\", e, value);\n                    throw e;\n                }\n\n                // console\n                if(UTIL.isArrayLike(parts) && parts.length==2 &&\n                    (typeof parts[0] == \"object\") && UTIL.has(parts[0], \"Type\")) {\n                    \n                    data = parts[1];\n\n                    for( var name in parts[0] ) {\n                        if(name==\"Type\") {\n\n                            if(groupStack.length>0) {\n                                meta[\"group\"] = groupStack[groupStack.length-1];\n                            }\n\n                            switch(parts[0][name]) {\n                                case \"LOG\":\n                                    meta[\"priority\"] = \"log\";\n                                    break;\n                                case \"INFO\":\n                                    meta[\"priority\"] = \"info\";\n                                    break;\n                                case \"WARN\":\n                                    meta[\"priority\"] = \"warn\";\n                                    break;\n                                case \"ERROR\":\n                                    meta[\"priority\"] = \"error\";\n                                    break;\n                                case \"EXCEPTION\":\n                                    var originalData = data;\n                                    data = {\n                                        \"__className\": originalData.Class,\n                                        \"__isException\": true,\n                                        \"protected:message\": originalData.Message,\n                                        \"protected:file\": originalData.File,\n                                        \"protected:line\": originalData.Line,\n                                        \"private:trace\": originalData.Trace\n                                    }\n                                    if (data[\"private:trace\"] && data[\"private:trace\"].length > 0) {\n                                        if (data[\"private:trace\"][0].file != originalData.File || data[\"private:trace\"][0].line != originalData.Line) {\n                                            data[\"private:trace\"].unshift({\n                                               \"class\": originalData.Class || \"\",\n                                                \"type\": originalData.Type || \"\",\n                                                \"function\": originalData.Function || \"\",\n                                                \"file\": originalData.File || \"\",\n                                                \"line\": originalData.Line || \"\",\n                                                \"args\": originalData.Args || \"\"\n                                            });\n                                        }\n                                    }\n                                    meta[\"priority\"] = \"error\";\n                                    break;\n                                case \"TRACE\":\n                                    meta[\"renderer\"] = \"http://registry.pinf.org/cadorn.org/renderers/packages/insight/0:structures/trace\";\n                                    var trace = [\n                                        {\n                                            \"class\": data.Class || \"\",\n                                            \"type\": data.Type || \"\",\n                                            \"function\": data.Function || \"\",\n                                            \"file\": data.File || \"\",\n                                            \"line\": data.Line || \"\",\n                                            \"args\": data.Args || \"\"\n                                        }\n                                    ];\n                                    if(data.Trace) {\n                                        trace = trace.concat(data.Trace);\n                                    }\n                                    data = {\n                                        \"title\": data.Message,\n                                        \"trace\": trace\n                                    };\n                                    break;\n                                case \"TABLE\":\n                                    meta[\"renderer\"] = \"http://registry.pinf.org/cadorn.org/renderers/packages/insight/0:structures/table\";\n                                    data = {\"data\": data};\n                                    if(data.data.length==2 && typeof data.data[0] == \"string\") {\n                                        data.header = data.data[1].splice(0,1)[0];\n                                        data.title = data.data[0];\n                                        data.data = data.data[1];\n                                    } else {\n                                        data.header = data.data.splice(0,1)[0];\n                                    }\n                                    break;\n                                case \"GROUP_START\":\n                                    groupIndex++;\n                                    meta[\"group.start\"] = true;\n                                    meta[\"group\"] = \"group-\" + groupIndex;\n                                    groupStack.push(\"group-\" + groupIndex);\n                                    break;\n                                case \"GROUP_END\":\n                                    meta[\"group.end\"] = true;\n                                    if(groupStack.length>0) {\n                                        groupStack.pop();\n                                    }\n                                    break;\n                                default:\n                                    throw new Error(\"Log type '\" + parts[0][name] + \"' not implemented\");\n                                    break;\n                            }\n                        } else\n                        if(name==\"Label\") {\n                            meta[\"label\"] = parts[0][name];\n                        } else\n                        if(name==\"File\") {\n                            meta[\"file\"] = parts[0][name];\n                        } else\n                        if(name==\"Line\") {\n                            meta[\"line\"] = parts[0][name];\n                        } else\n                        if(name==\"Collapsed\") {\n                            meta[\".collapsed\"] = (parts[0][name]=='true')?true:false;\n//                        } else\n//                        if(name==\"Color\") {\n//                            meta[\"fc.group.color\"] = parts[0][name];\n                        }\n                    }                    \n                } else\n                // dump\n                {\n                    data = parts;\n                    meta[\"label\"] = \"Dump\";\n                }\n                \n                if(meta[\"renderer\"] == \"http://registry.pinf.org/cadorn.org/renderers/packages/insight/0:structures/table\") {\n                    if(meta[\"label\"]) {\n                        data.title = meta[\"label\"];\n                        delete meta[\"label\"];\n                    }\n                } else\n                if(meta[\"group.start\"]) {\n                    meta[\"group.title\"] = meta[\"label\"];\n                    delete meta[\"label\"];\n                    if(typeof meta[\".collapsed\"] == \"undefined\" || !meta[\".collapsed\"]) {\n                        meta[\"group.expand\"] = meta[\"group\"];\n                    }\n                    delete meta[\".collapsed\"];\n                }\n\n                var message = MESSAGE.Message();\n                message.setReceiver(receiver);\n                message.setSender(sender);\n\n                try {   \n                    message.setMeta(JSON.encode(meta));\n                } catch(e) {\n                    console.error(\"Error encoding object (JsonStream compatibility)\", e, meta);\n                    throw e;\n                }\n\n                try {   \n                    message.setData(JSON.encode(data));\n                } catch(e) {\n                    console.error(\"Error encoding object (JsonStream compatibility)\", e, data);\n                    throw e;\n                }\n\n                messages[receiver].push([index, message]);\n            }\n        },\n        \n        encodeMessage: function(options, message) {\n            throw new Error(\"Not implemented!\");\n        },\n        \n        encodeKey: function(util, receiverId, senderId) {\n            throw new Error(\"Not implemented!\");\n        }        \n    };\n};\n\n\n\nprotocols[\"http://registry.pinf.org/cadorn.org/wildfire/@meta/protocol/announce/0.1.0\"] = function(uri) {\n\n    return {\n        parse: function(buffers, receivers, senders, messages, key, value) {\n\n            var parts = key.split('-');\n            // parts[0] - message id/index\n\n            if(parts[0]=='index') {\n                // ignore the index header\n                return;\n            }\n                        \n            // 62|...|\\\n            var m = value.match(/^(\\d*)?\\|(.*)\\|(\\\\)?$/);\n            if(!m) {\n                throw new Error(\"Error parsing message: \" + value);\n            }\n    \n            // length present and message matches length - complete message\n            if(m[1] && m[1]==m[2].length && !m[3]) {\n                enqueueMessage(key, m[2]);\n            } else\n            // message continuation present - message part\n            if( m[3] ) {\n                enqueueBuffer(key, m[2], (m[1])?'first':'part', m[1]);\n            } else\n            // no length and no message continuation - last message part\n            if( !m[1] && !m[3] ) {\n                enqueueBuffer(key, m[2], 'last');\n            } else {\n                throw new Error('Error parsing message: ' + value);\n            }\n            \n            // this supports message parts arriving in any order as fast as possible\n            function enqueueBuffer(index, value, position, length) {\n                \n                receiver = \"*\";\n                if(!buffers[receiver]) {\n                    buffers[receiver] = {\"firsts\": 0, \"lasts\": 0, \"messages\": []};\n                }\n                if(position==\"first\") buffers[receiver].firsts += 1;\n                else if(position==\"last\") buffers[receiver].lasts += 1;\n                buffers[receiver].messages.push([index, value, position, length]);\n                \n                // if we have a mathching number of first and last parts we assume we have\n                // a complete message so we try and join it\n                if(buffers[receiver].firsts>0 && buffers[receiver].firsts==buffers[receiver].lasts) {\n                    // first we sort all messages\n                    buffers[receiver].messages.sort(\n                        function (a, b) {\n                            return a[0] - b[0];\n                        }\n                    );\n                    // find the first \"first\" part and start collecting parts\n                    // until \"last\" is found\n                    var startIndex = null;\n                    var buffer = null;\n                    for( i=0 ; i<buffers[receiver].messages.length ; i++ ) {\n                        if(buffers[receiver].messages[i][2]==\"first\") {\n                            startIndex = i;\n                            buffer = buffers[receiver].messages[i][1];\n                        } else\n                        if(startIndex!==null) {\n                            buffer += buffers[receiver].messages[i][1];\n                            if(buffers[receiver].messages[i][2]==\"last\") {\n                                // if our buffer matches the message length\n                                // we have a complete message\n                                if(buffer.length==buffers[receiver].messages[startIndex][3]) {\n                                    // message is complete\n                                    enqueueMessage(buffers[receiver].messages[startIndex][0], buffer);\n                                    buffers[receiver].messages.splice(startIndex, i-startIndex);\n                                    buffers[receiver].firsts -= 1;\n                                    buffers[receiver].lasts -= 1;\n                                    if(buffers[receiver].messages.length==0) delete buffers[receiver];\n                                    startIndex = null;\n                                    buffer = null;\n                                } else {\n                                    // message is not complete\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            \n            function enqueueMessage(index, value) {\n                \n                receiver = \"*\";\n                \n                if(!messages[receiver]) {\n                    messages[receiver] = [];\n                }\n                \n                var m = /^(.*?[^\\\\])?\\|(.*)$/.exec(value);\n\n                var message = MESSAGE.Message();\n                message.setReceiver(receiver);\n                message.setMeta(m[1] || null);\n                message.setData(m[2]);\n                \n                messages[receiver].push([index, message]);\n            }\n        },\n        \n        encodeMessage: function(options, message) {\n                  \n            var protocol_id = message.getProtocol();\n            if(!protocol_id) {\n                throw new Error(\"Protocol not set for message\");\n            }\n            \n            var headers = [];\n            \n            var meta = message.getMeta() || \"\";\n        \n            var data = meta.replace(/\\|/g, \"\\\\|\") + '|' + message.getData().replace(/\\|/g, \"\\\\|\");\n        \n            var parts = chunk_split(data, options.messagePartMaxLength);\n        \n            var part,\n                msg;\n            for( var i=0 ; i<parts.length ; i++) {\n                if (part = parts[i]) {\n        \n                    msg = \"\";\n\n                    // escape backslashes\n                    // NOTE: This should probably be done during JSON encoding to ensure we do not double-escape\n                    //       with different encoders, but not sure how different encoders behave yet.\n                    part = part.replace(/\\\\/g, \"\\\\\\\\\");\n        \n                    if (parts.length>2) {\n                        msg = ((i==0)?data.length:'') +\n                              '|' + part + '|' +\n                              ((i<parts.length-2)?\"\\\\\":\"\");\n                    } else {\n                        msg = part.length + '|' + part + '|';\n                    }\n\n                    headers.push([\n                        protocol_id,\n                        \"\",\n                        \"\",\n                        msg\n                    ]);\n                }\n            }\n            return headers;\n        },\n        \n        encodeKey: function(util) {\n            \n            if(!util[\"protocols\"]) util[\"protocols\"] = {};\n            if(!util[\"messageIndexes\"]) util[\"messageIndexes\"] = {};\n\n            var protocol = getProtocolIndex(uri);\n            var messageIndex = getMessageIndex(protocol);\n            \n            return util.HEADER_PREFIX + protocol + \"-\" + messageIndex;\n        \n            function getProtocolIndex(protocolId) {\n                if(util[\"protocols\"][protocolId]) return util[\"protocols\"][protocolId];\n                for( var i=1 ; ; i++ ) {\n                    var value = util.applicator.getMessagePart(util.HEADER_PREFIX + \"protocol-\" + i);\n                    if(!value) {\n                        util[\"protocols\"][protocolId] = i;\n                        util.applicator.setMessagePart(util.HEADER_PREFIX + \"protocol-\" + i, protocolId);\n                        return i;\n                    } else\n                    if(value==protocolId) {\n                        util[\"protocols\"][protocolId] = i;\n                        return i;\n                    }\n                }\n            }\n\n            function getMessageIndex(protocolIndex) {\n                var value = util[\"messageIndexes\"][protocolIndex] || util.applicator.getMessagePart(util.HEADER_PREFIX + protocolIndex + \"-index\");\n                if(!value) {\n                    value = 0;\n                }\n                value++;\n                util[\"messageIndexes\"][protocolIndex] = value;\n                util.applicator.setMessagePart(util.HEADER_PREFIX + protocolIndex + \"-index\", value);\n                return value;\n            }\n        }        \n    };\n};\n\n\n\n\nfunction chunk_split(value, length) {\n    var parts = [];\n    var part;\n    while( (part = value.substr(0, length)) && part.length > 0 ) {\n        parts.push(part);\n        value = value.substr(length);\n    }\n    return parts;\n}\n\n     \n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "./message": {
                  "where": "inline"
                },
                "modules/json": {
                  "where": "inline"
                },
                "modules/util": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/transport.js": {
            "requireId": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/transport",
            "memoizeId": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/transport.js",
            "descriptor": {
              "filename": "transport.js",
              "filepath": "../../wildfire-for-js/lib/transport.js",
              "mtime": 1420404603,
              "code": "\n\nconst RECEIVER_ID = \"http://registry.pinf.org/cadorn.org/wildfire/@meta/receiver/transport/0\";\n\nvar MD5 = require(\"modules/md5\");\nvar STRUCT = require(\"modules/struct\");\nvar JSON = require(\"modules/json\");\n//var HTTP = require(\"http\");\nvar MESSAGE = require(\"./message\");\nvar RECEIVER = require(\"./receiver\");\n\n\nvar Transport = exports.Transport = function(options) {\n    if (!(this instanceof exports.Transport))\n        return new exports.Transport(options);\n    this.options = options;\n}\n\nTransport.prototype.newApplicator = function(applicator) {\n    return Applicator(this, applicator);\n}\n\nTransport.prototype.serviceDataRequest = function(key) {\n    return require(\"./wildfire\").getBinding().formatResponse({\n        \"contentType\": \"text/plain\"\n    }, this.getData(key));\n}\n\nTransport.prototype.getUrl = function(key) {\n    return this.options.getUrl(key);\n}\n\nTransport.prototype.setData = function(key, value) {\n    return this.options.setData(key, value);\n}\n\nTransport.prototype.getData = function(key) {\n    return this.options.getData(key);\n}\n\n\nvar Applicator = function(transport, applicator) {\n    if (!(this instanceof Applicator))\n        return new Applicator(transport, applicator);\n    this.transport = transport;\n    this.applicator = applicator;\n    this.buffer = {};\n}\n\nApplicator.prototype.setMessagePart = function(key, value) {\n    this.buffer[key] = value;\n}\n\nApplicator.prototype.getMessagePart = function(key) {\n    if(!this.buffer[key]) return null;\n    return this.buffer[key];\n}\n\nApplicator.prototype.flush = function(channel) {\n\n    var data = [];\n    var seed = [];\n\n    // combine all message parts into one text block\n    for( var key in this.buffer ) {\n        data.push(key + \": \" + this.buffer[key]);\n        if(data.length % 3 == 0 && seed.length < 5) seed.push(this.buffer[key]);\n    }\n    \n    // generate a key for the text block\n    var key = STRUCT.bin2hex(MD5.hash(Math.random() + \":\" + module.path + \":\" + seed.join(\"\")));\n\n    // store the text block for future access\n    this.transport.setData(key, data.join(\"\\n\"));\n    \n    // create a pointer message to be sent instead of the original messages\n    var message = MESSAGE.Message();\n    message.setProtocol('http://registry.pinf.org/cadorn.org/wildfire/@meta/protocol/component/0');\n    message.setSender('http://pinf.org/cadorn.org/wildfire/packages/lib-js/lib/transport.js');\n    message.setReceiver(RECEIVER_ID);\n    message.setData(JSON.encode({\"url\": this.transport.getUrl(key)}));\n    \n    // send the pointer message through the channel bypassing all transports and local receivers\n    channel.enqueueOutgoing(message, true);\n    return channel.flush(this.applicator, true);\n}\n\nexports.newReceiver = function(channel) {\n    var receiver = RECEIVER.Receiver();\n    receiver.setId(RECEIVER_ID);\n    receiver.addListener({\n        onMessageReceived: function(context, message) {\n            try {\n                context.transporter = RECEIVER_ID;\n\nthrow new Error(\"OOPS!!!\");\n/*\n                // make a sync secondary request\n                var data = HTTP.read(JSON.decode(message.getData()).url);\n                if(data) {\n                    channel.parseReceived(data, context, {\n                        \"skipChannelOpen\": true,\n                        \"skipChannelClose\": true\n                    });\n                }\n*/\n            } catch(e) {\n                console.warn(e);\n            }\n        }\n    });\n    return receiver;\n}\n\n",
              "globals": {
                "RECEIVER_ID": {
                  "type": "assign"
                },
                "MD5": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "STRUCT": {
                  "type": "assign"
                },
                "JSON": {
                  "type": "assign"
                },
                "MESSAGE": {
                  "type": "assign"
                },
                "RECEIVER": {
                  "type": "assign"
                },
                "Transport": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                },
                "Applicator": {
                  "type": "call"
                },
                "Math": {
                  "type": "reference"
                },
                "module": {
                  "type": "reference"
                },
                "console": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "modules/md5": {
                    "where": "inline"
                  },
                  "modules/struct": {
                    "where": "inline"
                  },
                  "modules/json": {
                    "where": "inline"
                  },
                  "./message": {
                    "where": "inline"
                  },
                  "./receiver": {
                    "where": "inline"
                  },
                  "./wildfire": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../wildfire-for-js/lib';",
              "code": "function(require, exports, module) {var __dirname = '../../wildfire-for-js/lib';\n\n\nconst RECEIVER_ID = \"http://registry.pinf.org/cadorn.org/wildfire/@meta/receiver/transport/0\";\n\nvar MD5 = require(\"modules/md5\");\nvar STRUCT = require(\"modules/struct\");\nvar JSON = require(\"modules/json\");\n//var HTTP = require(\"http\");\nvar MESSAGE = require(\"./message\");\nvar RECEIVER = require(\"./receiver\");\n\n\nvar Transport = exports.Transport = function(options) {\n    if (!(this instanceof exports.Transport))\n        return new exports.Transport(options);\n    this.options = options;\n}\n\nTransport.prototype.newApplicator = function(applicator) {\n    return Applicator(this, applicator);\n}\n\nTransport.prototype.serviceDataRequest = function(key) {\n    return require(\"./wildfire\").getBinding().formatResponse({\n        \"contentType\": \"text/plain\"\n    }, this.getData(key));\n}\n\nTransport.prototype.getUrl = function(key) {\n    return this.options.getUrl(key);\n}\n\nTransport.prototype.setData = function(key, value) {\n    return this.options.setData(key, value);\n}\n\nTransport.prototype.getData = function(key) {\n    return this.options.getData(key);\n}\n\n\nvar Applicator = function(transport, applicator) {\n    if (!(this instanceof Applicator))\n        return new Applicator(transport, applicator);\n    this.transport = transport;\n    this.applicator = applicator;\n    this.buffer = {};\n}\n\nApplicator.prototype.setMessagePart = function(key, value) {\n    this.buffer[key] = value;\n}\n\nApplicator.prototype.getMessagePart = function(key) {\n    if(!this.buffer[key]) return null;\n    return this.buffer[key];\n}\n\nApplicator.prototype.flush = function(channel) {\n\n    var data = [];\n    var seed = [];\n\n    // combine all message parts into one text block\n    for( var key in this.buffer ) {\n        data.push(key + \": \" + this.buffer[key]);\n        if(data.length % 3 == 0 && seed.length < 5) seed.push(this.buffer[key]);\n    }\n    \n    // generate a key for the text block\n    var key = STRUCT.bin2hex(MD5.hash(Math.random() + \":\" + module.path + \":\" + seed.join(\"\")));\n\n    // store the text block for future access\n    this.transport.setData(key, data.join(\"\\n\"));\n    \n    // create a pointer message to be sent instead of the original messages\n    var message = MESSAGE.Message();\n    message.setProtocol('http://registry.pinf.org/cadorn.org/wildfire/@meta/protocol/component/0');\n    message.setSender('http://pinf.org/cadorn.org/wildfire/packages/lib-js/lib/transport.js');\n    message.setReceiver(RECEIVER_ID);\n    message.setData(JSON.encode({\"url\": this.transport.getUrl(key)}));\n    \n    // send the pointer message through the channel bypassing all transports and local receivers\n    channel.enqueueOutgoing(message, true);\n    return channel.flush(this.applicator, true);\n}\n\nexports.newReceiver = function(channel) {\n    var receiver = RECEIVER.Receiver();\n    receiver.setId(RECEIVER_ID);\n    receiver.addListener({\n        onMessageReceived: function(context, message) {\n            try {\n                context.transporter = RECEIVER_ID;\n\nthrow new Error(\"OOPS!!!\");\n/*\n                // make a sync secondary request\n                var data = HTTP.read(JSON.decode(message.getData()).url);\n                if(data) {\n                    channel.parseReceived(data, context, {\n                        \"skipChannelOpen\": true,\n                        \"skipChannelClose\": true\n                    });\n                }\n*/\n            } catch(e) {\n                console.warn(e);\n            }\n        }\n    });\n    return receiver;\n}\n\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "modules/md5": {
                  "where": "inline"
                },
                "modules/struct": {
                  "where": "inline"
                },
                "modules/json": {
                  "where": "inline"
                },
                "./message": {
                  "where": "inline"
                },
                "./receiver": {
                  "where": "inline"
                },
                "./wildfire": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/channel/http-client.js": {
            "requireId": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/channel/http-client",
            "memoizeId": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/channel/http-client.js",
            "descriptor": {
              "filename": "http-client.js",
              "filepath": "../../wildfire-for-js/lib/channel/http-client.js",
              "mtime": 1375341064,
              "code": "\nvar CHANNEL = require(\"../channel\"),\n    UTIL = require(\"modules/util\"),\n    HTTP_CLIENT = require(\"modules/http-client\"),\n    JSON = require(\"modules/json\");\n\n// TODO: Make this configurable\nvar HOST = \"localhost\";\nvar PORT = 8099;\n\nconst HEADER_PREFIX = 'x-wf-';\n\nvar HttpClientChannel = exports.HttpClientChannel = function () {\n    if (!(this instanceof exports.HttpClientChannel))\n        return new exports.HttpClientChannel();\n\n    this.__construct();\n\n    this.HEADER_PREFIX = HEADER_PREFIX;\n}\n\nHttpClientChannel.prototype = CHANNEL.Channel();\n\nHttpClientChannel.prototype.flush = function(applicator, bypassTransport)\n{\n    var self = this;\n    if (typeof applicator === \"undefined\")\n    {\n        var parts = {};\n\n        applicator = {\n            setMessagePart: function(key, value)\n            {\n                parts[key] = value;\n            },\n            getMessagePart: function(key)\n            {\n                if (typeof parts[key] === \"undefined\")\n                    return null;\n                return parts[key];\n            },\n            flush: function(clannel)\n            {\n                if (UTIL.len(parts)==0)\n                    return false;\n\n                var data = [];\n                UTIL.forEach(parts, function(part)\n                {\n                    data.push(part[0] + \": \" + part[1]);\n                });\n                data = data.join(\"\\n\");\n\n                HTTP_CLIENT.request({\n                    host: HOST,\n                    port: PORT,\n                    path: \"/wildfire-server\",\n                    method: \"POST\",\n                    headers: {\n                        \"content-type\": \"application/x-www-form-urlencoded\",\n                        \"content-length\": data.length,\n                        \"connection\": \"close\"\n                    },\n                    data: data\n                }, function(response)\n                {\n                    if (response.status == 200)\n                    {\n                        try {\n                            var data = JSON.decode(response.data);\n                            if (data.success === true)\n                            {\n                                // success!!\n                            }\n                            else\n                                console.error(\"ERROR Got error from wildfire server: \" + data.error);                    \n                        } catch(e) {\n                            console.error(\"ERROR parsing JSON response from wildfire server (error: \" + e + \"): \" + response.data);                    \n                        }\n                    }\n                    else\n                        console.error(\"ERROR from wildfire server (status: \" + response.status + \"): \" + response.data);                    \n                }, function(e)\n                {\n                    if (!/ECONNREFUSED/.test(e))\n                        console.error(\"ERROR sending message to wildfire server: \" + e);                    \n//                    else\n//                        module.print(\"\\0red([Wildfire: Not Connected]\\0)\\n\");                    \n                });\n                return true;\n            }\n        };\n    }\n    return self._flush(applicator);\n}\n",
              "globals": {
                "CHANNEL": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "UTIL": {
                  "type": "assign"
                },
                "HTTP_CLIENT": {
                  "type": "assign"
                },
                "JSON": {
                  "type": "assign"
                },
                "HOST": {
                  "type": "assign"
                },
                "PORT": {
                  "type": "assign"
                },
                "HEADER_PREFIX": {
                  "type": "assign"
                },
                "HttpClientChannel": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                },
                "console": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "../channel": {
                    "where": "inline"
                  },
                  "modules/util": {
                    "where": "inline"
                  },
                  "modules/http-client": {
                    "where": "inline"
                  },
                  "modules/json": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../wildfire-for-js/lib/channel';",
              "code": "function(require, exports, module) {var __dirname = '../../wildfire-for-js/lib/channel';\n\nvar CHANNEL = require(\"../channel\"),\n    UTIL = require(\"modules/util\"),\n    HTTP_CLIENT = require(\"modules/http-client\"),\n    JSON = require(\"modules/json\");\n\n// TODO: Make this configurable\nvar HOST = \"localhost\";\nvar PORT = 8099;\n\nconst HEADER_PREFIX = 'x-wf-';\n\nvar HttpClientChannel = exports.HttpClientChannel = function () {\n    if (!(this instanceof exports.HttpClientChannel))\n        return new exports.HttpClientChannel();\n\n    this.__construct();\n\n    this.HEADER_PREFIX = HEADER_PREFIX;\n}\n\nHttpClientChannel.prototype = CHANNEL.Channel();\n\nHttpClientChannel.prototype.flush = function(applicator, bypassTransport)\n{\n    var self = this;\n    if (typeof applicator === \"undefined\")\n    {\n        var parts = {};\n\n        applicator = {\n            setMessagePart: function(key, value)\n            {\n                parts[key] = value;\n            },\n            getMessagePart: function(key)\n            {\n                if (typeof parts[key] === \"undefined\")\n                    return null;\n                return parts[key];\n            },\n            flush: function(clannel)\n            {\n                if (UTIL.len(parts)==0)\n                    return false;\n\n                var data = [];\n                UTIL.forEach(parts, function(part)\n                {\n                    data.push(part[0] + \": \" + part[1]);\n                });\n                data = data.join(\"\\n\");\n\n                HTTP_CLIENT.request({\n                    host: HOST,\n                    port: PORT,\n                    path: \"/wildfire-server\",\n                    method: \"POST\",\n                    headers: {\n                        \"content-type\": \"application/x-www-form-urlencoded\",\n                        \"content-length\": data.length,\n                        \"connection\": \"close\"\n                    },\n                    data: data\n                }, function(response)\n                {\n                    if (response.status == 200)\n                    {\n                        try {\n                            var data = JSON.decode(response.data);\n                            if (data.success === true)\n                            {\n                                // success!!\n                            }\n                            else\n                                console.error(\"ERROR Got error from wildfire server: \" + data.error);                    \n                        } catch(e) {\n                            console.error(\"ERROR parsing JSON response from wildfire server (error: \" + e + \"): \" + response.data);                    \n                        }\n                    }\n                    else\n                        console.error(\"ERROR from wildfire server (status: \" + response.status + \"): \" + response.data);                    \n                }, function(e)\n                {\n                    if (!/ECONNREFUSED/.test(e))\n                        console.error(\"ERROR sending message to wildfire server: \" + e);                    \n//                    else\n//                        module.print(\"\\0red([Wildfire: Not Connected]\\0)\\n\");                    \n                });\n                return true;\n            }\n        };\n    }\n    return self._flush(applicator);\n}\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "../channel": {
                  "where": "inline"
                },
                "modules/util": {
                  "where": "inline"
                },
                "modules/http-client": {
                  "where": "inline"
                },
                "modules/json": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/http-client.js": {
            "requireId": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/http-client",
            "memoizeId": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/http-client.js",
            "descriptor": {
              "filename": "http-client.js",
              "filepath": "../../pinf-bridgelib-js/lib/http-client.js",
              "mtime": 1420273994,
              "code": "\n//var ENGINE = require(\"./platform/{platform}/http-client\");\nvar ENGINE = require(\"./platform/browser/http-client\");\nvar URI = require(\"./uri\");\n\n/**\n * @param options object\n *   host: 'www.google.com'\n *   port: 80\n *   path: '/upload'\n *   method: 'POST'\n *   headers: {}\n *   data: request (post) data\n *   responseEncoding: 'utf8'\n */\nexports.request = function(options, successCallback, errorCallback)\n{\n    if (typeof options.url !== \"undefined\")\n    {\n        if (typeof options.host !== \"undefined\")\n            throw new Error(\"Cannot set 'host' when 'url' is set!\");\n        if (typeof options.path !== \"undefined\")\n            throw new Error(\"Cannot set 'path' when 'url' is set!\");\n        if (typeof options.port !== \"undefined\")\n            throw new Error(\"Cannot set 'port' when 'url' is set!\");\n\n        var uri = URI.URI(options.url);\n\n        options.host = uri.authority;\n        options.port = uri.port || ((uri.scheme === \"https\")?443:80);\n        options.path = uri.path || \"/\";\n        \n        if (uri.query) {\n        \toptions.path += \"?\" + uri.query;\n        }\n    }\n    options.method = options.method || \"GET\";\n    options.port = options.port || 80;\n    options.path = options.path || \"/\";\n    options.url = options.url || (\"http://\" + options.host + \":\" + options.port + options.path);\n    options.headers = options.headers || { \"Host\": options.host };\n\n    options.headers[\"Host\"] = options.headers[\"Host\"] || options.host;\n    options.headers[\"User-Agent\"] = options.headers[\"User-Agent\"] || \"pinf/modules-js/http-client\";\n\n    return ENGINE.request(options, successCallback, errorCallback);\n}\n",
              "globals": {
                "ENGINE": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "URI": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "./platform/browser/http-client": {
                    "where": "inline"
                  },
                  "./uri": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../pinf-bridgelib-js/lib';",
              "code": "function(require, exports, module) {var __dirname = '../../pinf-bridgelib-js/lib';\n\n//var ENGINE = require(\"./platform/{platform}/http-client\");\nvar ENGINE = require(\"./platform/browser/http-client\");\nvar URI = require(\"./uri\");\n\n/**\n * @param options object\n *   host: 'www.google.com'\n *   port: 80\n *   path: '/upload'\n *   method: 'POST'\n *   headers: {}\n *   data: request (post) data\n *   responseEncoding: 'utf8'\n */\nexports.request = function(options, successCallback, errorCallback)\n{\n    if (typeof options.url !== \"undefined\")\n    {\n        if (typeof options.host !== \"undefined\")\n            throw new Error(\"Cannot set 'host' when 'url' is set!\");\n        if (typeof options.path !== \"undefined\")\n            throw new Error(\"Cannot set 'path' when 'url' is set!\");\n        if (typeof options.port !== \"undefined\")\n            throw new Error(\"Cannot set 'port' when 'url' is set!\");\n\n        var uri = URI.URI(options.url);\n\n        options.host = uri.authority;\n        options.port = uri.port || ((uri.scheme === \"https\")?443:80);\n        options.path = uri.path || \"/\";\n        \n        if (uri.query) {\n        \toptions.path += \"?\" + uri.query;\n        }\n    }\n    options.method = options.method || \"GET\";\n    options.port = options.port || 80;\n    options.path = options.path || \"/\";\n    options.url = options.url || (\"http://\" + options.host + \":\" + options.port + options.path);\n    options.headers = options.headers || { \"Host\": options.host };\n\n    options.headers[\"Host\"] = options.headers[\"Host\"] || options.host;\n    options.headers[\"User-Agent\"] = options.headers[\"User-Agent\"] || \"pinf/modules-js/http-client\";\n\n    return ENGINE.request(options, successCallback, errorCallback);\n}\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "./platform/browser/http-client": {
                  "where": "inline"
                },
                "./uri": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/platform/browser/http-client.js": {
            "requireId": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/platform/browser/http-client",
            "memoizeId": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/platform/browser/http-client.js",
            "descriptor": {
              "filename": "http-client.js",
              "filepath": "../../pinf-bridgelib-js/lib/platform/browser/http-client.js",
              "mtime": 1375341060,
              "code": "\nexports.request = function(options, successCallback, errorCallback)\n{\n    try {\n\n        // TODO: Add support for other browsers\n\n        var request = new XMLHttpRequest();\n        request.onreadystatechange = function (event) {\n            if (request.readyState == 4) {\n                \n                var headers = {},\n                    lines = request.getAllResponseHeaders().split(\"\\n\");\n                for (var i=0,ic=lines.length ; i<ic ; i++ )\n                {\n                    if (lines[i])\n                    {\n                        var m = lines[i].match(/^([^:]*):\\s*(.*)$/);\n                        headers[m[1]] = m[2];\n                    }\n                }\n\n                successCallback({\n                    status: request.status,\n                    headers: headers,\n                    data: request.responseText\n                });\n            }\n        };\n        request.open(options.method, options.url, true);\n\n        for (var name in options.headers)\n        {\n            if (name.toLowerCase() != \"host\")\n            {\n                request.setRequestHeader(name, options.headers[name]);\n            }\n        }\n\n        request.send(options.data);\n\n    } catch(e) {\n        console.warn(e);\n        errorCallback(e);\n    }\n}\n",
              "globals": {
                "exports": {
                  "type": "reference"
                },
                "console": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {},
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../pinf-bridgelib-js/lib/platform/browser';",
              "code": "function(require, exports, module) {var __dirname = '../../pinf-bridgelib-js/lib/platform/browser';\n\nexports.request = function(options, successCallback, errorCallback)\n{\n    try {\n\n        // TODO: Add support for other browsers\n\n        var request = new XMLHttpRequest();\n        request.onreadystatechange = function (event) {\n            if (request.readyState == 4) {\n                \n                var headers = {},\n                    lines = request.getAllResponseHeaders().split(\"\\n\");\n                for (var i=0,ic=lines.length ; i<ic ; i++ )\n                {\n                    if (lines[i])\n                    {\n                        var m = lines[i].match(/^([^:]*):\\s*(.*)$/);\n                        headers[m[1]] = m[2];\n                    }\n                }\n\n                successCallback({\n                    status: request.status,\n                    headers: headers,\n                    data: request.responseText\n                });\n            }\n        };\n        request.open(options.method, options.url, true);\n\n        for (var name in options.headers)\n        {\n            if (name.toLowerCase() != \"host\")\n            {\n                request.setRequestHeader(name, options.headers[name]);\n            }\n        }\n\n        request.send(options.data);\n\n    } catch(e) {\n        console.warn(e);\n        errorCallback(e);\n    }\n}\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {},
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/uri.js": {
            "requireId": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/uri",
            "memoizeId": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/uri.js",
            "descriptor": {
              "filename": "uri.js",
              "filepath": "../../pinf-bridgelib-js/lib/uri.js",
              "mtime": 1375341060,
              "code": "\n// -- kriskowal Kris Kowal Copyright (C) 2009-2010 MIT License\n// gmosx, George Moschovitis\n\n// Based on: http://data.iana.org/TLD/tlds-alpha-by-domain.txt\nvar TLDS = exports.TLDS = [\n    \"AC\",\"AD\",\"AE\",\"AERO\",\"AF\",\"AG\",\"AI\",\"AL\",\"AM\",\"AN\",\"AO\",\"AQ\",\"AR\",\"ARPA\",\"AS\",\"ASIA\",\"AT\",\"AU\",\"AW\",\"AX\",\"AZ\",\n    \"BA\",\"BB\",\"BD\",\"BE\",\"BF\",\"BG\",\"BH\",\"BI\",\"BIZ\",\"BJ\",\"BM\",\"BN\",\"BO\",\"BR\",\"BS\",\"BT\",\"BV\",\"BW\",\"BY\",\"BZ\",\n    \"CA\",\"CAT\",\"CC\",\"CD\",\"CF\",\"CG\",\"CH\",\"CI\",\"CK\",\"CL\",\"CM\",\"CN\",\"CO\",\"COM\",\"COOP\",\"CR\",\"CU\",\"CV\",\"CX\",\"CY\",\"CZ\",\n    \"DE\",\"DJ\",\"DK\",\"DM\",\"DO\",\"DZ\",\n    \"EC\",\"EDU\",\"EE\",\"EG\",\"ER\",\"ES\",\"ET\",\"EU\",\n    \"FI\",\"FJ\",\"FK\",\"FM\",\"FO\",\"FR\",\n    \"GA\",\"GB\",\"GD\",\"GE\",\"GF\",\"GG\",\"GH\",\"GI\",\"GL\",\"GM\",\"GN\",\"GOV\",\"GP\",\"GQ\",\"GR\",\"GS\",\"GT\",\"GU\",\"GW\",\"GY\",\n    \"HK\",\"HM\",\"HN\",\"HR\",\"HT\",\"HU\",\n    \"ID\",\"IE\",\"IL\",\"IM\",\"IN\",\"INFO\",\"INT\",\"IO\",\"IQ\",\"IR\",\"IS\",\"IT\",\n    \"JE\",\"JM\",\"JO\",\"JOBS\",\"JP\",\n    \"KE\",\"KG\",\"KH\",\"KI\",\"KM\",\"KN\",\"KP\",\"KR\",\"KW\",\"KY\",\"KZ\",\n    \"LA\",\"LB\",\"LC\",\"LI\",\"LK\",\"LR\",\"LS\",\"LT\",\"LU\",\"LV\",\"LY\",\n    \"MA\",\"MC\",\"MD\",\"ME\",\"MG\",\"MH\",\"MIL\",\"MK\",\"ML\",\"MM\",\"MN\",\"MO\",\"MOBI\",\"MP\",\"MQ\",\"MR\",\"MS\",\"MT\",\"MU\",\"MUSEUM\",\"MV\",\"MW\",\"MX\",\"MY\",\"MZ\",\n    \"NA\",\"NAME\",\"NC\",\"NE\",\"NET\",\"NF\",\"NG\",\"NI\",\"NL\",\"NO\",\"NP\",\"NR\",\"NU\",\"NZ\",\n    \"OM\",\"ORG\",\n    \"PA\",\"PE\",\"PF\",\"PG\",\"PH\",\"PK\",\"PL\",\"PM\",\"PN\",\"PR\",\"PRO\",\"PS\",\"PT\",\"PW\",\"PY\",\n    \"QA\",\n    \"RE\",\"RO\",\"RS\",\"RU\",\"RW\",\n    \"SA\",\"SB\",\"SC\",\"SD\",\"SE\",\"SG\",\"SH\",\"SI\",\"SJ\",\"SK\",\"SL\",\"SM\",\"SN\",\"SO\",\"SR\",\"ST\",\"SU\",\"SV\",\"SY\",\"SZ\",\n    \"TC\",\"TD\",\"TEL\",\"TF\",\"TG\",\"TH\",\"TJ\",\"TK\",\"TL\",\"TM\",\"TN\",\"TO\",\"TP\",\"TR\",\"TRAVEL\",\"TT\",\"TV\",\"TW\",\"TZ\",\n    \"UA\",\"UG\",\"UK\",\"US\",\"UY\",\"UZ\",\n    \"VA\",\"VC\",\"VE\",\"VG\",\"VI\",\"VN\",\"VU\",\n    \"WF\",\"WS\",\n    \"XN\",\n    \"YE\",\"YT\",\"YU\",\n    \"ZA\",\"ZM\",\"ZW\"\n];\n\n\n/**\n * Uniform Resource Identifier (URI) - RFC3986\n * http://www.ietf.org/rfc/rfc3986.txt\n */\nvar URI = exports.URI = function (uri) {\n    if (!(this instanceof URI))\n        return new URI(uri);\n    if (typeof uri === \"object\") {\n        for (var name in uri) {\n            if (Object.prototype.hasOwnProperty.call(uri, name)) {\n                this[name] = uri[name];\n            }\n        }\n    } else if (typeof uri === \"string\") {\n        exports.parse.call(this, uri);\n    } else {\n        throw new TypeError(\"Invalid argument for URI constructor.\");\n    }\n\n};\n\nURI.prototype.resolve = function (other) {\n    return exports.resolve(this, other);\n};\n\nURI.prototype.to = function (other) {\n    return exports.relative(this, other);\n};\n\nURI.prototype.from = function (other) {\n    return exports.relative(other, this);\n};\n\n/**\n * Convert the URI to a String.\n */\nURI.prototype.toString = function () {\n    return exports.format(this);\n}\n\nexports.unescape = URI.unescape = function(uri, plus) {\n    return decodeURI(uri.replace(/\\+/g, \" \"));\n}\n\nexports.unescapeComponent = URI.unescapeComponent = function(uri, plus) {\n    return decodeURIComponent(uri.replace(/\\+/g, \" \"));\n}\n\n// from Chiron's HTTP module:\n\n/**** keys\n    members of a parsed URI object.\n*/\nexports.keys = [\n    \"url\",\n    \"scheme\",\n    \"authorityRoot\",\n    \"authority\",\n        \"userInfo\",\n            \"user\",\n            \"password\",\n        \"domain\",\n            \"domains\",\n        \"port\",\n    \"path\",\n        \"root\",\n        \"directory\",\n            \"directories\",\n        \"file\",\n    \"query\",\n    \"anchor\"\n];\n\n/**** expressionKeys\n    members of a parsed URI object that you get\n    from evaluting the strict regular expression.\n*/\nexports.expressionKeys = [\n    \"url\",\n    \"scheme\",\n    \"authorityRoot\",\n    \"authority\",\n        \"userInfo\",\n            \"user\",\n            \"password\",\n        \"domain\",\n        \"port\",\n    \"path\",\n        \"root\",\n        \"directory\",\n        \"file\",\n    \"query\",\n    \"anchor\"\n];\n\n/**** strictExpression\n*/\nexports.strictExpression = new RegExp( /* url */\n    \"^\" +\n    \"(?:\" +\n        \"([^:/?#]+):\" + /* scheme */\n    \")?\" +\n    \"(?:\" +\n        \"(//)\" + /* authorityRoot */\n        \"(\" + /* authority */\n            \"(?:\" +\n                \"(\" + /* userInfo */\n                    \"([^:@/]*)\" + /* user */\n                    \":?\" +\n                    \"([^:@/]*)\" + /* password */\n                \")?\" +\n                \"@\" +\n            \")?\" +\n            \"([^:/?#]*)\" + /* domain */\n            \"(?::(\\\\d*))?\" + /* port */\n        \")\" +\n    \")?\" +\n    \"(\" + /* path */\n        \"(/?)\" + /* root */\n        \"((?:[^?#/]*/)*)\" +\n        \"([^?#]*)\" + /* file */\n    \")\" +\n    \"(?:\\\\?([^#]*))?\" + /* query */\n    \"(?:#(.*))?\" /*anchor */\n);\n\n/**** Parser\n    returns a URI parser function given\n    a regular expression that renders \n    `expressionKeys` and returns an `Object`\n    mapping all `keys` to values.\n*/\nexports.Parser = function (expression) {\n    return function (url) {\n        if (typeof url == \"undefined\")\n            throw new Error(\"HttpError: URL is undefined\");\n        if (typeof url != \"string\")\n            return new Object(url);\n\n        var items = this instanceof URI ? this : Object.create(URI.prototype);\n        var parts = expression.exec(url);\n\n        for (var i = 0; i < parts.length; i++) {\n            items[exports.expressionKeys[i]] = parts[i] ? parts[i] : \"\";\n        }\n\n        items.root = (items.root || items.authorityRoot) ? '/' : '';\n\n        items.directories = items.directory.split(\"/\");\n        if (items.directories[items.directories.length - 1] == \"\") {\n            items.directories.pop();\n        }\n\n        /* normalize */\n        var directories = [];\n        for (var i = 0; i < items.directories.length; i++) {\n            var directory = items.directories[i];\n            if (directory == '.') {\n            } else if (directory == '..') {\n                if (directories.length && directories[directories.length - 1] != '..')\n                    directories.pop();\n                else\n                    directories.push('..');\n            } else {\n                directories.push(directory);\n            }\n        }\n        items.directories = directories;\n\n        items.domains = items.domain.split(\".\");\n\n        return items;\n    };\n};\n\n/**** parse\n    a strict URI parser.\n*/\nexports.parse = exports.Parser(exports.strictExpression);\n\n/**** format\n    accepts a parsed URI object and returns\n    the corresponding string.\n*/\nexports.format = function (object) {\n    if (typeof(object) == 'undefined')\n        throw new Error(\"UrlError: URL undefined for urls#format\");\n    if (object instanceof String || typeof(object) == 'string')\n        return object;\n    var domain =\n        object.domains ?\n        object.domains.join(\".\") :\n        object.domain;\n    var userInfo = (\n            object.user ||\n            object.password \n        ) ?\n        (\n            (object.user || \"\") + \n            (object.password ? \":\" + object.password : \"\") \n        ) :\n        object.userInfo;\n    var authority = (\n            userInfo ||\n            domain ||\n            object.port\n        ) ? (\n            (userInfo ? userInfo + \"@\" : \"\") +\n            (domain || \"\") + \n            (object.port ? \":\" + object.port : \"\")\n        ) :\n        object.authority;\n    var directory =\n        object.directories ?\n        object.directories.join(\"/\") :\n        object.directory;\n    var path =\n        directory || object.file ?\n        (\n            (directory ? directory + \"/\" : \"\") +\n            (object.file || \"\")\n        ) :\n        object.path;\n    return (\n        (object.scheme ? object.scheme + \":\" : \"\") +\n        (authority ? \"//\" + authority : \"\") +\n        (object.root || (authority && path) ? \"/\" : \"\") +\n        (path ? path.replace(/^\\//, \"\") : \"\") +\n        (object.query ? \"?\" + object.query : \"\") +\n        (object.anchor ? \"#\" + object.anchor : \"\")\n    ) || object.url || \"\";\n};\n\n/**** resolveObject\n    returns an object representing a URL resolved from\n    a relative location and a source location.\n*/\nexports.resolveObject = function (source, relative) {\n    if (!source) \n        return relative;\n\n    source = exports.parse(source);\n    relative = exports.parse(relative);\n\n    if (relative.url == \"\")\n        return source;\n\n    delete source.url;\n    delete source.authority;\n    delete source.domain;\n    delete source.userInfo;\n    delete source.path;\n    delete source.directory;\n\n    if (\n        relative.scheme && relative.scheme != source.scheme ||\n        relative.authority && relative.authority != source.authority\n    ) {\n        source = relative;\n    } else {\n        if (relative.root) {\n            source.directories = relative.directories;\n        } else {\n\n            var directories = relative.directories;\n            for (var i = 0; i < directories.length; i++) {\n                var directory = directories[i];\n                if (directory == \".\") {\n                } else if (directory == \"..\") {\n                    if (source.directories.length) {\n                        source.directories.pop();\n                    } else {\n                        source.directories.push('..');\n                    }\n                } else {\n                    source.directories.push(directory);\n                }\n            }\n\n            if (relative.file == \".\") {\n                relative.file = \"\";\n            } else if (relative.file == \"..\") {\n                source.directories.pop();\n                relative.file = \"\";\n            }\n        }\n    }\n\n    if (relative.root)\n        source.root = relative.root;\n    if (relative.protcol)\n        source.scheme = relative.scheme;\n    if (!(!relative.path && relative.anchor))\n        source.file = relative.file;\n    source.query = relative.query;\n    source.anchor = relative.anchor;\n\n    return source;\n};\n\n/**** relativeObject\n    returns an object representing a relative URL to\n    a given target URL from a source URL.\n*/\nexports.relativeObject = function (source, target) {\n    target = exports.parse(target);\n    source = exports.parse(source);\n\n    delete target.url;\n\n    if (\n        target.scheme == source.scheme &&\n        target.authority == source.authority\n    ) {\n        delete target.scheme;\n        delete target.authority;\n        delete target.userInfo;\n        delete target.user;\n        delete target.password;\n        delete target.domain;\n        delete target.domains;\n        delete target.port;\n        if (\n            !!target.root == !!source.root && !(\n                target.root &&\n                target.directories[0] != source.directories[0]\n            )\n        ) {\n            delete target.path;\n            delete target.root;\n            delete target.directory;\n            while (\n                source.directories.length &&\n                target.directories.length &&\n                target.directories[0] == source.directories[0]\n            ) {\n                target.directories.shift();\n                source.directories.shift();\n            }\n            while (source.directories.length) {\n                source.directories.shift();\n                target.directories.unshift('..');\n            }\n\n            if (!target.root && !target.directories.length && !target.file && source.file)\n                target.directories.push('.');\n\n            if (source.file == target.file)\n                delete target.file;\n            if (source.query == target.query)\n                delete target.query;\n            if (source.anchor == target.anchor)\n                delete target.anchor;\n        }\n    }\n\n    return target;\n};\n\n/**\n * @returns a URL resovled to a relative URL from a source URL.\n */\nexports.resolve = function (source, relative) {\n    return exports.format(exports.resolveObject(source, relative));\n};\n\n/**\n * @returns a relative URL to a target from a source.\n */\nexports.relative = function (source, target) {\n    return exports.format(exports.relativeObject(source, target));\n};\n\n/**\n * converts a file-system path to a URI.\n * @param path a String or String-like object, possibly a Path object,\n * representing a file system Path\n * @returns a URI as a String\n */\n/*\nTODO: Refactor\nexports.pathToUri = function (path) {\n    var FS = require(\"file\");\n    return \"file:\" + FS.split(path).map(encodeURIComponent).join('/');\n};\n*/\n",
              "globals": {
                "TLDS": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                },
                "URI": {
                  "type": "assign"
                },
                "Object": {
                  "type": "reference"
                },
                "decodeURI": {
                  "type": "call"
                },
                "decodeURIComponent": {
                  "type": "call"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {},
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../pinf-bridgelib-js/lib';",
              "code": "function(require, exports, module) {var __dirname = '../../pinf-bridgelib-js/lib';\n\n// -- kriskowal Kris Kowal Copyright (C) 2009-2010 MIT License\n// gmosx, George Moschovitis\n\n// Based on: http://data.iana.org/TLD/tlds-alpha-by-domain.txt\nvar TLDS = exports.TLDS = [\n    \"AC\",\"AD\",\"AE\",\"AERO\",\"AF\",\"AG\",\"AI\",\"AL\",\"AM\",\"AN\",\"AO\",\"AQ\",\"AR\",\"ARPA\",\"AS\",\"ASIA\",\"AT\",\"AU\",\"AW\",\"AX\",\"AZ\",\n    \"BA\",\"BB\",\"BD\",\"BE\",\"BF\",\"BG\",\"BH\",\"BI\",\"BIZ\",\"BJ\",\"BM\",\"BN\",\"BO\",\"BR\",\"BS\",\"BT\",\"BV\",\"BW\",\"BY\",\"BZ\",\n    \"CA\",\"CAT\",\"CC\",\"CD\",\"CF\",\"CG\",\"CH\",\"CI\",\"CK\",\"CL\",\"CM\",\"CN\",\"CO\",\"COM\",\"COOP\",\"CR\",\"CU\",\"CV\",\"CX\",\"CY\",\"CZ\",\n    \"DE\",\"DJ\",\"DK\",\"DM\",\"DO\",\"DZ\",\n    \"EC\",\"EDU\",\"EE\",\"EG\",\"ER\",\"ES\",\"ET\",\"EU\",\n    \"FI\",\"FJ\",\"FK\",\"FM\",\"FO\",\"FR\",\n    \"GA\",\"GB\",\"GD\",\"GE\",\"GF\",\"GG\",\"GH\",\"GI\",\"GL\",\"GM\",\"GN\",\"GOV\",\"GP\",\"GQ\",\"GR\",\"GS\",\"GT\",\"GU\",\"GW\",\"GY\",\n    \"HK\",\"HM\",\"HN\",\"HR\",\"HT\",\"HU\",\n    \"ID\",\"IE\",\"IL\",\"IM\",\"IN\",\"INFO\",\"INT\",\"IO\",\"IQ\",\"IR\",\"IS\",\"IT\",\n    \"JE\",\"JM\",\"JO\",\"JOBS\",\"JP\",\n    \"KE\",\"KG\",\"KH\",\"KI\",\"KM\",\"KN\",\"KP\",\"KR\",\"KW\",\"KY\",\"KZ\",\n    \"LA\",\"LB\",\"LC\",\"LI\",\"LK\",\"LR\",\"LS\",\"LT\",\"LU\",\"LV\",\"LY\",\n    \"MA\",\"MC\",\"MD\",\"ME\",\"MG\",\"MH\",\"MIL\",\"MK\",\"ML\",\"MM\",\"MN\",\"MO\",\"MOBI\",\"MP\",\"MQ\",\"MR\",\"MS\",\"MT\",\"MU\",\"MUSEUM\",\"MV\",\"MW\",\"MX\",\"MY\",\"MZ\",\n    \"NA\",\"NAME\",\"NC\",\"NE\",\"NET\",\"NF\",\"NG\",\"NI\",\"NL\",\"NO\",\"NP\",\"NR\",\"NU\",\"NZ\",\n    \"OM\",\"ORG\",\n    \"PA\",\"PE\",\"PF\",\"PG\",\"PH\",\"PK\",\"PL\",\"PM\",\"PN\",\"PR\",\"PRO\",\"PS\",\"PT\",\"PW\",\"PY\",\n    \"QA\",\n    \"RE\",\"RO\",\"RS\",\"RU\",\"RW\",\n    \"SA\",\"SB\",\"SC\",\"SD\",\"SE\",\"SG\",\"SH\",\"SI\",\"SJ\",\"SK\",\"SL\",\"SM\",\"SN\",\"SO\",\"SR\",\"ST\",\"SU\",\"SV\",\"SY\",\"SZ\",\n    \"TC\",\"TD\",\"TEL\",\"TF\",\"TG\",\"TH\",\"TJ\",\"TK\",\"TL\",\"TM\",\"TN\",\"TO\",\"TP\",\"TR\",\"TRAVEL\",\"TT\",\"TV\",\"TW\",\"TZ\",\n    \"UA\",\"UG\",\"UK\",\"US\",\"UY\",\"UZ\",\n    \"VA\",\"VC\",\"VE\",\"VG\",\"VI\",\"VN\",\"VU\",\n    \"WF\",\"WS\",\n    \"XN\",\n    \"YE\",\"YT\",\"YU\",\n    \"ZA\",\"ZM\",\"ZW\"\n];\n\n\n/**\n * Uniform Resource Identifier (URI) - RFC3986\n * http://www.ietf.org/rfc/rfc3986.txt\n */\nvar URI = exports.URI = function (uri) {\n    if (!(this instanceof URI))\n        return new URI(uri);\n    if (typeof uri === \"object\") {\n        for (var name in uri) {\n            if (Object.prototype.hasOwnProperty.call(uri, name)) {\n                this[name] = uri[name];\n            }\n        }\n    } else if (typeof uri === \"string\") {\n        exports.parse.call(this, uri);\n    } else {\n        throw new TypeError(\"Invalid argument for URI constructor.\");\n    }\n\n};\n\nURI.prototype.resolve = function (other) {\n    return exports.resolve(this, other);\n};\n\nURI.prototype.to = function (other) {\n    return exports.relative(this, other);\n};\n\nURI.prototype.from = function (other) {\n    return exports.relative(other, this);\n};\n\n/**\n * Convert the URI to a String.\n */\nURI.prototype.toString = function () {\n    return exports.format(this);\n}\n\nexports.unescape = URI.unescape = function(uri, plus) {\n    return decodeURI(uri.replace(/\\+/g, \" \"));\n}\n\nexports.unescapeComponent = URI.unescapeComponent = function(uri, plus) {\n    return decodeURIComponent(uri.replace(/\\+/g, \" \"));\n}\n\n// from Chiron's HTTP module:\n\n/**** keys\n    members of a parsed URI object.\n*/\nexports.keys = [\n    \"url\",\n    \"scheme\",\n    \"authorityRoot\",\n    \"authority\",\n        \"userInfo\",\n            \"user\",\n            \"password\",\n        \"domain\",\n            \"domains\",\n        \"port\",\n    \"path\",\n        \"root\",\n        \"directory\",\n            \"directories\",\n        \"file\",\n    \"query\",\n    \"anchor\"\n];\n\n/**** expressionKeys\n    members of a parsed URI object that you get\n    from evaluting the strict regular expression.\n*/\nexports.expressionKeys = [\n    \"url\",\n    \"scheme\",\n    \"authorityRoot\",\n    \"authority\",\n        \"userInfo\",\n            \"user\",\n            \"password\",\n        \"domain\",\n        \"port\",\n    \"path\",\n        \"root\",\n        \"directory\",\n        \"file\",\n    \"query\",\n    \"anchor\"\n];\n\n/**** strictExpression\n*/\nexports.strictExpression = new RegExp( /* url */\n    \"^\" +\n    \"(?:\" +\n        \"([^:/?#]+):\" + /* scheme */\n    \")?\" +\n    \"(?:\" +\n        \"(//)\" + /* authorityRoot */\n        \"(\" + /* authority */\n            \"(?:\" +\n                \"(\" + /* userInfo */\n                    \"([^:@/]*)\" + /* user */\n                    \":?\" +\n                    \"([^:@/]*)\" + /* password */\n                \")?\" +\n                \"@\" +\n            \")?\" +\n            \"([^:/?#]*)\" + /* domain */\n            \"(?::(\\\\d*))?\" + /* port */\n        \")\" +\n    \")?\" +\n    \"(\" + /* path */\n        \"(/?)\" + /* root */\n        \"((?:[^?#/]*/)*)\" +\n        \"([^?#]*)\" + /* file */\n    \")\" +\n    \"(?:\\\\?([^#]*))?\" + /* query */\n    \"(?:#(.*))?\" /*anchor */\n);\n\n/**** Parser\n    returns a URI parser function given\n    a regular expression that renders \n    `expressionKeys` and returns an `Object`\n    mapping all `keys` to values.\n*/\nexports.Parser = function (expression) {\n    return function (url) {\n        if (typeof url == \"undefined\")\n            throw new Error(\"HttpError: URL is undefined\");\n        if (typeof url != \"string\")\n            return new Object(url);\n\n        var items = this instanceof URI ? this : Object.create(URI.prototype);\n        var parts = expression.exec(url);\n\n        for (var i = 0; i < parts.length; i++) {\n            items[exports.expressionKeys[i]] = parts[i] ? parts[i] : \"\";\n        }\n\n        items.root = (items.root || items.authorityRoot) ? '/' : '';\n\n        items.directories = items.directory.split(\"/\");\n        if (items.directories[items.directories.length - 1] == \"\") {\n            items.directories.pop();\n        }\n\n        /* normalize */\n        var directories = [];\n        for (var i = 0; i < items.directories.length; i++) {\n            var directory = items.directories[i];\n            if (directory == '.') {\n            } else if (directory == '..') {\n                if (directories.length && directories[directories.length - 1] != '..')\n                    directories.pop();\n                else\n                    directories.push('..');\n            } else {\n                directories.push(directory);\n            }\n        }\n        items.directories = directories;\n\n        items.domains = items.domain.split(\".\");\n\n        return items;\n    };\n};\n\n/**** parse\n    a strict URI parser.\n*/\nexports.parse = exports.Parser(exports.strictExpression);\n\n/**** format\n    accepts a parsed URI object and returns\n    the corresponding string.\n*/\nexports.format = function (object) {\n    if (typeof(object) == 'undefined')\n        throw new Error(\"UrlError: URL undefined for urls#format\");\n    if (object instanceof String || typeof(object) == 'string')\n        return object;\n    var domain =\n        object.domains ?\n        object.domains.join(\".\") :\n        object.domain;\n    var userInfo = (\n            object.user ||\n            object.password \n        ) ?\n        (\n            (object.user || \"\") + \n            (object.password ? \":\" + object.password : \"\") \n        ) :\n        object.userInfo;\n    var authority = (\n            userInfo ||\n            domain ||\n            object.port\n        ) ? (\n            (userInfo ? userInfo + \"@\" : \"\") +\n            (domain || \"\") + \n            (object.port ? \":\" + object.port : \"\")\n        ) :\n        object.authority;\n    var directory =\n        object.directories ?\n        object.directories.join(\"/\") :\n        object.directory;\n    var path =\n        directory || object.file ?\n        (\n            (directory ? directory + \"/\" : \"\") +\n            (object.file || \"\")\n        ) :\n        object.path;\n    return (\n        (object.scheme ? object.scheme + \":\" : \"\") +\n        (authority ? \"//\" + authority : \"\") +\n        (object.root || (authority && path) ? \"/\" : \"\") +\n        (path ? path.replace(/^\\//, \"\") : \"\") +\n        (object.query ? \"?\" + object.query : \"\") +\n        (object.anchor ? \"#\" + object.anchor : \"\")\n    ) || object.url || \"\";\n};\n\n/**** resolveObject\n    returns an object representing a URL resolved from\n    a relative location and a source location.\n*/\nexports.resolveObject = function (source, relative) {\n    if (!source) \n        return relative;\n\n    source = exports.parse(source);\n    relative = exports.parse(relative);\n\n    if (relative.url == \"\")\n        return source;\n\n    delete source.url;\n    delete source.authority;\n    delete source.domain;\n    delete source.userInfo;\n    delete source.path;\n    delete source.directory;\n\n    if (\n        relative.scheme && relative.scheme != source.scheme ||\n        relative.authority && relative.authority != source.authority\n    ) {\n        source = relative;\n    } else {\n        if (relative.root) {\n            source.directories = relative.directories;\n        } else {\n\n            var directories = relative.directories;\n            for (var i = 0; i < directories.length; i++) {\n                var directory = directories[i];\n                if (directory == \".\") {\n                } else if (directory == \"..\") {\n                    if (source.directories.length) {\n                        source.directories.pop();\n                    } else {\n                        source.directories.push('..');\n                    }\n                } else {\n                    source.directories.push(directory);\n                }\n            }\n\n            if (relative.file == \".\") {\n                relative.file = \"\";\n            } else if (relative.file == \"..\") {\n                source.directories.pop();\n                relative.file = \"\";\n            }\n        }\n    }\n\n    if (relative.root)\n        source.root = relative.root;\n    if (relative.protcol)\n        source.scheme = relative.scheme;\n    if (!(!relative.path && relative.anchor))\n        source.file = relative.file;\n    source.query = relative.query;\n    source.anchor = relative.anchor;\n\n    return source;\n};\n\n/**** relativeObject\n    returns an object representing a relative URL to\n    a given target URL from a source URL.\n*/\nexports.relativeObject = function (source, target) {\n    target = exports.parse(target);\n    source = exports.parse(source);\n\n    delete target.url;\n\n    if (\n        target.scheme == source.scheme &&\n        target.authority == source.authority\n    ) {\n        delete target.scheme;\n        delete target.authority;\n        delete target.userInfo;\n        delete target.user;\n        delete target.password;\n        delete target.domain;\n        delete target.domains;\n        delete target.port;\n        if (\n            !!target.root == !!source.root && !(\n                target.root &&\n                target.directories[0] != source.directories[0]\n            )\n        ) {\n            delete target.path;\n            delete target.root;\n            delete target.directory;\n            while (\n                source.directories.length &&\n                target.directories.length &&\n                target.directories[0] == source.directories[0]\n            ) {\n                target.directories.shift();\n                source.directories.shift();\n            }\n            while (source.directories.length) {\n                source.directories.shift();\n                target.directories.unshift('..');\n            }\n\n            if (!target.root && !target.directories.length && !target.file && source.file)\n                target.directories.push('.');\n\n            if (source.file == target.file)\n                delete target.file;\n            if (source.query == target.query)\n                delete target.query;\n            if (source.anchor == target.anchor)\n                delete target.anchor;\n        }\n    }\n\n    return target;\n};\n\n/**\n * @returns a URL resovled to a relative URL from a source URL.\n */\nexports.resolve = function (source, relative) {\n    return exports.format(exports.resolveObject(source, relative));\n};\n\n/**\n * @returns a relative URL to a target from a source.\n */\nexports.relative = function (source, target) {\n    return exports.format(exports.relativeObject(source, target));\n};\n\n/**\n * converts a file-system path to a URI.\n * @param path a String or String-like object, possibly a Path object,\n * representing a file system Path\n * @returns a URI as a String\n */\n/*\nTODO: Refactor\nexports.pathToUri = function (path) {\n    var FS = require(\"file\");\n    return \"file:\" + FS.split(path).map(encodeURIComponent).join('/');\n};\n*/\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {},
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/channel-shellcommand.js": {
            "requireId": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/channel-shellcommand",
            "memoizeId": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/channel-shellcommand.js",
            "descriptor": {
              "filename": "channel-shellcommand.js",
              "filepath": "../../wildfire-for-js/lib/channel-shellcommand.js",
              "mtime": 1375341064,
              "code": "\nvar CHANNEL = require(\"./channel\");\n\nconst HEADER_PREFIX = '#x-wf-';\n\nvar ShellCommandChannel = exports.ShellCommandChannel = function () {\n    if (!(this instanceof exports.ShellCommandChannel))\n        return new exports.ShellCommandChannel();\n    \n    this.__construct();\n    \n    this.HEADER_PREFIX = HEADER_PREFIX;\n}\n\nShellCommandChannel.prototype = CHANNEL.Channel();\n",
              "globals": {
                "CHANNEL": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "HEADER_PREFIX": {
                  "type": "assign"
                },
                "ShellCommandChannel": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "./channel": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../wildfire-for-js/lib';",
              "code": "function(require, exports, module) {var __dirname = '../../wildfire-for-js/lib';\n\nvar CHANNEL = require(\"./channel\");\n\nconst HEADER_PREFIX = '#x-wf-';\n\nvar ShellCommandChannel = exports.ShellCommandChannel = function () {\n    if (!(this instanceof exports.ShellCommandChannel))\n        return new exports.ShellCommandChannel();\n    \n    this.__construct();\n    \n    this.HEADER_PREFIX = HEADER_PREFIX;\n}\n\nShellCommandChannel.prototype = CHANNEL.Channel();\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "./channel": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/channel-postmessage.js": {
            "requireId": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/channel-postmessage",
            "memoizeId": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/channel-postmessage.js",
            "descriptor": {
              "filename": "channel-postmessage.js",
              "filepath": "../../wildfire-for-js/lib/channel-postmessage.js",
              "mtime": 1420318355,
              "code": "\nvar CHANNEL = require(\"./channel\"),\n    UTIL = require(\"modules/util\");\n\nconst HEADER_PREFIX = 'x-wf-';\n\nvar PostMessageChannel = exports.PostMessageChannel = function () {\n    if (!(this instanceof exports.PostMessageChannel))\n        return new exports.PostMessageChannel();\n    \n    this.__construct();\n\n    this.HEADER_PREFIX = HEADER_PREFIX;\n    \n    this.postMessageSender = null;\n}\n\nPostMessageChannel.prototype = CHANNEL.Channel();\n\nPostMessageChannel.prototype.enqueueOutgoing = function(message, bypassReceivers)\n{\n    var ret = this._enqueueOutgoing(message, bypassReceivers);\n\n    var parts = {};\n    this.flush({\n        setMessagePart: function(key, value) {\n            parts[key] = value;\n        },\n        getMessagePart: function(key) {\n            if (typeof parts[key] == \"undefined\")\n                return null;\n            return parts[key];\n        }\n    });\n\n    var self = this;\n\n    var payload = [];\n    UTIL.forEach(parts, function(part)\n    {\n        payload.push(part[0] + \": \" + part[1]);\n    });\n    self.postMessageSender(payload.join(\"\\n\"));\n    \n    return ret;\n}\n\nPostMessageChannel.prototype.setPostMessageSender = function(postMessage)\n{\n    this.postMessageSender = postMessage;\n}\n\nPostMessageChannel.prototype.parseReceivedPostMessage = function(msg)\n{\n    if (this.status != \"open\")\n        this.open();\n    this.parseReceived(msg, null, {\n        skipChannelOpen: true,\n        skipChannelClose: true,\n        enableContinuousParsing: true\n    });\n}\n",
              "globals": {
                "CHANNEL": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "UTIL": {
                  "type": "assign"
                },
                "HEADER_PREFIX": {
                  "type": "assign"
                },
                "PostMessageChannel": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "./channel": {
                    "where": "inline"
                  },
                  "modules/util": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../wildfire-for-js/lib';",
              "code": "function(require, exports, module) {var __dirname = '../../wildfire-for-js/lib';\n\nvar CHANNEL = require(\"./channel\"),\n    UTIL = require(\"modules/util\");\n\nconst HEADER_PREFIX = 'x-wf-';\n\nvar PostMessageChannel = exports.PostMessageChannel = function () {\n    if (!(this instanceof exports.PostMessageChannel))\n        return new exports.PostMessageChannel();\n    \n    this.__construct();\n\n    this.HEADER_PREFIX = HEADER_PREFIX;\n    \n    this.postMessageSender = null;\n}\n\nPostMessageChannel.prototype = CHANNEL.Channel();\n\nPostMessageChannel.prototype.enqueueOutgoing = function(message, bypassReceivers)\n{\n    var ret = this._enqueueOutgoing(message, bypassReceivers);\n\n    var parts = {};\n    this.flush({\n        setMessagePart: function(key, value) {\n            parts[key] = value;\n        },\n        getMessagePart: function(key) {\n            if (typeof parts[key] == \"undefined\")\n                return null;\n            return parts[key];\n        }\n    });\n\n    var self = this;\n\n    var payload = [];\n    UTIL.forEach(parts, function(part)\n    {\n        payload.push(part[0] + \": \" + part[1]);\n    });\n    self.postMessageSender(payload.join(\"\\n\"));\n    \n    return ret;\n}\n\nPostMessageChannel.prototype.setPostMessageSender = function(postMessage)\n{\n    this.postMessageSender = postMessage;\n}\n\nPostMessageChannel.prototype.parseReceivedPostMessage = function(msg)\n{\n    if (this.status != \"open\")\n        this.open();\n    this.parseReceived(msg, null, {\n        skipChannelOpen: true,\n        skipChannelClose: true,\n        enableContinuousParsing: true\n    });\n}\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "./channel": {
                  "where": "inline"
                },
                "modules/util": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/stream/callback.js": {
            "requireId": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/stream/callback",
            "memoizeId": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/stream/callback.js",
            "descriptor": {
              "filename": "callback.js",
              "filepath": "../../wildfire-for-js/lib/stream/callback.js",
              "mtime": 1375341064,
              "code": "\nvar WILDFIRE = require(\"../wildfire\"),\n    JSON = require(\"modules/json\");\n\nvar CallbackStream = exports.CallbackStream = function CallbackStream()\n{\n    if (!(this instanceof exports.CallbackStream))\n        return new exports.CallbackStream();\n    this.messagesIndex = 1;\n    this.messages = {};\n\n    var self = this;\n\n    this.dispatcher = WILDFIRE.Dispatcher();\n    // TODO: Use own protocol here\n    this.dispatcher.setProtocol('http://registry.pinf.org/cadorn.org/wildfire/@meta/protocol/component/0.1.0');\n\n\n    this.receiver = WILDFIRE.Receiver();\n    this.receiveHandler = null;\n\n    this.receiver.addListener({\n        onMessageReceived: function(context, message)\n        {\n            var meta = JSON.decode(message.getMeta());\n\n            if(meta[\".action\"] == \"request\")\n            {\n                self.receiveHandler({\n                    meta: meta,\n                    data: JSON.decode(message.getData())\n                }, function(message)\n                {\n                    if (!message || typeof message !== \"object\")\n                        throw new Error(\"Did not get message object for receiveHandler response\");\n                    if (typeof message.data === \"undefined\")\n                        throw new Error(\"Message object from receiveHandler response does not include 'data' property.\");\n                    \n                    var msg = WILDFIRE.Message();\n                    if (typeof message.meta == \"undefined\")\n                        message.meta = {};\n\n                    message.meta[\".callbackid\"] = meta[\".callbackid\"];\n                    message.meta[\".action\"] = \"respond\";\n\n                    try {\n                        msg.setMeta(JSON.encode(message.meta));\n                    } catch(e) {\n                        console.warn(\"Error JSON encoding meta\", e);\n                        throw new Error(\"Error JSON encoding meta: \" + e);\n                    }\n                    try {\n                        msg.setData(JSON.encode(message.data));\n                    } catch(e) {\n                        console.warn(\"Error JSON encoding data\", e);\n                        throw new Error(\"Error JSON encoding data: \" + e);\n                    }\n\n                    try {\n                        self.dispatcher.dispatch(msg, true);\n                    } catch(e) {\n                        console.warn(\"Error dispatching message in \" + module.id, e);\n                        throw new Error(\"Error '\"+e+\"' dispatching message in \" + module.id);\n                    }\n                });\n            }\n            else\n            if(meta[\".action\"] == \"respond\")\n            {\n                if(self.messages[\"i:\" + meta[\".callbackid\"]])\n                {\n                    self.messages[\"i:\" + meta[\".callbackid\"]][1](\n                        {\n                            meta: meta,\n                            data: JSON.decode(message.getData())\n                        }\n                    );\n                    delete self.messages[\"i:\" + meta[\".callbackid\"]];\n                }\n            }\n            else\n                throw new Error(\"NYI\");\n        }\n    });\n}\n\nCallbackStream.prototype.setChannel = function(channel)\n{\n    this.dispatcher.setChannel(channel);\n    channel.addReceiver(this.receiver);\n}\n\nCallbackStream.prototype.setHere = function(id)\n{\n    // TODO: Remove suffix once we use our own protocol for callbacks\n    this.receiver.setId(id + \"-callback\");\n    // TODO: Remove suffix once we use our own protocol for callbacks\n    this.dispatcher.setSender(id + \"-callback\");\n}\n\nCallbackStream.prototype.setThere = function(id)\n{\n    // TODO: Remove suffix once we use our own protocol for callbacks\n    this.dispatcher.setReceiver(id + \"-callback\");\n}\n\nCallbackStream.prototype.send = function(message, callback)\n{\n    var msg = WILDFIRE.Message();\n    if (typeof message.meta == \"undefined\")\n        message.meta = {};\n\n    message.meta[\".callbackid\"] = this.messagesIndex;\n    message.meta[\".action\"] = \"request\";\n\n    msg.setMeta(JSON.encode(message.meta));\n    msg.setData(JSON.encode(message.data));\n\n    this.messages[\"i:\" + this.messagesIndex] = [msg, callback];\n    this.messagesIndex++;\n\n    this.dispatcher.dispatch(msg, true);\n}\n\nCallbackStream.prototype.receive = function(handler)\n{\n    this.receiveHandler = handler;\n}\n",
              "globals": {
                "WILDFIRE": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "JSON": {
                  "type": "assign"
                },
                "CallbackStream": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                },
                "console": {
                  "type": "reference"
                },
                "module": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "../wildfire": {
                    "where": "inline"
                  },
                  "modules/json": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../../wildfire-for-js/lib/stream';",
              "code": "function(require, exports, module) {var __dirname = '../../wildfire-for-js/lib/stream';\n\nvar WILDFIRE = require(\"../wildfire\"),\n    JSON = require(\"modules/json\");\n\nvar CallbackStream = exports.CallbackStream = function CallbackStream()\n{\n    if (!(this instanceof exports.CallbackStream))\n        return new exports.CallbackStream();\n    this.messagesIndex = 1;\n    this.messages = {};\n\n    var self = this;\n\n    this.dispatcher = WILDFIRE.Dispatcher();\n    // TODO: Use own protocol here\n    this.dispatcher.setProtocol('http://registry.pinf.org/cadorn.org/wildfire/@meta/protocol/component/0.1.0');\n\n\n    this.receiver = WILDFIRE.Receiver();\n    this.receiveHandler = null;\n\n    this.receiver.addListener({\n        onMessageReceived: function(context, message)\n        {\n            var meta = JSON.decode(message.getMeta());\n\n            if(meta[\".action\"] == \"request\")\n            {\n                self.receiveHandler({\n                    meta: meta,\n                    data: JSON.decode(message.getData())\n                }, function(message)\n                {\n                    if (!message || typeof message !== \"object\")\n                        throw new Error(\"Did not get message object for receiveHandler response\");\n                    if (typeof message.data === \"undefined\")\n                        throw new Error(\"Message object from receiveHandler response does not include 'data' property.\");\n                    \n                    var msg = WILDFIRE.Message();\n                    if (typeof message.meta == \"undefined\")\n                        message.meta = {};\n\n                    message.meta[\".callbackid\"] = meta[\".callbackid\"];\n                    message.meta[\".action\"] = \"respond\";\n\n                    try {\n                        msg.setMeta(JSON.encode(message.meta));\n                    } catch(e) {\n                        console.warn(\"Error JSON encoding meta\", e);\n                        throw new Error(\"Error JSON encoding meta: \" + e);\n                    }\n                    try {\n                        msg.setData(JSON.encode(message.data));\n                    } catch(e) {\n                        console.warn(\"Error JSON encoding data\", e);\n                        throw new Error(\"Error JSON encoding data: \" + e);\n                    }\n\n                    try {\n                        self.dispatcher.dispatch(msg, true);\n                    } catch(e) {\n                        console.warn(\"Error dispatching message in \" + module.id, e);\n                        throw new Error(\"Error '\"+e+\"' dispatching message in \" + module.id);\n                    }\n                });\n            }\n            else\n            if(meta[\".action\"] == \"respond\")\n            {\n                if(self.messages[\"i:\" + meta[\".callbackid\"]])\n                {\n                    self.messages[\"i:\" + meta[\".callbackid\"]][1](\n                        {\n                            meta: meta,\n                            data: JSON.decode(message.getData())\n                        }\n                    );\n                    delete self.messages[\"i:\" + meta[\".callbackid\"]];\n                }\n            }\n            else\n                throw new Error(\"NYI\");\n        }\n    });\n}\n\nCallbackStream.prototype.setChannel = function(channel)\n{\n    this.dispatcher.setChannel(channel);\n    channel.addReceiver(this.receiver);\n}\n\nCallbackStream.prototype.setHere = function(id)\n{\n    // TODO: Remove suffix once we use our own protocol for callbacks\n    this.receiver.setId(id + \"-callback\");\n    // TODO: Remove suffix once we use our own protocol for callbacks\n    this.dispatcher.setSender(id + \"-callback\");\n}\n\nCallbackStream.prototype.setThere = function(id)\n{\n    // TODO: Remove suffix once we use our own protocol for callbacks\n    this.dispatcher.setReceiver(id + \"-callback\");\n}\n\nCallbackStream.prototype.send = function(message, callback)\n{\n    var msg = WILDFIRE.Message();\n    if (typeof message.meta == \"undefined\")\n        message.meta = {};\n\n    message.meta[\".callbackid\"] = this.messagesIndex;\n    message.meta[\".action\"] = \"request\";\n\n    msg.setMeta(JSON.encode(message.meta));\n    msg.setData(JSON.encode(message.data));\n\n    this.messages[\"i:\" + this.messagesIndex] = [msg, callback];\n    this.messagesIndex++;\n\n    this.dispatcher.dispatch(msg, true);\n}\n\nCallbackStream.prototype.receive = function(handler)\n{\n    this.receiveHandler = handler;\n}\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "../wildfire": {
                  "where": "inline"
                },
                "modules/json": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "bfbbc67b6690f91ab66716d6e0cec42b3a954a3b-receivers/wildfire/fireconsole.js": {
            "requireId": "bfbbc67b6690f91ab66716d6e0cec42b3a954a3b-receivers/wildfire/fireconsole",
            "memoizeId": "bfbbc67b6690f91ab66716d6e0cec42b3a954a3b-receivers/wildfire/fireconsole.js",
            "descriptor": {
              "filename": "fireconsole.js",
              "filepath": "../receivers/wildfire/fireconsole.js",
              "mtime": 1420321506,
              "code": "\nvar WILDFIRE = require(\"wildfire/wildfire\");\nvar JSON = require(\"modules/json\");\n\n\nexports.getWildfireReceiver = function(context) {\n    var receiver = WILDFIRE.Receiver();\n    receiver.setId(\"http://github.com/fireconsole/@meta/receivers/wildfire/fireconsole/0\");\n    receiver.addListener({\n        \n        onMessageReceived: function(request, message) {\n\n            try {\n\n                var data = JSON.decode(message.getData());\n\n                if (data.method = \"callApi\") {\n\n                    return context.callApi(data.args[0], data.args[1] || {});\n\n                } else {\n                    throw new Error(\"Method '\" + data.method + \"' not found!\");\n                }\n\n            } catch (err) {\n                console.error(err);\n            }\n        }\n\n    });\n    return receiver;\n}\n\n",
              "globals": {
                "WILDFIRE": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "JSON": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                },
                "console": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "wildfire/wildfire": {
                    "where": "inline"
                  },
                  "modules/json": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../receivers/wildfire';",
              "code": "function(require, exports, module) {var __dirname = '../receivers/wildfire';\n\nvar WILDFIRE = require(\"wildfire/wildfire\");\nvar JSON = require(\"modules/json\");\n\n\nexports.getWildfireReceiver = function(context) {\n    var receiver = WILDFIRE.Receiver();\n    receiver.setId(\"http://github.com/fireconsole/@meta/receivers/wildfire/fireconsole/0\");\n    receiver.addListener({\n        \n        onMessageReceived: function(request, message) {\n\n            try {\n\n                var data = JSON.decode(message.getData());\n\n                if (data.method = \"callApi\") {\n\n                    return context.callApi(data.args[0], data.args[1] || {});\n\n                } else {\n                    throw new Error(\"Method '\" + data.method + \"' not found!\");\n                }\n\n            } catch (err) {\n                console.error(err);\n            }\n        }\n\n    });\n    return receiver;\n}\n\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "wildfire/wildfire": {
                  "where": "inline"
                },
                "modules/json": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "bfbbc67b6690f91ab66716d6e0cec42b3a954a3b-receivers/wildfire/insight/console/random.js": {
            "requireId": "bfbbc67b6690f91ab66716d6e0cec42b3a954a3b-receivers/wildfire/insight/console/random",
            "memoizeId": "bfbbc67b6690f91ab66716d6e0cec42b3a954a3b-receivers/wildfire/insight/console/random.js",
            "descriptor": {
              "filename": "random.js",
              "filepath": "../receivers/wildfire/insight/console/random.js",
              "mtime": 1420339784,
              "code": "\nvar WILDFIRE = require(\"wildfire/wildfire\");\nvar JSON = require(\"modules/json\");\n\n\nexports.getWildfireReceiver = function(context) {\n    var receiver = WILDFIRE.Receiver();\n    receiver.setId(\"http://github.com/fireconsole/@meta/receivers/wildfire/insight/console/random/0\");\n    receiver.addListener({\n        \n        onMessageReceived: function(request, message) {\n\n            try {\n\n                var data = message.getData();\n\n//console.log(\"RANDOM CONSOLE DATA\", data);\n//console.log(\"context\", context);\n\n                context.callApi(\"console.log\", {\n                    source: \"source\",\n                    context: {},\n                    args: data\n                }).fail(function (err) {\n                    throw err;\n                });\n\n            } catch (err) {\n                console.error(err);\n            }\n        }\n\n    });\n    return receiver;\n}\n\n",
              "globals": {
                "WILDFIRE": {
                  "type": "assign"
                },
                "require": {
                  "type": "call"
                },
                "JSON": {
                  "type": "assign"
                },
                "exports": {
                  "type": "reference"
                },
                "console": {
                  "type": "reference"
                }
              },
              "syntax": "javascript",
              "format": "commonjs",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {
                  "wildfire/wildfire": {
                    "where": "inline"
                  },
                  "modules/json": {
                    "where": "inline"
                  }
                },
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "commonjs",
              "top": "function(require, exports, module) {var __dirname = '../receivers/wildfire/insight/console';",
              "code": "function(require, exports, module) {var __dirname = '../receivers/wildfire/insight/console';\n\nvar WILDFIRE = require(\"wildfire/wildfire\");\nvar JSON = require(\"modules/json\");\n\n\nexports.getWildfireReceiver = function(context) {\n    var receiver = WILDFIRE.Receiver();\n    receiver.setId(\"http://github.com/fireconsole/@meta/receivers/wildfire/insight/console/random/0\");\n    receiver.addListener({\n        \n        onMessageReceived: function(request, message) {\n\n            try {\n\n                var data = message.getData();\n\n//console.log(\"RANDOM CONSOLE DATA\", data);\n//console.log(\"context\", context);\n\n                context.callApi(\"console.log\", {\n                    source: \"source\",\n                    context: {},\n                    args: data\n                }).fail(function (err) {\n                    throw err;\n                });\n\n            } catch (err) {\n                console.error(err);\n            }\n        }\n\n    });\n    return receiver;\n}\n\n\n}",
              "bottom": "}"
            },
            "dependencies": {
              "static": {
                "wildfire/wildfire": {
                  "where": "inline"
                },
                "modules/json": {
                  "where": "inline"
                }
              },
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "21722499c6c2ae46d0a8a6f4ec16b0de4041616a-widget/widget.css": {
            "requireId": "21722499c6c2ae46d0a8a6f4ec16b0de4041616a-widget/widget.css",
            "memoizeId": "21722499c6c2ae46d0a8a6f4ec16b0de4041616a-widget/widget.css",
            "descriptor": {
              "filename": "widget.css",
              "filepath": "../widget/widget.css",
              "mtime": 1420182617,
              "code": "DIV.fc-widget-console {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  padding: 0px;\n  margin: 0px;\n}",
              "globals": {},
              "syntax": null,
              "format": "utf8",
              "undefine": [],
              "uses": {},
              "dependencies": {
                "static": {},
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "url-encoded",
              "top": null,
              "code": "'DIV.fc-widget-console%20%7B%0A%20%20width%3A%20100%25%3B%0A%20%20height%3A%20100%25%3B%0A%20%20position%3A%20relative%3B%0A%20%20padding%3A%200px%3B%0A%20%20margin%3A%200px%3B%0A%7D'",
              "bottom": null
            },
            "dependencies": {
              "static": {},
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "21722499c6c2ae46d0a8a6f4ec16b0de4041616a-widget/jquery.js": {
            "requireId": "21722499c6c2ae46d0a8a6f4ec16b0de4041616a-widget/jquery",
            "memoizeId": "21722499c6c2ae46d0a8a6f4ec16b0de4041616a-widget/jquery.js",
            "descriptor": {
              "filename": "jquery.js",
              "filepath": "../widget/jquery.js",
              "mtime": 1420420863,
              "code": "/*!\n * jQuery JavaScript Library v2.1.3\n * http://jquery.com/\n *\n * Includes Sizzle.js\n * http://sizzlejs.com/\n *\n * Copyright 2005, 2014 jQuery Foundation, Inc. and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2014-12-18T15:11Z\n */\n\n(function( global, factory ) {\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w, true );\n\t\t\t};\n\t} else {\n\t\tfactory( global, true );\n\t}\n\n// Pass this if window is not defined yet\n}(typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Support: Firefox 18+\n// Can't be in strict mode, several libs including ASP.NET trace\n// the stack via arguments.caller.callee and Firefox dies if\n// you try to trace through \"use strict\" call chains. (#13335)\n//\n\nvar arr = [];\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar support = {};\n\n\n\nvar\n\t// Use the correct document accordingly with window argument (sandbox)\n\tdocument = window.document,\n\n\tversion = \"2.1.3\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android<4.1\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\n\t// Matches dashed string for camelizing\n\trmsPrefix = /^-ms-/,\n\trdashAlpha = /-([\\da-z])/gi,\n\n\t// Used by jQuery.camelCase as callback to replace()\n\tfcamelCase = function( all, letter ) {\n\t\treturn letter.toUpperCase();\n\t};\n\njQuery.fn = jQuery.prototype = {\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// Start with an empty selector\n\tselector: \"\",\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\t\treturn num != null ?\n\n\t\t\t// Return just the one element from the set\n\t\t\t( num < 0 ? this[ num + this.length ] : this[ num ] ) :\n\n\t\t\t// Return all the elements in a clean array\n\t\t\tslice.call( this );\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\t\tret.context = this.context;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\t// (You can seed the arguments with an array of args, but this is\n\t// only used internally.)\n\teach: function( callback, args ) {\n\t\treturn jQuery.each( this, callback, args );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map(this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t}));\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor(null);\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !jQuery.isFunction(target) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\t\t// Only deal with non-null/undefined values\n\t\tif ( (options = arguments[ i ]) != null ) {\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && jQuery.isArray(src) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject(src) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend({\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisFunction: function( obj ) {\n\t\treturn jQuery.type(obj) === \"function\";\n\t},\n\n\tisArray: Array.isArray,\n\n\tisWindow: function( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t},\n\n\tisNumeric: function( obj ) {\n\t\t// parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t// adding 1 corrects loss of precision from parseFloat (#15100)\n\t\treturn !jQuery.isArray( obj ) && (obj - parseFloat( obj ) + 1) >= 0;\n\t},\n\n\tisPlainObject: function( obj ) {\n\t\t// Not plain objects:\n\t\t// - Any object or value whose internal [[Class]] property is not \"[object Object]\"\n\t\t// - DOM nodes\n\t\t// - window\n\t\tif ( jQuery.type( obj ) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( obj.constructor &&\n\t\t\t\t!hasOwn.call( obj.constructor.prototype, \"isPrototypeOf\" ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If the function hasn't returned already, we're confident that\n\t\t// |obj| is a plain object, created by {} or constructed with new Object\n\t\treturn true;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\ttype: function( obj ) {\n\t\tif ( obj == null ) {\n\t\t\treturn obj + \"\";\n\t\t}\n\t\t// Support: Android<4.0, iOS<6 (functionish RegExp)\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\t\tclass2type[ toString.call(obj) ] || \"object\" :\n\t\t\ttypeof obj;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code ) {\n\t\tvar script,\n\t\t\tindirect = eval;\n\n\t\tcode = jQuery.trim( code );\n\n\t\tif ( code ) {\n\t\t\t// If the code includes a valid, prologue position\n\t\t\t// strict mode pragma, execute code by injecting a\n\t\t\t// script tag into the document.\n\t\t\tif ( code.indexOf(\"use strict\") === 1 ) {\n\t\t\t\tscript = document.createElement(\"script\");\n\t\t\t\tscript.text = code;\n\t\t\t\tdocument.head.appendChild( script ).parentNode.removeChild( script );\n\t\t\t} else {\n\t\t\t// Otherwise, avoid the DOM node creation, insertion\n\t\t\t// and removal by using an indirect global eval\n\t\t\t\tindirect( code );\n\t\t\t}\n\t\t}\n\t},\n\n\t// Convert dashed to camelCase; used by the css and data modules\n\t// Support: IE9-11+\n\t// Microsoft forgot to hump their vendor prefix (#9572)\n\tcamelCase: function( string ) {\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n\t},\n\n\tnodeName: function( elem, name ) {\n\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\t},\n\n\t// args is for internal usage only\n\teach: function( obj, callback, args ) {\n\t\tvar value,\n\t\t\ti = 0,\n\t\t\tlength = obj.length,\n\t\t\tisArray = isArraylike( obj );\n\n\t\tif ( args ) {\n\t\t\tif ( isArray ) {\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tvalue = callback.apply( obj[ i ], args );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i in obj ) {\n\t\t\t\t\tvalue = callback.apply( obj[ i ], args );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// A special, fast, case for the most common use of each\n\t\t} else {\n\t\t\tif ( isArray ) {\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tvalue = callback.call( obj[ i ], i, obj[ i ] );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i in obj ) {\n\t\t\t\t\tvalue = callback.call( obj[ i ], i, obj[ i ] );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android<4.1\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArraylike( Object(arr) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar value,\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tisArray = isArraylike( elems ),\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArray ) {\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// Bind a function to a context, optionally partially applying any\n\t// arguments.\n\tproxy: function( fn, context ) {\n\t\tvar tmp, args, proxy;\n\n\t\tif ( typeof context === \"string\" ) {\n\t\t\ttmp = fn[ context ];\n\t\t\tcontext = fn;\n\t\t\tfn = tmp;\n\t\t}\n\n\t\t// Quick check to determine if target is callable, in the spec\n\t\t// this throws a TypeError, but we will just return undefined.\n\t\tif ( !jQuery.isFunction( fn ) ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Simulated bind\n\t\targs = slice.call( arguments, 2 );\n\t\tproxy = function() {\n\t\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t\t};\n\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\t\treturn proxy;\n\t},\n\n\tnow: Date.now,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n});\n\n// Populate the class2type map\njQuery.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n});\n\nfunction isArraylike( obj ) {\n\tvar length = obj.length,\n\t\ttype = jQuery.type( obj );\n\n\tif ( type === \"function\" || jQuery.isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\tif ( obj.nodeType === 1 && length ) {\n\t\treturn true;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.2.0-pre\n * http://sizzlejs.com/\n *\n * Copyright 2008, 2014 jQuery Foundation, Inc. and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2014-12-16\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// General-purpose constants\n\tMAX_NEGATIVE = 1 << 31,\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// http://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\t// http://www.w3.org/TR/css3-syntax/#characters\n\tcharacterEncoding = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\n\n\t// Loosely modeled on CSS identifier characters\n\t// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors\n\t// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = characterEncoding.replace( \"w\", \"w#\" ),\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + characterEncoding + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + characterEncoding + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + characterEncoding + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + characterEncoding + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + characterEncoding.replace( \"w\", \"w*\" ) + \")\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\trescape = /'|\\\\/g,\n\n\t// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t};\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar match, elem, m, nodeType,\n\t\t// QSA vars\n\t\ti, groups, old, nid, newContext, newSelector;\n\n\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\n\tcontext = context || document;\n\tresults = results || [];\n\tnodeType = context.nodeType;\n\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\tif ( !seed && documentIsHTML ) {\n\n\t\t// Try to shortcut find operations when possible (e.g., not under DocumentFragment)\n\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\t\t\t// Speed-up: Sizzle(\"#ID\")\n\t\t\tif ( (m = match[1]) ) {\n\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\telem = context.getElementById( m );\n\t\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t\t// nodes that are no longer in the document (jQuery #6963)\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\t\t\t\t\t\t// Handle the case where IE, Opera, and Webkit return items\n\t\t\t\t\t\t// by name instead of ID\n\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Context is not a document\n\t\t\t\t\tif ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&\n\t\t\t\t\t\tcontains( context, elem ) && elem.id === m ) {\n\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Speed-up: Sizzle(\"TAG\")\n\t\t\t} else if ( match[2] ) {\n\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\treturn results;\n\n\t\t\t// Speed-up: Sizzle(\".CLASS\")\n\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName ) {\n\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\treturn results;\n\t\t\t}\n\t\t}\n\n\t\t// QSA path\n\t\tif ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\t\t\tnid = old = expando;\n\t\t\tnewContext = context;\n\t\t\tnewSelector = nodeType !== 1 && selector;\n\n\t\t\t// qSA works strangely on Element-rooted queries\n\t\t\t// We can work around this by specifying an extra ID on the root\n\t\t\t// and working up from there (Thanks to Andrew Dupont for the technique)\n\t\t\t// IE 8 doesn't work on object elements\n\t\t\tif ( nodeType === 1 && context.nodeName.toLowerCase() !== \"object\" ) {\n\t\t\t\tgroups = tokenize( selector );\n\n\t\t\t\tif ( (old = context.getAttribute(\"id\")) ) {\n\t\t\t\t\tnid = old.replace( rescape, \"\\\\$&\" );\n\t\t\t\t} else {\n\t\t\t\t\tcontext.setAttribute( \"id\", nid );\n\t\t\t\t}\n\t\t\t\tnid = \"[id='\" + nid + \"'] \";\n\n\t\t\t\ti = groups.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tgroups[i] = nid + toSelector( groups[i] );\n\t\t\t\t}\n\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) || context;\n\t\t\t\tnewSelector = groups.join(\",\");\n\t\t\t}\n\n\t\t\tif ( newSelector ) {\n\t\t\t\ttry {\n\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t);\n\t\t\t\t\treturn results;\n\t\t\t\t} catch(qsaError) {\n\t\t\t\t} finally {\n\t\t\t\t\tif ( !old ) {\n\t\t\t\t\t\tcontext.removeAttribute(\"id\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {Function(string, Object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created div and expects a boolean result\n */\nfunction assert( fn ) {\n\tvar div = document.createElement(\"div\");\n\n\ttry {\n\t\treturn !!fn( div );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( div.parentNode ) {\n\t\t\tdiv.parentNode.removeChild( div );\n\t\t}\n\t\t// release memory in IE\n\t\tdiv = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = attrs.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\t( ~b.sourceIndex || MAX_NEGATIVE ) -\n\t\t\t( ~a.sourceIndex || MAX_NEGATIVE );\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, parent,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// If no document and documentElement is available, return\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Set our document\n\tdocument = doc;\n\tdocElem = doc.documentElement;\n\tparent = doc.defaultView;\n\n\t// Support: IE>8\n\t// If iframe document is assigned to \"document\" variable and if iframe has been reloaded,\n\t// IE will throw \"permission denied\" error when accessing \"document\" variable, see jQuery #13936\n\t// IE6-8 do not support the defaultView property so parent will be undefined\n\tif ( parent && parent !== parent.top ) {\n\t\t// IE11 does not have attachEvent, so all must suffer\n\t\tif ( parent.addEventListener ) {\n\t\t\tparent.addEventListener( \"unload\", unloadHandler, false );\n\t\t} else if ( parent.attachEvent ) {\n\t\t\tparent.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Support tests\n\t---------------------------------------------------------------------- */\n\tdocumentIsHTML = !isXML( doc );\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( div ) {\n\t\tdiv.className = \"i\";\n\t\treturn !div.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( div ) {\n\t\tdiv.appendChild( doc.createComment(\"\") );\n\t\treturn !div.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( doc.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( div ) {\n\t\tdocElem.appendChild( div ).id = expando;\n\t\treturn !doc.getElementsByName || !doc.getElementsByName( expando ).length;\n\t});\n\n\t// ID find and filter\n\tif ( support.getById ) {\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar m = context.getElementById( id );\n\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t// nodes that are no longer in the document #6963\n\t\t\t\treturn m && m.parentNode ? [ m ] : [];\n\t\t\t}\n\t\t};\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t} else {\n\t\t// Support: IE6/7\n\t\t// getElementById is not reliable as a find shortcut\n\t\tdelete Expr.find[\"ID\"];\n\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" && elem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See http://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( doc.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( div ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// http://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( div ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\f]' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( div.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !div.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.2+, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.7+\n\t\t\tif ( !div.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibing-combinator selector` fails\n\t\t\tif ( !div.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( div ) {\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = doc.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tdiv.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( div.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":enabled\").length ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tdiv.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( div ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( div, \"div\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( div, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully does not implement inclusive descendent\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === doc ? -1 :\n\t\t\t\tb === doc ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn doc;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, outerCache, node, diff, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\t\t\t\t\t\t\touterCache = parent[ expando ] || (parent[ expando ] = {});\n\t\t\t\t\t\t\tcache = outerCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[0] === dirruns && cache[1];\n\t\t\t\t\t\t\tdiff = cache[0] === dirruns && cache[2];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\touterCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t} else if ( useCache && (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) && cache[0] === dirruns ) {\n\t\t\t\t\t\t\tdiff = cache[1];\n\n\t\t\t\t\t\t// xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\tif ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) && ++diff ) {\n\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t(node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": function( elem ) {\n\t\t\treturn elem.disabled === false;\n\t\t},\n\n\t\t\"disabled\": function( elem ) {\n\t\t\treturn elem.disabled === true;\n\t\t},\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tcheckNonElements = base && dir === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\t\t\t\t\t\tif ( (oldCache = outerCache[ dir ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\touterCache[ dir ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context !== document && context;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Keep `i` a string if there are no elements so `matchedCount` will be \"00\" below\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\tmatchedCount += i;\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is no seed and only one group\n\tif ( match.length === 1 ) {\n\n\t\t// Take a shortcut and set the context if the root selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tsupport.getById && context.nodeType === 9 && documentIsHTML &&\n\t\t\t\tExpr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\trsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( div1 ) {\n\t// Should return 1, but returns 4 (following)\n\treturn div1.compareDocumentPosition( document.createElement(\"div\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( div ) {\n\tdiv.innerHTML = \"<a href='#'></a>\";\n\treturn div.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( div ) {\n\tdiv.innerHTML = \"<input/>\";\n\tdiv.firstChild.setAttribute( \"value\", \"\" );\n\treturn div.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( div ) {\n\treturn div.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\njQuery.expr[\":\"] = jQuery.expr.pseudos;\njQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\n\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\nvar rsingleTag = (/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/);\n\n\n\nvar risSimple = /^.[^:#\\[\\.,]*$/;\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( jQuery.isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\t/* jshint -W018 */\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t});\n\n\t}\n\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t});\n\n\t}\n\n\tif ( typeof qualifier === \"string\" ) {\n\t\tif ( risSimple.test( qualifier ) ) {\n\t\t\treturn jQuery.filter( qualifier, elements, not );\n\t\t}\n\n\t\tqualifier = jQuery.filter( qualifier, elements );\n\t}\n\n\treturn jQuery.grep( elements, function( elem ) {\n\t\treturn ( indexOf.call( qualifier, elem ) >= 0 ) !== not;\n\t});\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\treturn elems.length === 1 && elem.nodeType === 1 ?\n\t\tjQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :\n\t\tjQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\t\treturn elem.nodeType === 1;\n\t\t}));\n};\n\njQuery.fn.extend({\n\tfind: function( selector ) {\n\t\tvar i,\n\t\t\tlen = this.length,\n\t\t\tret = [],\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter(function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}) );\n\t\t}\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\t// Needed because $( selector, context ) becomes $( context ).find( selector )\n\t\tret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );\n\t\tret.selector = this.selector ? this.selector + \" \" + selector : selector;\n\t\treturn ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow(this, selector || [], false) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow(this, selector || [], true) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n});\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\n\n\tinit = jQuery.fn.init = function( selector, context ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[0] === \"<\" && selector[ selector.length - 1 ] === \">\" && selector.length >= 3 ) {\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && (match[1] || !context) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[1] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[0] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[1],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[2] );\n\n\t\t\t\t\t// Support: Blackberry 4.6\n\t\t\t\t\t// gEBID returns nodes no longer in the document (#6963)\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\tthis[0] = elem;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.context = document;\n\t\t\t\t\tthis.selector = selector;\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || rootjQuery ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis.context = this[0] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( jQuery.isFunction( selector ) ) {\n\t\t\treturn typeof rootjQuery.ready !== \"undefined\" ?\n\t\t\t\trootjQuery.ready( selector ) :\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\tif ( selector.selector !== undefined ) {\n\t\t\tthis.selector = selector.selector;\n\t\t\tthis.context = selector.context;\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.extend({\n\tdir: function( elem, dir, until ) {\n\t\tvar matched = [],\n\t\t\ttruncate = until !== undefined;\n\n\t\twhile ( (elem = elem[ dir ]) && elem.nodeType !== 9 ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tmatched.push( elem );\n\t\t\t}\n\t\t}\n\t\treturn matched;\n\t},\n\n\tsibling: function( n, elem ) {\n\t\tvar matched = [];\n\n\t\tfor ( ; n; n = n.nextSibling ) {\n\t\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\t\tmatched.push( n );\n\t\t\t}\n\t\t}\n\n\t\treturn matched;\n\t}\n});\n\njQuery.fn.extend({\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter(function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[i] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\tpos = rneedsContext.test( selectors ) || typeof selectors !== \"string\" ?\n\t\t\t\tjQuery( selectors, context || this.context ) :\n\t\t\t\t0;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tfor ( cur = this[i]; cur && cur !== context; cur = cur.parentNode ) {\n\t\t\t\t// Always skip document fragments\n\t\t\t\tif ( cur.nodeType < 11 && (pos ?\n\t\t\t\t\tpos.index(cur) > -1 :\n\n\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\tjQuery.find.matchesSelector(cur, selectors)) ) {\n\n\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.unique( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.unique(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter(selector)\n\t\t);\n\t}\n});\n\nfunction sibling( cur, dir ) {\n\twhile ( (cur = cur[dir]) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each({\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn jQuery.dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn jQuery.dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn jQuery.dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn jQuery.sibling( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\treturn elem.contentDocument || jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.unique( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n});\nvar rnotwhite = (/\\S+/g);\n\n\n\n// String to Object options format cache\nvar optionsCache = {};\n\n// Convert String-formatted options into Object-formatted ones and store in cache\nfunction createOptions( options ) {\n\tvar object = optionsCache[ options ] = {};\n\tjQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t});\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\t( optionsCache[ options ] || createOptions( options ) ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Last fire value (for non-forgettable lists)\n\t\tmemory,\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\t\t// Flag to know if list is currently firing\n\t\tfiring,\n\t\t// First callback to fire (used internally by add and fireWith)\n\t\tfiringStart,\n\t\t// End of the loop when firing\n\t\tfiringLength,\n\t\t// Index of currently firing callback (modified by remove if needed)\n\t\tfiringIndex,\n\t\t// Actual callback list\n\t\tlist = [],\n\t\t// Stack of fire calls for repeatable lists\n\t\tstack = !options.once && [],\n\t\t// Fire callbacks\n\t\tfire = function( data ) {\n\t\t\tmemory = options.memory && data;\n\t\t\tfired = true;\n\t\t\tfiringIndex = firingStart || 0;\n\t\t\tfiringStart = 0;\n\t\t\tfiringLength = list.length;\n\t\t\tfiring = true;\n\t\t\tfor ( ; list && firingIndex < firingLength; firingIndex++ ) {\n\t\t\t\tif ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {\n\t\t\t\t\tmemory = false; // To prevent further calls using add\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfiring = false;\n\t\t\tif ( list ) {\n\t\t\t\tif ( stack ) {\n\t\t\t\t\tif ( stack.length ) {\n\t\t\t\t\t\tfire( stack.shift() );\n\t\t\t\t\t}\n\t\t\t\t} else if ( memory ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t} else {\n\t\t\t\t\tself.disable();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// Actual Callbacks object\n\t\tself = {\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\t// First, we save the current length\n\t\t\t\t\tvar start = list.length;\n\t\t\t\t\t(function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tvar type = jQuery.type( arg );\n\t\t\t\t\t\t\tif ( type === \"function\" ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && type !== \"string\" ) {\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t})( arguments );\n\t\t\t\t\t// Do we need to add the callbacks to the\n\t\t\t\t\t// current firing batch?\n\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\tfiringLength = list.length;\n\t\t\t\t\t// With memory, if we're not firing then\n\t\t\t\t\t// we should call right away\n\t\t\t\t\t} else if ( memory ) {\n\t\t\t\t\t\tfiringStart = start;\n\t\t\t\t\t\tfire( memory );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\t\tvar index;\n\t\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\t\tlist.splice( index, 1 );\n\t\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\t\t\tif ( index <= firingLength ) {\n\t\t\t\t\t\t\t\t\tfiringLength--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );\n\t\t\t},\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tlist = [];\n\t\t\t\tfiringLength = 0;\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Have the list do nothing anymore\n\t\t\tdisable: function() {\n\t\t\t\tlist = stack = memory = undefined;\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Is it disabled?\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\t\t\t// Lock the list in its current state\n\t\t\tlock: function() {\n\t\t\t\tstack = undefined;\n\t\t\t\tif ( !memory ) {\n\t\t\t\t\tself.disable();\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Is it locked?\n\t\t\tlocked: function() {\n\t\t\t\treturn !stack;\n\t\t\t},\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( list && ( !fired || stack ) ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\tstack.push( args );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfire( args );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\njQuery.extend({\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\t\t\t\t// action, add listener, listener list, final state\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), \"rejected\" ],\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks(\"memory\") ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tthen: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\t\t\t\t\treturn jQuery.Deferred(function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\t\t\t\t\tvar fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];\n\t\t\t\t\t\t\t// deferred[ done | fail | progress ] for forwarding actions to newDefer\n\t\t\t\t\t\t\tdeferred[ tuple[1] ](function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject )\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t}).promise();\n\t\t\t\t},\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Keep pipe for back-compat\n\t\tpromise.pipe = promise.then;\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 3 ];\n\n\t\t\t// promise[ done | fail | progress ] = list.add\n\t\t\tpromise[ tuple[1] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(function() {\n\t\t\t\t\t// state = [ resolved | rejected ]\n\t\t\t\t\tstate = stateString;\n\n\t\t\t\t// [ reject_list | resolve_list ].disable; progress_list.lock\n\t\t\t\t}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\n\t\t\t}\n\n\t\t\t// deferred[ resolve | reject | notify ]\n\t\t\tdeferred[ tuple[0] ] = function() {\n\t\t\t\tdeferred[ tuple[0] + \"With\" ]( this === deferred ? promise : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\t\t\tdeferred[ tuple[0] + \"With\" ] = list.fireWith;\n\t\t});\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( subordinate /* , ..., subordinateN */ ) {\n\t\tvar i = 0,\n\t\t\tresolveValues = slice.call( arguments ),\n\t\t\tlength = resolveValues.length,\n\n\t\t\t// the count of uncompleted subordinates\n\t\t\tremaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,\n\n\t\t\t// the master Deferred. If resolveValues consist of only a single Deferred, just use that.\n\t\t\tdeferred = remaining === 1 ? subordinate : jQuery.Deferred(),\n\n\t\t\t// Update function for both resolve and progress values\n\t\t\tupdateFunc = function( i, contexts, values ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tcontexts[ i ] = this;\n\t\t\t\t\tvalues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( values === progressValues ) {\n\t\t\t\t\t\tdeferred.notifyWith( contexts, values );\n\t\t\t\t\t} else if ( !( --remaining ) ) {\n\t\t\t\t\t\tdeferred.resolveWith( contexts, values );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tprogressValues, progressContexts, resolveContexts;\n\n\t\t// Add listeners to Deferred subordinates; treat others as resolved\n\t\tif ( length > 1 ) {\n\t\t\tprogressValues = new Array( length );\n\t\t\tprogressContexts = new Array( length );\n\t\t\tresolveContexts = new Array( length );\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\n\t\t\t\t\tresolveValues[ i ].promise()\n\t\t\t\t\t\t.done( updateFunc( i, resolveContexts, resolveValues ) )\n\t\t\t\t\t\t.fail( deferred.reject )\n\t\t\t\t\t\t.progress( updateFunc( i, progressContexts, progressValues ) );\n\t\t\t\t} else {\n\t\t\t\t\t--remaining;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If we're not waiting on anything, resolve the master\n\t\tif ( !remaining ) {\n\t\t\tdeferred.resolveWith( resolveContexts, resolveValues );\n\t\t}\n\n\t\treturn deferred.promise();\n\t}\n});\n\n\n// The deferred used on DOM ready\nvar readyList;\n\njQuery.fn.ready = function( fn ) {\n\t// Add the callback\n\tjQuery.ready.promise().done( fn );\n\n\treturn this;\n};\n\njQuery.extend({\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Hold (or release) the ready event\n\tholdReady: function( hold ) {\n\t\tif ( hold ) {\n\t\t\tjQuery.readyWait++;\n\t\t} else {\n\t\t\tjQuery.ready( true );\n\t\t}\n\t},\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\n\t\t// Trigger any bound ready events\n\t\tif ( jQuery.fn.triggerHandler ) {\n\t\t\tjQuery( document ).triggerHandler( \"ready\" );\n\t\t\tjQuery( document ).off( \"ready\" );\n\t\t}\n\t}\n});\n\n/**\n * The ready event handler and self cleanup method\n */\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed, false );\n\twindow.removeEventListener( \"load\", completed, false );\n\tjQuery.ready();\n}\n\njQuery.ready.promise = function( obj ) {\n\tif ( !readyList ) {\n\n\t\treadyList = jQuery.Deferred();\n\n\t\t// Catch cases where $(document).ready() is called after the browser event has already occurred.\n\t\t// We once tried to use readyState \"interactive\" here, but it caused issues like the one\n\t\t// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15\n\t\tif ( document.readyState === \"complete\" ) {\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\t\tsetTimeout( jQuery.ready );\n\n\t\t} else {\n\n\t\t\t// Use the handy event callback\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed, false );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.addEventListener( \"load\", completed, false );\n\t\t}\n\t}\n\treturn readyList.promise( obj );\n};\n\n// Kick off the DOM ready check even if the user does not\njQuery.ready.promise();\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = jQuery.access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( jQuery.type( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\tjQuery.access( elems, fn, i, key[i], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn chainable ?\n\t\telems :\n\n\t\t// Gets\n\t\tbulk ?\n\t\t\tfn.call( elems ) :\n\t\t\tlen ? fn( elems[0], key ) : emptyGet;\n};\n\n\n/**\n * Determines whether an object can have data\n */\njQuery.acceptData = function( owner ) {\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\t/* jshint -W018 */\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\nfunction Data() {\n\t// Support: Android<4,\n\t// Old WebKit does not have Object.preventExtensions/freeze method,\n\t// return new empty object instead with no [[set]] accessor\n\tObject.defineProperty( this.cache = {}, 0, {\n\t\tget: function() {\n\t\t\treturn {};\n\t\t}\n\t});\n\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\nData.accepts = jQuery.acceptData;\n\nData.prototype = {\n\tkey: function( owner ) {\n\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t// but we should not, see #8335.\n\t\t// Always return the key for a frozen object.\n\t\tif ( !Data.accepts( owner ) ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar descriptor = {},\n\t\t\t// Check if the owner object already has a cache key\n\t\t\tunlock = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !unlock ) {\n\t\t\tunlock = Data.uid++;\n\n\t\t\t// Secure it in a non-enumerable, non-writable property\n\t\t\ttry {\n\t\t\t\tdescriptor[ this.expando ] = { value: unlock };\n\t\t\t\tObject.defineProperties( owner, descriptor );\n\n\t\t\t// Support: Android<4\n\t\t\t// Fallback to a less secure definition\n\t\t\t} catch ( e ) {\n\t\t\t\tdescriptor[ this.expando ] = unlock;\n\t\t\t\tjQuery.extend( owner, descriptor );\n\t\t\t}\n\t\t}\n\n\t\t// Ensure the cache object\n\t\tif ( !this.cache[ unlock ] ) {\n\t\t\tthis.cache[ unlock ] = {};\n\t\t}\n\n\t\treturn unlock;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\t// There may be an unlock assigned to this node,\n\t\t\t// if there is no entry for this \"owner\", create one inline\n\t\t\t// and set the unlock as though an owner entry had always existed\n\t\t\tunlock = this.key( owner ),\n\t\t\tcache = this.cache[ unlock ];\n\n\t\t// Handle: [ owner, key, value ] args\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ data ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\t\t\t// Fresh assignments by object are shallow copied\n\t\t\tif ( jQuery.isEmptyObject( cache ) ) {\n\t\t\t\tjQuery.extend( this.cache[ unlock ], data );\n\t\t\t// Otherwise, copy the properties one-by-one to the cache object\n\t\t\t} else {\n\t\t\t\tfor ( prop in data ) {\n\t\t\t\t\tcache[ prop ] = data[ prop ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\t// Either a valid cache is found, or will be created.\n\t\t// New caches will be created and the unlock returned,\n\t\t// allowing direct access to the newly created\n\t\t// empty data object. A valid owner object must be provided.\n\t\tvar cache = this.cache[ this.key( owner ) ];\n\n\t\treturn key === undefined ?\n\t\t\tcache : cache[ key ];\n\t},\n\taccess: function( owner, key, value ) {\n\t\tvar stored;\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t((key && typeof key === \"string\") && value === undefined) ) {\n\n\t\t\tstored = this.get( owner, key );\n\n\t\t\treturn stored !== undefined ?\n\t\t\t\tstored : this.get( owner, jQuery.camelCase(key) );\n\t\t}\n\n\t\t// [*]When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i, name, camel,\n\t\t\tunlock = this.key( owner ),\n\t\t\tcache = this.cache[ unlock ];\n\n\t\tif ( key === undefined ) {\n\t\t\tthis.cache[ unlock ] = {};\n\n\t\t} else {\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( jQuery.isArray( key ) ) {\n\t\t\t\t// If \"name\" is an array of keys...\n\t\t\t\t// When data is initially created, via (\"key\", \"val\") signature,\n\t\t\t\t// keys will be converted to camelCase.\n\t\t\t\t// Since there is no way to tell _how_ a key was added, remove\n\t\t\t\t// both plain key and camelCase key. #12786\n\t\t\t\t// This will only penalize the array argument path.\n\t\t\t\tname = key.concat( key.map( jQuery.camelCase ) );\n\t\t\t} else {\n\t\t\t\tcamel = jQuery.camelCase( key );\n\t\t\t\t// Try the string as a key before any manipulation\n\t\t\t\tif ( key in cache ) {\n\t\t\t\t\tname = [ key, camel ];\n\t\t\t\t} else {\n\t\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\t\tname = camel;\n\t\t\t\t\tname = name in cache ?\n\t\t\t\t\t\t[ name ] : ( name.match( rnotwhite ) || [] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti = name.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ name[ i ] ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\treturn !jQuery.isEmptyObject(\n\t\t\tthis.cache[ owner[ this.expando ] ] || {}\n\t\t);\n\t},\n\tdiscard: function( owner ) {\n\t\tif ( owner[ this.expando ] ) {\n\t\t\tdelete this.cache[ owner[ this.expando ] ];\n\t\t}\n\t}\n};\nvar data_priv = new Data();\n\nvar data_user = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /([A-Z])/g;\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$1\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = data === \"true\" ? true :\n\t\t\t\t\tdata === \"false\" ? false :\n\t\t\t\t\tdata === \"null\" ? null :\n\t\t\t\t\t// Only convert to a number if it doesn't change the string\n\t\t\t\t\t+data + \"\" === data ? +data :\n\t\t\t\t\trbrace.test( data ) ? jQuery.parseJSON( data ) :\n\t\t\t\t\tdata;\n\t\t\t} catch( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdata_user.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend({\n\thasData: function( elem ) {\n\t\treturn data_user.hasData( elem ) || data_priv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn data_user.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdata_user.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to data_priv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn data_priv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdata_priv.remove( elem, name );\n\t}\n});\n\njQuery.fn.extend({\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = data_user.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !data_priv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE11+\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice(5) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdata_priv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each(function() {\n\t\t\t\tdata_user.set( this, key );\n\t\t\t});\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data,\n\t\t\t\tcamelKey = jQuery.camelCase( key );\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key as-is\n\t\t\t\tdata = data_user.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key camelized\n\t\t\t\tdata = data_user.get( elem, camelKey );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, camelKey, undefined );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each(function() {\n\t\t\t\t// First, attempt to store a copy or reference of any\n\t\t\t\t// data that might've been store with a camelCased key.\n\t\t\t\tvar data = data_user.get( this, camelKey );\n\n\t\t\t\t// For HTML5 data-* attribute interop, we have to\n\t\t\t\t// store property names with dashes in a camelCase form.\n\t\t\t\t// This might not apply to all properties...*\n\t\t\t\tdata_user.set( this, camelKey, value );\n\n\t\t\t\t// *... In the case of properties that might _actually_\n\t\t\t\t// have dashes, we need to also store a copy of that\n\t\t\t\t// unchanged property.\n\t\t\t\tif ( key.indexOf(\"-\") !== -1 && data !== undefined ) {\n\t\t\t\t\tdata_user.set( this, key, value );\n\t\t\t\t}\n\t\t\t});\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each(function() {\n\t\t\tdata_user.remove( this, key );\n\t\t});\n\t}\n});\n\n\njQuery.extend({\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = data_priv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || jQuery.isArray( data ) ) {\n\t\t\t\t\tqueue = data_priv.access( elem, type, jQuery.makeArray(data) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn data_priv.get( elem, key ) || data_priv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks(\"once memory\").add(function() {\n\t\t\t\tdata_priv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t})\n\t\t});\n\t}\n});\n\njQuery.fn.extend({\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[0], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each(function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[0] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t});\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t});\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = data_priv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n});\nvar pnum = (/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/).source;\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar isHidden = function( elem, el ) {\n\t\t// isHidden might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\t\treturn jQuery.css( elem, \"display\" ) === \"none\" || !jQuery.contains( elem.ownerDocument, elem );\n\t};\n\nvar rcheckableType = (/^(?:checkbox|radio)$/i);\n\n\n\n(function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Safari<=5.1\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Safari<=5.1, Android<4.2\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE<=11+\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n})();\nvar strundefined = typeof undefined;\n\n\n\nsupport.focusinBubbles = \"onfocusin\" in window;\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,\n\trfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)$/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = data_priv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !(events = elemData.events) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !(eventHandle = elemData.handle) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== strundefined && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[t] ) || [];\n\t\t\ttype = origType = tmp[1];\n\t\t\tnamespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend({\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join(\".\")\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !(handlers = events[ type ]) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle, false );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = data_priv.hasData( elem ) && data_priv.get( elem );\n\n\t\tif ( !elemData || !(events = elemData.events) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[t] ) || [];\n\t\t\ttype = origType = tmp[1];\n\t\t\tnamespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[2] && new RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdelete elemData.handle;\n\t\t\tdata_priv.remove( elem, \"events\" );\n\t\t}\n\t},\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split(\".\") : [];\n\n\t\tcur = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf(\".\") >= 0 ) {\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split(\".\");\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf(\":\") < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join(\".\");\n\t\tevent.namespace_re = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === (elem.ownerDocument || document) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {\n\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( data_priv.get( cur, \"events\" ) || {} )[ event.type ] && data_priv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && jQuery.acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &&\n\t\t\t\tjQuery.acceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\t\t\t\t\telem[ type ]();\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\tdispatch: function( event ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tevent = jQuery.event.fix( event );\n\n\t\tvar i, j, ret, matched, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\targs = slice.call( arguments ),\n\t\t\thandlers = ( data_priv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[0] = event;\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )\n\t\t\t\t\t\t\t.apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( (event.result = ret) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, matches, sel, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\t// Black-hole SVG <use> instance trees (#13180)\n\t\t// Avoid non-left-click bubbling in Firefox (#3861)\n\t\tif ( delegateCount && cur.nodeType && (!event.button || event.type !== \"click\") ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.disabled !== true || event.type !== \"click\" ) {\n\t\t\t\t\tmatches = [];\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matches[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatches[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) >= 0 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matches[ sel ] ) {\n\t\t\t\t\t\t\tmatches.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matches.length ) {\n\t\t\t\t\t\thandlerQueue.push({ elem: cur, handlers: matches });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\t// Includes some event props shared by KeyEvent and MouseEvent\n\tprops: \"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),\n\n\tfixHooks: {},\n\n\tkeyHooks: {\n\t\tprops: \"char charCode key keyCode\".split(\" \"),\n\t\tfilter: function( event, original ) {\n\n\t\t\t// Add which for key events\n\t\t\tif ( event.which == null ) {\n\t\t\t\tevent.which = original.charCode != null ? original.charCode : original.keyCode;\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tmouseHooks: {\n\t\tprops: \"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),\n\t\tfilter: function( event, original ) {\n\t\t\tvar eventDoc, doc, body,\n\t\t\t\tbutton = original.button;\n\n\t\t\t// Calculate pageX/Y if missing and clientX/Y available\n\t\t\tif ( event.pageX == null && original.clientX != null ) {\n\t\t\t\teventDoc = event.target.ownerDocument || document;\n\t\t\t\tdoc = eventDoc.documentElement;\n\t\t\t\tbody = eventDoc.body;\n\n\t\t\t\tevent.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );\n\t\t\t\tevent.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );\n\t\t\t}\n\n\t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\t\t// Note: button is not normalized, so don't use it\n\t\t\tif ( !event.which && button !== undefined ) {\n\t\t\t\tevent.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tfix: function( event ) {\n\t\tif ( event[ jQuery.expando ] ) {\n\t\t\treturn event;\n\t\t}\n\n\t\t// Create a writable copy of the event object and normalize some properties\n\t\tvar i, prop, copy,\n\t\t\ttype = event.type,\n\t\t\toriginalEvent = event,\n\t\t\tfixHook = this.fixHooks[ type ];\n\n\t\tif ( !fixHook ) {\n\t\t\tthis.fixHooks[ type ] = fixHook =\n\t\t\t\trmouseEvent.test( type ) ? this.mouseHooks :\n\t\t\t\trkeyEvent.test( type ) ? this.keyHooks :\n\t\t\t\t{};\n\t\t}\n\t\tcopy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\n\n\t\tevent = new jQuery.Event( originalEvent );\n\n\t\ti = copy.length;\n\t\twhile ( i-- ) {\n\t\t\tprop = copy[ i ];\n\t\t\tevent[ prop ] = originalEvent[ prop ];\n\t\t}\n\n\t\t// Support: Cordova 2.5 (WebKit) (#13255)\n\t\t// All events should have a target; Cordova deviceready doesn't\n\t\tif ( !event.target ) {\n\t\t\tevent.target = document;\n\t\t}\n\n\t\t// Support: Safari 6.0+, Chrome<28\n\t\t// Target should not be a text node (#504, #13143)\n\t\tif ( event.target.nodeType === 3 ) {\n\t\t\tevent.target = event.target.parentNode;\n\t\t}\n\n\t\treturn fixHook.filter ? fixHook.filter( event, originalEvent ) : event;\n\t},\n\n\tspecial: {\n\t\tload: {\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && jQuery.nodeName( this, \"input\" ) ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn jQuery.nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tsimulate: function( type, elem, event, bubble ) {\n\t\t// Piggyback on a donor event to simulate a different one.\n\t\t// Fake originalEvent to avoid donor's stopPropagation, but if the\n\t\t// simulated event prevents default then we do the same on the donor.\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true,\n\t\t\t\toriginalEvent: {}\n\t\t\t}\n\t\t);\n\t\tif ( bubble ) {\n\t\t\tjQuery.event.trigger( e, null, elem );\n\t\t} else {\n\t\t\tjQuery.event.dispatch.call( elem, e );\n\t\t}\n\t\tif ( e.isDefaultPrevented() ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n};\n\njQuery.removeEvent = function( elem, type, handle ) {\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle, false );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\t// Allow instantiation without the 'new' keyword\n\tif ( !(this instanceof jQuery.Event) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\t\t\t\t// Support: Android<4.0\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || jQuery.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && e.preventDefault ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && e.stopPropagation ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && e.stopImmediatePropagation ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// Support: Chrome 15+\njQuery.each({\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mousenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || (related !== target && !jQuery.contains( target, related )) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n});\n\n// Support: Firefox, Chrome, Safari\n// Create \"bubbling\" focus and blur events\nif ( !support.focusinBubbles ) {\n\tjQuery.each({ focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );\n\t\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = data_priv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdata_priv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = data_priv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdata_priv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdata_priv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n}\n\njQuery.fn.extend({\n\n\ton: function( types, selector, data, fn, /*INTERNAL*/ one ) {\n\t\tvar origFn, type;\n\n\t\t// Types can be a map of types/handlers\n\t\tif ( typeof types === \"object\" ) {\n\t\t\t// ( types-Object, selector, data )\n\t\t\tif ( typeof selector !== \"string\" ) {\n\t\t\t\t// ( types-Object, data )\n\t\t\t\tdata = data || selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.on( type, selector, data, types[ type ], one );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\tif ( data == null && fn == null ) {\n\t\t\t// ( types, fn )\n\t\t\tfn = selector;\n\t\t\tdata = selector = undefined;\n\t\t} else if ( fn == null ) {\n\t\t\tif ( typeof selector === \"string\" ) {\n\t\t\t\t// ( types, selector, fn )\n\t\t\t\tfn = data;\n\t\t\t\tdata = undefined;\n\t\t\t} else {\n\t\t\t\t// ( types, data, fn )\n\t\t\t\tfn = data;\n\t\t\t\tdata = selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t} else if ( !fn ) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif ( one === 1 ) {\n\t\t\torigFn = fn;\n\t\t\tfn = function( event ) {\n\t\t\t\t// Can use an empty set, since event contains the info\n\t\t\t\tjQuery().off( event );\n\t\t\t\treturn origFn.apply( this, arguments );\n\t\t\t};\n\t\t\t// Use same guid so caller can remove using origFn\n\t\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.add( this, types, fn, data, selector );\n\t\t});\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn this.on( types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each(function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t});\n\t},\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t});\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[0];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n});\n\n\nvar\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,\n\trtagName = /<([\\w:]+)/,\n\trhtml = /<|&#?\\w+;/,\n\trnoInnerhtml = /<(?:script|style|link)/i,\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trscriptType = /^$|\\/(?:java|ecma)script/i,\n\trscriptTypeMasked = /^true\\/(.*)/,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,\n\n\t// We have to close these tags to support XHTML (#13200)\n\twrapMap = {\n\n\t\t// Support: IE9\n\t\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t\tthead: [ 1, \"<table>\", \"</table>\" ],\n\t\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\t\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\t\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t\t_default: [ 0, \"\", \"\" ]\n\t};\n\n// Support: IE9\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n// Support: 1.x compatibility\n// Manipulating tables requires a tbody\nfunction manipulationTarget( elem, content ) {\n\treturn jQuery.nodeName( elem, \"table\" ) &&\n\t\tjQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ?\n\n\t\telem.getElementsByTagName(\"tbody\")[0] ||\n\t\t\telem.appendChild( elem.ownerDocument.createElement(\"tbody\") ) :\n\t\telem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = (elem.getAttribute(\"type\") !== null) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tvar match = rscriptTypeMasked.exec( elem.type );\n\n\tif ( match ) {\n\t\telem.type = match[ 1 ];\n\t} else {\n\t\telem.removeAttribute(\"type\");\n\t}\n\n\treturn elem;\n}\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdata_priv.set(\n\t\t\telems[ i ], \"globalEval\", !refElements || data_priv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( data_priv.hasData( src ) ) {\n\t\tpdataOld = data_priv.access( src );\n\t\tpdataCur = data_priv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( data_user.hasData( src ) ) {\n\t\tudataOld = data_user.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdata_user.set( dest, udataCur );\n\t}\n}\n\nfunction getAll( context, tag ) {\n\tvar ret = context.getElementsByTagName ? context.getElementsByTagName( tag || \"*\" ) :\n\t\t\tcontext.querySelectorAll ? context.querySelectorAll( tag || \"*\" ) :\n\t\t\t[];\n\n\treturn tag === undefined || tag && jQuery.nodeName( context, tag ) ?\n\t\tjQuery.merge( [ context ], ret ) :\n\t\tret;\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\njQuery.extend({\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tbuildFragment: function( elems, context, scripts, selection ) {\n\t\tvar elem, tmp, tag, wrap, contains, j,\n\t\t\tfragment = context.createDocumentFragment(),\n\t\t\tnodes = [],\n\t\t\ti = 0,\n\t\t\tl = elems.length;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\telem = elems[ i ];\n\n\t\t\tif ( elem || elem === 0 ) {\n\n\t\t\t\t// Add nodes directly\n\t\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\n\t\t\t\t\t// Support: QtWebKit, PhantomJS\n\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t\t// Convert non-html into a text node\n\t\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t\t// Convert html into DOM nodes\n\t\t\t\t} else {\n\t\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement(\"div\") );\n\n\t\t\t\t\t// Deserialize a standard representation\n\t\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\t\ttmp.innerHTML = wrap[ 1 ] + elem.replace( rxhtmlTag, \"<$1></$2>\" ) + wrap[ 2 ];\n\n\t\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\t\tj = wrap[ 0 ];\n\t\t\t\t\twhile ( j-- ) {\n\t\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: QtWebKit, PhantomJS\n\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t\t// Remember the top-level container\n\t\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\t\ttmp.textContent = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Remove wrapper from fragment\n\t\tfragment.textContent = \"\";\n\n\t\ti = 0;\n\t\twhile ( (elem = nodes[ i++ ]) ) {\n\n\t\t\t// #4087 - If origin and destination elements are the same, and this is\n\t\t\t// that element, do not do anything\n\t\t\tif ( selection && jQuery.inArray( elem, selection ) !== -1 ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t\t// Append to fragment\n\t\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t\t// Preserve script evaluation history\n\t\t\tif ( contains ) {\n\t\t\t\tsetGlobalEval( tmp );\n\t\t\t}\n\n\t\t\t// Capture executables\n\t\t\tif ( scripts ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (elem = tmp[ j++ ]) ) {\n\t\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\t\tscripts.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fragment;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type, key,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = elems[ i ]) !== undefined; i++ ) {\n\t\t\tif ( jQuery.acceptData( elem ) ) {\n\t\t\t\tkey = elem[ data_priv.expando ];\n\n\t\t\t\tif ( key && (data = data_priv.cache[ key ]) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( data_priv.cache[ key ] ) {\n\t\t\t\t\t\t// Discard any remaining `private` data\n\t\t\t\t\t\tdelete data_priv.cache[ key ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Discard any remaining `user` data\n\t\t\tdelete data_user.cache[ elem[ data_user.expando ] ];\n\t\t}\n\t}\n});\n\njQuery.fn.extend({\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each(function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t});\n\t},\n\n\tprepend: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t});\n\t},\n\n\tbefore: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t});\n\t},\n\n\tafter: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t});\n\t},\n\n\tremove: function( selector, keepData /* Internal Use Only */ ) {\n\t\tvar elem,\n\t\t\telems = selector ? jQuery.filter( selector, this ) : this,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = elems[i]) != null; i++ ) {\n\t\t\tif ( !keepData && elem.nodeType === 1 ) {\n\t\t\t\tjQuery.cleanData( getAll( elem ) );\n\t\t\t}\n\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\tif ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\t\t\tsetGlobalEval( getAll( elem, \"script\" ) );\n\t\t\t\t}\n\t\t\t\telem.parentNode.removeChild( elem );\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = this[i]) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map(function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t});\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = value.replace( rxhtmlTag, \"<$1></$2>\" );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar arg = arguments[ 0 ];\n\n\t\t// Make the changes, replacing each context element with the new content\n\t\tthis.domManip( arguments, function( elem ) {\n\t\t\targ = this.parentNode;\n\n\t\t\tjQuery.cleanData( getAll( this ) );\n\n\t\t\tif ( arg ) {\n\t\t\t\targ.replaceChild( elem, this );\n\t\t\t}\n\t\t});\n\n\t\t// Force removal if there was no new content (e.g., from empty arguments)\n\t\treturn arg && (arg.length || arg.nodeType) ? this : this.remove();\n\t},\n\n\tdetach: function( selector ) {\n\t\treturn this.remove( selector, true );\n\t},\n\n\tdomManip: function( args, callback ) {\n\n\t\t// Flatten any nested arrays\n\t\targs = concat.apply( [], args );\n\n\t\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tset = this,\n\t\t\tiNoClone = l - 1,\n\t\t\tvalue = args[ 0 ],\n\t\t\tisFunction = jQuery.isFunction( value );\n\n\t\t// We can't cloneNode fragments that contain checked, in WebKit\n\t\tif ( isFunction ||\n\t\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\t\treturn this.each(function( index ) {\n\t\t\t\tvar self = set.eq( index );\n\t\t\t\tif ( isFunction ) {\n\t\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t\t}\n\t\t\t\tself.domManip( args, callback );\n\t\t\t});\n\t\t}\n\n\t\tif ( l ) {\n\t\t\tfragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, this );\n\t\t\tfirst = fragment.firstChild;\n\n\t\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\t\tfragment = first;\n\t\t\t}\n\n\t\t\tif ( first ) {\n\t\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\t\thasScripts = scripts.length;\n\n\t\t\t\t// Use the original fragment for the last item instead of the first because it can end up\n\t\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\tnode = fragment;\n\n\t\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\t\tif ( hasScripts ) {\n\t\t\t\t\t\t\t// Support: QtWebKit\n\t\t\t\t\t\t\t// jQuery.merge because push.apply(_, arraylike) throws\n\t\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback.call( this[ i ], node, i );\n\t\t\t\t}\n\n\t\t\t\tif ( hasScripts ) {\n\t\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t\t// Reenable scripts\n\t\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t\t!data_priv.access( node, \"globalEval\" ) && jQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\t\tif ( node.src ) {\n\t\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.globalEval( node.textContent.replace( rcleanScript, \"\" ) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n});\n\njQuery.each({\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: QtWebKit\n\t\t\t// .get() because push.apply(_, arraylike) throws\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n});\n\n\nvar iframe,\n\telemdisplay = {};\n\n/**\n * Retrieve the actual display of a element\n * @param {String} name nodeName of the element\n * @param {Object} doc Document object\n */\n// Called only from within defaultDisplay\nfunction actualDisplay( name, doc ) {\n\tvar style,\n\t\telem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),\n\n\t\t// getDefaultComputedStyle might be reliably used only on attached element\n\t\tdisplay = window.getDefaultComputedStyle && ( style = window.getDefaultComputedStyle( elem[ 0 ] ) ) ?\n\n\t\t\t// Use of this method is a temporary fix (more like optimization) until something better comes along,\n\t\t\t// since it was removed from specification and supported only in FF\n\t\t\tstyle.display : jQuery.css( elem[ 0 ], \"display\" );\n\n\t// We don't have any data stored on the element,\n\t// so use \"detach\" method as fast way to get rid of the element\n\telem.detach();\n\n\treturn display;\n}\n\n/**\n * Try to determine the default display value of an element\n * @param {String} nodeName\n */\nfunction defaultDisplay( nodeName ) {\n\tvar doc = document,\n\t\tdisplay = elemdisplay[ nodeName ];\n\n\tif ( !display ) {\n\t\tdisplay = actualDisplay( nodeName, doc );\n\n\t\t// If the simple way fails, read from inside an iframe\n\t\tif ( display === \"none\" || !display ) {\n\n\t\t\t// Use the already-created iframe if possible\n\t\t\tiframe = (iframe || jQuery( \"<iframe frameborder='0' width='0' height='0'/>\" )).appendTo( doc.documentElement );\n\n\t\t\t// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\n\t\t\tdoc = iframe[ 0 ].contentDocument;\n\n\t\t\t// Support: IE\n\t\t\tdoc.write();\n\t\t\tdoc.close();\n\n\t\t\tdisplay = actualDisplay( nodeName, doc );\n\t\t\tiframe.detach();\n\t\t}\n\n\t\t// Store the correct default display\n\t\telemdisplay[ nodeName ] = display;\n\t}\n\n\treturn display;\n}\nvar rmargin = (/^margin/);\n\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\t\t// Support: IE<=11+, Firefox<=30+ (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tif ( elem.ownerDocument.defaultView.opener ) {\n\t\t\treturn elem.ownerDocument.defaultView.getComputedStyle( elem, null );\n\t\t}\n\n\t\treturn window.getComputedStyle( elem, null );\n\t};\n\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// Support: IE9\n\t// getPropertyValue is only needed for .css('filter') (#12537)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\t}\n\n\tif ( computed ) {\n\n\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// Support: iOS < 6\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// iOS < 6 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels\n\t\t// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values\n\t\tif ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\t\t// Support: IE\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn (this.get = hookFn).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\n(function() {\n\tvar pixelPositionVal, boxSizingReliableVal,\n\t\tdocElem = document.documentElement,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE9-11+\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tcontainer.style.cssText = \"border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;\" +\n\t\t\"position:absolute\";\n\tcontainer.appendChild( div );\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computePixelPositionAndBoxSizingReliable() {\n\t\tdiv.style.cssText =\n\t\t\t// Support: Firefox<29, Android 2.3\n\t\t\t// Vendor-prefix box-sizing\n\t\t\t\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;\" +\n\t\t\t\"box-sizing:border-box;display:block;margin-top:1%;top:1%;\" +\n\t\t\t\"border:1px;padding:1px;width:4px;position:absolute\";\n\t\tdiv.innerHTML = \"\";\n\t\tdocElem.appendChild( container );\n\n\t\tvar divStyle = window.getComputedStyle( div, null );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\t\tboxSizingReliableVal = divStyle.width === \"4px\";\n\n\t\tdocElem.removeChild( container );\n\t}\n\n\t// Support: node.js jsdom\n\t// Don't assume that getComputedStyle is a property of the global object\n\tif ( window.getComputedStyle ) {\n\t\tjQuery.extend( support, {\n\t\t\tpixelPosition: function() {\n\n\t\t\t\t// This test is executed only once but we still do memoizing\n\t\t\t\t// since we can use the boxSizingReliable pre-computing.\n\t\t\t\t// No need to check if the test was already performed, though.\n\t\t\t\tcomputePixelPositionAndBoxSizingReliable();\n\t\t\t\treturn pixelPositionVal;\n\t\t\t},\n\t\t\tboxSizingReliable: function() {\n\t\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\t\tcomputePixelPositionAndBoxSizingReliable();\n\t\t\t\t}\n\t\t\t\treturn boxSizingReliableVal;\n\t\t\t},\n\t\t\treliableMarginRight: function() {\n\n\t\t\t\t// Support: Android 2.3\n\t\t\t\t// Check if div with explicit width and no margin-right incorrectly\n\t\t\t\t// gets computed margin-right based on width of container. (#3333)\n\t\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n\t\t\t\t// This support function is only executed once so no memoizing is needed.\n\t\t\t\tvar ret,\n\t\t\t\t\tmarginDiv = div.appendChild( document.createElement( \"div\" ) );\n\n\t\t\t\t// Reset CSS: box-sizing; display; margin; border; padding\n\t\t\t\tmarginDiv.style.cssText = div.style.cssText =\n\t\t\t\t\t// Support: Firefox<29, Android 2.3\n\t\t\t\t\t// Vendor-prefix box-sizing\n\t\t\t\t\t\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;\" +\n\t\t\t\t\t\"box-sizing:content-box;display:block;margin:0;border:0;padding:0\";\n\t\t\t\tmarginDiv.style.marginRight = marginDiv.style.width = \"0\";\n\t\t\t\tdiv.style.width = \"1px\";\n\t\t\t\tdocElem.appendChild( container );\n\n\t\t\t\tret = !parseFloat( window.getComputedStyle( marginDiv, null ).marginRight );\n\n\t\t\t\tdocElem.removeChild( container );\n\t\t\t\tdiv.removeChild( marginDiv );\n\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t});\n\t}\n})();\n\n\n// A method for quickly swapping in/out CSS properties to get correct calculations.\njQuery.swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\nvar\n\t// Swappable if display is none or starts with table except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trnumsplit = new RegExp( \"^(\" + pnum + \")(.*)$\", \"i\" ),\n\trrelNum = new RegExp( \"^([+-])=(\" + pnum + \")\", \"i\" ),\n\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t},\n\n\tcssPrefixes = [ \"Webkit\", \"O\", \"Moz\", \"ms\" ];\n\n// Return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( style, name ) {\n\n\t// Shortcut for names that are not vendor prefixed\n\tif ( name in style ) {\n\t\treturn name;\n\t}\n\n\t// Check for vendor prefixed names\n\tvar capName = name[0].toUpperCase() + name.slice(1),\n\t\torigName = name,\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in style ) {\n\t\t\treturn name;\n\t\t}\n\t}\n\n\treturn origName;\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\tvar matches = rnumsplit.exec( value );\n\treturn matches ?\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\n\tvar i = extra === ( isBorderBox ? \"border\" : \"content\" ) ?\n\t\t// If we already have the right measurement, avoid augmentation\n\t\t4 :\n\t\t// Otherwise initialize for horizontal or vertical properties\n\t\tname === \"width\" ? 1 : 0,\n\n\t\tval = 0;\n\n\tfor ( ; i < 4; i += 2 ) {\n\t\t// Both box models exclude margin, so add it if we want it\n\t\tif ( extra === \"margin\" ) {\n\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\tif ( isBorderBox ) {\n\t\t\t// border-box includes padding, so remove it if we want content\n\t\t\tif ( extra === \"content\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// At this point, extra isn't border nor margin, so remove border\n\t\t\tif ( extra !== \"margin\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t} else {\n\t\t\t// At this point, extra isn't content, so add padding\n\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// At this point, extra isn't content nor padding, so add border\n\t\t\tif ( extra !== \"padding\" ) {\n\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn val;\n}\n\nfunction getWidthOrHeight( elem, name, extra ) {\n\n\t// Start with offset property, which is equivalent to the border-box value\n\tvar valueIsBorderBox = true,\n\t\tval = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\n\t\tstyles = getStyles( elem ),\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t// Some non-html elements return undefined for offsetWidth, so check for null/undefined\n\t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n\t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n\tif ( val <= 0 || val == null ) {\n\t\t// Fall back to computed then uncomputed css if necessary\n\t\tval = curCSS( elem, name, styles );\n\t\tif ( val < 0 || val == null ) {\n\t\t\tval = elem.style[ name ];\n\t\t}\n\n\t\t// Computed unit is not pixels. Stop here and return.\n\t\tif ( rnumnonpx.test(val) ) {\n\t\t\treturn val;\n\t\t}\n\n\t\t// Check for style in case a browser which returns unreliable values\n\t\t// for getComputedStyle silently falls back to the reliable elem.style\n\t\tvalueIsBorderBox = isBorderBox &&\n\t\t\t( support.boxSizingReliable() || val === elem.style[ name ] );\n\n\t\t// Normalize \"\", auto, and prepare for extra\n\t\tval = parseFloat( val ) || 0;\n\t}\n\n\t// Use the active box-sizing model to add/subtract irrelevant styles\n\treturn ( val +\n\t\taugmentWidthOrHeight(\n\t\t\telem,\n\t\t\tname,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles\n\t\t)\n\t) + \"px\";\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem, hidden,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvalues[ index ] = data_priv.get( elem, \"olddisplay\" );\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\t\t\t// Reset the inline display of this element to learn if it is\n\t\t\t// being hidden by cascaded rules or not\n\t\t\tif ( !values[ index ] && display === \"none\" ) {\n\t\t\t\telem.style.display = \"\";\n\t\t\t}\n\n\t\t\t// Set elements which have been overridden with display: none\n\t\t\t// in a stylesheet to whatever the default browser style is\n\t\t\t// for such an element\n\t\t\tif ( elem.style.display === \"\" && isHidden( elem ) ) {\n\t\t\t\tvalues[ index ] = data_priv.access( elem, \"olddisplay\", defaultDisplay(elem.nodeName) );\n\t\t\t}\n\t\t} else {\n\t\t\thidden = isHidden( elem );\n\n\t\t\tif ( display !== \"none\" || !hidden ) {\n\t\t\t\tdata_priv.set( elem, \"olddisplay\", hidden ? display : jQuery.css( elem, \"display\" ) );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of most of the elements in a second loop\n\t// to avoid the constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( !show || elem.style.display === \"none\" || elem.style.display === \"\" ) {\n\t\t\telem.style.display = show ? values[ index ] || \"\" : \"none\";\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.extend({\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {\n\t\t\"float\": \"cssFloat\"\n\t},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = jQuery.camelCase( name ),\n\t\t\tstyle = elem.style;\n\n\t\tname = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && (ret = rrelNum.exec( value )) ) {\n\t\t\t\tvalue = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number, add 'px' to the (except for certain CSS properties)\n\t\t\tif ( type === \"number\" && !jQuery.cssNumber[ origName ] ) {\n\t\t\t\tvalue += \"px\";\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !(\"set\" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {\n\t\t\t\tstyle[ name ] = value;\n\t\t\t}\n\n\t\t} else {\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = jQuery.camelCase( name );\n\n\t\t// Make sure that we're working with the right name\n\t\tname = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || jQuery.isNumeric( num ) ? num || 0 : val;\n\t\t}\n\t\treturn val;\n\t}\n});\n\njQuery.each([ \"height\", \"width\" ], function( i, name ) {\n\tjQuery.cssHooks[ name ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) && elem.offsetWidth === 0 ?\n\t\t\t\t\tjQuery.swap( elem, cssShow, function() {\n\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\n\t\t\t\t\t}) :\n\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar styles = extra && getStyles( elem );\n\t\t\treturn setPositiveNumber( elem, value, extra ?\n\t\t\t\taugmentWidthOrHeight(\n\t\t\t\t\telem,\n\t\t\t\t\tname,\n\t\t\t\t\textra,\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\t\tstyles\n\t\t\t\t) : 0\n\t\t\t);\n\t\t}\n\t};\n});\n\n// Support: Android 2.3\njQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn jQuery.swap( elem, { \"display\": \"inline-block\" },\n\t\t\t\tcurCSS, [ elem, \"marginRight\" ] );\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each({\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split(\" \") : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( !rmargin.test( prefix ) ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n});\n\njQuery.fn.extend({\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( jQuery.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t},\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tif ( isHidden( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t});\n\t}\n});\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || \"swing\";\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\tif ( tween.elem[ tween.prop ] != null &&\n\t\t\t\t(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE9\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t}\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back Compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, timerId,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trfxnum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" ),\n\trrun = /queueHooks$/,\n\tanimationPrefilters = [ defaultPrefilter ],\n\ttweeners = {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value ),\n\t\t\t\ttarget = tween.cur(),\n\t\t\t\tparts = rfxnum.exec( value ),\n\t\t\t\tunit = parts && parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t\t\t// Starting value computation is required for potential unit mismatches\n\t\t\t\tstart = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +target ) &&\n\t\t\t\t\trfxnum.exec( jQuery.css( tween.elem, prop ) ),\n\t\t\t\tscale = 1,\n\t\t\t\tmaxIterations = 20;\n\n\t\t\tif ( start && start[ 3 ] !== unit ) {\n\t\t\t\t// Trust units reported by jQuery.css\n\t\t\t\tunit = unit || start[ 3 ];\n\n\t\t\t\t// Make sure we update the tween properties later on\n\t\t\t\tparts = parts || [];\n\n\t\t\t\t// Iteratively approximate from a nonzero starting point\n\t\t\t\tstart = +target || 1;\n\n\t\t\t\tdo {\n\t\t\t\t\t// If previous iteration zeroed out, double until we get *something*.\n\t\t\t\t\t// Use string for doubling so we don't accidentally see scale as unchanged below\n\t\t\t\t\tscale = scale || \".5\";\n\n\t\t\t\t\t// Adjust and apply\n\t\t\t\t\tstart = start / scale;\n\t\t\t\t\tjQuery.style( tween.elem, prop, start + unit );\n\n\t\t\t\t// Update scale, tolerating zero or NaN from tween.cur(),\n\t\t\t\t// break the loop if scale is unchanged or perfect, or if we've just had enough\n\t\t\t\t} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );\n\t\t\t}\n\n\t\t\t// Update tween properties\n\t\t\tif ( parts ) {\n\t\t\t\tstart = tween.start = +start || +target || 0;\n\t\t\t\ttween.unit = unit;\n\t\t\t\t// If a +=/-= token was provided, we're doing a relative animation\n\t\t\t\ttween.end = parts[ 1 ] ?\n\t\t\t\t\tstart + ( parts[ 1 ] + 1 ) * parts[ 2 ] :\n\t\t\t\t\t+parts[ 2 ];\n\t\t\t}\n\n\t\t\treturn tween;\n\t\t} ]\n\t};\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\tsetTimeout(function() {\n\t\tfxNow = undefined;\n\t});\n\treturn ( fxNow = jQuery.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4 ; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( tweeners[ prop ] || [] ).concat( tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( (tween = collection[ index ].call( animation, prop, value )) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\t/* jshint validthis: true */\n\tvar prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHidden( elem ),\n\t\tdataShow = data_priv.get( elem, \"fxshow\" );\n\n\t// Handle queue: false promises\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always(function() {\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always(function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t// Height/width overflow pass\n\tif ( elem.nodeType === 1 && ( \"height\" in props || \"width\" in props ) ) {\n\t\t// Make sure that nothing sneaks out\n\t\t// Record all 3 overflow attributes because IE9-10 do not\n\t\t// change the overflow attribute when overflowX and\n\t\t// overflowY are set to the same value\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Set display property to inline-block for height/width\n\t\t// animations on inline elements that are having width/height animated\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\n\t\t// Test default display if display is currently \"none\"\n\t\tcheckDisplay = display === \"none\" ?\n\t\t\tdata_priv.get( elem, \"olddisplay\" ) || defaultDisplay( elem.nodeName ) : display;\n\n\t\tif ( checkDisplay === \"inline\" && jQuery.css( elem, \"float\" ) === \"none\" ) {\n\t\t\tstyle.display = \"inline-block\";\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always(function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t});\n\t}\n\n\t// show/hide pass\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.exec( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\n\t\t// Any non-fx value stops us from restoring the original display value\n\t\t} else {\n\t\t\tdisplay = undefined;\n\t\t}\n\t}\n\n\tif ( !jQuery.isEmptyObject( orig ) ) {\n\t\tif ( dataShow ) {\n\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\thidden = dataShow.hidden;\n\t\t\t}\n\t\t} else {\n\t\t\tdataShow = data_priv.access( elem, \"fxshow\", {} );\n\t\t}\n\n\t\t// Store state if its toggle - enables .stop().toggle() to \"reverse\"\n\t\tif ( toggle ) {\n\t\t\tdataShow.hidden = !hidden;\n\t\t}\n\t\tif ( hidden ) {\n\t\t\tjQuery( elem ).show();\n\t\t} else {\n\t\t\tanim.done(function() {\n\t\t\t\tjQuery( elem ).hide();\n\t\t\t});\n\t\t}\n\t\tanim.done(function() {\n\t\t\tvar prop;\n\n\t\t\tdata_priv.remove( elem, \"fxshow\" );\n\t\t\tfor ( prop in orig ) {\n\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t}\n\t\t});\n\t\tfor ( prop in orig ) {\n\t\t\ttween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\n\t\t\tif ( !( prop in dataShow ) ) {\n\t\t\t\tdataShow[ prop ] = tween.start;\n\t\t\t\tif ( hidden ) {\n\t\t\t\t\ttween.end = tween.start;\n\t\t\t\t\ttween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t// If this is a noop like .hide().hide(), restore an overwritten display value\n\t} else if ( (display === \"none\" ? defaultDisplay( elem.nodeName ) : display) === \"inline\" ) {\n\t\tstyle.display = display;\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = jQuery.camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( jQuery.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = animationPrefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t}),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\t\t\t\t// Support: Android 2.3\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ]);\n\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t} else {\n\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tanimation = deferred.promise({\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, { specialEasing: {} }, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length ; index++ ) {\n\t\tresult = animationPrefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( jQuery.isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t})\n\t);\n\n\t// attach callbacks from options\n\treturn animation.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweener: function( props, callback ) {\n\t\tif ( jQuery.isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.split(\" \");\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length ; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\ttweeners[ prop ] = tweeners[ prop ] || [];\n\t\t\ttweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tanimationPrefilters.unshift( callback );\n\t\t} else {\n\t\t\tanimationPrefilters.push( callback );\n\t\t}\n\t}\n});\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tjQuery.isFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\n\t};\n\n\topt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ? opt.duration :\n\t\topt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( jQuery.isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend({\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHidden ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate({ opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || data_priv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = data_priv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t});\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each(function() {\n\t\t\tvar index,\n\t\t\t\tdata = data_priv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t});\n\t}\n});\n\njQuery.each([ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n});\n\n// Generate shortcuts for custom animations\njQuery.each({\n\tslideDown: genFx(\"show\"),\n\tslideUp: genFx(\"hide\"),\n\tslideToggle: genFx(\"toggle\"),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n});\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = jQuery.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\t\t// Checks the timer has not already been removed\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tif ( timer() ) {\n\t\tjQuery.fx.start();\n\t} else {\n\t\tjQuery.timers.pop();\n\t}\n};\n\njQuery.fx.interval = 13;\n\njQuery.fx.start = function() {\n\tif ( !timerId ) {\n\t\ttimerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );\n\t}\n};\n\njQuery.fx.stop = function() {\n\tclearInterval( timerId );\n\ttimerId = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\tclearTimeout( timeout );\n\t\t};\n\t});\n};\n\n\n(function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: iOS<=5.1, Android<=4.2+\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE<=11+\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: Android<=2.3\n\t// Options inside disabled selects are incorrectly marked as disabled\n\tselect.disabled = true;\n\tsupport.optDisabled = !opt.disabled;\n\n\t// Support: IE<=11+\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n})();\n\n\nvar nodeHook, boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend({\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t});\n\t}\n});\n\njQuery.extend({\n\tattr: function( elem, name, value ) {\n\t\tvar hooks, ret,\n\t\t\tnType = elem.nodeType;\n\n\t\t// don't get/set attributes on text, comment and attribute nodes\n\t\tif ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === strundefined ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// All attributes are lowercase\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\tname = name.toLowerCase();\n\t\t\thooks = jQuery.attrHooks[ name ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\n\t\t\t} else if ( hooks && \"set\" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {\n\t\t\t\treturn ret;\n\n\t\t\t} else {\n\t\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t} else if ( hooks && \"get\" in hooks && (ret = hooks.get( elem, name )) !== null ) {\n\t\t\treturn ret;\n\n\t\t} else {\n\t\t\tret = jQuery.find.attr( elem, name );\n\n\t\t\t// Non-existent attributes return null, we normalize to undefined\n\t\t\treturn ret == null ?\n\t\t\t\tundefined :\n\t\t\t\tret;\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name, propName,\n\t\t\ti = 0,\n\t\t\tattrNames = value && value.match( rnotwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( (name = attrNames[i++]) ) {\n\t\t\t\tpropName = jQuery.propFix[ name ] || name;\n\n\t\t\t\t// Boolean attributes get special treatment (#10870)\n\t\t\t\tif ( jQuery.expr.match.bool.test( name ) ) {\n\t\t\t\t\t// Set corresponding property to false\n\t\t\t\t\telem[ propName ] = false;\n\t\t\t\t}\n\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tjQuery.nodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle;\n\t\tif ( !isXML ) {\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ name ];\n\t\t\tattrHandle[ name ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tname.toLowerCase() :\n\t\t\t\tnull;\n\t\t\tattrHandle[ name ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n});\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i;\n\njQuery.fn.extend({\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each(function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t});\n\t}\n});\n\njQuery.extend({\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t},\n\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks, notxml,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tnotxml = nType !== 1 || !jQuery.isXMLDoc( elem );\n\n\t\tif ( notxml ) {\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\treturn hooks && \"set\" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?\n\t\t\t\tret :\n\t\t\t\t( elem[ name ] = value );\n\n\t\t} else {\n\t\t\treturn hooks && \"get\" in hooks && (ret = hooks.get( elem, name )) !== null ?\n\t\t\t\tret :\n\t\t\t\telem[ name ];\n\t\t}\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\t\t\t\treturn elem.hasAttribute( \"tabindex\" ) || rfocusable.test( elem.nodeName ) || elem.href ?\n\t\t\t\t\telem.tabIndex :\n\t\t\t\t\t-1;\n\t\t\t}\n\t\t}\n\t}\n});\n\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t};\n}\n\njQuery.each([\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n});\n\n\n\n\nvar rclass = /[\\t\\r\\n\\f]/g;\n\njQuery.fn.extend({\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, clazz, j, finalValue,\n\t\t\tproceed = typeof value === \"string\" && value,\n\t\t\ti = 0,\n\t\t\tlen = this.length;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, this.className ) );\n\t\t\t});\n\t\t}\n\n\t\tif ( proceed ) {\n\t\t\t// The disjunction here is for better compressibility (see removeClass)\n\t\t\tclasses = ( value || \"\" ).match( rnotwhite ) || [];\n\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\telem = this[ i ];\n\t\t\t\tcur = elem.nodeType === 1 && ( elem.className ?\n\t\t\t\t\t( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :\n\t\t\t\t\t\" \"\n\t\t\t\t);\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (clazz = classes[j++]) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\n\t\t\t\t\tif ( elem.className !== finalValue ) {\n\t\t\t\t\t\telem.className = finalValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, clazz, j, finalValue,\n\t\t\tproceed = arguments.length === 0 || typeof value === \"string\" && value,\n\t\t\ti = 0,\n\t\t\tlen = this.length;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, this.className ) );\n\t\t\t});\n\t\t}\n\t\tif ( proceed ) {\n\t\t\tclasses = ( value || \"\" ).match( rnotwhite ) || [];\n\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\telem = this[ i ];\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( elem.className ?\n\t\t\t\t\t( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :\n\t\t\t\t\t\"\"\n\t\t\t\t);\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (clazz = classes[j++]) ) {\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) >= 0 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = value ? jQuery.trim( cur ) : \"\";\n\t\t\t\t\tif ( elem.className !== finalValue ) {\n\t\t\t\t\t\telem.className = finalValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value;\n\n\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );\n\t\t\t});\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tif ( type === \"string\" ) {\n\t\t\t\t// Toggle individual class names\n\t\t\t\tvar className,\n\t\t\t\t\ti = 0,\n\t\t\t\t\tself = jQuery( this ),\n\t\t\t\t\tclassNames = value.match( rnotwhite ) || [];\n\n\t\t\t\twhile ( (className = classNames[ i++ ]) ) {\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( type === strundefined || type === \"boolean\" ) {\n\t\t\t\tif ( this.className ) {\n\t\t\t\t\t// store className if set\n\t\t\t\t\tdata_priv.set( this, \"__className__\", this.className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tthis.className = this.className || value === false ? \"\" : data_priv.get( this, \"__className__\" ) || \"\";\n\t\t\t}\n\t\t});\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className = \" \" + selector + \" \",\n\t\t\ti = 0,\n\t\t\tl = this.length;\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tif ( this[i].nodeType === 1 && (\" \" + this[i].className + \" \").replace(rclass, \" \").indexOf( className ) >= 0 ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n});\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend({\n\tval: function( value ) {\n\t\tvar hooks, ret, isFunction,\n\t\t\telem = this[0];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks && \"get\" in hooks && (ret = hooks.get( elem, \"value\" )) !== undefined ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\treturn typeof ret === \"string\" ?\n\t\t\t\t\t// Handle most common string cases\n\t\t\t\t\tret.replace(rreturn, \"\") :\n\t\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\t\tret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tisFunction = jQuery.isFunction( value );\n\n\t\treturn this.each(function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( isFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( jQuery.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !(\"set\" in hooks) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t});\n\t}\n});\n\njQuery.extend({\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\t\t\t\t\t// Support: IE10-11+\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\tjQuery.trim( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\" || index < 0,\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length,\n\t\t\t\t\ti = index < 0 ?\n\t\t\t\t\t\tmax :\n\t\t\t\t\t\tone ? index : 0;\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// IE6-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t( support.optDisabled ? !option.disabled : option.getAttribute( \"disabled\" ) === null ) &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\t\t\t\t\tif ( (option.selected = jQuery.inArray( option.value, values ) >= 0) ) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Radios and checkboxes getter/setter\njQuery.each([ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( jQuery.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n\t\t};\n\t}\n});\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\njQuery.each( (\"blur focus focusin focusout load resize scroll unload click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup error contextmenu\").split(\" \"), function( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n});\n\njQuery.fn.extend({\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t},\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ? this.off( selector, \"**\" ) : this.off( types, selector || \"**\", fn );\n\t}\n});\n\n\nvar nonce = jQuery.now();\n\nvar rquery = (/\\?/);\n\n\n\n// Support: Android 2.3\n// Workaround failure to string-cast null input\njQuery.parseJSON = function( data ) {\n\treturn JSON.parse( data + \"\" );\n};\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml, tmp;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE9\n\ttry {\n\t\ttmp = new DOMParser();\n\t\txml = tmp.parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trhash = /#.*$/,\n\trts = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\trurl = /^([\\w.+-]+:)(?:\\/\\/(?:[^\\/?#]*@|)([^\\/?#:]*)(?::(\\d+)|)|)/,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Document location\n\tajaxLocation = window.location.href,\n\n\t// Segment location into parts\n\tajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];\n\n\t\tif ( jQuery.isFunction( func ) ) {\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( (dataType = dataTypes[i++]) ) {\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[0] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t(structure[ dataType ] = structure[ dataType ] || []).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t(structure[ dataType ] = structure[ dataType ] || []).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t});\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[0] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s[ \"throws\" ] ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn { state: \"parsererror\", error: conv ? e : \"No conversion from \" + prev + \" to \" + current };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend({\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: ajaxLocation,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /xml/,\n\t\t\thtml: /html/,\n\t\t\tjson: /json/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": jQuery.parseJSON,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\t\t\t// Cross-domain detection vars\n\t\t\tparts,\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\t\t\t// Loop variable\n\t\t\ti,\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\tjQuery.event,\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks(\"once memory\"),\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\t\t\t// The jqXHR state\n\t\t\tstate = 0,\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( state === 2 ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( (match = rheaders.exec( responseHeadersString )) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[1].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn state === 2 ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tvar lname = name.toLowerCase();\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\tname = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\t// Lazy-add the new callback in a way that preserves old ones\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR ).complete = completeDeferred.add;\n\t\tjqXHR.success = jqXHR.done;\n\t\tjqXHR.error = jqXHR.fail;\n\n\t\t// Remove hash character (#7531: and string promotion)\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || ajaxLocation ) + \"\" ).replace( rhash, \"\" )\n\t\t\t.replace( rprotocol, ajaxLocParts[ 1 ] + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().match( rnotwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when we have a protocol:host:port mismatch\n\t\tif ( s.crossDomain == null ) {\n\t\t\tparts = rurl.exec( s.url.toLowerCase() );\n\t\t\ts.crossDomain = !!( parts &&\n\t\t\t\t( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||\n\t\t\t\t\t( parts[ 3 ] || ( parts[ 1 ] === \"http:\" ? \"80\" : \"443\" ) ) !==\n\t\t\t\t\t\t( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === \"http:\" ? \"80\" : \"443\" ) ) )\n\t\t\t);\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( state === 2 ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger(\"ajaxStart\");\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\tcacheURL = s.url;\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// If data is available, append data to url\n\t\t\tif ( s.data ) {\n\t\t\t\tcacheURL = ( s.url += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data );\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add anti-cache in url if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\ts.url = rts.test( cacheURL ) ?\n\n\t\t\t\t\t// If there is already a '_' parameter, set its value\n\t\t\t\t\tcacheURL.replace( rts, \"$1_=\" + nonce++ ) :\n\n\t\t\t\t\t// Otherwise add one to the end\n\t\t\t\t\tcacheURL + ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + nonce++;\n\t\t\t}\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tfor ( i in { success: 1, error: 1, complete: 1 } ) {\n\t\t\tjqXHR[ i ]( s[ i ] );\n\t\t}\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = setTimeout(function() {\n\t\t\t\t\tjqXHR.abort(\"timeout\");\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tstate = 1;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\t\t\t\t// Propagate exception as error if not done\n\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\tdone( -1, e );\n\t\t\t\t// Simply rethrow otherwise\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Called once\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// State is \"done\" now\n\t\t\tstate = 2;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\tclearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader(\"Last-Modified\");\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader(\"etag\");\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger(\"ajaxStop\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n});\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\treturn jQuery.ajax({\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t});\n\t};\n});\n\n\njQuery._evalUrl = function( url ) {\n\treturn jQuery.ajax({\n\t\turl: url,\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tasync: false,\n\t\tglobal: false,\n\t\t\"throws\": true\n\t});\n};\n\n\njQuery.fn.extend({\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).wrapAll( html.call(this, i) );\n\t\t\t});\n\t\t}\n\n\t\tif ( this[ 0 ] ) {\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map(function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t}).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call(this, i) );\n\t\t\t});\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t});\n\t},\n\n\twrap: function( html ) {\n\t\tvar isFunction = jQuery.isFunction( html );\n\n\t\treturn this.each(function( i ) {\n\t\t\tjQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );\n\t\t});\n\t},\n\n\tunwrap: function() {\n\t\treturn this.parent().each(function() {\n\t\t\tif ( !jQuery.nodeName( this, \"body\" ) ) {\n\t\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t\t}\n\t\t}).end();\n\t}\n});\n\n\njQuery.expr.filters.hidden = function( elem ) {\n\t// Support: Opera <= 12.12\n\t// Opera reports offsetWidths and offsetHeights less than zero on some elements\n\treturn elem.offsetWidth <= 0 && elem.offsetHeight <= 0;\n};\njQuery.expr.filters.visible = function( elem ) {\n\treturn !jQuery.expr.filters.hidden( elem );\n};\n\n\n\n\nvar r20 = /%20/g,\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( jQuery.isArray( obj ) ) {\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams( prefix + \"[\" + ( typeof v === \"object\" ? i : \"\" ) + \"]\", v, traditional, add );\n\t\t\t}\n\t\t});\n\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, value ) {\n\t\t\t// If value is a function, invoke it and return its value\n\t\t\tvalue = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\n\t\t};\n\n\t// Set traditional to true for jQuery <= 1.3.2 behavior.\n\tif ( traditional === undefined ) {\n\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t});\n\n\t} else {\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" ).replace( r20, \"+\" );\n};\n\njQuery.fn.extend({\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map(function() {\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t})\n\t\t.filter(function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t})\n\t\t.map(function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\treturn val == null ?\n\t\t\t\tnull :\n\t\t\t\tjQuery.isArray( val ) ?\n\t\t\t\t\tjQuery.map( val, function( val ) {\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t\t}) :\n\t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t}).get();\n\t}\n});\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new XMLHttpRequest();\n\t} catch( e ) {}\n};\n\nvar xhrId = 0,\n\txhrCallbacks = {},\n\txhrSuccessStatus = {\n\t\t// file protocol always yields status code 0, assume 200\n\t\t0: 200,\n\t\t// Support: IE9\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\n// Support: IE9\n// Open requests must be manually aborted on unload (#5280)\n// See https://support.microsoft.com/kb/2856746 for more info\nif ( window.attachEvent ) {\n\twindow.attachEvent( \"onunload\", function() {\n\t\tfor ( var key in xhrCallbacks ) {\n\t\t\txhrCallbacks[ key ]();\n\t\t}\n\t});\n}\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport(function( options ) {\n\tvar callback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr(),\n\t\t\t\t\tid = ++xhrId;\n\n\t\t\t\txhr.open( options.type, options.url, options.async, options.username, options.password );\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[\"X-Requested-With\"] ) {\n\t\t\t\t\theaders[\"X-Requested-With\"] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tdelete xhrCallbacks[ id ];\n\t\t\t\t\t\t\tcallback = xhr.onload = xhr.onerror = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\t// file: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\t\t\t\t\t\t\t\t\t// Support: IE9\n\t\t\t\t\t\t\t\t\t// Accessing binary-data responseText throws an exception\n\t\t\t\t\t\t\t\t\t// (#11426)\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText === \"string\" ? {\n\t\t\t\t\t\t\t\t\t\ttext: xhr.responseText\n\t\t\t\t\t\t\t\t\t} : undefined,\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\txhr.onerror = callback(\"error\");\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = xhrCallbacks[ id ] = callback(\"abort\");\n\n\t\t\t\ttry {\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n});\n\n\n\n\n// Install script dataType\njQuery.ajaxSetup({\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /(?:java|ecma)script/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n});\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n});\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery(\"<script>\").prop({\n\t\t\t\t\tasync: true,\n\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\tsrc: s.url\n\t\t\t\t}).on(\n\t\t\t\t\t\"load error\",\n\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n});\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup({\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n});\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" && !( s.contentType || \"\" ).indexOf(\"application/x-www-form-urlencoded\") && rjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[\"script json\"] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always(function() {\n\t\t\t// Restore preexisting value\n\t\t\twindow[ callbackName ] = overwritten;\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\t\t\t\t// make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t});\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n});\n\n\n\n\n// data: string of html\n// context (optional): If specified, the fragment will be created in this context, defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\tcontext = context || document;\n\n\tvar parsed = rsingleTag.exec( data ),\n\t\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[1] ) ];\n\t}\n\n\tparsed = jQuery.buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n// Keep a copy of the old load method\nvar _load = jQuery.fn.load;\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tif ( typeof url !== \"string\" && _load ) {\n\t\treturn _load.apply( this, arguments );\n\t}\n\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf(\" \");\n\n\tif ( off >= 0 ) {\n\t\tselector = jQuery.trim( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( jQuery.isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax({\n\t\t\turl: url,\n\n\t\t\t// if \"type\" variable is undefined, then \"GET\" method will be used\n\t\t\ttype: type,\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t}).done(function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery(\"<div>\").append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t}).complete( callback && function( jqXHR, status ) {\n\t\t\tself.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t});\n\t}\n\n\treturn this;\n};\n\n\n\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [ \"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\" ], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n});\n\n\n\n\njQuery.expr.filters.animated = function( elem ) {\n\treturn jQuery.grep(jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t}).length;\n};\n\n\n\n\nvar docElem = window.document.documentElement;\n\n/**\n * Gets a window from an element\n */\nfunction getWindow( elem ) {\n\treturn jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;\n}\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf(\"auto\") > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( jQuery.isFunction( options ) ) {\n\t\t\toptions = options.call( elem, i, curOffset );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend({\n\toffset: function( options ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each(function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t});\n\t\t}\n\n\t\tvar docElem, win,\n\t\t\telem = this[ 0 ],\n\t\t\tbox = { top: 0, left: 0 },\n\t\t\tdoc = elem && elem.ownerDocument;\n\n\t\tif ( !doc ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdocElem = doc.documentElement;\n\n\t\t// Make sure it's not a disconnected DOM node\n\t\tif ( !jQuery.contains( docElem, elem ) ) {\n\t\t\treturn box;\n\t\t}\n\n\t\t// Support: BlackBerry 5, iOS 3 (original iPhone)\n\t\t// If we don't have gBCR, just use 0,0 rather than error\n\t\tif ( typeof elem.getBoundingClientRect !== strundefined ) {\n\t\t\tbox = elem.getBoundingClientRect();\n\t\t}\n\t\twin = getWindow( doc );\n\t\treturn {\n\t\t\ttop: box.top + win.pageYOffset - docElem.clientTop,\n\t\t\tleft: box.left + win.pageXOffset - docElem.clientLeft\n\t\t};\n\t},\n\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is its only offset parent\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\t\t\t// Assume getBoundingClientRect is there when computed position is fixed\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\t// Get *real* offsetParent\n\t\t\toffsetParent = this.offsetParent();\n\n\t\t\t// Get correct offsets\n\t\t\toffset = this.offset();\n\t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\n\t\t\t\tparentOffset = offsetParent.offset();\n\t\t\t}\n\n\t\t\t// Add offsetParent borders\n\t\t\tparentOffset.top += jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true );\n\t\t\tparentOffset.left += jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true );\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\toffsetParent: function() {\n\t\treturn this.map(function() {\n\t\t\tvar offsetParent = this.offsetParent || docElem;\n\n\t\t\twhile ( offsetParent && ( !jQuery.nodeName( offsetParent, \"html\" ) && jQuery.css( offsetParent, \"position\" ) === \"static\" ) ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || docElem;\n\t\t});\n\t}\n});\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\t\t\tvar win = getWindow( elem );\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : window.pageXOffset,\n\t\t\t\t\ttop ? val : window.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length, null );\n\t};\n});\n\n// Support: Safari<7+, Chrome<37+\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n});\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name }, function( defaultExtra, funcName ) {\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\n\t\t\t\t\t// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\n\t\t\t\t\t// isn't a whole lot we can do. See pull request at this URL for discussion:\n\t\t\t\t\t// https://github.com/jquery/jquery/pull/764\n\t\t\t\t\treturn elem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable, null );\n\t\t};\n\t});\n});\n\n\n// The number of elements contained in the matched element set\njQuery.fn.size = function() {\n\treturn this.length;\n};\n\njQuery.fn.andSelf = jQuery.fn.addBack;\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t});\n}\n\n\n\n\nvar\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( typeof noGlobal === strundefined ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n\n}));\n",
              "globals": {
                "window": {
                  "type": "typeof"
                },
                "Math": {
                  "type": "reference"
                },
                "Array": {
                  "type": "reference"
                },
                "parseFloat": {
                  "type": "call"
                },
                "Object": {
                  "type": "call"
                },
                "Date": {
                  "type": "reference"
                },
                "String": {
                  "type": "reference"
                },
                "setTimeout": {
                  "type": "call"
                },
                "setInterval": {
                  "type": "call"
                },
                "clearInterval": {
                  "type": "call"
                },
                "clearTimeout": {
                  "type": "call"
                },
                "JSON": {
                  "type": "reference"
                },
                "encodeURIComponent": {
                  "type": "call"
                },
                "define": {
                  "type": "typeof"
                },
                "module": {
                  "type": "typeof"
                }
              },
              "syntax": "javascript",
              "format": "amd-ish",
              "undefine": [
                "module"
              ],
              "uses": {},
              "dependencies": {
                "static": {},
                "dynamic": {},
                "computed": false
              }
            },
            "wrapper": {
              "type": "amd-ish",
              "top": "wrapAMD(function(require, define) {",
              "code": "wrapAMD(function(require, define) {\n/*!\n * jQuery JavaScript Library v2.1.3\n * http://jquery.com/\n *\n * Includes Sizzle.js\n * http://sizzlejs.com/\n *\n * Copyright 2005, 2014 jQuery Foundation, Inc. and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2014-12-18T15:11Z\n */\n\n(function( global, factory ) {\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w, true );\n\t\t\t};\n\t} else {\n\t\tfactory( global, true );\n\t}\n\n// Pass this if window is not defined yet\n}(typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Support: Firefox 18+\n// Can't be in strict mode, several libs including ASP.NET trace\n// the stack via arguments.caller.callee and Firefox dies if\n// you try to trace through \"use strict\" call chains. (#13335)\n//\n\nvar arr = [];\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar support = {};\n\n\n\nvar\n\t// Use the correct document accordingly with window argument (sandbox)\n\tdocument = window.document,\n\n\tversion = \"2.1.3\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android<4.1\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\n\t// Matches dashed string for camelizing\n\trmsPrefix = /^-ms-/,\n\trdashAlpha = /-([\\da-z])/gi,\n\n\t// Used by jQuery.camelCase as callback to replace()\n\tfcamelCase = function( all, letter ) {\n\t\treturn letter.toUpperCase();\n\t};\n\njQuery.fn = jQuery.prototype = {\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// Start with an empty selector\n\tselector: \"\",\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\t\treturn num != null ?\n\n\t\t\t// Return just the one element from the set\n\t\t\t( num < 0 ? this[ num + this.length ] : this[ num ] ) :\n\n\t\t\t// Return all the elements in a clean array\n\t\t\tslice.call( this );\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\t\tret.context = this.context;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\t// (You can seed the arguments with an array of args, but this is\n\t// only used internally.)\n\teach: function( callback, args ) {\n\t\treturn jQuery.each( this, callback, args );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map(this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t}));\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor(null);\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !jQuery.isFunction(target) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\t\t// Only deal with non-null/undefined values\n\t\tif ( (options = arguments[ i ]) != null ) {\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && jQuery.isArray(src) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject(src) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend({\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisFunction: function( obj ) {\n\t\treturn jQuery.type(obj) === \"function\";\n\t},\n\n\tisArray: Array.isArray,\n\n\tisWindow: function( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t},\n\n\tisNumeric: function( obj ) {\n\t\t// parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t// adding 1 corrects loss of precision from parseFloat (#15100)\n\t\treturn !jQuery.isArray( obj ) && (obj - parseFloat( obj ) + 1) >= 0;\n\t},\n\n\tisPlainObject: function( obj ) {\n\t\t// Not plain objects:\n\t\t// - Any object or value whose internal [[Class]] property is not \"[object Object]\"\n\t\t// - DOM nodes\n\t\t// - window\n\t\tif ( jQuery.type( obj ) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( obj.constructor &&\n\t\t\t\t!hasOwn.call( obj.constructor.prototype, \"isPrototypeOf\" ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If the function hasn't returned already, we're confident that\n\t\t// |obj| is a plain object, created by {} or constructed with new Object\n\t\treturn true;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\ttype: function( obj ) {\n\t\tif ( obj == null ) {\n\t\t\treturn obj + \"\";\n\t\t}\n\t\t// Support: Android<4.0, iOS<6 (functionish RegExp)\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\t\tclass2type[ toString.call(obj) ] || \"object\" :\n\t\t\ttypeof obj;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code ) {\n\t\tvar script,\n\t\t\tindirect = eval;\n\n\t\tcode = jQuery.trim( code );\n\n\t\tif ( code ) {\n\t\t\t// If the code includes a valid, prologue position\n\t\t\t// strict mode pragma, execute code by injecting a\n\t\t\t// script tag into the document.\n\t\t\tif ( code.indexOf(\"use strict\") === 1 ) {\n\t\t\t\tscript = document.createElement(\"script\");\n\t\t\t\tscript.text = code;\n\t\t\t\tdocument.head.appendChild( script ).parentNode.removeChild( script );\n\t\t\t} else {\n\t\t\t// Otherwise, avoid the DOM node creation, insertion\n\t\t\t// and removal by using an indirect global eval\n\t\t\t\tindirect( code );\n\t\t\t}\n\t\t}\n\t},\n\n\t// Convert dashed to camelCase; used by the css and data modules\n\t// Support: IE9-11+\n\t// Microsoft forgot to hump their vendor prefix (#9572)\n\tcamelCase: function( string ) {\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n\t},\n\n\tnodeName: function( elem, name ) {\n\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\t},\n\n\t// args is for internal usage only\n\teach: function( obj, callback, args ) {\n\t\tvar value,\n\t\t\ti = 0,\n\t\t\tlength = obj.length,\n\t\t\tisArray = isArraylike( obj );\n\n\t\tif ( args ) {\n\t\t\tif ( isArray ) {\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tvalue = callback.apply( obj[ i ], args );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i in obj ) {\n\t\t\t\t\tvalue = callback.apply( obj[ i ], args );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// A special, fast, case for the most common use of each\n\t\t} else {\n\t\t\tif ( isArray ) {\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tvalue = callback.call( obj[ i ], i, obj[ i ] );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i in obj ) {\n\t\t\t\t\tvalue = callback.call( obj[ i ], i, obj[ i ] );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android<4.1\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArraylike( Object(arr) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar value,\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tisArray = isArraylike( elems ),\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArray ) {\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// Bind a function to a context, optionally partially applying any\n\t// arguments.\n\tproxy: function( fn, context ) {\n\t\tvar tmp, args, proxy;\n\n\t\tif ( typeof context === \"string\" ) {\n\t\t\ttmp = fn[ context ];\n\t\t\tcontext = fn;\n\t\t\tfn = tmp;\n\t\t}\n\n\t\t// Quick check to determine if target is callable, in the spec\n\t\t// this throws a TypeError, but we will just return undefined.\n\t\tif ( !jQuery.isFunction( fn ) ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Simulated bind\n\t\targs = slice.call( arguments, 2 );\n\t\tproxy = function() {\n\t\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t\t};\n\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\t\treturn proxy;\n\t},\n\n\tnow: Date.now,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n});\n\n// Populate the class2type map\njQuery.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n});\n\nfunction isArraylike( obj ) {\n\tvar length = obj.length,\n\t\ttype = jQuery.type( obj );\n\n\tif ( type === \"function\" || jQuery.isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\tif ( obj.nodeType === 1 && length ) {\n\t\treturn true;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.2.0-pre\n * http://sizzlejs.com/\n *\n * Copyright 2008, 2014 jQuery Foundation, Inc. and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2014-12-16\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// General-purpose constants\n\tMAX_NEGATIVE = 1 << 31,\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// http://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\t// http://www.w3.org/TR/css3-syntax/#characters\n\tcharacterEncoding = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\n\n\t// Loosely modeled on CSS identifier characters\n\t// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors\n\t// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = characterEncoding.replace( \"w\", \"w#\" ),\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + characterEncoding + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + characterEncoding + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + characterEncoding + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + characterEncoding + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + characterEncoding.replace( \"w\", \"w*\" ) + \")\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\trescape = /'|\\\\/g,\n\n\t// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t};\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar match, elem, m, nodeType,\n\t\t// QSA vars\n\t\ti, groups, old, nid, newContext, newSelector;\n\n\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\n\tcontext = context || document;\n\tresults = results || [];\n\tnodeType = context.nodeType;\n\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\tif ( !seed && documentIsHTML ) {\n\n\t\t// Try to shortcut find operations when possible (e.g., not under DocumentFragment)\n\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\t\t\t// Speed-up: Sizzle(\"#ID\")\n\t\t\tif ( (m = match[1]) ) {\n\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\telem = context.getElementById( m );\n\t\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t\t// nodes that are no longer in the document (jQuery #6963)\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\t\t\t\t\t\t// Handle the case where IE, Opera, and Webkit return items\n\t\t\t\t\t\t// by name instead of ID\n\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Context is not a document\n\t\t\t\t\tif ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&\n\t\t\t\t\t\tcontains( context, elem ) && elem.id === m ) {\n\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Speed-up: Sizzle(\"TAG\")\n\t\t\t} else if ( match[2] ) {\n\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\treturn results;\n\n\t\t\t// Speed-up: Sizzle(\".CLASS\")\n\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName ) {\n\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\treturn results;\n\t\t\t}\n\t\t}\n\n\t\t// QSA path\n\t\tif ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\t\t\tnid = old = expando;\n\t\t\tnewContext = context;\n\t\t\tnewSelector = nodeType !== 1 && selector;\n\n\t\t\t// qSA works strangely on Element-rooted queries\n\t\t\t// We can work around this by specifying an extra ID on the root\n\t\t\t// and working up from there (Thanks to Andrew Dupont for the technique)\n\t\t\t// IE 8 doesn't work on object elements\n\t\t\tif ( nodeType === 1 && context.nodeName.toLowerCase() !== \"object\" ) {\n\t\t\t\tgroups = tokenize( selector );\n\n\t\t\t\tif ( (old = context.getAttribute(\"id\")) ) {\n\t\t\t\t\tnid = old.replace( rescape, \"\\\\$&\" );\n\t\t\t\t} else {\n\t\t\t\t\tcontext.setAttribute( \"id\", nid );\n\t\t\t\t}\n\t\t\t\tnid = \"[id='\" + nid + \"'] \";\n\n\t\t\t\ti = groups.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tgroups[i] = nid + toSelector( groups[i] );\n\t\t\t\t}\n\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) || context;\n\t\t\t\tnewSelector = groups.join(\",\");\n\t\t\t}\n\n\t\t\tif ( newSelector ) {\n\t\t\t\ttry {\n\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t);\n\t\t\t\t\treturn results;\n\t\t\t\t} catch(qsaError) {\n\t\t\t\t} finally {\n\t\t\t\t\tif ( !old ) {\n\t\t\t\t\t\tcontext.removeAttribute(\"id\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {Function(string, Object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created div and expects a boolean result\n */\nfunction assert( fn ) {\n\tvar div = document.createElement(\"div\");\n\n\ttry {\n\t\treturn !!fn( div );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( div.parentNode ) {\n\t\t\tdiv.parentNode.removeChild( div );\n\t\t}\n\t\t// release memory in IE\n\t\tdiv = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = attrs.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\t( ~b.sourceIndex || MAX_NEGATIVE ) -\n\t\t\t( ~a.sourceIndex || MAX_NEGATIVE );\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, parent,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// If no document and documentElement is available, return\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Set our document\n\tdocument = doc;\n\tdocElem = doc.documentElement;\n\tparent = doc.defaultView;\n\n\t// Support: IE>8\n\t// If iframe document is assigned to \"document\" variable and if iframe has been reloaded,\n\t// IE will throw \"permission denied\" error when accessing \"document\" variable, see jQuery #13936\n\t// IE6-8 do not support the defaultView property so parent will be undefined\n\tif ( parent && parent !== parent.top ) {\n\t\t// IE11 does not have attachEvent, so all must suffer\n\t\tif ( parent.addEventListener ) {\n\t\t\tparent.addEventListener( \"unload\", unloadHandler, false );\n\t\t} else if ( parent.attachEvent ) {\n\t\t\tparent.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Support tests\n\t---------------------------------------------------------------------- */\n\tdocumentIsHTML = !isXML( doc );\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( div ) {\n\t\tdiv.className = \"i\";\n\t\treturn !div.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( div ) {\n\t\tdiv.appendChild( doc.createComment(\"\") );\n\t\treturn !div.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( doc.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( div ) {\n\t\tdocElem.appendChild( div ).id = expando;\n\t\treturn !doc.getElementsByName || !doc.getElementsByName( expando ).length;\n\t});\n\n\t// ID find and filter\n\tif ( support.getById ) {\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar m = context.getElementById( id );\n\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t// nodes that are no longer in the document #6963\n\t\t\t\treturn m && m.parentNode ? [ m ] : [];\n\t\t\t}\n\t\t};\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t} else {\n\t\t// Support: IE6/7\n\t\t// getElementById is not reliable as a find shortcut\n\t\tdelete Expr.find[\"ID\"];\n\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" && elem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See http://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( doc.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( div ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// http://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( div ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\f]' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( div.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !div.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.2+, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.7+\n\t\t\tif ( !div.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibing-combinator selector` fails\n\t\t\tif ( !div.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( div ) {\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = doc.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tdiv.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( div.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":enabled\").length ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tdiv.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( div ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( div, \"div\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( div, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully does not implement inclusive descendent\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === doc ? -1 :\n\t\t\t\tb === doc ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn doc;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, outerCache, node, diff, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\t\t\t\t\t\t\touterCache = parent[ expando ] || (parent[ expando ] = {});\n\t\t\t\t\t\t\tcache = outerCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[0] === dirruns && cache[1];\n\t\t\t\t\t\t\tdiff = cache[0] === dirruns && cache[2];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\touterCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t} else if ( useCache && (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) && cache[0] === dirruns ) {\n\t\t\t\t\t\t\tdiff = cache[1];\n\n\t\t\t\t\t\t// xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\tif ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) && ++diff ) {\n\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t(node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": function( elem ) {\n\t\t\treturn elem.disabled === false;\n\t\t},\n\n\t\t\"disabled\": function( elem ) {\n\t\t\treturn elem.disabled === true;\n\t\t},\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tcheckNonElements = base && dir === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\t\t\t\t\t\tif ( (oldCache = outerCache[ dir ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\touterCache[ dir ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context !== document && context;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Keep `i` a string if there are no elements so `matchedCount` will be \"00\" below\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\tmatchedCount += i;\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is no seed and only one group\n\tif ( match.length === 1 ) {\n\n\t\t// Take a shortcut and set the context if the root selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tsupport.getById && context.nodeType === 9 && documentIsHTML &&\n\t\t\t\tExpr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\trsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( div1 ) {\n\t// Should return 1, but returns 4 (following)\n\treturn div1.compareDocumentPosition( document.createElement(\"div\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( div ) {\n\tdiv.innerHTML = \"<a href='#'></a>\";\n\treturn div.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( div ) {\n\tdiv.innerHTML = \"<input/>\";\n\tdiv.firstChild.setAttribute( \"value\", \"\" );\n\treturn div.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( div ) {\n\treturn div.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\njQuery.expr[\":\"] = jQuery.expr.pseudos;\njQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\n\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\nvar rsingleTag = (/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/);\n\n\n\nvar risSimple = /^.[^:#\\[\\.,]*$/;\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( jQuery.isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\t/* jshint -W018 */\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t});\n\n\t}\n\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t});\n\n\t}\n\n\tif ( typeof qualifier === \"string\" ) {\n\t\tif ( risSimple.test( qualifier ) ) {\n\t\t\treturn jQuery.filter( qualifier, elements, not );\n\t\t}\n\n\t\tqualifier = jQuery.filter( qualifier, elements );\n\t}\n\n\treturn jQuery.grep( elements, function( elem ) {\n\t\treturn ( indexOf.call( qualifier, elem ) >= 0 ) !== not;\n\t});\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\treturn elems.length === 1 && elem.nodeType === 1 ?\n\t\tjQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :\n\t\tjQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\t\treturn elem.nodeType === 1;\n\t\t}));\n};\n\njQuery.fn.extend({\n\tfind: function( selector ) {\n\t\tvar i,\n\t\t\tlen = this.length,\n\t\t\tret = [],\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter(function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}) );\n\t\t}\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\t// Needed because $( selector, context ) becomes $( context ).find( selector )\n\t\tret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );\n\t\tret.selector = this.selector ? this.selector + \" \" + selector : selector;\n\t\treturn ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow(this, selector || [], false) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow(this, selector || [], true) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n});\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\n\n\tinit = jQuery.fn.init = function( selector, context ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[0] === \"<\" && selector[ selector.length - 1 ] === \">\" && selector.length >= 3 ) {\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && (match[1] || !context) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[1] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[0] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[1],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[2] );\n\n\t\t\t\t\t// Support: Blackberry 4.6\n\t\t\t\t\t// gEBID returns nodes no longer in the document (#6963)\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\tthis[0] = elem;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.context = document;\n\t\t\t\t\tthis.selector = selector;\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || rootjQuery ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis.context = this[0] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( jQuery.isFunction( selector ) ) {\n\t\t\treturn typeof rootjQuery.ready !== \"undefined\" ?\n\t\t\t\trootjQuery.ready( selector ) :\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\tif ( selector.selector !== undefined ) {\n\t\t\tthis.selector = selector.selector;\n\t\t\tthis.context = selector.context;\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.extend({\n\tdir: function( elem, dir, until ) {\n\t\tvar matched = [],\n\t\t\ttruncate = until !== undefined;\n\n\t\twhile ( (elem = elem[ dir ]) && elem.nodeType !== 9 ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tmatched.push( elem );\n\t\t\t}\n\t\t}\n\t\treturn matched;\n\t},\n\n\tsibling: function( n, elem ) {\n\t\tvar matched = [];\n\n\t\tfor ( ; n; n = n.nextSibling ) {\n\t\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\t\tmatched.push( n );\n\t\t\t}\n\t\t}\n\n\t\treturn matched;\n\t}\n});\n\njQuery.fn.extend({\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter(function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[i] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\tpos = rneedsContext.test( selectors ) || typeof selectors !== \"string\" ?\n\t\t\t\tjQuery( selectors, context || this.context ) :\n\t\t\t\t0;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tfor ( cur = this[i]; cur && cur !== context; cur = cur.parentNode ) {\n\t\t\t\t// Always skip document fragments\n\t\t\t\tif ( cur.nodeType < 11 && (pos ?\n\t\t\t\t\tpos.index(cur) > -1 :\n\n\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\tjQuery.find.matchesSelector(cur, selectors)) ) {\n\n\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.unique( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.unique(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter(selector)\n\t\t);\n\t}\n});\n\nfunction sibling( cur, dir ) {\n\twhile ( (cur = cur[dir]) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each({\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn jQuery.dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn jQuery.dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn jQuery.dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn jQuery.sibling( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\treturn elem.contentDocument || jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.unique( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n});\nvar rnotwhite = (/\\S+/g);\n\n\n\n// String to Object options format cache\nvar optionsCache = {};\n\n// Convert String-formatted options into Object-formatted ones and store in cache\nfunction createOptions( options ) {\n\tvar object = optionsCache[ options ] = {};\n\tjQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t});\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\t( optionsCache[ options ] || createOptions( options ) ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Last fire value (for non-forgettable lists)\n\t\tmemory,\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\t\t// Flag to know if list is currently firing\n\t\tfiring,\n\t\t// First callback to fire (used internally by add and fireWith)\n\t\tfiringStart,\n\t\t// End of the loop when firing\n\t\tfiringLength,\n\t\t// Index of currently firing callback (modified by remove if needed)\n\t\tfiringIndex,\n\t\t// Actual callback list\n\t\tlist = [],\n\t\t// Stack of fire calls for repeatable lists\n\t\tstack = !options.once && [],\n\t\t// Fire callbacks\n\t\tfire = function( data ) {\n\t\t\tmemory = options.memory && data;\n\t\t\tfired = true;\n\t\t\tfiringIndex = firingStart || 0;\n\t\t\tfiringStart = 0;\n\t\t\tfiringLength = list.length;\n\t\t\tfiring = true;\n\t\t\tfor ( ; list && firingIndex < firingLength; firingIndex++ ) {\n\t\t\t\tif ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {\n\t\t\t\t\tmemory = false; // To prevent further calls using add\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfiring = false;\n\t\t\tif ( list ) {\n\t\t\t\tif ( stack ) {\n\t\t\t\t\tif ( stack.length ) {\n\t\t\t\t\t\tfire( stack.shift() );\n\t\t\t\t\t}\n\t\t\t\t} else if ( memory ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t} else {\n\t\t\t\t\tself.disable();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// Actual Callbacks object\n\t\tself = {\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\t// First, we save the current length\n\t\t\t\t\tvar start = list.length;\n\t\t\t\t\t(function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tvar type = jQuery.type( arg );\n\t\t\t\t\t\t\tif ( type === \"function\" ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && type !== \"string\" ) {\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t})( arguments );\n\t\t\t\t\t// Do we need to add the callbacks to the\n\t\t\t\t\t// current firing batch?\n\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\tfiringLength = list.length;\n\t\t\t\t\t// With memory, if we're not firing then\n\t\t\t\t\t// we should call right away\n\t\t\t\t\t} else if ( memory ) {\n\t\t\t\t\t\tfiringStart = start;\n\t\t\t\t\t\tfire( memory );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\t\tvar index;\n\t\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\t\tlist.splice( index, 1 );\n\t\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\t\t\tif ( index <= firingLength ) {\n\t\t\t\t\t\t\t\t\tfiringLength--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );\n\t\t\t},\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tlist = [];\n\t\t\t\tfiringLength = 0;\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Have the list do nothing anymore\n\t\t\tdisable: function() {\n\t\t\t\tlist = stack = memory = undefined;\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Is it disabled?\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\t\t\t// Lock the list in its current state\n\t\t\tlock: function() {\n\t\t\t\tstack = undefined;\n\t\t\t\tif ( !memory ) {\n\t\t\t\t\tself.disable();\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Is it locked?\n\t\t\tlocked: function() {\n\t\t\t\treturn !stack;\n\t\t\t},\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( list && ( !fired || stack ) ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\tstack.push( args );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfire( args );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\njQuery.extend({\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\t\t\t\t// action, add listener, listener list, final state\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), \"rejected\" ],\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks(\"memory\") ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tthen: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\t\t\t\t\treturn jQuery.Deferred(function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\t\t\t\t\tvar fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];\n\t\t\t\t\t\t\t// deferred[ done | fail | progress ] for forwarding actions to newDefer\n\t\t\t\t\t\t\tdeferred[ tuple[1] ](function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject )\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t}).promise();\n\t\t\t\t},\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Keep pipe for back-compat\n\t\tpromise.pipe = promise.then;\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 3 ];\n\n\t\t\t// promise[ done | fail | progress ] = list.add\n\t\t\tpromise[ tuple[1] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(function() {\n\t\t\t\t\t// state = [ resolved | rejected ]\n\t\t\t\t\tstate = stateString;\n\n\t\t\t\t// [ reject_list | resolve_list ].disable; progress_list.lock\n\t\t\t\t}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\n\t\t\t}\n\n\t\t\t// deferred[ resolve | reject | notify ]\n\t\t\tdeferred[ tuple[0] ] = function() {\n\t\t\t\tdeferred[ tuple[0] + \"With\" ]( this === deferred ? promise : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\t\t\tdeferred[ tuple[0] + \"With\" ] = list.fireWith;\n\t\t});\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( subordinate /* , ..., subordinateN */ ) {\n\t\tvar i = 0,\n\t\t\tresolveValues = slice.call( arguments ),\n\t\t\tlength = resolveValues.length,\n\n\t\t\t// the count of uncompleted subordinates\n\t\t\tremaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,\n\n\t\t\t// the master Deferred. If resolveValues consist of only a single Deferred, just use that.\n\t\t\tdeferred = remaining === 1 ? subordinate : jQuery.Deferred(),\n\n\t\t\t// Update function for both resolve and progress values\n\t\t\tupdateFunc = function( i, contexts, values ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tcontexts[ i ] = this;\n\t\t\t\t\tvalues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( values === progressValues ) {\n\t\t\t\t\t\tdeferred.notifyWith( contexts, values );\n\t\t\t\t\t} else if ( !( --remaining ) ) {\n\t\t\t\t\t\tdeferred.resolveWith( contexts, values );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tprogressValues, progressContexts, resolveContexts;\n\n\t\t// Add listeners to Deferred subordinates; treat others as resolved\n\t\tif ( length > 1 ) {\n\t\t\tprogressValues = new Array( length );\n\t\t\tprogressContexts = new Array( length );\n\t\t\tresolveContexts = new Array( length );\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\n\t\t\t\t\tresolveValues[ i ].promise()\n\t\t\t\t\t\t.done( updateFunc( i, resolveContexts, resolveValues ) )\n\t\t\t\t\t\t.fail( deferred.reject )\n\t\t\t\t\t\t.progress( updateFunc( i, progressContexts, progressValues ) );\n\t\t\t\t} else {\n\t\t\t\t\t--remaining;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If we're not waiting on anything, resolve the master\n\t\tif ( !remaining ) {\n\t\t\tdeferred.resolveWith( resolveContexts, resolveValues );\n\t\t}\n\n\t\treturn deferred.promise();\n\t}\n});\n\n\n// The deferred used on DOM ready\nvar readyList;\n\njQuery.fn.ready = function( fn ) {\n\t// Add the callback\n\tjQuery.ready.promise().done( fn );\n\n\treturn this;\n};\n\njQuery.extend({\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Hold (or release) the ready event\n\tholdReady: function( hold ) {\n\t\tif ( hold ) {\n\t\t\tjQuery.readyWait++;\n\t\t} else {\n\t\t\tjQuery.ready( true );\n\t\t}\n\t},\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\n\t\t// Trigger any bound ready events\n\t\tif ( jQuery.fn.triggerHandler ) {\n\t\t\tjQuery( document ).triggerHandler( \"ready\" );\n\t\t\tjQuery( document ).off( \"ready\" );\n\t\t}\n\t}\n});\n\n/**\n * The ready event handler and self cleanup method\n */\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed, false );\n\twindow.removeEventListener( \"load\", completed, false );\n\tjQuery.ready();\n}\n\njQuery.ready.promise = function( obj ) {\n\tif ( !readyList ) {\n\n\t\treadyList = jQuery.Deferred();\n\n\t\t// Catch cases where $(document).ready() is called after the browser event has already occurred.\n\t\t// We once tried to use readyState \"interactive\" here, but it caused issues like the one\n\t\t// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15\n\t\tif ( document.readyState === \"complete\" ) {\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\t\tsetTimeout( jQuery.ready );\n\n\t\t} else {\n\n\t\t\t// Use the handy event callback\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed, false );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.addEventListener( \"load\", completed, false );\n\t\t}\n\t}\n\treturn readyList.promise( obj );\n};\n\n// Kick off the DOM ready check even if the user does not\njQuery.ready.promise();\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = jQuery.access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( jQuery.type( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\tjQuery.access( elems, fn, i, key[i], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn chainable ?\n\t\telems :\n\n\t\t// Gets\n\t\tbulk ?\n\t\t\tfn.call( elems ) :\n\t\t\tlen ? fn( elems[0], key ) : emptyGet;\n};\n\n\n/**\n * Determines whether an object can have data\n */\njQuery.acceptData = function( owner ) {\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\t/* jshint -W018 */\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\nfunction Data() {\n\t// Support: Android<4,\n\t// Old WebKit does not have Object.preventExtensions/freeze method,\n\t// return new empty object instead with no [[set]] accessor\n\tObject.defineProperty( this.cache = {}, 0, {\n\t\tget: function() {\n\t\t\treturn {};\n\t\t}\n\t});\n\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\nData.accepts = jQuery.acceptData;\n\nData.prototype = {\n\tkey: function( owner ) {\n\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t// but we should not, see #8335.\n\t\t// Always return the key for a frozen object.\n\t\tif ( !Data.accepts( owner ) ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar descriptor = {},\n\t\t\t// Check if the owner object already has a cache key\n\t\t\tunlock = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !unlock ) {\n\t\t\tunlock = Data.uid++;\n\n\t\t\t// Secure it in a non-enumerable, non-writable property\n\t\t\ttry {\n\t\t\t\tdescriptor[ this.expando ] = { value: unlock };\n\t\t\t\tObject.defineProperties( owner, descriptor );\n\n\t\t\t// Support: Android<4\n\t\t\t// Fallback to a less secure definition\n\t\t\t} catch ( e ) {\n\t\t\t\tdescriptor[ this.expando ] = unlock;\n\t\t\t\tjQuery.extend( owner, descriptor );\n\t\t\t}\n\t\t}\n\n\t\t// Ensure the cache object\n\t\tif ( !this.cache[ unlock ] ) {\n\t\t\tthis.cache[ unlock ] = {};\n\t\t}\n\n\t\treturn unlock;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\t// There may be an unlock assigned to this node,\n\t\t\t// if there is no entry for this \"owner\", create one inline\n\t\t\t// and set the unlock as though an owner entry had always existed\n\t\t\tunlock = this.key( owner ),\n\t\t\tcache = this.cache[ unlock ];\n\n\t\t// Handle: [ owner, key, value ] args\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ data ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\t\t\t// Fresh assignments by object are shallow copied\n\t\t\tif ( jQuery.isEmptyObject( cache ) ) {\n\t\t\t\tjQuery.extend( this.cache[ unlock ], data );\n\t\t\t// Otherwise, copy the properties one-by-one to the cache object\n\t\t\t} else {\n\t\t\t\tfor ( prop in data ) {\n\t\t\t\t\tcache[ prop ] = data[ prop ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\t// Either a valid cache is found, or will be created.\n\t\t// New caches will be created and the unlock returned,\n\t\t// allowing direct access to the newly created\n\t\t// empty data object. A valid owner object must be provided.\n\t\tvar cache = this.cache[ this.key( owner ) ];\n\n\t\treturn key === undefined ?\n\t\t\tcache : cache[ key ];\n\t},\n\taccess: function( owner, key, value ) {\n\t\tvar stored;\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t((key && typeof key === \"string\") && value === undefined) ) {\n\n\t\t\tstored = this.get( owner, key );\n\n\t\t\treturn stored !== undefined ?\n\t\t\t\tstored : this.get( owner, jQuery.camelCase(key) );\n\t\t}\n\n\t\t// [*]When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i, name, camel,\n\t\t\tunlock = this.key( owner ),\n\t\t\tcache = this.cache[ unlock ];\n\n\t\tif ( key === undefined ) {\n\t\t\tthis.cache[ unlock ] = {};\n\n\t\t} else {\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( jQuery.isArray( key ) ) {\n\t\t\t\t// If \"name\" is an array of keys...\n\t\t\t\t// When data is initially created, via (\"key\", \"val\") signature,\n\t\t\t\t// keys will be converted to camelCase.\n\t\t\t\t// Since there is no way to tell _how_ a key was added, remove\n\t\t\t\t// both plain key and camelCase key. #12786\n\t\t\t\t// This will only penalize the array argument path.\n\t\t\t\tname = key.concat( key.map( jQuery.camelCase ) );\n\t\t\t} else {\n\t\t\t\tcamel = jQuery.camelCase( key );\n\t\t\t\t// Try the string as a key before any manipulation\n\t\t\t\tif ( key in cache ) {\n\t\t\t\t\tname = [ key, camel ];\n\t\t\t\t} else {\n\t\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\t\tname = camel;\n\t\t\t\t\tname = name in cache ?\n\t\t\t\t\t\t[ name ] : ( name.match( rnotwhite ) || [] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti = name.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ name[ i ] ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\treturn !jQuery.isEmptyObject(\n\t\t\tthis.cache[ owner[ this.expando ] ] || {}\n\t\t);\n\t},\n\tdiscard: function( owner ) {\n\t\tif ( owner[ this.expando ] ) {\n\t\t\tdelete this.cache[ owner[ this.expando ] ];\n\t\t}\n\t}\n};\nvar data_priv = new Data();\n\nvar data_user = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /([A-Z])/g;\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$1\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = data === \"true\" ? true :\n\t\t\t\t\tdata === \"false\" ? false :\n\t\t\t\t\tdata === \"null\" ? null :\n\t\t\t\t\t// Only convert to a number if it doesn't change the string\n\t\t\t\t\t+data + \"\" === data ? +data :\n\t\t\t\t\trbrace.test( data ) ? jQuery.parseJSON( data ) :\n\t\t\t\t\tdata;\n\t\t\t} catch( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdata_user.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend({\n\thasData: function( elem ) {\n\t\treturn data_user.hasData( elem ) || data_priv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn data_user.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdata_user.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to data_priv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn data_priv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdata_priv.remove( elem, name );\n\t}\n});\n\njQuery.fn.extend({\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = data_user.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !data_priv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE11+\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice(5) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdata_priv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each(function() {\n\t\t\t\tdata_user.set( this, key );\n\t\t\t});\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data,\n\t\t\t\tcamelKey = jQuery.camelCase( key );\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key as-is\n\t\t\t\tdata = data_user.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key camelized\n\t\t\t\tdata = data_user.get( elem, camelKey );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, camelKey, undefined );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each(function() {\n\t\t\t\t// First, attempt to store a copy or reference of any\n\t\t\t\t// data that might've been store with a camelCased key.\n\t\t\t\tvar data = data_user.get( this, camelKey );\n\n\t\t\t\t// For HTML5 data-* attribute interop, we have to\n\t\t\t\t// store property names with dashes in a camelCase form.\n\t\t\t\t// This might not apply to all properties...*\n\t\t\t\tdata_user.set( this, camelKey, value );\n\n\t\t\t\t// *... In the case of properties that might _actually_\n\t\t\t\t// have dashes, we need to also store a copy of that\n\t\t\t\t// unchanged property.\n\t\t\t\tif ( key.indexOf(\"-\") !== -1 && data !== undefined ) {\n\t\t\t\t\tdata_user.set( this, key, value );\n\t\t\t\t}\n\t\t\t});\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each(function() {\n\t\t\tdata_user.remove( this, key );\n\t\t});\n\t}\n});\n\n\njQuery.extend({\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = data_priv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || jQuery.isArray( data ) ) {\n\t\t\t\t\tqueue = data_priv.access( elem, type, jQuery.makeArray(data) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn data_priv.get( elem, key ) || data_priv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks(\"once memory\").add(function() {\n\t\t\t\tdata_priv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t})\n\t\t});\n\t}\n});\n\njQuery.fn.extend({\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[0], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each(function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[0] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t});\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t});\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = data_priv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n});\nvar pnum = (/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/).source;\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar isHidden = function( elem, el ) {\n\t\t// isHidden might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\t\treturn jQuery.css( elem, \"display\" ) === \"none\" || !jQuery.contains( elem.ownerDocument, elem );\n\t};\n\nvar rcheckableType = (/^(?:checkbox|radio)$/i);\n\n\n\n(function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Safari<=5.1\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Safari<=5.1, Android<4.2\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE<=11+\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n})();\nvar strundefined = typeof undefined;\n\n\n\nsupport.focusinBubbles = \"onfocusin\" in window;\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,\n\trfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)$/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = data_priv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !(events = elemData.events) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !(eventHandle = elemData.handle) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== strundefined && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[t] ) || [];\n\t\t\ttype = origType = tmp[1];\n\t\t\tnamespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend({\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join(\".\")\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !(handlers = events[ type ]) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle, false );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = data_priv.hasData( elem ) && data_priv.get( elem );\n\n\t\tif ( !elemData || !(events = elemData.events) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[t] ) || [];\n\t\t\ttype = origType = tmp[1];\n\t\t\tnamespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[2] && new RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdelete elemData.handle;\n\t\t\tdata_priv.remove( elem, \"events\" );\n\t\t}\n\t},\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split(\".\") : [];\n\n\t\tcur = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf(\".\") >= 0 ) {\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split(\".\");\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf(\":\") < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join(\".\");\n\t\tevent.namespace_re = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === (elem.ownerDocument || document) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {\n\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( data_priv.get( cur, \"events\" ) || {} )[ event.type ] && data_priv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && jQuery.acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &&\n\t\t\t\tjQuery.acceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\t\t\t\t\telem[ type ]();\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\tdispatch: function( event ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tevent = jQuery.event.fix( event );\n\n\t\tvar i, j, ret, matched, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\targs = slice.call( arguments ),\n\t\t\thandlers = ( data_priv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[0] = event;\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )\n\t\t\t\t\t\t\t.apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( (event.result = ret) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, matches, sel, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\t// Black-hole SVG <use> instance trees (#13180)\n\t\t// Avoid non-left-click bubbling in Firefox (#3861)\n\t\tif ( delegateCount && cur.nodeType && (!event.button || event.type !== \"click\") ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.disabled !== true || event.type !== \"click\" ) {\n\t\t\t\t\tmatches = [];\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matches[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatches[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) >= 0 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matches[ sel ] ) {\n\t\t\t\t\t\t\tmatches.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matches.length ) {\n\t\t\t\t\t\thandlerQueue.push({ elem: cur, handlers: matches });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\t// Includes some event props shared by KeyEvent and MouseEvent\n\tprops: \"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),\n\n\tfixHooks: {},\n\n\tkeyHooks: {\n\t\tprops: \"char charCode key keyCode\".split(\" \"),\n\t\tfilter: function( event, original ) {\n\n\t\t\t// Add which for key events\n\t\t\tif ( event.which == null ) {\n\t\t\t\tevent.which = original.charCode != null ? original.charCode : original.keyCode;\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tmouseHooks: {\n\t\tprops: \"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),\n\t\tfilter: function( event, original ) {\n\t\t\tvar eventDoc, doc, body,\n\t\t\t\tbutton = original.button;\n\n\t\t\t// Calculate pageX/Y if missing and clientX/Y available\n\t\t\tif ( event.pageX == null && original.clientX != null ) {\n\t\t\t\teventDoc = event.target.ownerDocument || document;\n\t\t\t\tdoc = eventDoc.documentElement;\n\t\t\t\tbody = eventDoc.body;\n\n\t\t\t\tevent.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );\n\t\t\t\tevent.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );\n\t\t\t}\n\n\t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\t\t// Note: button is not normalized, so don't use it\n\t\t\tif ( !event.which && button !== undefined ) {\n\t\t\t\tevent.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tfix: function( event ) {\n\t\tif ( event[ jQuery.expando ] ) {\n\t\t\treturn event;\n\t\t}\n\n\t\t// Create a writable copy of the event object and normalize some properties\n\t\tvar i, prop, copy,\n\t\t\ttype = event.type,\n\t\t\toriginalEvent = event,\n\t\t\tfixHook = this.fixHooks[ type ];\n\n\t\tif ( !fixHook ) {\n\t\t\tthis.fixHooks[ type ] = fixHook =\n\t\t\t\trmouseEvent.test( type ) ? this.mouseHooks :\n\t\t\t\trkeyEvent.test( type ) ? this.keyHooks :\n\t\t\t\t{};\n\t\t}\n\t\tcopy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\n\n\t\tevent = new jQuery.Event( originalEvent );\n\n\t\ti = copy.length;\n\t\twhile ( i-- ) {\n\t\t\tprop = copy[ i ];\n\t\t\tevent[ prop ] = originalEvent[ prop ];\n\t\t}\n\n\t\t// Support: Cordova 2.5 (WebKit) (#13255)\n\t\t// All events should have a target; Cordova deviceready doesn't\n\t\tif ( !event.target ) {\n\t\t\tevent.target = document;\n\t\t}\n\n\t\t// Support: Safari 6.0+, Chrome<28\n\t\t// Target should not be a text node (#504, #13143)\n\t\tif ( event.target.nodeType === 3 ) {\n\t\t\tevent.target = event.target.parentNode;\n\t\t}\n\n\t\treturn fixHook.filter ? fixHook.filter( event, originalEvent ) : event;\n\t},\n\n\tspecial: {\n\t\tload: {\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && jQuery.nodeName( this, \"input\" ) ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn jQuery.nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tsimulate: function( type, elem, event, bubble ) {\n\t\t// Piggyback on a donor event to simulate a different one.\n\t\t// Fake originalEvent to avoid donor's stopPropagation, but if the\n\t\t// simulated event prevents default then we do the same on the donor.\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true,\n\t\t\t\toriginalEvent: {}\n\t\t\t}\n\t\t);\n\t\tif ( bubble ) {\n\t\t\tjQuery.event.trigger( e, null, elem );\n\t\t} else {\n\t\t\tjQuery.event.dispatch.call( elem, e );\n\t\t}\n\t\tif ( e.isDefaultPrevented() ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n};\n\njQuery.removeEvent = function( elem, type, handle ) {\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle, false );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\t// Allow instantiation without the 'new' keyword\n\tif ( !(this instanceof jQuery.Event) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\t\t\t\t// Support: Android<4.0\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || jQuery.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && e.preventDefault ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && e.stopPropagation ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && e.stopImmediatePropagation ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// Support: Chrome 15+\njQuery.each({\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mousenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || (related !== target && !jQuery.contains( target, related )) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n});\n\n// Support: Firefox, Chrome, Safari\n// Create \"bubbling\" focus and blur events\nif ( !support.focusinBubbles ) {\n\tjQuery.each({ focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );\n\t\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = data_priv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdata_priv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = data_priv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdata_priv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdata_priv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n}\n\njQuery.fn.extend({\n\n\ton: function( types, selector, data, fn, /*INTERNAL*/ one ) {\n\t\tvar origFn, type;\n\n\t\t// Types can be a map of types/handlers\n\t\tif ( typeof types === \"object\" ) {\n\t\t\t// ( types-Object, selector, data )\n\t\t\tif ( typeof selector !== \"string\" ) {\n\t\t\t\t// ( types-Object, data )\n\t\t\t\tdata = data || selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.on( type, selector, data, types[ type ], one );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\tif ( data == null && fn == null ) {\n\t\t\t// ( types, fn )\n\t\t\tfn = selector;\n\t\t\tdata = selector = undefined;\n\t\t} else if ( fn == null ) {\n\t\t\tif ( typeof selector === \"string\" ) {\n\t\t\t\t// ( types, selector, fn )\n\t\t\t\tfn = data;\n\t\t\t\tdata = undefined;\n\t\t\t} else {\n\t\t\t\t// ( types, data, fn )\n\t\t\t\tfn = data;\n\t\t\t\tdata = selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t} else if ( !fn ) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif ( one === 1 ) {\n\t\t\torigFn = fn;\n\t\t\tfn = function( event ) {\n\t\t\t\t// Can use an empty set, since event contains the info\n\t\t\t\tjQuery().off( event );\n\t\t\t\treturn origFn.apply( this, arguments );\n\t\t\t};\n\t\t\t// Use same guid so caller can remove using origFn\n\t\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.add( this, types, fn, data, selector );\n\t\t});\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn this.on( types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each(function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t});\n\t},\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t});\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[0];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n});\n\n\nvar\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,\n\trtagName = /<([\\w:]+)/,\n\trhtml = /<|&#?\\w+;/,\n\trnoInnerhtml = /<(?:script|style|link)/i,\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trscriptType = /^$|\\/(?:java|ecma)script/i,\n\trscriptTypeMasked = /^true\\/(.*)/,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,\n\n\t// We have to close these tags to support XHTML (#13200)\n\twrapMap = {\n\n\t\t// Support: IE9\n\t\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t\tthead: [ 1, \"<table>\", \"</table>\" ],\n\t\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\t\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\t\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t\t_default: [ 0, \"\", \"\" ]\n\t};\n\n// Support: IE9\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n// Support: 1.x compatibility\n// Manipulating tables requires a tbody\nfunction manipulationTarget( elem, content ) {\n\treturn jQuery.nodeName( elem, \"table\" ) &&\n\t\tjQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ?\n\n\t\telem.getElementsByTagName(\"tbody\")[0] ||\n\t\t\telem.appendChild( elem.ownerDocument.createElement(\"tbody\") ) :\n\t\telem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = (elem.getAttribute(\"type\") !== null) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tvar match = rscriptTypeMasked.exec( elem.type );\n\n\tif ( match ) {\n\t\telem.type = match[ 1 ];\n\t} else {\n\t\telem.removeAttribute(\"type\");\n\t}\n\n\treturn elem;\n}\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdata_priv.set(\n\t\t\telems[ i ], \"globalEval\", !refElements || data_priv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( data_priv.hasData( src ) ) {\n\t\tpdataOld = data_priv.access( src );\n\t\tpdataCur = data_priv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( data_user.hasData( src ) ) {\n\t\tudataOld = data_user.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdata_user.set( dest, udataCur );\n\t}\n}\n\nfunction getAll( context, tag ) {\n\tvar ret = context.getElementsByTagName ? context.getElementsByTagName( tag || \"*\" ) :\n\t\t\tcontext.querySelectorAll ? context.querySelectorAll( tag || \"*\" ) :\n\t\t\t[];\n\n\treturn tag === undefined || tag && jQuery.nodeName( context, tag ) ?\n\t\tjQuery.merge( [ context ], ret ) :\n\t\tret;\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\njQuery.extend({\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tbuildFragment: function( elems, context, scripts, selection ) {\n\t\tvar elem, tmp, tag, wrap, contains, j,\n\t\t\tfragment = context.createDocumentFragment(),\n\t\t\tnodes = [],\n\t\t\ti = 0,\n\t\t\tl = elems.length;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\telem = elems[ i ];\n\n\t\t\tif ( elem || elem === 0 ) {\n\n\t\t\t\t// Add nodes directly\n\t\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\n\t\t\t\t\t// Support: QtWebKit, PhantomJS\n\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t\t// Convert non-html into a text node\n\t\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t\t// Convert html into DOM nodes\n\t\t\t\t} else {\n\t\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement(\"div\") );\n\n\t\t\t\t\t// Deserialize a standard representation\n\t\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\t\ttmp.innerHTML = wrap[ 1 ] + elem.replace( rxhtmlTag, \"<$1></$2>\" ) + wrap[ 2 ];\n\n\t\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\t\tj = wrap[ 0 ];\n\t\t\t\t\twhile ( j-- ) {\n\t\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: QtWebKit, PhantomJS\n\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t\t// Remember the top-level container\n\t\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\t\ttmp.textContent = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Remove wrapper from fragment\n\t\tfragment.textContent = \"\";\n\n\t\ti = 0;\n\t\twhile ( (elem = nodes[ i++ ]) ) {\n\n\t\t\t// #4087 - If origin and destination elements are the same, and this is\n\t\t\t// that element, do not do anything\n\t\t\tif ( selection && jQuery.inArray( elem, selection ) !== -1 ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t\t// Append to fragment\n\t\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t\t// Preserve script evaluation history\n\t\t\tif ( contains ) {\n\t\t\t\tsetGlobalEval( tmp );\n\t\t\t}\n\n\t\t\t// Capture executables\n\t\t\tif ( scripts ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (elem = tmp[ j++ ]) ) {\n\t\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\t\tscripts.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fragment;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type, key,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = elems[ i ]) !== undefined; i++ ) {\n\t\t\tif ( jQuery.acceptData( elem ) ) {\n\t\t\t\tkey = elem[ data_priv.expando ];\n\n\t\t\t\tif ( key && (data = data_priv.cache[ key ]) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( data_priv.cache[ key ] ) {\n\t\t\t\t\t\t// Discard any remaining `private` data\n\t\t\t\t\t\tdelete data_priv.cache[ key ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Discard any remaining `user` data\n\t\t\tdelete data_user.cache[ elem[ data_user.expando ] ];\n\t\t}\n\t}\n});\n\njQuery.fn.extend({\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each(function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t});\n\t},\n\n\tprepend: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t});\n\t},\n\n\tbefore: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t});\n\t},\n\n\tafter: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t});\n\t},\n\n\tremove: function( selector, keepData /* Internal Use Only */ ) {\n\t\tvar elem,\n\t\t\telems = selector ? jQuery.filter( selector, this ) : this,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = elems[i]) != null; i++ ) {\n\t\t\tif ( !keepData && elem.nodeType === 1 ) {\n\t\t\t\tjQuery.cleanData( getAll( elem ) );\n\t\t\t}\n\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\tif ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\t\t\tsetGlobalEval( getAll( elem, \"script\" ) );\n\t\t\t\t}\n\t\t\t\telem.parentNode.removeChild( elem );\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = this[i]) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map(function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t});\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = value.replace( rxhtmlTag, \"<$1></$2>\" );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar arg = arguments[ 0 ];\n\n\t\t// Make the changes, replacing each context element with the new content\n\t\tthis.domManip( arguments, function( elem ) {\n\t\t\targ = this.parentNode;\n\n\t\t\tjQuery.cleanData( getAll( this ) );\n\n\t\t\tif ( arg ) {\n\t\t\t\targ.replaceChild( elem, this );\n\t\t\t}\n\t\t});\n\n\t\t// Force removal if there was no new content (e.g., from empty arguments)\n\t\treturn arg && (arg.length || arg.nodeType) ? this : this.remove();\n\t},\n\n\tdetach: function( selector ) {\n\t\treturn this.remove( selector, true );\n\t},\n\n\tdomManip: function( args, callback ) {\n\n\t\t// Flatten any nested arrays\n\t\targs = concat.apply( [], args );\n\n\t\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tset = this,\n\t\t\tiNoClone = l - 1,\n\t\t\tvalue = args[ 0 ],\n\t\t\tisFunction = jQuery.isFunction( value );\n\n\t\t// We can't cloneNode fragments that contain checked, in WebKit\n\t\tif ( isFunction ||\n\t\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\t\treturn this.each(function( index ) {\n\t\t\t\tvar self = set.eq( index );\n\t\t\t\tif ( isFunction ) {\n\t\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t\t}\n\t\t\t\tself.domManip( args, callback );\n\t\t\t});\n\t\t}\n\n\t\tif ( l ) {\n\t\t\tfragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, this );\n\t\t\tfirst = fragment.firstChild;\n\n\t\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\t\tfragment = first;\n\t\t\t}\n\n\t\t\tif ( first ) {\n\t\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\t\thasScripts = scripts.length;\n\n\t\t\t\t// Use the original fragment for the last item instead of the first because it can end up\n\t\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\tnode = fragment;\n\n\t\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\t\tif ( hasScripts ) {\n\t\t\t\t\t\t\t// Support: QtWebKit\n\t\t\t\t\t\t\t// jQuery.merge because push.apply(_, arraylike) throws\n\t\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback.call( this[ i ], node, i );\n\t\t\t\t}\n\n\t\t\t\tif ( hasScripts ) {\n\t\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t\t// Reenable scripts\n\t\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t\t!data_priv.access( node, \"globalEval\" ) && jQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\t\tif ( node.src ) {\n\t\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.globalEval( node.textContent.replace( rcleanScript, \"\" ) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n});\n\njQuery.each({\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: QtWebKit\n\t\t\t// .get() because push.apply(_, arraylike) throws\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n});\n\n\nvar iframe,\n\telemdisplay = {};\n\n/**\n * Retrieve the actual display of a element\n * @param {String} name nodeName of the element\n * @param {Object} doc Document object\n */\n// Called only from within defaultDisplay\nfunction actualDisplay( name, doc ) {\n\tvar style,\n\t\telem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),\n\n\t\t// getDefaultComputedStyle might be reliably used only on attached element\n\t\tdisplay = window.getDefaultComputedStyle && ( style = window.getDefaultComputedStyle( elem[ 0 ] ) ) ?\n\n\t\t\t// Use of this method is a temporary fix (more like optimization) until something better comes along,\n\t\t\t// since it was removed from specification and supported only in FF\n\t\t\tstyle.display : jQuery.css( elem[ 0 ], \"display\" );\n\n\t// We don't have any data stored on the element,\n\t// so use \"detach\" method as fast way to get rid of the element\n\telem.detach();\n\n\treturn display;\n}\n\n/**\n * Try to determine the default display value of an element\n * @param {String} nodeName\n */\nfunction defaultDisplay( nodeName ) {\n\tvar doc = document,\n\t\tdisplay = elemdisplay[ nodeName ];\n\n\tif ( !display ) {\n\t\tdisplay = actualDisplay( nodeName, doc );\n\n\t\t// If the simple way fails, read from inside an iframe\n\t\tif ( display === \"none\" || !display ) {\n\n\t\t\t// Use the already-created iframe if possible\n\t\t\tiframe = (iframe || jQuery( \"<iframe frameborder='0' width='0' height='0'/>\" )).appendTo( doc.documentElement );\n\n\t\t\t// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\n\t\t\tdoc = iframe[ 0 ].contentDocument;\n\n\t\t\t// Support: IE\n\t\t\tdoc.write();\n\t\t\tdoc.close();\n\n\t\t\tdisplay = actualDisplay( nodeName, doc );\n\t\t\tiframe.detach();\n\t\t}\n\n\t\t// Store the correct default display\n\t\telemdisplay[ nodeName ] = display;\n\t}\n\n\treturn display;\n}\nvar rmargin = (/^margin/);\n\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\t\t// Support: IE<=11+, Firefox<=30+ (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tif ( elem.ownerDocument.defaultView.opener ) {\n\t\t\treturn elem.ownerDocument.defaultView.getComputedStyle( elem, null );\n\t\t}\n\n\t\treturn window.getComputedStyle( elem, null );\n\t};\n\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// Support: IE9\n\t// getPropertyValue is only needed for .css('filter') (#12537)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\t}\n\n\tif ( computed ) {\n\n\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// Support: iOS < 6\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// iOS < 6 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels\n\t\t// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values\n\t\tif ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\t\t// Support: IE\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn (this.get = hookFn).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\n(function() {\n\tvar pixelPositionVal, boxSizingReliableVal,\n\t\tdocElem = document.documentElement,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE9-11+\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tcontainer.style.cssText = \"border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;\" +\n\t\t\"position:absolute\";\n\tcontainer.appendChild( div );\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computePixelPositionAndBoxSizingReliable() {\n\t\tdiv.style.cssText =\n\t\t\t// Support: Firefox<29, Android 2.3\n\t\t\t// Vendor-prefix box-sizing\n\t\t\t\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;\" +\n\t\t\t\"box-sizing:border-box;display:block;margin-top:1%;top:1%;\" +\n\t\t\t\"border:1px;padding:1px;width:4px;position:absolute\";\n\t\tdiv.innerHTML = \"\";\n\t\tdocElem.appendChild( container );\n\n\t\tvar divStyle = window.getComputedStyle( div, null );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\t\tboxSizingReliableVal = divStyle.width === \"4px\";\n\n\t\tdocElem.removeChild( container );\n\t}\n\n\t// Support: node.js jsdom\n\t// Don't assume that getComputedStyle is a property of the global object\n\tif ( window.getComputedStyle ) {\n\t\tjQuery.extend( support, {\n\t\t\tpixelPosition: function() {\n\n\t\t\t\t// This test is executed only once but we still do memoizing\n\t\t\t\t// since we can use the boxSizingReliable pre-computing.\n\t\t\t\t// No need to check if the test was already performed, though.\n\t\t\t\tcomputePixelPositionAndBoxSizingReliable();\n\t\t\t\treturn pixelPositionVal;\n\t\t\t},\n\t\t\tboxSizingReliable: function() {\n\t\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\t\tcomputePixelPositionAndBoxSizingReliable();\n\t\t\t\t}\n\t\t\t\treturn boxSizingReliableVal;\n\t\t\t},\n\t\t\treliableMarginRight: function() {\n\n\t\t\t\t// Support: Android 2.3\n\t\t\t\t// Check if div with explicit width and no margin-right incorrectly\n\t\t\t\t// gets computed margin-right based on width of container. (#3333)\n\t\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n\t\t\t\t// This support function is only executed once so no memoizing is needed.\n\t\t\t\tvar ret,\n\t\t\t\t\tmarginDiv = div.appendChild( document.createElement( \"div\" ) );\n\n\t\t\t\t// Reset CSS: box-sizing; display; margin; border; padding\n\t\t\t\tmarginDiv.style.cssText = div.style.cssText =\n\t\t\t\t\t// Support: Firefox<29, Android 2.3\n\t\t\t\t\t// Vendor-prefix box-sizing\n\t\t\t\t\t\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;\" +\n\t\t\t\t\t\"box-sizing:content-box;display:block;margin:0;border:0;padding:0\";\n\t\t\t\tmarginDiv.style.marginRight = marginDiv.style.width = \"0\";\n\t\t\t\tdiv.style.width = \"1px\";\n\t\t\t\tdocElem.appendChild( container );\n\n\t\t\t\tret = !parseFloat( window.getComputedStyle( marginDiv, null ).marginRight );\n\n\t\t\t\tdocElem.removeChild( container );\n\t\t\t\tdiv.removeChild( marginDiv );\n\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t});\n\t}\n})();\n\n\n// A method for quickly swapping in/out CSS properties to get correct calculations.\njQuery.swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\nvar\n\t// Swappable if display is none or starts with table except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trnumsplit = new RegExp( \"^(\" + pnum + \")(.*)$\", \"i\" ),\n\trrelNum = new RegExp( \"^([+-])=(\" + pnum + \")\", \"i\" ),\n\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t},\n\n\tcssPrefixes = [ \"Webkit\", \"O\", \"Moz\", \"ms\" ];\n\n// Return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( style, name ) {\n\n\t// Shortcut for names that are not vendor prefixed\n\tif ( name in style ) {\n\t\treturn name;\n\t}\n\n\t// Check for vendor prefixed names\n\tvar capName = name[0].toUpperCase() + name.slice(1),\n\t\torigName = name,\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in style ) {\n\t\t\treturn name;\n\t\t}\n\t}\n\n\treturn origName;\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\tvar matches = rnumsplit.exec( value );\n\treturn matches ?\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\n\tvar i = extra === ( isBorderBox ? \"border\" : \"content\" ) ?\n\t\t// If we already have the right measurement, avoid augmentation\n\t\t4 :\n\t\t// Otherwise initialize for horizontal or vertical properties\n\t\tname === \"width\" ? 1 : 0,\n\n\t\tval = 0;\n\n\tfor ( ; i < 4; i += 2 ) {\n\t\t// Both box models exclude margin, so add it if we want it\n\t\tif ( extra === \"margin\" ) {\n\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\tif ( isBorderBox ) {\n\t\t\t// border-box includes padding, so remove it if we want content\n\t\t\tif ( extra === \"content\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// At this point, extra isn't border nor margin, so remove border\n\t\t\tif ( extra !== \"margin\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t} else {\n\t\t\t// At this point, extra isn't content, so add padding\n\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// At this point, extra isn't content nor padding, so add border\n\t\t\tif ( extra !== \"padding\" ) {\n\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn val;\n}\n\nfunction getWidthOrHeight( elem, name, extra ) {\n\n\t// Start with offset property, which is equivalent to the border-box value\n\tvar valueIsBorderBox = true,\n\t\tval = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\n\t\tstyles = getStyles( elem ),\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t// Some non-html elements return undefined for offsetWidth, so check for null/undefined\n\t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n\t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n\tif ( val <= 0 || val == null ) {\n\t\t// Fall back to computed then uncomputed css if necessary\n\t\tval = curCSS( elem, name, styles );\n\t\tif ( val < 0 || val == null ) {\n\t\t\tval = elem.style[ name ];\n\t\t}\n\n\t\t// Computed unit is not pixels. Stop here and return.\n\t\tif ( rnumnonpx.test(val) ) {\n\t\t\treturn val;\n\t\t}\n\n\t\t// Check for style in case a browser which returns unreliable values\n\t\t// for getComputedStyle silently falls back to the reliable elem.style\n\t\tvalueIsBorderBox = isBorderBox &&\n\t\t\t( support.boxSizingReliable() || val === elem.style[ name ] );\n\n\t\t// Normalize \"\", auto, and prepare for extra\n\t\tval = parseFloat( val ) || 0;\n\t}\n\n\t// Use the active box-sizing model to add/subtract irrelevant styles\n\treturn ( val +\n\t\taugmentWidthOrHeight(\n\t\t\telem,\n\t\t\tname,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles\n\t\t)\n\t) + \"px\";\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem, hidden,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvalues[ index ] = data_priv.get( elem, \"olddisplay\" );\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\t\t\t// Reset the inline display of this element to learn if it is\n\t\t\t// being hidden by cascaded rules or not\n\t\t\tif ( !values[ index ] && display === \"none\" ) {\n\t\t\t\telem.style.display = \"\";\n\t\t\t}\n\n\t\t\t// Set elements which have been overridden with display: none\n\t\t\t// in a stylesheet to whatever the default browser style is\n\t\t\t// for such an element\n\t\t\tif ( elem.style.display === \"\" && isHidden( elem ) ) {\n\t\t\t\tvalues[ index ] = data_priv.access( elem, \"olddisplay\", defaultDisplay(elem.nodeName) );\n\t\t\t}\n\t\t} else {\n\t\t\thidden = isHidden( elem );\n\n\t\t\tif ( display !== \"none\" || !hidden ) {\n\t\t\t\tdata_priv.set( elem, \"olddisplay\", hidden ? display : jQuery.css( elem, \"display\" ) );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of most of the elements in a second loop\n\t// to avoid the constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( !show || elem.style.display === \"none\" || elem.style.display === \"\" ) {\n\t\t\telem.style.display = show ? values[ index ] || \"\" : \"none\";\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.extend({\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {\n\t\t\"float\": \"cssFloat\"\n\t},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = jQuery.camelCase( name ),\n\t\t\tstyle = elem.style;\n\n\t\tname = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && (ret = rrelNum.exec( value )) ) {\n\t\t\t\tvalue = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number, add 'px' to the (except for certain CSS properties)\n\t\t\tif ( type === \"number\" && !jQuery.cssNumber[ origName ] ) {\n\t\t\t\tvalue += \"px\";\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !(\"set\" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {\n\t\t\t\tstyle[ name ] = value;\n\t\t\t}\n\n\t\t} else {\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = jQuery.camelCase( name );\n\n\t\t// Make sure that we're working with the right name\n\t\tname = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || jQuery.isNumeric( num ) ? num || 0 : val;\n\t\t}\n\t\treturn val;\n\t}\n});\n\njQuery.each([ \"height\", \"width\" ], function( i, name ) {\n\tjQuery.cssHooks[ name ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) && elem.offsetWidth === 0 ?\n\t\t\t\t\tjQuery.swap( elem, cssShow, function() {\n\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\n\t\t\t\t\t}) :\n\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar styles = extra && getStyles( elem );\n\t\t\treturn setPositiveNumber( elem, value, extra ?\n\t\t\t\taugmentWidthOrHeight(\n\t\t\t\t\telem,\n\t\t\t\t\tname,\n\t\t\t\t\textra,\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\t\tstyles\n\t\t\t\t) : 0\n\t\t\t);\n\t\t}\n\t};\n});\n\n// Support: Android 2.3\njQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn jQuery.swap( elem, { \"display\": \"inline-block\" },\n\t\t\t\tcurCSS, [ elem, \"marginRight\" ] );\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each({\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split(\" \") : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( !rmargin.test( prefix ) ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n});\n\njQuery.fn.extend({\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( jQuery.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t},\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tif ( isHidden( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t});\n\t}\n});\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || \"swing\";\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\tif ( tween.elem[ tween.prop ] != null &&\n\t\t\t\t(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE9\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t}\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back Compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, timerId,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trfxnum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" ),\n\trrun = /queueHooks$/,\n\tanimationPrefilters = [ defaultPrefilter ],\n\ttweeners = {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value ),\n\t\t\t\ttarget = tween.cur(),\n\t\t\t\tparts = rfxnum.exec( value ),\n\t\t\t\tunit = parts && parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t\t\t// Starting value computation is required for potential unit mismatches\n\t\t\t\tstart = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +target ) &&\n\t\t\t\t\trfxnum.exec( jQuery.css( tween.elem, prop ) ),\n\t\t\t\tscale = 1,\n\t\t\t\tmaxIterations = 20;\n\n\t\t\tif ( start && start[ 3 ] !== unit ) {\n\t\t\t\t// Trust units reported by jQuery.css\n\t\t\t\tunit = unit || start[ 3 ];\n\n\t\t\t\t// Make sure we update the tween properties later on\n\t\t\t\tparts = parts || [];\n\n\t\t\t\t// Iteratively approximate from a nonzero starting point\n\t\t\t\tstart = +target || 1;\n\n\t\t\t\tdo {\n\t\t\t\t\t// If previous iteration zeroed out, double until we get *something*.\n\t\t\t\t\t// Use string for doubling so we don't accidentally see scale as unchanged below\n\t\t\t\t\tscale = scale || \".5\";\n\n\t\t\t\t\t// Adjust and apply\n\t\t\t\t\tstart = start / scale;\n\t\t\t\t\tjQuery.style( tween.elem, prop, start + unit );\n\n\t\t\t\t// Update scale, tolerating zero or NaN from tween.cur(),\n\t\t\t\t// break the loop if scale is unchanged or perfect, or if we've just had enough\n\t\t\t\t} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );\n\t\t\t}\n\n\t\t\t// Update tween properties\n\t\t\tif ( parts ) {\n\t\t\t\tstart = tween.start = +start || +target || 0;\n\t\t\t\ttween.unit = unit;\n\t\t\t\t// If a +=/-= token was provided, we're doing a relative animation\n\t\t\t\ttween.end = parts[ 1 ] ?\n\t\t\t\t\tstart + ( parts[ 1 ] + 1 ) * parts[ 2 ] :\n\t\t\t\t\t+parts[ 2 ];\n\t\t\t}\n\n\t\t\treturn tween;\n\t\t} ]\n\t};\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\tsetTimeout(function() {\n\t\tfxNow = undefined;\n\t});\n\treturn ( fxNow = jQuery.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4 ; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( tweeners[ prop ] || [] ).concat( tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( (tween = collection[ index ].call( animation, prop, value )) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\t/* jshint validthis: true */\n\tvar prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHidden( elem ),\n\t\tdataShow = data_priv.get( elem, \"fxshow\" );\n\n\t// Handle queue: false promises\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always(function() {\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always(function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t// Height/width overflow pass\n\tif ( elem.nodeType === 1 && ( \"height\" in props || \"width\" in props ) ) {\n\t\t// Make sure that nothing sneaks out\n\t\t// Record all 3 overflow attributes because IE9-10 do not\n\t\t// change the overflow attribute when overflowX and\n\t\t// overflowY are set to the same value\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Set display property to inline-block for height/width\n\t\t// animations on inline elements that are having width/height animated\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\n\t\t// Test default display if display is currently \"none\"\n\t\tcheckDisplay = display === \"none\" ?\n\t\t\tdata_priv.get( elem, \"olddisplay\" ) || defaultDisplay( elem.nodeName ) : display;\n\n\t\tif ( checkDisplay === \"inline\" && jQuery.css( elem, \"float\" ) === \"none\" ) {\n\t\t\tstyle.display = \"inline-block\";\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always(function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t});\n\t}\n\n\t// show/hide pass\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.exec( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\n\t\t// Any non-fx value stops us from restoring the original display value\n\t\t} else {\n\t\t\tdisplay = undefined;\n\t\t}\n\t}\n\n\tif ( !jQuery.isEmptyObject( orig ) ) {\n\t\tif ( dataShow ) {\n\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\thidden = dataShow.hidden;\n\t\t\t}\n\t\t} else {\n\t\t\tdataShow = data_priv.access( elem, \"fxshow\", {} );\n\t\t}\n\n\t\t// Store state if its toggle - enables .stop().toggle() to \"reverse\"\n\t\tif ( toggle ) {\n\t\t\tdataShow.hidden = !hidden;\n\t\t}\n\t\tif ( hidden ) {\n\t\t\tjQuery( elem ).show();\n\t\t} else {\n\t\t\tanim.done(function() {\n\t\t\t\tjQuery( elem ).hide();\n\t\t\t});\n\t\t}\n\t\tanim.done(function() {\n\t\t\tvar prop;\n\n\t\t\tdata_priv.remove( elem, \"fxshow\" );\n\t\t\tfor ( prop in orig ) {\n\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t}\n\t\t});\n\t\tfor ( prop in orig ) {\n\t\t\ttween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\n\t\t\tif ( !( prop in dataShow ) ) {\n\t\t\t\tdataShow[ prop ] = tween.start;\n\t\t\t\tif ( hidden ) {\n\t\t\t\t\ttween.end = tween.start;\n\t\t\t\t\ttween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t// If this is a noop like .hide().hide(), restore an overwritten display value\n\t} else if ( (display === \"none\" ? defaultDisplay( elem.nodeName ) : display) === \"inline\" ) {\n\t\tstyle.display = display;\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = jQuery.camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( jQuery.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = animationPrefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t}),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\t\t\t\t// Support: Android 2.3\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ]);\n\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t} else {\n\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tanimation = deferred.promise({\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, { specialEasing: {} }, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length ; index++ ) {\n\t\tresult = animationPrefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( jQuery.isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t})\n\t);\n\n\t// attach callbacks from options\n\treturn animation.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweener: function( props, callback ) {\n\t\tif ( jQuery.isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.split(\" \");\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length ; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\ttweeners[ prop ] = tweeners[ prop ] || [];\n\t\t\ttweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tanimationPrefilters.unshift( callback );\n\t\t} else {\n\t\t\tanimationPrefilters.push( callback );\n\t\t}\n\t}\n});\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tjQuery.isFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\n\t};\n\n\topt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ? opt.duration :\n\t\topt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( jQuery.isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend({\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHidden ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate({ opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || data_priv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = data_priv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t});\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each(function() {\n\t\t\tvar index,\n\t\t\t\tdata = data_priv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t});\n\t}\n});\n\njQuery.each([ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n});\n\n// Generate shortcuts for custom animations\njQuery.each({\n\tslideDown: genFx(\"show\"),\n\tslideUp: genFx(\"hide\"),\n\tslideToggle: genFx(\"toggle\"),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n});\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = jQuery.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\t\t// Checks the timer has not already been removed\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tif ( timer() ) {\n\t\tjQuery.fx.start();\n\t} else {\n\t\tjQuery.timers.pop();\n\t}\n};\n\njQuery.fx.interval = 13;\n\njQuery.fx.start = function() {\n\tif ( !timerId ) {\n\t\ttimerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );\n\t}\n};\n\njQuery.fx.stop = function() {\n\tclearInterval( timerId );\n\ttimerId = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\tclearTimeout( timeout );\n\t\t};\n\t});\n};\n\n\n(function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: iOS<=5.1, Android<=4.2+\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE<=11+\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: Android<=2.3\n\t// Options inside disabled selects are incorrectly marked as disabled\n\tselect.disabled = true;\n\tsupport.optDisabled = !opt.disabled;\n\n\t// Support: IE<=11+\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n})();\n\n\nvar nodeHook, boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend({\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t});\n\t}\n});\n\njQuery.extend({\n\tattr: function( elem, name, value ) {\n\t\tvar hooks, ret,\n\t\t\tnType = elem.nodeType;\n\n\t\t// don't get/set attributes on text, comment and attribute nodes\n\t\tif ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === strundefined ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// All attributes are lowercase\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\tname = name.toLowerCase();\n\t\t\thooks = jQuery.attrHooks[ name ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\n\t\t\t} else if ( hooks && \"set\" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {\n\t\t\t\treturn ret;\n\n\t\t\t} else {\n\t\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t} else if ( hooks && \"get\" in hooks && (ret = hooks.get( elem, name )) !== null ) {\n\t\t\treturn ret;\n\n\t\t} else {\n\t\t\tret = jQuery.find.attr( elem, name );\n\n\t\t\t// Non-existent attributes return null, we normalize to undefined\n\t\t\treturn ret == null ?\n\t\t\t\tundefined :\n\t\t\t\tret;\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name, propName,\n\t\t\ti = 0,\n\t\t\tattrNames = value && value.match( rnotwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( (name = attrNames[i++]) ) {\n\t\t\t\tpropName = jQuery.propFix[ name ] || name;\n\n\t\t\t\t// Boolean attributes get special treatment (#10870)\n\t\t\t\tif ( jQuery.expr.match.bool.test( name ) ) {\n\t\t\t\t\t// Set corresponding property to false\n\t\t\t\t\telem[ propName ] = false;\n\t\t\t\t}\n\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tjQuery.nodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle;\n\t\tif ( !isXML ) {\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ name ];\n\t\t\tattrHandle[ name ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tname.toLowerCase() :\n\t\t\t\tnull;\n\t\t\tattrHandle[ name ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n});\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i;\n\njQuery.fn.extend({\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each(function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t});\n\t}\n});\n\njQuery.extend({\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t},\n\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks, notxml,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tnotxml = nType !== 1 || !jQuery.isXMLDoc( elem );\n\n\t\tif ( notxml ) {\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\treturn hooks && \"set\" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?\n\t\t\t\tret :\n\t\t\t\t( elem[ name ] = value );\n\n\t\t} else {\n\t\t\treturn hooks && \"get\" in hooks && (ret = hooks.get( elem, name )) !== null ?\n\t\t\t\tret :\n\t\t\t\telem[ name ];\n\t\t}\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\t\t\t\treturn elem.hasAttribute( \"tabindex\" ) || rfocusable.test( elem.nodeName ) || elem.href ?\n\t\t\t\t\telem.tabIndex :\n\t\t\t\t\t-1;\n\t\t\t}\n\t\t}\n\t}\n});\n\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t};\n}\n\njQuery.each([\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n});\n\n\n\n\nvar rclass = /[\\t\\r\\n\\f]/g;\n\njQuery.fn.extend({\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, clazz, j, finalValue,\n\t\t\tproceed = typeof value === \"string\" && value,\n\t\t\ti = 0,\n\t\t\tlen = this.length;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, this.className ) );\n\t\t\t});\n\t\t}\n\n\t\tif ( proceed ) {\n\t\t\t// The disjunction here is for better compressibility (see removeClass)\n\t\t\tclasses = ( value || \"\" ).match( rnotwhite ) || [];\n\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\telem = this[ i ];\n\t\t\t\tcur = elem.nodeType === 1 && ( elem.className ?\n\t\t\t\t\t( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :\n\t\t\t\t\t\" \"\n\t\t\t\t);\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (clazz = classes[j++]) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\n\t\t\t\t\tif ( elem.className !== finalValue ) {\n\t\t\t\t\t\telem.className = finalValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, clazz, j, finalValue,\n\t\t\tproceed = arguments.length === 0 || typeof value === \"string\" && value,\n\t\t\ti = 0,\n\t\t\tlen = this.length;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, this.className ) );\n\t\t\t});\n\t\t}\n\t\tif ( proceed ) {\n\t\t\tclasses = ( value || \"\" ).match( rnotwhite ) || [];\n\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\telem = this[ i ];\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( elem.className ?\n\t\t\t\t\t( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :\n\t\t\t\t\t\"\"\n\t\t\t\t);\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (clazz = classes[j++]) ) {\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) >= 0 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = value ? jQuery.trim( cur ) : \"\";\n\t\t\t\t\tif ( elem.className !== finalValue ) {\n\t\t\t\t\t\telem.className = finalValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value;\n\n\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );\n\t\t\t});\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tif ( type === \"string\" ) {\n\t\t\t\t// Toggle individual class names\n\t\t\t\tvar className,\n\t\t\t\t\ti = 0,\n\t\t\t\t\tself = jQuery( this ),\n\t\t\t\t\tclassNames = value.match( rnotwhite ) || [];\n\n\t\t\t\twhile ( (className = classNames[ i++ ]) ) {\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( type === strundefined || type === \"boolean\" ) {\n\t\t\t\tif ( this.className ) {\n\t\t\t\t\t// store className if set\n\t\t\t\t\tdata_priv.set( this, \"__className__\", this.className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tthis.className = this.className || value === false ? \"\" : data_priv.get( this, \"__className__\" ) || \"\";\n\t\t\t}\n\t\t});\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className = \" \" + selector + \" \",\n\t\t\ti = 0,\n\t\t\tl = this.length;\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tif ( this[i].nodeType === 1 && (\" \" + this[i].className + \" \").replace(rclass, \" \").indexOf( className ) >= 0 ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n});\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend({\n\tval: function( value ) {\n\t\tvar hooks, ret, isFunction,\n\t\t\telem = this[0];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks && \"get\" in hooks && (ret = hooks.get( elem, \"value\" )) !== undefined ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\treturn typeof ret === \"string\" ?\n\t\t\t\t\t// Handle most common string cases\n\t\t\t\t\tret.replace(rreturn, \"\") :\n\t\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\t\tret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tisFunction = jQuery.isFunction( value );\n\n\t\treturn this.each(function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( isFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( jQuery.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !(\"set\" in hooks) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t});\n\t}\n});\n\njQuery.extend({\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\t\t\t\t\t// Support: IE10-11+\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\tjQuery.trim( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\" || index < 0,\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length,\n\t\t\t\t\ti = index < 0 ?\n\t\t\t\t\t\tmax :\n\t\t\t\t\t\tone ? index : 0;\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// IE6-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t( support.optDisabled ? !option.disabled : option.getAttribute( \"disabled\" ) === null ) &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\t\t\t\t\tif ( (option.selected = jQuery.inArray( option.value, values ) >= 0) ) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Radios and checkboxes getter/setter\njQuery.each([ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( jQuery.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n\t\t};\n\t}\n});\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\njQuery.each( (\"blur focus focusin focusout load resize scroll unload click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup error contextmenu\").split(\" \"), function( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n});\n\njQuery.fn.extend({\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t},\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ? this.off( selector, \"**\" ) : this.off( types, selector || \"**\", fn );\n\t}\n});\n\n\nvar nonce = jQuery.now();\n\nvar rquery = (/\\?/);\n\n\n\n// Support: Android 2.3\n// Workaround failure to string-cast null input\njQuery.parseJSON = function( data ) {\n\treturn JSON.parse( data + \"\" );\n};\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml, tmp;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE9\n\ttry {\n\t\ttmp = new DOMParser();\n\t\txml = tmp.parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trhash = /#.*$/,\n\trts = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\trurl = /^([\\w.+-]+:)(?:\\/\\/(?:[^\\/?#]*@|)([^\\/?#:]*)(?::(\\d+)|)|)/,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Document location\n\tajaxLocation = window.location.href,\n\n\t// Segment location into parts\n\tajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];\n\n\t\tif ( jQuery.isFunction( func ) ) {\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( (dataType = dataTypes[i++]) ) {\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[0] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t(structure[ dataType ] = structure[ dataType ] || []).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t(structure[ dataType ] = structure[ dataType ] || []).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t});\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[0] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s[ \"throws\" ] ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn { state: \"parsererror\", error: conv ? e : \"No conversion from \" + prev + \" to \" + current };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend({\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: ajaxLocation,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /xml/,\n\t\t\thtml: /html/,\n\t\t\tjson: /json/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": jQuery.parseJSON,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\t\t\t// Cross-domain detection vars\n\t\t\tparts,\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\t\t\t// Loop variable\n\t\t\ti,\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\tjQuery.event,\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks(\"once memory\"),\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\t\t\t// The jqXHR state\n\t\t\tstate = 0,\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( state === 2 ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( (match = rheaders.exec( responseHeadersString )) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[1].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn state === 2 ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tvar lname = name.toLowerCase();\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\tname = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\t// Lazy-add the new callback in a way that preserves old ones\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR ).complete = completeDeferred.add;\n\t\tjqXHR.success = jqXHR.done;\n\t\tjqXHR.error = jqXHR.fail;\n\n\t\t// Remove hash character (#7531: and string promotion)\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || ajaxLocation ) + \"\" ).replace( rhash, \"\" )\n\t\t\t.replace( rprotocol, ajaxLocParts[ 1 ] + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().match( rnotwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when we have a protocol:host:port mismatch\n\t\tif ( s.crossDomain == null ) {\n\t\t\tparts = rurl.exec( s.url.toLowerCase() );\n\t\t\ts.crossDomain = !!( parts &&\n\t\t\t\t( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||\n\t\t\t\t\t( parts[ 3 ] || ( parts[ 1 ] === \"http:\" ? \"80\" : \"443\" ) ) !==\n\t\t\t\t\t\t( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === \"http:\" ? \"80\" : \"443\" ) ) )\n\t\t\t);\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( state === 2 ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger(\"ajaxStart\");\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\tcacheURL = s.url;\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// If data is available, append data to url\n\t\t\tif ( s.data ) {\n\t\t\t\tcacheURL = ( s.url += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data );\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add anti-cache in url if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\ts.url = rts.test( cacheURL ) ?\n\n\t\t\t\t\t// If there is already a '_' parameter, set its value\n\t\t\t\t\tcacheURL.replace( rts, \"$1_=\" + nonce++ ) :\n\n\t\t\t\t\t// Otherwise add one to the end\n\t\t\t\t\tcacheURL + ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + nonce++;\n\t\t\t}\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tfor ( i in { success: 1, error: 1, complete: 1 } ) {\n\t\t\tjqXHR[ i ]( s[ i ] );\n\t\t}\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = setTimeout(function() {\n\t\t\t\t\tjqXHR.abort(\"timeout\");\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tstate = 1;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\t\t\t\t// Propagate exception as error if not done\n\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\tdone( -1, e );\n\t\t\t\t// Simply rethrow otherwise\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Called once\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// State is \"done\" now\n\t\t\tstate = 2;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\tclearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader(\"Last-Modified\");\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader(\"etag\");\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger(\"ajaxStop\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n});\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\treturn jQuery.ajax({\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t});\n\t};\n});\n\n\njQuery._evalUrl = function( url ) {\n\treturn jQuery.ajax({\n\t\turl: url,\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tasync: false,\n\t\tglobal: false,\n\t\t\"throws\": true\n\t});\n};\n\n\njQuery.fn.extend({\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).wrapAll( html.call(this, i) );\n\t\t\t});\n\t\t}\n\n\t\tif ( this[ 0 ] ) {\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map(function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t}).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call(this, i) );\n\t\t\t});\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t});\n\t},\n\n\twrap: function( html ) {\n\t\tvar isFunction = jQuery.isFunction( html );\n\n\t\treturn this.each(function( i ) {\n\t\t\tjQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );\n\t\t});\n\t},\n\n\tunwrap: function() {\n\t\treturn this.parent().each(function() {\n\t\t\tif ( !jQuery.nodeName( this, \"body\" ) ) {\n\t\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t\t}\n\t\t}).end();\n\t}\n});\n\n\njQuery.expr.filters.hidden = function( elem ) {\n\t// Support: Opera <= 12.12\n\t// Opera reports offsetWidths and offsetHeights less than zero on some elements\n\treturn elem.offsetWidth <= 0 && elem.offsetHeight <= 0;\n};\njQuery.expr.filters.visible = function( elem ) {\n\treturn !jQuery.expr.filters.hidden( elem );\n};\n\n\n\n\nvar r20 = /%20/g,\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( jQuery.isArray( obj ) ) {\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams( prefix + \"[\" + ( typeof v === \"object\" ? i : \"\" ) + \"]\", v, traditional, add );\n\t\t\t}\n\t\t});\n\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, value ) {\n\t\t\t// If value is a function, invoke it and return its value\n\t\t\tvalue = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\n\t\t};\n\n\t// Set traditional to true for jQuery <= 1.3.2 behavior.\n\tif ( traditional === undefined ) {\n\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t});\n\n\t} else {\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" ).replace( r20, \"+\" );\n};\n\njQuery.fn.extend({\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map(function() {\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t})\n\t\t.filter(function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t})\n\t\t.map(function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\treturn val == null ?\n\t\t\t\tnull :\n\t\t\t\tjQuery.isArray( val ) ?\n\t\t\t\t\tjQuery.map( val, function( val ) {\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t\t}) :\n\t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t}).get();\n\t}\n});\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new XMLHttpRequest();\n\t} catch( e ) {}\n};\n\nvar xhrId = 0,\n\txhrCallbacks = {},\n\txhrSuccessStatus = {\n\t\t// file protocol always yields status code 0, assume 200\n\t\t0: 200,\n\t\t// Support: IE9\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\n// Support: IE9\n// Open requests must be manually aborted on unload (#5280)\n// See https://support.microsoft.com/kb/2856746 for more info\nif ( window.attachEvent ) {\n\twindow.attachEvent( \"onunload\", function() {\n\t\tfor ( var key in xhrCallbacks ) {\n\t\t\txhrCallbacks[ key ]();\n\t\t}\n\t});\n}\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport(function( options ) {\n\tvar callback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr(),\n\t\t\t\t\tid = ++xhrId;\n\n\t\t\t\txhr.open( options.type, options.url, options.async, options.username, options.password );\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[\"X-Requested-With\"] ) {\n\t\t\t\t\theaders[\"X-Requested-With\"] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tdelete xhrCallbacks[ id ];\n\t\t\t\t\t\t\tcallback = xhr.onload = xhr.onerror = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\t// file: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\t\t\t\t\t\t\t\t\t// Support: IE9\n\t\t\t\t\t\t\t\t\t// Accessing binary-data responseText throws an exception\n\t\t\t\t\t\t\t\t\t// (#11426)\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText === \"string\" ? {\n\t\t\t\t\t\t\t\t\t\ttext: xhr.responseText\n\t\t\t\t\t\t\t\t\t} : undefined,\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\txhr.onerror = callback(\"error\");\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = xhrCallbacks[ id ] = callback(\"abort\");\n\n\t\t\t\ttry {\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n});\n\n\n\n\n// Install script dataType\njQuery.ajaxSetup({\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /(?:java|ecma)script/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n});\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n});\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery(\"<script>\").prop({\n\t\t\t\t\tasync: true,\n\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\tsrc: s.url\n\t\t\t\t}).on(\n\t\t\t\t\t\"load error\",\n\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n});\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup({\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n});\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" && !( s.contentType || \"\" ).indexOf(\"application/x-www-form-urlencoded\") && rjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[\"script json\"] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always(function() {\n\t\t\t// Restore preexisting value\n\t\t\twindow[ callbackName ] = overwritten;\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\t\t\t\t// make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t});\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n});\n\n\n\n\n// data: string of html\n// context (optional): If specified, the fragment will be created in this context, defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\tcontext = context || document;\n\n\tvar parsed = rsingleTag.exec( data ),\n\t\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[1] ) ];\n\t}\n\n\tparsed = jQuery.buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n// Keep a copy of the old load method\nvar _load = jQuery.fn.load;\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tif ( typeof url !== \"string\" && _load ) {\n\t\treturn _load.apply( this, arguments );\n\t}\n\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf(\" \");\n\n\tif ( off >= 0 ) {\n\t\tselector = jQuery.trim( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( jQuery.isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax({\n\t\t\turl: url,\n\n\t\t\t// if \"type\" variable is undefined, then \"GET\" method will be used\n\t\t\ttype: type,\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t}).done(function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery(\"<div>\").append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t}).complete( callback && function( jqXHR, status ) {\n\t\t\tself.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t});\n\t}\n\n\treturn this;\n};\n\n\n\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [ \"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\" ], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n});\n\n\n\n\njQuery.expr.filters.animated = function( elem ) {\n\treturn jQuery.grep(jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t}).length;\n};\n\n\n\n\nvar docElem = window.document.documentElement;\n\n/**\n * Gets a window from an element\n */\nfunction getWindow( elem ) {\n\treturn jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;\n}\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf(\"auto\") > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( jQuery.isFunction( options ) ) {\n\t\t\toptions = options.call( elem, i, curOffset );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend({\n\toffset: function( options ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each(function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t});\n\t\t}\n\n\t\tvar docElem, win,\n\t\t\telem = this[ 0 ],\n\t\t\tbox = { top: 0, left: 0 },\n\t\t\tdoc = elem && elem.ownerDocument;\n\n\t\tif ( !doc ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdocElem = doc.documentElement;\n\n\t\t// Make sure it's not a disconnected DOM node\n\t\tif ( !jQuery.contains( docElem, elem ) ) {\n\t\t\treturn box;\n\t\t}\n\n\t\t// Support: BlackBerry 5, iOS 3 (original iPhone)\n\t\t// If we don't have gBCR, just use 0,0 rather than error\n\t\tif ( typeof elem.getBoundingClientRect !== strundefined ) {\n\t\t\tbox = elem.getBoundingClientRect();\n\t\t}\n\t\twin = getWindow( doc );\n\t\treturn {\n\t\t\ttop: box.top + win.pageYOffset - docElem.clientTop,\n\t\t\tleft: box.left + win.pageXOffset - docElem.clientLeft\n\t\t};\n\t},\n\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is its only offset parent\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\t\t\t// Assume getBoundingClientRect is there when computed position is fixed\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\t// Get *real* offsetParent\n\t\t\toffsetParent = this.offsetParent();\n\n\t\t\t// Get correct offsets\n\t\t\toffset = this.offset();\n\t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\n\t\t\t\tparentOffset = offsetParent.offset();\n\t\t\t}\n\n\t\t\t// Add offsetParent borders\n\t\t\tparentOffset.top += jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true );\n\t\t\tparentOffset.left += jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true );\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\toffsetParent: function() {\n\t\treturn this.map(function() {\n\t\t\tvar offsetParent = this.offsetParent || docElem;\n\n\t\t\twhile ( offsetParent && ( !jQuery.nodeName( offsetParent, \"html\" ) && jQuery.css( offsetParent, \"position\" ) === \"static\" ) ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || docElem;\n\t\t});\n\t}\n});\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\t\t\tvar win = getWindow( elem );\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : window.pageXOffset,\n\t\t\t\t\ttop ? val : window.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length, null );\n\t};\n});\n\n// Support: Safari<7+, Chrome<37+\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n});\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name }, function( defaultExtra, funcName ) {\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\n\t\t\t\t\t// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\n\t\t\t\t\t// isn't a whole lot we can do. See pull request at this URL for discussion:\n\t\t\t\t\t// https://github.com/jquery/jquery/pull/764\n\t\t\t\t\treturn elem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable, null );\n\t\t};\n\t});\n});\n\n\n// The number of elements contained in the matched element set\njQuery.fn.size = function() {\n\treturn this.length;\n};\n\njQuery.fn.andSelf = jQuery.fn.addBack;\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t});\n}\n\n\n\n\nvar\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( typeof noGlobal === strundefined ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n\n}));\n\n})",
              "bottom": "})"
            },
            "dependencies": {
              "static": {},
              "dynamic": {},
              "computed": false
            },
            "warnings": [],
            "errors": []
          },
          "/package.json": {
            "requireId": "/package.json",
            "memoizeId": "/package.json",
            "descriptor": {
              "dirpath": ".",
              "dirrealpath": "",
              "id": "",
              "lookupPaths": [
                "package.json",
                ".package.json"
              ],
              "descriptorPaths": [
                "package.json"
              ],
              "raw": {
                "package.json": {
                  "uid": "github.com/fireconsole/widget.console/client",
                  "main": "./client.js",
                  "mappings": {
                    "q": "../widget/node_modules/q",
                    "widget": "../widget"
                  },
                  "exports": {
                    "bundles": {
                      "client.js": "./client.js"
                    }
                  }
                }
              },
              "normalized": {
                ".package.json": {
                  "pm": {
                    "install": "npm"
                  },
                  "layout": {
                    "directories": {
                      "dependency": "./node_modules"
                    }
                  },
                  "dependencies": {
                    "bundled": {
                      "q": "./node_modules/q"
                    }
                  },
                  "mappings": {
                    "q": "289ab28d99ade60eb35e118aa9a775aee509f57c-q"
                  }
                },
                "package.json": {
                  "uid": "github.com/fireconsole/widget.console/client",
                  "dependencies": {
                    "required": {
                      "q": "../widget/node_modules/q",
                      "widget": "../widget"
                    },
                    "bundled": {
                      "q": "./node_modules/q"
                    }
                  },
                  "exports": {
                    "bundles": {
                      "client.js": "./client.js"
                    },
                    "main": "./client.js"
                  },
                  "pm": {
                    "install": "npm"
                  },
                  "layout": {
                    "directories": {
                      "dependency": "./node_modules"
                    }
                  },
                  "mappings": {
                    "q": "289ab28d99ade60eb35e118aa9a775aee509f57c-q"
                  }
                }
              },
              "combined": {
                "uid": "github.com/fireconsole/widget.console/client",
                "dependencies": {
                  "required": {
                    "q": "../widget/node_modules/q",
                    "widget": "../widget"
                  },
                  "bundled": {
                    "q": "./node_modules/q"
                  }
                },
                "exports": {
                  "bundles": {
                    "client.js": "./client.js"
                  },
                  "main": "./client.js"
                },
                "pm": {
                  "install": "npm"
                },
                "layout": {
                  "directories": {
                    "dependency": "./node_modules"
                  }
                },
                "mappings": {
                  "q": "289ab28d99ade60eb35e118aa9a775aee509f57c-q"
                }
              },
              "warnings": [],
              "errors": [],
              "memoized": {
                "main": "/client.js",
                "mappings": {
                  "widget": "21722499c6c2ae46d0a8a6f4ec16b0de4041616a-widget"
                },
                "dirpath": "."
              }
            },
            "wrapper": "json"
          },
          "21722499c6c2ae46d0a8a6f4ec16b0de4041616a-widget/package.json": {
            "requireId": "21722499c6c2ae46d0a8a6f4ec16b0de4041616a-widget/package.json",
            "memoizeId": "21722499c6c2ae46d0a8a6f4ec16b0de4041616a-widget/package.json",
            "descriptor": {
              "dirpath": "../widget",
              "dirrealpath": "../widget",
              "id": "21722499c6c2ae46d0a8a6f4ec16b0de4041616a-widget",
              "lookupPaths": [
                "../widget/package.json",
                "../widget/.package.json"
              ],
              "descriptorPaths": [
                "../widget/package.json"
              ],
              "raw": {
                "package.json": {
                  "uid": "github.com/fireconsole/widget.console/widget",
                  "main": "./widget.js",
                  "mappings": {
                    "q": "./node_modules/q",
                    "renderers": "../renderers",
                    "receivers": "../receivers",
                    "insight": "../../insight-for-js"
                  },
                  "dependencies": {
                    "q": "~1.1.2",
                    "renderers": "../renderers",
                    "receivers": "../receivers",
                    "insight": "../../insight-for-js"
                  }
                }
              },
              "normalized": {
                ".package.json": {
                  "pm": {
                    "install": "npm"
                  },
                  "layout": {
                    "directories": {
                      "dependency": "./node_modules"
                    }
                  },
                  "dependencies": {
                    "bundled": {
                      "q": "./node_modules/q"
                    }
                  },
                  "mappings": {
                    "q": "d6e23a53a05b8a38dbc43a0fd68969f2b291c1dd-q"
                  }
                },
                "package.json": {
                  "uid": "github.com/fireconsole/widget.console/widget",
                  "dependencies": {
                    "required": {
                      "q": "~1.1.2",
                      "renderers": "../renderers",
                      "receivers": "../receivers",
                      "insight": "../../insight-for-js"
                    },
                    "bundled": {
                      "q": "./node_modules/q"
                    }
                  },
                  "exports": {
                    "main": "./widget.js"
                  },
                  "pm": {
                    "install": "npm"
                  },
                  "layout": {
                    "directories": {
                      "dependency": "./node_modules"
                    }
                  },
                  "mappings": {
                    "q": "d6e23a53a05b8a38dbc43a0fd68969f2b291c1dd-q"
                  }
                }
              },
              "combined": {
                "uid": "github.com/fireconsole/widget.console/widget",
                "dependencies": {
                  "required": {
                    "q": "~1.1.2",
                    "renderers": "../renderers",
                    "receivers": "../receivers",
                    "insight": "../../insight-for-js"
                  },
                  "bundled": {
                    "q": "./node_modules/q"
                  }
                },
                "exports": {
                  "main": "./widget.js"
                },
                "pm": {
                  "install": "npm"
                },
                "layout": {
                  "directories": {
                    "dependency": "./node_modules"
                  }
                },
                "mappings": {
                  "q": "d6e23a53a05b8a38dbc43a0fd68969f2b291c1dd-q"
                }
              },
              "warnings": [
                [
                  "normalize",
                  "Found existing value at 'dependencies.required.q' while trying to merge from 'mappings.q'",
                  "descriptor",
                  "package.json"
                ]
              ],
              "errors": [],
              "memoized": {
                "main": "21722499c6c2ae46d0a8a6f4ec16b0de4041616a-widget/widget.js",
                "mappings": {
                  "q": "d6e23a53a05b8a38dbc43a0fd68969f2b291c1dd-q",
                  "renderers": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers",
                  "receivers": "bfbbc67b6690f91ab66716d6e0cec42b3a954a3b-receivers",
                  "insight": "e21a2edc75d6a45b8180079e1437bfa808cf8b61-insight-for-js"
                },
                "dirpath": "../widget"
              }
            },
            "wrapper": "json"
          },
          "d6e23a53a05b8a38dbc43a0fd68969f2b291c1dd-q/package.json": {
            "requireId": "d6e23a53a05b8a38dbc43a0fd68969f2b291c1dd-q/package.json",
            "memoizeId": "d6e23a53a05b8a38dbc43a0fd68969f2b291c1dd-q/package.json",
            "descriptor": {
              "dirpath": "../widget/node_modules/q",
              "dirrealpath": "../widget/node_modules/q",
              "id": "d6e23a53a05b8a38dbc43a0fd68969f2b291c1dd-q",
              "lookupPaths": [
                "../widget/node_modules/q/package.json",
                "../widget/node_modules/q/.package.json"
              ],
              "descriptorPaths": [
                "../widget/node_modules/q/package.json"
              ],
              "raw": {
                "package.json": {
                  "name": "q",
                  "version": "1.1.2",
                  "description": "A library for promises (CommonJS/Promises/A,B,D)",
                  "homepage": "https://github.com/kriskowal/q",
                  "author": {
                    "name": "Kris Kowal",
                    "email": "kris@cixar.com",
                    "url": "https://github.com/kriskowal"
                  },
                  "keywords": [
                    "q",
                    "promise",
                    "promises",
                    "promises-a",
                    "promises-aplus",
                    "deferred",
                    "future",
                    "async",
                    "flow control",
                    "fluent",
                    "browser",
                    "node"
                  ],
                  "contributors": [
                    {
                      "name": "Kris Kowal",
                      "email": "kris@cixar.com",
                      "url": "https://github.com/kriskowal"
                    },
                    {
                      "name": "Kris Kowal",
                      "email": "kris@cixar.com",
                      "url": "https://github.com/kriskowal"
                    },
                    {
                      "name": "Irakli Gozalishvili",
                      "email": "rfobic@gmail.com",
                      "url": "http://jeditoolkit.com"
                    },
                    {
                      "name": "Domenic Denicola",
                      "email": "domenic@domenicdenicola.com",
                      "url": "http://domenicdenicola.com"
                    }
                  ],
                  "bugs": {
                    "url": "http://github.com/kriskowal/q/issues"
                  },
                  "license": {
                    "type": "MIT",
                    "url": "http://github.com/kriskowal/q/raw/master/LICENSE"
                  },
                  "main": "q.js",
                  "files": [
                    "LICENSE",
                    "q.js",
                    "queue.js"
                  ],
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/kriskowal/q.git"
                  },
                  "engines": {
                    "node": ">=0.6.0",
                    "teleport": ">=0.2.0"
                  },
                  "dependencies": {},
                  "devDependencies": {
                    "jshint": "~2.1.9",
                    "cover": "*",
                    "jasmine-node": "1.11.0",
                    "opener": "*",
                    "promises-aplus-tests": "1.x",
                    "grunt": "~0.4.1",
                    "grunt-cli": "~0.1.9",
                    "grunt-contrib-uglify": "~0.2.2",
                    "matcha": "~0.2.0"
                  },
                  "scripts": {
                    "test": "jasmine-node spec && promises-aplus-tests spec/aplus-adapter",
                    "test-browser": "opener spec/q-spec.html",
                    "benchmark": "matcha",
                    "lint": "jshint q.js",
                    "cover": "cover run node_modules/jasmine-node/bin/jasmine-node spec && cover report html && opener cover_html/index.html",
                    "minify": "grunt",
                    "prepublish": "grunt"
                  },
                  "overlay": {
                    "teleport": {
                      "dependencies": {
                        "system": ">=0.0.4"
                      }
                    }
                  },
                  "directories": {
                    "test": "./spec"
                  },
                  "gitHead": "3159ac47c46cb7e2200191736ca430a011615523",
                  "_id": "q@1.1.2",
                  "_shasum": "6357e291206701d99f197ab84e57e8ad196f2a89",
                  "_from": "q@~1.1.2",
                  "_npmVersion": "1.4.21",
                  "_npmUser": {
                    "name": "kriskowal",
                    "email": "kris.kowal@cixar.com"
                  },
                  "maintainers": [
                    {
                      "name": "kriskowal",
                      "email": "kris.kowal@cixar.com"
                    },
                    {
                      "name": "domenic",
                      "email": "domenic@domenicdenicola.com"
                    }
                  ],
                  "dist": {
                    "shasum": "6357e291206701d99f197ab84e57e8ad196f2a89",
                    "tarball": "http://registry.npmjs.org/q/-/q-1.1.2.tgz"
                  },
                  "_resolved": "https://registry.npmjs.org/q/-/q-1.1.2.tgz",
                  "readme": "ERROR: No README data found!"
                }
              },
              "normalized": {
                ".package.json": {
                  "pm": {
                    "install": "npm"
                  },
                  "layout": {
                    "directories": {
                      "dependency": "./node_modules"
                    }
                  }
                },
                "package.json": {
                  "name": "q",
                  "description": "A library for promises (CommonJS/Promises/A,B,D)",
                  "version": "1.1.2",
                  "locator": {
                    "pointer": "~1.1.2",
                    "shasum": "6357e291206701d99f197ab84e57e8ad196f2a89",
                    "tarball": "http://registry.npmjs.org/q/-/q-1.1.2.tgz"
                  },
                  "homepage": "https://github.com/kriskowal/q",
                  "social": {
                    "bugs": {
                      "url": "http://github.com/kriskowal/q/issues"
                    }
                  },
                  "repositories": [
                    {
                      "type": "git",
                      "url": "git://github.com/kriskowal/q.git"
                    }
                  ],
                  "dependencies": {
                    "development": {
                      "jshint": "~2.1.9",
                      "cover": "*",
                      "jasmine-node": "1.11.0",
                      "opener": "*",
                      "promises-aplus-tests": "1.x",
                      "grunt": "~0.4.1",
                      "grunt-cli": "~0.1.9",
                      "grunt-contrib-uglify": "~0.2.2",
                      "matcha": "~0.2.0"
                    }
                  },
                  "requirements": {
                    "engines": {
                      "node": ">=0.6.0",
                      "teleport": ">=0.2.0"
                    }
                  },
                  "exports": {
                    "scripts": {
                      "test": "jasmine-node spec && promises-aplus-tests spec/aplus-adapter",
                      "test-browser": "opener spec/q-spec.html",
                      "benchmark": "matcha",
                      "lint": "jshint q.js",
                      "cover": "cover run node_modules/jasmine-node/bin/jasmine-node spec && cover report html && opener cover_html/index.html",
                      "minify": "grunt",
                      "prepublish": "grunt"
                    },
                    "main": "./q.js"
                  },
                  "layout": {
                    "directories": {
                      "test": "./spec",
                      "dependency": "./node_modules"
                    }
                  },
                  "overlay": {
                    "teleport": {
                      "dependencies": {
                        "required": {
                          "system": ">=0.0.4"
                        }
                      }
                    }
                  },
                  "licenses": [
                    {
                      "type": "MIT",
                      "url": "http://github.com/kriskowal/q/raw/master/LICENSE"
                    }
                  ],
                  "keywords": [
                    "q",
                    "promise",
                    "promises",
                    "promises-a",
                    "promises-aplus",
                    "deferred",
                    "future",
                    "async",
                    "flow control",
                    "fluent",
                    "browser",
                    "node"
                  ],
                  "maintainers": [
                    {
                      "name": "kriskowal",
                      "email": "kris.kowal@cixar.com"
                    },
                    {
                      "name": "domenic",
                      "email": "domenic@domenicdenicola.com"
                    }
                  ],
                  "contributors": [
                    {
                      "name": "Kris Kowal",
                      "email": "kris@cixar.com",
                      "url": "https://github.com/kriskowal"
                    },
                    {
                      "name": "Kris Kowal",
                      "email": "kris@cixar.com",
                      "url": "https://github.com/kriskowal"
                    },
                    {
                      "name": "Irakli Gozalishvili",
                      "email": "rfobic@gmail.com",
                      "url": "http://jeditoolkit.com"
                    },
                    {
                      "name": "Domenic Denicola",
                      "email": "domenic@domenicdenicola.com",
                      "url": "http://domenicdenicola.com"
                    }
                  ],
                  "pm": {
                    "install": "npm"
                  }
                }
              },
              "combined": {
                "name": "q",
                "description": "A library for promises (CommonJS/Promises/A,B,D)",
                "version": "1.1.2",
                "locator": {
                  "pointer": "~1.1.2",
                  "shasum": "6357e291206701d99f197ab84e57e8ad196f2a89",
                  "tarball": "http://registry.npmjs.org/q/-/q-1.1.2.tgz"
                },
                "homepage": "https://github.com/kriskowal/q",
                "social": {
                  "bugs": {
                    "url": "http://github.com/kriskowal/q/issues"
                  }
                },
                "repositories": [
                  {
                    "type": "git",
                    "url": "git://github.com/kriskowal/q.git"
                  }
                ],
                "dependencies": {
                  "development": {
                    "jshint": "~2.1.9",
                    "cover": "*",
                    "jasmine-node": "1.11.0",
                    "opener": "*",
                    "promises-aplus-tests": "1.x",
                    "grunt": "~0.4.1",
                    "grunt-cli": "~0.1.9",
                    "grunt-contrib-uglify": "~0.2.2",
                    "matcha": "~0.2.0"
                  }
                },
                "requirements": {
                  "engines": {
                    "node": ">=0.6.0",
                    "teleport": ">=0.2.0"
                  }
                },
                "exports": {
                  "scripts": {
                    "test": "jasmine-node spec && promises-aplus-tests spec/aplus-adapter",
                    "test-browser": "opener spec/q-spec.html",
                    "benchmark": "matcha",
                    "lint": "jshint q.js",
                    "cover": "cover run node_modules/jasmine-node/bin/jasmine-node spec && cover report html && opener cover_html/index.html",
                    "minify": "grunt",
                    "prepublish": "grunt"
                  },
                  "main": "./q.js"
                },
                "layout": {
                  "directories": {
                    "test": "./spec",
                    "dependency": "./node_modules"
                  }
                },
                "overlay": {
                  "teleport": {
                    "dependencies": {
                      "required": {
                        "system": ">=0.0.4"
                      }
                    }
                  }
                },
                "licenses": [
                  {
                    "type": "MIT",
                    "url": "http://github.com/kriskowal/q/raw/master/LICENSE"
                  }
                ],
                "keywords": [
                  "q",
                  "promise",
                  "promises",
                  "promises-a",
                  "promises-aplus",
                  "deferred",
                  "future",
                  "async",
                  "flow control",
                  "fluent",
                  "browser",
                  "node"
                ],
                "maintainers": [
                  {
                    "name": "kriskowal",
                    "email": "kris.kowal@cixar.com"
                  },
                  {
                    "name": "domenic",
                    "email": "domenic@domenicdenicola.com"
                  }
                ],
                "contributors": [
                  {
                    "name": "Kris Kowal",
                    "email": "kris@cixar.com",
                    "url": "https://github.com/kriskowal"
                  },
                  {
                    "name": "Kris Kowal",
                    "email": "kris@cixar.com",
                    "url": "https://github.com/kriskowal"
                  },
                  {
                    "name": "Irakli Gozalishvili",
                    "email": "rfobic@gmail.com",
                    "url": "http://jeditoolkit.com"
                  },
                  {
                    "name": "Domenic Denicola",
                    "email": "domenic@domenicdenicola.com",
                    "url": "http://domenicdenicola.com"
                  }
                ],
                "pm": {
                  "install": "npm"
                }
              },
              "warnings": [
                [
                  "normalize",
                  "Property 'files' was ignored",
                  "descriptor",
                  "package.json"
                ],
                [
                  "normalize",
                  "Property 'gitHead' was ignored",
                  "descriptor",
                  "package.json"
                ],
                [
                  "normalize",
                  "Property '_shasum' was ignored",
                  "descriptor",
                  "package.json"
                ],
                [
                  "normalize",
                  "Property '_npmVersion' was ignored",
                  "descriptor",
                  "package.json"
                ],
                [
                  "normalize",
                  "Property '_npmUser' was ignored",
                  "descriptor",
                  "package.json"
                ],
                [
                  "normalize",
                  "Property '_resolved' was ignored",
                  "descriptor",
                  "package.json"
                ]
              ],
              "errors": [],
              "memoized": {
                "main": "d6e23a53a05b8a38dbc43a0fd68969f2b291c1dd-q/q.js",
                "dirpath": "../widget/node_modules/q"
              }
            },
            "wrapper": "json"
          },
          "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/package.json": {
            "requireId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/package.json",
            "memoizeId": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/package.json",
            "descriptor": {
              "dirpath": "../renderers",
              "dirrealpath": "../renderers",
              "id": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers",
              "lookupPaths": [
                "../renderers/package.json",
                "../renderers/.package.json"
              ],
              "descriptorPaths": [
                "../renderers/package.json"
              ],
              "raw": {
                "package.json": {
                  "uid": "github.com/fireconsole/widget.console/renderers",
                  "main": "./loader.js",
                  "mappings": {
                    "q": "../widget/node_modules/q",
                    "insight.renderers.default": "../../insight.renderers.default",
                    "modules": "../../pinf-bridgelib-js",
                    "insight": "../../insight-for-js",
                    "domplate": "../../domplate"
                  }
                }
              },
              "normalized": {
                ".package.json": {},
                "package.json": {
                  "uid": "github.com/fireconsole/widget.console/renderers",
                  "dependencies": {
                    "required": {
                      "q": "../widget/node_modules/q",
                      "insight.renderers.default": "../../insight.renderers.default",
                      "modules": "../../pinf-bridgelib-js",
                      "insight": "../../insight-for-js",
                      "domplate": "../../domplate"
                    }
                  },
                  "exports": {
                    "main": "./loader.js"
                  }
                }
              },
              "combined": {
                "uid": "github.com/fireconsole/widget.console/renderers",
                "dependencies": {
                  "required": {
                    "q": "../widget/node_modules/q",
                    "insight.renderers.default": "../../insight.renderers.default",
                    "modules": "../../pinf-bridgelib-js",
                    "insight": "../../insight-for-js",
                    "domplate": "../../domplate"
                  }
                },
                "exports": {
                  "main": "./loader.js"
                }
              },
              "warnings": [],
              "errors": [],
              "memoized": {
                "main": "9c7bbbe69b256697ed3ffb4de81bb12cc3880f4b-renderers/loader.js",
                "mappings": {
                  "modules": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js",
                  "insight": "e21a2edc75d6a45b8180079e1437bfa808cf8b61-insight-for-js",
                  "domplate": "5ed24c94e4143800bdf9eb7a901c557360709fbd-domplate",
                  "insight.renderers.default": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default"
                },
                "dirpath": "../renderers"
              }
            },
            "wrapper": "json"
          },
          "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/package.json": {
            "requireId": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/package.json",
            "memoizeId": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/package.json",
            "descriptor": {
              "dirpath": "../../pinf-bridgelib-js",
              "dirrealpath": "../../pinf-bridgelib-js",
              "id": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js",
              "lookupPaths": [
                "../../pinf-bridgelib-js/package.json",
                "../../pinf-bridgelib-js/.package.json"
              ],
              "descriptorPaths": [
                "../../pinf-bridgelib-js/package.json"
              ],
              "raw": {
                "package.json": {
                  "uid": "https://github.com/pinf/modules-js/",
                  "name": "modules-js",
                  "label": "Various JavaScript Modules",
                  "description": "Various cross-platform JavaScript modules",
                  "homepage": "https://github.com/pinf/modules-js",
                  "repositories": [
                    {
                      "type": "git",
                      "url": "git://github.com/pinf/modules-js.git"
                    }
                  ],
                  "maintainers": [
                    {
                      "name": "Christoph Dorn",
                      "email": "christoph@christophdorn.com",
                      "web": "http://www.christophdorn.com/"
                    }
                  ],
                  "contributors": [
                    {
                      "name": "Christoph Dorn",
                      "email": "christoph@christophdorn.com",
                      "web": "http://www.christophdorn.com/"
                    }
                  ],
                  "licenses": [
                    {
                      "type": "MIT",
                      "url": "http://www.opensource.org/licenses/mit-license.php"
                    }
                  ],
                  "main": "./lib/modules.js",
                  "directories": {
                    "lib": "./lib"
                  },
                  "scripts": {
                    "test": {
                      "id": "github.com/pinf/test-js/"
                    }
                  },
                  "mappings": {
                    "q": "./node_modules/q"
                  },
                  "dependencies": {
                    "q": "~1.1.2"
                  },
                  "mappings_OLD": {
                    "pinf": {
                      "id": "pinf.org/loader/",
                      "available": false
                    },
                    "q": {
                      "id": "github.com/kriskowal/q/"
                    }
                  },
                  "overlay": {
                    "pinf:jetpack": {
                      "mappings": {
                        "pinf": {
                          "available": true
                        },
                        "jetpack": {
                          "id": "mozilla.org/labs/jetpack/"
                        }
                      }
                    },
                    "pinf:node": {
                      "mappings": {
                        "pinf": {
                          "available": true
                        },
                        "nodejs": {
                          "id": "nodejs.org/"
                        }
                      }
                    },
                    "pinf:gpsee": {
                      "mappings": {
                        "pinf": {
                          "available": true
                        },
                        "gpsee": {
                          "id": "code.google.com/p/gpsee/"
                        }
                      }
                    },
                    "pinf:v8cgi": {
                      "mappings": {
                        "pinf": {
                          "available": true
                        },
                        "v8cgi": {
                          "id": "code.google.com/p/v8cgi/"
                        }
                      }
                    },
                    "pinf:narwhal": {
                      "mappings": {
                        "pinf": {
                          "available": true
                        },
                        "narwhal": {
                          "id": "narwhaljs.org/"
                        }
                      }
                    },
                    "pinf:ringo": {
                      "mappings": {
                        "pinf": {
                          "available": true
                        },
                        "ringo": {
                          "id": "ringojs.org/"
                        }
                      }
                    }
                  }
                }
              },
              "normalized": {
                ".package.json": {
                  "pm": {
                    "install": "npm"
                  },
                  "layout": {
                    "directories": {
                      "dependency": "./node_modules"
                    }
                  },
                  "dependencies": {
                    "bundled": {
                      "q": "./node_modules/q"
                    }
                  },
                  "mappings": {
                    "q": "e27218a8d2b77deb02eb65c861a2cc8a619a9d27-q"
                  }
                },
                "package.json": {
                  "uid": "https://github.com/pinf/modules-js/",
                  "name": "modules-js",
                  "description": "Various cross-platform JavaScript modules",
                  "homepage": "https://github.com/pinf/modules-js",
                  "repositories": [
                    {
                      "type": "git",
                      "url": "git://github.com/pinf/modules-js.git"
                    }
                  ],
                  "dependencies": {
                    "required": {
                      "q": "~1.1.2"
                    },
                    "bundled": {
                      "q": "./node_modules/q"
                    }
                  },
                  "exports": {
                    "scripts": {
                      "test": {
                        "id": "github.com/pinf/test-js/"
                      }
                    },
                    "main": "./lib/modules.js"
                  },
                  "layout": {
                    "directories": {
                      "lib": "./lib",
                      "dependency": "./node_modules"
                    }
                  },
                  "overlay": {
                    "pinf:jetpack": {
                      "dependencies": {
                        "required": {
                          "pinf": {
                            "available": true
                          },
                          "jetpack": {
                            "id": "mozilla.org/labs/jetpack/"
                          }
                        }
                      }
                    },
                    "pinf:node": {
                      "dependencies": {
                        "required": {
                          "pinf": {
                            "available": true
                          },
                          "nodejs": {
                            "id": "nodejs.org/"
                          }
                        }
                      }
                    },
                    "pinf:gpsee": {
                      "dependencies": {
                        "required": {
                          "pinf": {
                            "available": true
                          },
                          "gpsee": {
                            "id": "code.google.com/p/gpsee/"
                          }
                        }
                      }
                    },
                    "pinf:v8cgi": {
                      "dependencies": {
                        "required": {
                          "pinf": {
                            "available": true
                          },
                          "v8cgi": {
                            "id": "code.google.com/p/v8cgi/"
                          }
                        }
                      }
                    },
                    "pinf:narwhal": {
                      "dependencies": {
                        "required": {
                          "pinf": {
                            "available": true
                          },
                          "narwhal": {
                            "id": "narwhaljs.org/"
                          }
                        }
                      }
                    },
                    "pinf:ringo": {
                      "dependencies": {
                        "required": {
                          "pinf": {
                            "available": true
                          },
                          "ringo": {
                            "id": "ringojs.org/"
                          }
                        }
                      }
                    }
                  },
                  "licenses": [
                    {
                      "type": "MIT",
                      "url": "http://www.opensource.org/licenses/mit-license.php"
                    }
                  ],
                  "maintainers": [
                    {
                      "name": "Christoph Dorn",
                      "email": "christoph@christophdorn.com",
                      "web": "http://www.christophdorn.com/"
                    }
                  ],
                  "contributors": [
                    {
                      "name": "Christoph Dorn",
                      "email": "christoph@christophdorn.com",
                      "web": "http://www.christophdorn.com/"
                    }
                  ],
                  "pm": {
                    "install": "npm"
                  },
                  "mappings": {
                    "q": "e27218a8d2b77deb02eb65c861a2cc8a619a9d27-q"
                  }
                }
              },
              "combined": {
                "uid": "https://github.com/pinf/modules-js/",
                "name": "modules-js",
                "description": "Various cross-platform JavaScript modules",
                "homepage": "https://github.com/pinf/modules-js",
                "repositories": [
                  {
                    "type": "git",
                    "url": "git://github.com/pinf/modules-js.git"
                  }
                ],
                "dependencies": {
                  "required": {
                    "q": "~1.1.2"
                  },
                  "bundled": {
                    "q": "./node_modules/q"
                  }
                },
                "exports": {
                  "scripts": {
                    "test": {
                      "id": "github.com/pinf/test-js/"
                    }
                  },
                  "main": "./lib/modules.js"
                },
                "layout": {
                  "directories": {
                    "lib": "./lib",
                    "dependency": "./node_modules"
                  }
                },
                "overlay": {
                  "pinf:jetpack": {
                    "dependencies": {
                      "required": {
                        "pinf": {
                          "available": true
                        },
                        "jetpack": {
                          "id": "mozilla.org/labs/jetpack/"
                        }
                      }
                    }
                  },
                  "pinf:node": {
                    "dependencies": {
                      "required": {
                        "pinf": {
                          "available": true
                        },
                        "nodejs": {
                          "id": "nodejs.org/"
                        }
                      }
                    }
                  },
                  "pinf:gpsee": {
                    "dependencies": {
                      "required": {
                        "pinf": {
                          "available": true
                        },
                        "gpsee": {
                          "id": "code.google.com/p/gpsee/"
                        }
                      }
                    }
                  },
                  "pinf:v8cgi": {
                    "dependencies": {
                      "required": {
                        "pinf": {
                          "available": true
                        },
                        "v8cgi": {
                          "id": "code.google.com/p/v8cgi/"
                        }
                      }
                    }
                  },
                  "pinf:narwhal": {
                    "dependencies": {
                      "required": {
                        "pinf": {
                          "available": true
                        },
                        "narwhal": {
                          "id": "narwhaljs.org/"
                        }
                      }
                    }
                  },
                  "pinf:ringo": {
                    "dependencies": {
                      "required": {
                        "pinf": {
                          "available": true
                        },
                        "ringo": {
                          "id": "ringojs.org/"
                        }
                      }
                    }
                  }
                },
                "licenses": [
                  {
                    "type": "MIT",
                    "url": "http://www.opensource.org/licenses/mit-license.php"
                  }
                ],
                "maintainers": [
                  {
                    "name": "Christoph Dorn",
                    "email": "christoph@christophdorn.com",
                    "web": "http://www.christophdorn.com/"
                  }
                ],
                "contributors": [
                  {
                    "name": "Christoph Dorn",
                    "email": "christoph@christophdorn.com",
                    "web": "http://www.christophdorn.com/"
                  }
                ],
                "pm": {
                  "install": "npm"
                },
                "mappings": {
                  "q": "e27218a8d2b77deb02eb65c861a2cc8a619a9d27-q"
                }
              },
              "warnings": [
                [
                  "normalize",
                  "Found existing value at 'dependencies.required.q' while trying to merge from 'mappings.q'",
                  "descriptor",
                  "package.json"
                ],
                [
                  "normalize",
                  "Property 'label' was ignored",
                  "descriptor",
                  "package.json"
                ],
                [
                  "normalize",
                  "Property 'mappings_OLD' was ignored",
                  "descriptor",
                  "package.json"
                ]
              ],
              "errors": [],
              "memoized": {
                "main": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js/lib/modules.js",
                "directories": {
                  "lib": "lib"
                },
                "mappings": {
                  "q": "e27218a8d2b77deb02eb65c861a2cc8a619a9d27-q"
                },
                "dirpath": "../../pinf-bridgelib-js"
              }
            },
            "wrapper": "json"
          },
          "e21a2edc75d6a45b8180079e1437bfa808cf8b61-insight-for-js/package.json": {
            "requireId": "e21a2edc75d6a45b8180079e1437bfa808cf8b61-insight-for-js/package.json",
            "memoizeId": "e21a2edc75d6a45b8180079e1437bfa808cf8b61-insight-for-js/package.json",
            "descriptor": {
              "dirpath": "../../insight-for-js",
              "dirrealpath": "../../insight-for-js",
              "id": "e21a2edc75d6a45b8180079e1437bfa808cf8b61-insight-for-js",
              "lookupPaths": [
                "../../insight-for-js/package.json",
                "../../insight-for-js/.package.json"
              ],
              "descriptorPaths": [
                "../../insight-for-js/package.json"
              ],
              "raw": {
                "package.json": {
                  "uid": "https://github.com/insight/insight-for-js/",
                  "name": "insight-for-js",
                  "label": "Internal Intelligence Library",
                  "description": "Internal Intelligence Library for JavaScript",
                  "homepage": "https://github.com/insight/insight-for-js",
                  "directories": {
                    "lib": "./lib"
                  },
                  "mappings": {
                    "wildfire": "../wildfire-for-js",
                    "modules": "../pinf-bridgelib-js"
                  }
                }
              },
              "normalized": {
                ".package.json": {},
                "package.json": {
                  "uid": "https://github.com/insight/insight-for-js/",
                  "name": "insight-for-js",
                  "description": "Internal Intelligence Library for JavaScript",
                  "homepage": "https://github.com/insight/insight-for-js",
                  "dependencies": {
                    "required": {
                      "wildfire": "../wildfire-for-js",
                      "modules": "../pinf-bridgelib-js"
                    }
                  },
                  "layout": {
                    "directories": {
                      "lib": "./lib"
                    }
                  }
                }
              },
              "combined": {
                "uid": "https://github.com/insight/insight-for-js/",
                "name": "insight-for-js",
                "description": "Internal Intelligence Library for JavaScript",
                "homepage": "https://github.com/insight/insight-for-js",
                "dependencies": {
                  "required": {
                    "wildfire": "../wildfire-for-js",
                    "modules": "../pinf-bridgelib-js"
                  }
                },
                "layout": {
                  "directories": {
                    "lib": "./lib"
                  }
                }
              },
              "warnings": [
                [
                  "normalize",
                  "Property 'label' was ignored",
                  "descriptor",
                  "package.json"
                ]
              ],
              "errors": [],
              "memoized": {
                "directories": {
                  "lib": "lib"
                },
                "mappings": {
                  "modules": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js"
                },
                "dirpath": "../../insight-for-js"
              }
            },
            "wrapper": "json"
          },
          "5ed24c94e4143800bdf9eb7a901c557360709fbd-domplate/package.json": {
            "requireId": "5ed24c94e4143800bdf9eb7a901c557360709fbd-domplate/package.json",
            "memoizeId": "5ed24c94e4143800bdf9eb7a901c557360709fbd-domplate/package.json",
            "descriptor": {
              "dirpath": "../../domplate",
              "dirrealpath": "../../domplate",
              "id": "5ed24c94e4143800bdf9eb7a901c557360709fbd-domplate",
              "lookupPaths": [
                "../../domplate/package.json",
                "../../domplate/.package.json"
              ],
              "descriptorPaths": [
                "../../domplate/package.json"
              ],
              "raw": {
                "package.json": {
                  "uid": "http://registry.pinf.org/cadorn.org/github/domplate/",
                  "name": "domplate",
                  "description": "JavaScript Template Library",
                  "keywords": [
                    "js",
                    "template",
                    "library",
                    "domplate",
                    "rep",
                    "reps"
                  ],
                  "author": "Joe Hewitt (http://joehewitt.com/)",
                  "contributors": [
                    "Joe Hewitt (http://joehewitt.com/)",
                    "Christoph Dorn (http://www.christophdorn.com/)"
                  ],
                  "directories": {
                    "lib": "./lib"
                  },
                  "license": [
                    "BSD"
                  ],
                  "repositories": [
                    {
                      "type": "git",
                      "url": "git://github.com/cadorn/domplate.git"
                    }
                  ]
                }
              },
              "normalized": {
                ".package.json": {},
                "package.json": {
                  "uid": "http://registry.pinf.org/cadorn.org/github/domplate/",
                  "name": "domplate",
                  "description": "JavaScript Template Library",
                  "repositories": [
                    {
                      "type": "git",
                      "url": "git://github.com/cadorn/domplate.git"
                    }
                  ],
                  "layout": {
                    "directories": {
                      "lib": "./lib"
                    }
                  },
                  "licenses": [
                    [
                      "BSD"
                    ]
                  ],
                  "keywords": [
                    "js",
                    "template",
                    "library",
                    "domplate",
                    "rep",
                    "reps"
                  ],
                  "contributors": [
                    "Joe Hewitt (http://joehewitt.com/)",
                    "Christoph Dorn (http://www.christophdorn.com/)"
                  ]
                }
              },
              "combined": {
                "uid": "http://registry.pinf.org/cadorn.org/github/domplate/",
                "name": "domplate",
                "description": "JavaScript Template Library",
                "repositories": [
                  {
                    "type": "git",
                    "url": "git://github.com/cadorn/domplate.git"
                  }
                ],
                "layout": {
                  "directories": {
                    "lib": "./lib"
                  }
                },
                "licenses": [
                  [
                    "BSD"
                  ]
                ],
                "keywords": [
                  "js",
                  "template",
                  "library",
                  "domplate",
                  "rep",
                  "reps"
                ],
                "contributors": [
                  "Joe Hewitt (http://joehewitt.com/)",
                  "Christoph Dorn (http://www.christophdorn.com/)"
                ]
              },
              "warnings": [],
              "errors": [],
              "memoized": {
                "directories": {
                  "lib": "lib"
                },
                "dirpath": "../../domplate"
              }
            },
            "wrapper": "json"
          },
          "e27218a8d2b77deb02eb65c861a2cc8a619a9d27-q/package.json": {
            "requireId": "e27218a8d2b77deb02eb65c861a2cc8a619a9d27-q/package.json",
            "memoizeId": "e27218a8d2b77deb02eb65c861a2cc8a619a9d27-q/package.json",
            "descriptor": {
              "dirpath": "../../pinf-bridgelib-js/node_modules/q",
              "dirrealpath": "../../pinf-bridgelib-js/node_modules/q",
              "id": "e27218a8d2b77deb02eb65c861a2cc8a619a9d27-q",
              "lookupPaths": [
                "../../pinf-bridgelib-js/node_modules/q/package.json",
                "../../pinf-bridgelib-js/node_modules/q/.package.json"
              ],
              "descriptorPaths": [
                "../../pinf-bridgelib-js/node_modules/q/package.json"
              ],
              "raw": {
                "package.json": {
                  "name": "q",
                  "version": "1.1.2",
                  "description": "A library for promises (CommonJS/Promises/A,B,D)",
                  "homepage": "https://github.com/kriskowal/q",
                  "author": {
                    "name": "Kris Kowal",
                    "email": "kris@cixar.com",
                    "url": "https://github.com/kriskowal"
                  },
                  "keywords": [
                    "q",
                    "promise",
                    "promises",
                    "promises-a",
                    "promises-aplus",
                    "deferred",
                    "future",
                    "async",
                    "flow control",
                    "fluent",
                    "browser",
                    "node"
                  ],
                  "contributors": [
                    {
                      "name": "Kris Kowal",
                      "email": "kris@cixar.com",
                      "url": "https://github.com/kriskowal"
                    },
                    {
                      "name": "Kris Kowal",
                      "email": "kris@cixar.com",
                      "url": "https://github.com/kriskowal"
                    },
                    {
                      "name": "Irakli Gozalishvili",
                      "email": "rfobic@gmail.com",
                      "url": "http://jeditoolkit.com"
                    },
                    {
                      "name": "Domenic Denicola",
                      "email": "domenic@domenicdenicola.com",
                      "url": "http://domenicdenicola.com"
                    }
                  ],
                  "bugs": {
                    "url": "http://github.com/kriskowal/q/issues"
                  },
                  "license": {
                    "type": "MIT",
                    "url": "http://github.com/kriskowal/q/raw/master/LICENSE"
                  },
                  "main": "q.js",
                  "files": [
                    "LICENSE",
                    "q.js",
                    "queue.js"
                  ],
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/kriskowal/q.git"
                  },
                  "engines": {
                    "node": ">=0.6.0",
                    "teleport": ">=0.2.0"
                  },
                  "dependencies": {},
                  "devDependencies": {
                    "jshint": "~2.1.9",
                    "cover": "*",
                    "jasmine-node": "1.11.0",
                    "opener": "*",
                    "promises-aplus-tests": "1.x",
                    "grunt": "~0.4.1",
                    "grunt-cli": "~0.1.9",
                    "grunt-contrib-uglify": "~0.2.2",
                    "matcha": "~0.2.0"
                  },
                  "scripts": {
                    "test": "jasmine-node spec && promises-aplus-tests spec/aplus-adapter",
                    "test-browser": "opener spec/q-spec.html",
                    "benchmark": "matcha",
                    "lint": "jshint q.js",
                    "cover": "cover run node_modules/jasmine-node/bin/jasmine-node spec && cover report html && opener cover_html/index.html",
                    "minify": "grunt",
                    "prepublish": "grunt"
                  },
                  "overlay": {
                    "teleport": {
                      "dependencies": {
                        "system": ">=0.0.4"
                      }
                    }
                  },
                  "directories": {
                    "test": "./spec"
                  },
                  "gitHead": "3159ac47c46cb7e2200191736ca430a011615523",
                  "_id": "q@1.1.2",
                  "_shasum": "6357e291206701d99f197ab84e57e8ad196f2a89",
                  "_from": "q@~1.1.2",
                  "_npmVersion": "1.4.21",
                  "_npmUser": {
                    "name": "kriskowal",
                    "email": "kris.kowal@cixar.com"
                  },
                  "maintainers": [
                    {
                      "name": "kriskowal",
                      "email": "kris.kowal@cixar.com"
                    },
                    {
                      "name": "domenic",
                      "email": "domenic@domenicdenicola.com"
                    }
                  ],
                  "dist": {
                    "shasum": "6357e291206701d99f197ab84e57e8ad196f2a89",
                    "tarball": "http://registry.npmjs.org/q/-/q-1.1.2.tgz"
                  },
                  "_resolved": "https://registry.npmjs.org/q/-/q-1.1.2.tgz",
                  "readme": "ERROR: No README data found!"
                }
              },
              "normalized": {
                ".package.json": {
                  "pm": {
                    "install": "npm"
                  },
                  "layout": {
                    "directories": {
                      "dependency": "./node_modules"
                    }
                  }
                },
                "package.json": {
                  "name": "q",
                  "description": "A library for promises (CommonJS/Promises/A,B,D)",
                  "version": "1.1.2",
                  "locator": {
                    "pointer": "~1.1.2",
                    "shasum": "6357e291206701d99f197ab84e57e8ad196f2a89",
                    "tarball": "http://registry.npmjs.org/q/-/q-1.1.2.tgz"
                  },
                  "homepage": "https://github.com/kriskowal/q",
                  "social": {
                    "bugs": {
                      "url": "http://github.com/kriskowal/q/issues"
                    }
                  },
                  "repositories": [
                    {
                      "type": "git",
                      "url": "git://github.com/kriskowal/q.git"
                    }
                  ],
                  "dependencies": {
                    "development": {
                      "jshint": "~2.1.9",
                      "cover": "*",
                      "jasmine-node": "1.11.0",
                      "opener": "*",
                      "promises-aplus-tests": "1.x",
                      "grunt": "~0.4.1",
                      "grunt-cli": "~0.1.9",
                      "grunt-contrib-uglify": "~0.2.2",
                      "matcha": "~0.2.0"
                    }
                  },
                  "requirements": {
                    "engines": {
                      "node": ">=0.6.0",
                      "teleport": ">=0.2.0"
                    }
                  },
                  "exports": {
                    "scripts": {
                      "test": "jasmine-node spec && promises-aplus-tests spec/aplus-adapter",
                      "test-browser": "opener spec/q-spec.html",
                      "benchmark": "matcha",
                      "lint": "jshint q.js",
                      "cover": "cover run node_modules/jasmine-node/bin/jasmine-node spec && cover report html && opener cover_html/index.html",
                      "minify": "grunt",
                      "prepublish": "grunt"
                    },
                    "main": "./q.js"
                  },
                  "layout": {
                    "directories": {
                      "test": "./spec",
                      "dependency": "./node_modules"
                    }
                  },
                  "overlay": {
                    "teleport": {
                      "dependencies": {
                        "required": {
                          "system": ">=0.0.4"
                        }
                      }
                    }
                  },
                  "licenses": [
                    {
                      "type": "MIT",
                      "url": "http://github.com/kriskowal/q/raw/master/LICENSE"
                    }
                  ],
                  "keywords": [
                    "q",
                    "promise",
                    "promises",
                    "promises-a",
                    "promises-aplus",
                    "deferred",
                    "future",
                    "async",
                    "flow control",
                    "fluent",
                    "browser",
                    "node"
                  ],
                  "maintainers": [
                    {
                      "name": "kriskowal",
                      "email": "kris.kowal@cixar.com"
                    },
                    {
                      "name": "domenic",
                      "email": "domenic@domenicdenicola.com"
                    }
                  ],
                  "contributors": [
                    {
                      "name": "Kris Kowal",
                      "email": "kris@cixar.com",
                      "url": "https://github.com/kriskowal"
                    },
                    {
                      "name": "Kris Kowal",
                      "email": "kris@cixar.com",
                      "url": "https://github.com/kriskowal"
                    },
                    {
                      "name": "Irakli Gozalishvili",
                      "email": "rfobic@gmail.com",
                      "url": "http://jeditoolkit.com"
                    },
                    {
                      "name": "Domenic Denicola",
                      "email": "domenic@domenicdenicola.com",
                      "url": "http://domenicdenicola.com"
                    }
                  ],
                  "pm": {
                    "install": "npm"
                  }
                }
              },
              "combined": {
                "name": "q",
                "description": "A library for promises (CommonJS/Promises/A,B,D)",
                "version": "1.1.2",
                "locator": {
                  "pointer": "~1.1.2",
                  "shasum": "6357e291206701d99f197ab84e57e8ad196f2a89",
                  "tarball": "http://registry.npmjs.org/q/-/q-1.1.2.tgz"
                },
                "homepage": "https://github.com/kriskowal/q",
                "social": {
                  "bugs": {
                    "url": "http://github.com/kriskowal/q/issues"
                  }
                },
                "repositories": [
                  {
                    "type": "git",
                    "url": "git://github.com/kriskowal/q.git"
                  }
                ],
                "dependencies": {
                  "development": {
                    "jshint": "~2.1.9",
                    "cover": "*",
                    "jasmine-node": "1.11.0",
                    "opener": "*",
                    "promises-aplus-tests": "1.x",
                    "grunt": "~0.4.1",
                    "grunt-cli": "~0.1.9",
                    "grunt-contrib-uglify": "~0.2.2",
                    "matcha": "~0.2.0"
                  }
                },
                "requirements": {
                  "engines": {
                    "node": ">=0.6.0",
                    "teleport": ">=0.2.0"
                  }
                },
                "exports": {
                  "scripts": {
                    "test": "jasmine-node spec && promises-aplus-tests spec/aplus-adapter",
                    "test-browser": "opener spec/q-spec.html",
                    "benchmark": "matcha",
                    "lint": "jshint q.js",
                    "cover": "cover run node_modules/jasmine-node/bin/jasmine-node spec && cover report html && opener cover_html/index.html",
                    "minify": "grunt",
                    "prepublish": "grunt"
                  },
                  "main": "./q.js"
                },
                "layout": {
                  "directories": {
                    "test": "./spec",
                    "dependency": "./node_modules"
                  }
                },
                "overlay": {
                  "teleport": {
                    "dependencies": {
                      "required": {
                        "system": ">=0.0.4"
                      }
                    }
                  }
                },
                "licenses": [
                  {
                    "type": "MIT",
                    "url": "http://github.com/kriskowal/q/raw/master/LICENSE"
                  }
                ],
                "keywords": [
                  "q",
                  "promise",
                  "promises",
                  "promises-a",
                  "promises-aplus",
                  "deferred",
                  "future",
                  "async",
                  "flow control",
                  "fluent",
                  "browser",
                  "node"
                ],
                "maintainers": [
                  {
                    "name": "kriskowal",
                    "email": "kris.kowal@cixar.com"
                  },
                  {
                    "name": "domenic",
                    "email": "domenic@domenicdenicola.com"
                  }
                ],
                "contributors": [
                  {
                    "name": "Kris Kowal",
                    "email": "kris@cixar.com",
                    "url": "https://github.com/kriskowal"
                  },
                  {
                    "name": "Kris Kowal",
                    "email": "kris@cixar.com",
                    "url": "https://github.com/kriskowal"
                  },
                  {
                    "name": "Irakli Gozalishvili",
                    "email": "rfobic@gmail.com",
                    "url": "http://jeditoolkit.com"
                  },
                  {
                    "name": "Domenic Denicola",
                    "email": "domenic@domenicdenicola.com",
                    "url": "http://domenicdenicola.com"
                  }
                ],
                "pm": {
                  "install": "npm"
                }
              },
              "warnings": [
                [
                  "normalize",
                  "Property 'files' was ignored",
                  "descriptor",
                  "package.json"
                ],
                [
                  "normalize",
                  "Property 'gitHead' was ignored",
                  "descriptor",
                  "package.json"
                ],
                [
                  "normalize",
                  "Property '_shasum' was ignored",
                  "descriptor",
                  "package.json"
                ],
                [
                  "normalize",
                  "Property '_npmVersion' was ignored",
                  "descriptor",
                  "package.json"
                ],
                [
                  "normalize",
                  "Property '_npmUser' was ignored",
                  "descriptor",
                  "package.json"
                ],
                [
                  "normalize",
                  "Property '_resolved' was ignored",
                  "descriptor",
                  "package.json"
                ]
              ],
              "errors": [],
              "memoized": {
                "main": "e27218a8d2b77deb02eb65c861a2cc8a619a9d27-q/q.js",
                "dirpath": "../../pinf-bridgelib-js/node_modules/q"
              }
            },
            "wrapper": "json"
          },
          "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/package.json": {
            "requireId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/package.json",
            "memoizeId": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/package.json",
            "descriptor": {
              "dirpath": "../../insight.renderers.default",
              "dirrealpath": "../../insight.renderers.default",
              "id": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default",
              "lookupPaths": [
                "../../insight.renderers.default/package.json",
                "../../insight.renderers.default/.package.json"
              ],
              "descriptorPaths": [
                "../../insight.renderers.default/package.json"
              ],
              "raw": {
                "package.json": {
                  "uid": "https://github.com/insight/insight.renderers.default/",
                  "name": "insight.renderers.default",
                  "main": "./lib/pack-helper.js",
                  "directories": {
                    "lib": "./lib"
                  },
                  "label": "Default Insight Renderers",
                  "description": "Default JavaScript renderers for the Insight Intelligence Library",
                  "mappings": {
                    "domplate": "./node_modules/domplate"
                  },
                  "dependencies": {
                    "domplate": "~0.2.0"
                  },
                  "exports": {
                    "images": {
                      "resources/images/*": "./resources/images/*"
                    }
                  }
                }
              },
              "normalized": {
                ".package.json": {
                  "pm": {
                    "install": "npm"
                  },
                  "layout": {
                    "directories": {
                      "dependency": "./node_modules"
                    }
                  },
                  "dependencies": {
                    "bundled": {
                      "domplate": "./node_modules/domplate"
                    }
                  },
                  "mappings": {
                    "domplate": "2754ddc900eb3f95fb9d551504837cd4f4fb44a7-domplate"
                  }
                },
                "package.json": {
                  "uid": "https://github.com/insight/insight.renderers.default/",
                  "name": "insight.renderers.default",
                  "description": "Default JavaScript renderers for the Insight Intelligence Library",
                  "dependencies": {
                    "required": {
                      "domplate": "~0.2.0"
                    },
                    "bundled": {
                      "domplate": "./node_modules/domplate"
                    }
                  },
                  "exports": {
                    "images": {
                      "resources/images/*": "./resources/images/*"
                    },
                    "main": "./lib/pack-helper.js"
                  },
                  "layout": {
                    "directories": {
                      "lib": "./lib",
                      "dependency": "./node_modules"
                    }
                  },
                  "pm": {
                    "install": "npm"
                  },
                  "mappings": {
                    "domplate": "2754ddc900eb3f95fb9d551504837cd4f4fb44a7-domplate"
                  }
                }
              },
              "combined": {
                "uid": "https://github.com/insight/insight.renderers.default/",
                "name": "insight.renderers.default",
                "description": "Default JavaScript renderers for the Insight Intelligence Library",
                "dependencies": {
                  "required": {
                    "domplate": "~0.2.0"
                  },
                  "bundled": {
                    "domplate": "./node_modules/domplate"
                  }
                },
                "exports": {
                  "images": {
                    "resources/images/*": "./resources/images/*"
                  },
                  "main": "./lib/pack-helper.js"
                },
                "layout": {
                  "directories": {
                    "lib": "./lib",
                    "dependency": "./node_modules"
                  }
                },
                "pm": {
                  "install": "npm"
                },
                "mappings": {
                  "domplate": "2754ddc900eb3f95fb9d551504837cd4f4fb44a7-domplate"
                }
              },
              "warnings": [
                [
                  "normalize",
                  "Found existing value at 'dependencies.required.domplate' while trying to merge from 'mappings.domplate'",
                  "descriptor",
                  "package.json"
                ],
                [
                  "normalize",
                  "Property 'label' was ignored",
                  "descriptor",
                  "package.json"
                ]
              ],
              "errors": [],
              "memoized": {
                "main": "decde9a96248dba89ddb66cda9fe35cb2d4426a9-insight.renderers.default/lib/pack-helper.js",
                "directories": {
                  "lib": "lib"
                },
                "mappings": {
                  "domplate": "2754ddc900eb3f95fb9d551504837cd4f4fb44a7-domplate"
                },
                "dirpath": "../../insight.renderers.default"
              }
            },
            "wrapper": "json"
          },
          "2754ddc900eb3f95fb9d551504837cd4f4fb44a7-domplate/package.json": {
            "requireId": "2754ddc900eb3f95fb9d551504837cd4f4fb44a7-domplate/package.json",
            "memoizeId": "2754ddc900eb3f95fb9d551504837cd4f4fb44a7-domplate/package.json",
            "descriptor": {
              "dirpath": "../../insight.renderers.default/node_modules/domplate",
              "dirrealpath": "../../insight.renderers.default/node_modules/domplate",
              "id": "2754ddc900eb3f95fb9d551504837cd4f4fb44a7-domplate",
              "lookupPaths": [
                "../../insight.renderers.default/node_modules/domplate/package.json",
                "../../insight.renderers.default/node_modules/domplate/.package.json"
              ],
              "descriptorPaths": [
                "../../insight.renderers.default/node_modules/domplate/package.json"
              ],
              "raw": {
                "package.json": {
                  "uid": "http://registry.pinf.org/cadorn.org/github/domplate/",
                  "name": "domplate",
                  "version": "0.2.0",
                  "pm": "npm",
                  "publish": true,
                  "description": "JavaScript Template Library",
                  "keywords": [
                    "js",
                    "template",
                    "library",
                    "domplate",
                    "rep",
                    "reps"
                  ],
                  "author": {
                    "name": "Joe Hewitt",
                    "url": "http://joehewitt.com/"
                  },
                  "contributors": [
                    {
                      "name": "Joe Hewitt",
                      "url": "http://joehewitt.com/"
                    },
                    {
                      "name": "Christoph Dorn",
                      "url": "http://www.christophdorn.com/"
                    }
                  ],
                  "license": [
                    "BSD"
                  ],
                  "repositories": [
                    {
                      "type": "git",
                      "url": "git://github.com/cadorn/domplate.git"
                    },
                    {
                      "type": "git",
                      "url": "git://github.com/cadorn/domplate.git"
                    }
                  ],
                  "readme": "Domplate\n========\n\nJavaScript Template Library\n\n\nExample\n=======\n\n    var DOMPLATE = require(\"domplate\", \"domplate\");\n    var rep;\n    with (DOMPLATE.tags) {\n        rep = DOMPLATE.domplate({\n            tag: DIV({\"style\": \"color: red;\"},\"$object|capitalize\"),\n            capitalize: function(str) {\n                return str.toUpperCase();\n            }\n        });\n    }    \n    var html = rep.tag.render({\n        object: \"Hello World\"\n    });\n\n    // html == <div style=\"color: red;\" class=\" \">HELLO WORLD</div>\n\n\nLinks\n=====\n\n  * [http://www.softwareishard.com/blog/category/domplate/](http://www.softwareishard.com/blog/category/domplate/)\n  * [http://code.google.com/p/domplate/](http://code.google.com/p/domplate/)\n  * [http://www.christophdorn.com/Blog/category/domplate/](http://www.christophdorn.com/Blog/category/domplate/)\n\n\nLicense\n=======\n\n[New BSD License](http://www.opensource.org/licenses/bsd-license.php)\n\nCopyright (c) 2007, Parakey Inc.\nAll rights reserved.\n\nRedistribution and use of this software in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above\n  copyright notice, this list of conditions and the\n  following disclaimer.\n\n* Redistributions in binary form must reproduce the above\n  copyright notice, this list of conditions and the\n  following disclaimer in the documentation and/or other\n  materials provided with the distribution.\n\n* Neither the name of Parakey Inc. nor the names of its\n  contributors may be used to endorse or promote products\n  derived from this software without specific prior\n  written permission of Parakey Inc.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\nIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER\nIN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\nOF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
                  "readmeFilename": "README.md",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/cadorn/domplate.git"
                  },
                  "bugs": {
                    "url": "https://github.com/cadorn/domplate/issues"
                  },
                  "_id": "domplate@0.2.0",
                  "dist": {
                    "shasum": "bd5be3d66d6399ec1013db5639072ee317a81697",
                    "tarball": "http://registry.npmjs.org/domplate/-/domplate-0.2.0.tgz"
                  },
                  "_from": "domplate@~0.2.0",
                  "_npmVersion": "1.3.5",
                  "_npmUser": {
                    "name": "cadorn",
                    "email": "christoph@christophdorn.com"
                  },
                  "maintainers": [
                    {
                      "name": "cadorn",
                      "email": "christoph@christophdorn.com"
                    }
                  ],
                  "directories": {},
                  "_shasum": "bd5be3d66d6399ec1013db5639072ee317a81697",
                  "_resolved": "https://registry.npmjs.org/domplate/-/domplate-0.2.0.tgz",
                  "homepage": "https://github.com/cadorn/domplate"
                }
              },
              "normalized": {
                ".package.json": {
                  "pm": {
                    "install": "npm"
                  },
                  "layout": {
                    "directories": {
                      "dependency": "./node_modules"
                    }
                  }
                },
                "package.json": {
                  "uid": "http://registry.pinf.org/cadorn.org/github/domplate/",
                  "name": "domplate",
                  "description": "JavaScript Template Library",
                  "version": "0.2.0",
                  "locator": {
                    "pointer": "~0.2.0",
                    "shasum": "bd5be3d66d6399ec1013db5639072ee317a81697",
                    "tarball": "http://registry.npmjs.org/domplate/-/domplate-0.2.0.tgz"
                  },
                  "pm": {
                    "install": "npm"
                  },
                  "homepage": "https://github.com/cadorn/domplate",
                  "social": {
                    "bugs": {
                      "url": "https://github.com/cadorn/domplate/issues"
                    }
                  },
                  "repositories": [
                    {
                      "type": "git",
                      "url": "git://github.com/cadorn/domplate.git"
                    },
                    {
                      "type": "git",
                      "url": "git://github.com/cadorn/domplate.git"
                    }
                  ],
                  "events": {
                    "publish": true
                  },
                  "layout": {
                    "directories": {
                      "dependency": "./node_modules"
                    }
                  },
                  "licenses": [
                    [
                      "BSD"
                    ]
                  ],
                  "files": {
                    "readme": "./README.md"
                  },
                  "keywords": [
                    "js",
                    "template",
                    "library",
                    "domplate",
                    "rep",
                    "reps"
                  ],
                  "maintainers": [
                    {
                      "name": "cadorn",
                      "email": "christoph@christophdorn.com"
                    }
                  ],
                  "contributors": [
                    {
                      "name": "Joe Hewitt",
                      "url": "http://joehewitt.com/"
                    },
                    {
                      "name": "Christoph Dorn",
                      "url": "http://www.christophdorn.com/"
                    }
                  ]
                }
              },
              "combined": {
                "uid": "http://registry.pinf.org/cadorn.org/github/domplate/",
                "name": "domplate",
                "description": "JavaScript Template Library",
                "version": "0.2.0",
                "locator": {
                  "pointer": "~0.2.0",
                  "shasum": "bd5be3d66d6399ec1013db5639072ee317a81697",
                  "tarball": "http://registry.npmjs.org/domplate/-/domplate-0.2.0.tgz"
                },
                "pm": {
                  "install": "npm"
                },
                "homepage": "https://github.com/cadorn/domplate",
                "social": {
                  "bugs": {
                    "url": "https://github.com/cadorn/domplate/issues"
                  }
                },
                "repositories": [
                  {
                    "type": "git",
                    "url": "git://github.com/cadorn/domplate.git"
                  },
                  {
                    "type": "git",
                    "url": "git://github.com/cadorn/domplate.git"
                  }
                ],
                "events": {
                  "publish": true
                },
                "layout": {
                  "directories": {
                    "dependency": "./node_modules"
                  }
                },
                "licenses": [
                  [
                    "BSD"
                  ]
                ],
                "files": {
                  "readme": "./README.md"
                },
                "keywords": [
                  "js",
                  "template",
                  "library",
                  "domplate",
                  "rep",
                  "reps"
                ],
                "maintainers": [
                  {
                    "name": "cadorn",
                    "email": "christoph@christophdorn.com"
                  }
                ],
                "contributors": [
                  {
                    "name": "Joe Hewitt",
                    "url": "http://joehewitt.com/"
                  },
                  {
                    "name": "Christoph Dorn",
                    "url": "http://www.christophdorn.com/"
                  }
                ]
              },
              "warnings": [
                [
                  "normalize",
                  "Property '_npmVersion' was ignored",
                  "descriptor",
                  "package.json"
                ],
                [
                  "normalize",
                  "Property '_npmUser' was ignored",
                  "descriptor",
                  "package.json"
                ],
                [
                  "normalize",
                  "Property '_shasum' was ignored",
                  "descriptor",
                  "package.json"
                ],
                [
                  "normalize",
                  "Property '_resolved' was ignored",
                  "descriptor",
                  "package.json"
                ]
              ],
              "errors": [],
              "memoized": {
                "dirpath": "../../insight.renderers.default/node_modules/domplate"
              }
            },
            "wrapper": "json"
          },
          "bfbbc67b6690f91ab66716d6e0cec42b3a954a3b-receivers/package.json": {
            "requireId": "bfbbc67b6690f91ab66716d6e0cec42b3a954a3b-receivers/package.json",
            "memoizeId": "bfbbc67b6690f91ab66716d6e0cec42b3a954a3b-receivers/package.json",
            "descriptor": {
              "dirpath": "../receivers",
              "dirrealpath": "../receivers",
              "id": "bfbbc67b6690f91ab66716d6e0cec42b3a954a3b-receivers",
              "lookupPaths": [
                "../receivers/package.json",
                "../receivers/.package.json"
              ],
              "descriptorPaths": [
                "../receivers/package.json"
              ],
              "raw": {
                "package.json": {
                  "uid": "github.com/fireconsole/widget.console/receivers",
                  "main": "./wildfire.js",
                  "mappings": {
                    "wildfire": "../../wildfire-for-js",
                    "modules": "../../pinf-bridgelib-js"
                  }
                }
              },
              "normalized": {
                ".package.json": {},
                "package.json": {
                  "uid": "github.com/fireconsole/widget.console/receivers",
                  "dependencies": {
                    "required": {
                      "wildfire": "../../wildfire-for-js",
                      "modules": "../../pinf-bridgelib-js"
                    }
                  },
                  "exports": {
                    "main": "./wildfire.js"
                  }
                }
              },
              "combined": {
                "uid": "github.com/fireconsole/widget.console/receivers",
                "dependencies": {
                  "required": {
                    "wildfire": "../../wildfire-for-js",
                    "modules": "../../pinf-bridgelib-js"
                  }
                },
                "exports": {
                  "main": "./wildfire.js"
                }
              },
              "warnings": [],
              "errors": [],
              "memoized": {
                "main": "bfbbc67b6690f91ab66716d6e0cec42b3a954a3b-receivers/wildfire.js",
                "mappings": {
                  "wildfire": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js",
                  "modules": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js"
                },
                "dirpath": "../receivers"
              }
            },
            "wrapper": "json"
          },
          "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/package.json": {
            "requireId": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/package.json",
            "memoizeId": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/package.json",
            "descriptor": {
              "dirpath": "../../wildfire-for-js",
              "dirrealpath": "../../wildfire-for-js",
              "id": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js",
              "lookupPaths": [
                "../../wildfire-for-js/package.json",
                "../../wildfire-for-js/.package.json"
              ],
              "descriptorPaths": [
                "../../wildfire-for-js/package.json"
              ],
              "raw": {
                "package.json": {
                  "uid": "https://github.com/firenode/wildfire-for-js/",
                  "name": "wildfire-for-js",
                  "label": "Wildfire for JavaScript",
                  "description": "Wildfire Communication Library for JavaScript",
                  "homepage": "https://github.com/firenode/wildfire-for-js",
                  "maintainers": [
                    {
                      "name": "Christoph Dorn",
                      "email": "christoph@christophdorn.com",
                      "web": "http://www.christophdorn.com/"
                    }
                  ],
                  "licenses": [
                    {
                      "type": "MIT",
                      "url": "http://www.opensource.org/licenses/mit-license.php"
                    }
                  ],
                  "main": "./lib/wildfire.js",
                  "directories": {
                    "lib": "./lib"
                  },
                  "mappings": {
                    "modules": "../pinf-bridgelib-js"
                  }
                }
              },
              "normalized": {
                ".package.json": {},
                "package.json": {
                  "uid": "https://github.com/firenode/wildfire-for-js/",
                  "name": "wildfire-for-js",
                  "description": "Wildfire Communication Library for JavaScript",
                  "homepage": "https://github.com/firenode/wildfire-for-js",
                  "dependencies": {
                    "required": {
                      "modules": "../pinf-bridgelib-js"
                    }
                  },
                  "layout": {
                    "directories": {
                      "lib": "./lib"
                    }
                  },
                  "licenses": [
                    {
                      "type": "MIT",
                      "url": "http://www.opensource.org/licenses/mit-license.php"
                    }
                  ],
                  "exports": {
                    "main": "./lib/wildfire.js"
                  },
                  "maintainers": [
                    {
                      "name": "Christoph Dorn",
                      "email": "christoph@christophdorn.com",
                      "web": "http://www.christophdorn.com/"
                    }
                  ]
                }
              },
              "combined": {
                "uid": "https://github.com/firenode/wildfire-for-js/",
                "name": "wildfire-for-js",
                "description": "Wildfire Communication Library for JavaScript",
                "homepage": "https://github.com/firenode/wildfire-for-js",
                "dependencies": {
                  "required": {
                    "modules": "../pinf-bridgelib-js"
                  }
                },
                "layout": {
                  "directories": {
                    "lib": "./lib"
                  }
                },
                "licenses": [
                  {
                    "type": "MIT",
                    "url": "http://www.opensource.org/licenses/mit-license.php"
                  }
                ],
                "exports": {
                  "main": "./lib/wildfire.js"
                },
                "maintainers": [
                  {
                    "name": "Christoph Dorn",
                    "email": "christoph@christophdorn.com",
                    "web": "http://www.christophdorn.com/"
                  }
                ]
              },
              "warnings": [
                [
                  "normalize",
                  "Property 'label' was ignored",
                  "descriptor",
                  "package.json"
                ]
              ],
              "errors": [],
              "memoized": {
                "main": "ebe2303b08e21e9e7396b0d00323a7bb7aa5e3f2-wildfire-for-js/lib/wildfire.js",
                "directories": {
                  "lib": "lib"
                },
                "mappings": {
                  "modules": "3043f77d03cd8406b783eece4cbca15e89faae86-pinf-bridgelib-js"
                },
                "dirpath": "../../wildfire-for-js"
              }
            },
            "wrapper": "json"
          }
        },
        "expectExistingModules": {},
        "bundle": {
          "path": "/playground/2014-12-26-promise-actor/fireconsole.widget.console/client/bundles/client.js"
        },
        "warnings": [],
        "errors": [],
        "id": "/client.js"
      }
    },
    "warnings": [],
    "errors": [],
    "exports": {
      "main": "/client.js"
    }
  },
  "#pinf": {
    "status": 200,
    "data": {
      "rootBundlePath": "/playground/2014-12-26-promise-actor/fireconsole.widget.console/client/bundles/client.js"
    }
  }
}